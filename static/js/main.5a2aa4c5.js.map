{"version":3,"file":"static/js/main.5a2aa4c5.js","mappings":"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,CACxB,CAEO,sCAAO2jF,CAAgCr5B,GAC1C,YAAoCt1E,IAAhCs1E,EACOk1B,EAAsB+C,yBAE1B/C,EAAsBC,sCACzBD,EAAsBgZ,oCAAoCluC,GAClE,CAEO,4CAAOm1B,CAAsCgZ,GAChD,OAAQA,GACJ,IAAK,2BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAec,MACf,EACA,IACA,IACA,EACA,EACAq9B,EACAA,GACA,GACR,IAAK,+BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeo+B,MACf,EACA,KACA,IACA,GACA,EACAD,EACA,iCACA,GACR,IAAK,gCACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeo+B,MACf,EACA,KACA,IACA,GACA,EACAD,EACAA,GACA,GACR,IAAK,kCACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeq+B,IACf,EACA,KACA,KACA,EACA,GACAF,EACAA,GACA,GACR,IAAK,mCACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeq+B,IACf,EACA,KACA,MACA,EACA,GACAF,EACAA,GACA,GACR,IAAK,kCACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeq+B,IACf,EACA,KACA,KACA,EACA,GACAF,EACAA,GACA,GACR,IAAK,kCACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeq+B,IACf,EACA,KACA,KACA,EACA,GACAF,EACAA,GACA,GACR,IAAK,kCACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeq+B,IACf,EACA,KACA,MACA,EACA,GACAF,EACAA,GACA,GACR,IAAK,mCACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeq+B,IACf,EACA,KACA,MACA,EACA,GACAF,EACAA,GACA,GACR,IAAK,gCACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAes+B,UACf,EACA,KACA,KACA,EACA,GACAH,EACAA,GACA,GAER,IAAK,2BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeU,IACf,EACA,IACA,KACA,EACA,GACAy9B,EACA,2BACA,GACR,IAAK,4BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeU,IACf,EACA,KACA,KACA,EACA,GACAy9B,EACA,4BACA,GACR,IAAK,4BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAec,MACf,EACA,IACA,IACA,EACA,EACAq9B,EACA,4BACA,GACR,IAAK,2BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeU,IACf,EACA,KACA,KACA,EACA,GACAy9B,EACA,4BACA,GACR,IAAK,2BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeU,IACf,EACA,KACA,KACA,EACA,GACAy9B,EACA,4BACA,GACR,IAAK,0BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeU,IACf,EACA,IACA,KACA,EACA,GACAy9B,EACA,2BACA,GACR,IAAK,4BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeu+B,SACf,EACA,KACA,KACA,EACA,GACAJ,EACAA,GACA,GACR,IAAK,4BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeu+B,SACf,EACA,KACA,KACA,EACA,GACAJ,EACAA,GACA,GACR,IAAK,2BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeU,IACf,EACA,KACA,KACA,EACA,GACAy9B,EACA,4BACA,GACR,IAAK,4BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeU,IACf,EACA,KACA,KACA,EACA,GACAy9B,EACA,4BACA,GACR,IAAK,kCACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeq+B,IACf,EACA,KACA,MACA,EACA,GACAF,EACAA,GACA,GACR,IAAK,mCACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeq+B,IACf,EACA,KACA,MACA,EACA,GACAF,EACAA,GACA,GACR,IAAK,4BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeu+B,SACf,EACA,KACA,KACA,EACA,GACAJ,EACAA,GACA,GACR,IAAK,6BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAew+B,UACf,EACA,KACA,IACA,EACA,GACAL,EACAA,GACA,GACR,IAAK,6BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAew+B,UACf,EACA,KACA,IACA,EACA,GACAL,EACAA,GACA,GACR,IAAK,oCACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAew+B,UACf,EACA,KACA,IACA,EACA,GACAL,EACAA,GACA,GACR,IAAK,qCACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAey+B,KACf,EACA,KACA,IACA,EACA,GACAN,EACAA,GACA,GACR,IAAK,qCACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAey+B,KACf,EACA,KACA,IACA,EACA,GACAN,EACAA,GACA,GACR,IAAK,qCACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAey+B,KACf,EACA,KACA,IACA,EACA,GACAN,EACAA,GACA,GACR,IAAK,8BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAe0+B,KACf,EACA,KACA,KACA,EACA,GACAP,EACAA,GACA,GACR,IAAK,8BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAe0+B,KACf,EACA,KACA,IACA,EACA,GACAP,EACAA,GACA,GACR,IAAK,gCACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAes+B,UACf,EACA,KACA,KACA,EACA,GACAH,EACAA,GACA,GACR,IAAK,0BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAea,KACf,EACA,IACA,IACA,EACA,EACAs9B,EACAA,GACA,GACR,IAAK,2BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAea,KACf,EACA,IACA,IACA,EACA,EACAs9B,EACA,2BACA,GACR,IAAK,6BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeU,IACf,EACA,MACA,MACA,EACA,GACAy9B,EACAA,GACA,GACR,IAAK,8BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeU,IACf,EACA,MACA,MACA,EACA,GACAy9B,EACA,8BACA,GACR,IAAK,6BACD,OAAO,IAAIjZ,EACPrgB,EAAA7E,eAAeU,IACf,EACA,MACA,MACA,EACA,GACAy9B,EACAA,GACA,GACR,IA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","sources":["../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/TurnStatusPayload.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/ProfanityOption.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SpeechRecognitionResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/PronunciationAssessmentGradingSystem.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/src/sdk/Transcription/MeetingTranscriber.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/SpeechConnectionMessage.Internal.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/Contracts.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/DialogEvents.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/PlatformEvent.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/PronunciationAssessmentGranularity.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/ConnectionMessage.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/CancellationErrorCodes.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/EventSource.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/SpeakerRecognitionConnectionFactory.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/Promise.ts","../node_modules/react/jsx-runtime.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/LanguageUnderstandingModel.ts","../node_modules/uuid/dist/commonjs-browser/v4.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/ConversationTranscriptionCanceledEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/Timeout.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/TurnStatusReceivedEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/src/sdk/Transcription/ConversationCommon.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/ActivityReceivedEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/CustomCommandsConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/PronunciationAssessmentResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/PronunciationAssessmentConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/TranslationServiceRecognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/src/sdk/Transcription/ConversationExpirationEventArgs.ts","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/KeywordRecognitionModel.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/ChunkedArrayBufferStream.ts","../node_modules/uuid/dist/commonjs-browser/md5.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/ConversationTranscriptionServiceRecognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SpeechRecognitionEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/src/common.speech/Transcription/ConversationConnectionConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/PropertyId.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/src/common.browser/ConsoleLoggingListener.ts","../node_modules/uuid/dist/commonjs-browser/parse.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/SynthesisTurn.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/TranslationPhrase.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/src/sdk/Transcription/MeetingTranscriptionCanceledEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/src/sdk/Transcription/ConversationTranslationEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SpeakerVerificationModel.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/TranslationRecognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/CognitiveSubscriptionKeyAuthentication.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/src/common.speech/Transcription/Exports.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/Queue.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/CancellationReason.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/IntentResponse.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/AudioSourceEvents.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/src/common.browser/Exports.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/Exports.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SynthesisVoicesResult.ts","../node_modules/uuid/dist/commonjs-browser/validate.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/IntentRecognitionResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/TranslationConnectionFactory.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/src/sdk/Transcription/Conversation.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/src/common.browser/RestMessageAdapter.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/src/sdk/Transcription/ConversationTranslator.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/List.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/ConnectionFactoryBase.ts","../node_modules/uuid/dist/commonjs-browser/native.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/ConnectionMessage.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/TranslationRecognitionResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/src/common.browser/WebsocketConnection.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/Diagnostics.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SpeechConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/RiffPcmEncoder.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/IConnection.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/TranslationSynthesisResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/TranslationSynthesisEnd.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SpeechSynthesisEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/SynthesisRestAdapter.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/DetailedSpeechPhrase.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/SpeechSynthesisConnectionFactory.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/AddedLmIntent.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/EnumTranslation.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/WebsocketMessageFormatter.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SpeechTranslationConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/src/sdk/Transcription/ConversationTranscriptionResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/TranscriberConnectionFactory.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/RequestSession.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/DialogServiceConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/src/common.speech/Transcription/ServiceMessages/CommandResponsePayload.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/IntentRecognitionCanceledEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/src/common.browser/RestConfigBase.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/ServiceEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/OutputFormat.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/SynthesisEvents.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/ResultReason.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SpeechSynthesisVisemeEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/src/common.browser/PCMRecorder.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/src/common.browser/ReplayableAudioNode.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/IntentRecognitionEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/RecognitionEvents.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/CancellationDetails.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/DynamicGrammarBuilder.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/src/sdk/Audio/AudioStreamFormat.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/TranscriptionServiceRecognizer.ts","../node_modules/react/cjs/react.production.min.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/src/common.browser/MicAudioSource.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/DialogServiceConnector.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/TranslationHypothesis.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/src/common.speech/Transcription/ServiceMessages/TranslationResponsePayload.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/src/sdk/Transcription/ConversationParticipantsChangedEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/src/sdk/Transcription/ConversationTranslationResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/VoiceProfile.ts","../node_modules/react-dom/client.js","../node_modules/uuid/dist/commonjs-browser/regex.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/SpeakerRecognitionConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/SynthesisAdapterBase.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/SynthesisAudioMetadata.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/ConversationTranscriberConnectionFactory.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/src/common.speech/Transcription/ServiceMessages/ParticipantResponsePayload.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/src/common.speech/Transcription/ConversationTranslatorInterfaces.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/AvatarConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SpeakerRecognizer.ts","../node_modules/uuid/dist/commonjs-browser/version.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SpeechSynthesisBookmarkEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/TranslationSynthesisEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SpeechRecognitionCanceledEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/SynthesisContext.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/SpeechServiceConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/src/sdk/Transcription/IParticipant.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/src/sdk/Audio/BaseAudioPlayer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/src/common.speech/Transcription/ConversationWebsocketMessageFormatter.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/IntentConnectionFactory.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/Connection.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/ServiceTelemetryListener.Internal.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/ConnectionOpenResponse.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/src/common.browser/WebsocketMessageAdapter.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/src/sdk/Transcription/Meeting.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/SpeechServiceRecognizer.ts","../node_modules/react/index.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/ActivityResponsePayload.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/DialogServiceAdapter.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/TranslationStatus.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SpeechRecognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/src/sdk/Transcription/Exports.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/src/sdk/Transcription/ConversationTranscriber.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/AgentConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/DialogServiceTurnState.ts","../node_modules/bent/src/core.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/ConnectionEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/AvatarSynthesizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/src/common.speech/Transcription/ConversationTranslatorConnectionFactory.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/OCSPEvents.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SpeakerIdentificationModel.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/PropertyCollection.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/src/common.speech/Transcription/ConversationConnectionMessage.ts","../node_modules/uuid/dist/commonjs-browser/nil.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/src/sdk/Audio/AudioInputStream.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/AvatarWebRTCConnectionResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/SimpleSpeechPhrase.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/TranslationRecognitionEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/ConnectionMessageEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/AutoDetectSourceLanguageResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/NoMatchDetails.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/RecognizerConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/BotFrameworkConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/AvatarEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/SpeechHypothesis.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/SpeechDetected.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/NoMatchReason.ts","../node_modules/uuid/dist/commonjs-browser/v35.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/src/sdk/Audio/AudioConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/MeetingTranscriptionCanceledEventArgs.ts","../node_modules/uuid/dist/commonjs-browser/v1.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/VoiceProfileEnrollmentResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/PhraseListGrammar.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/src/sdk/Audio/PullAudioInputStreamCallback.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/src/common.speech/Transcription/ConversationConnectionFactory.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/src/common.speech/Transcription/TranscriberRecognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/DeferralMap.ts","../node_modules/bent/src/browser.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/QueryParameterNames.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/RawWebsocketMessage.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/VoiceProfilePhraseResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/ServiceMessages/src/common.speech/Transcription/ServiceMessages/Exports.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/IAuthentication.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/StringUtils.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/DialogServiceTurnStateManager.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/CognitiveTokenAuthentication.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/RecognitionResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/Translations.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/SpeakerServiceRecognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SourceLanguageConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/Stream.ts","../node_modules/uuid/dist/commonjs-browser/index.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/IntentRecognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/Events.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/src/sdk/Audio/AudioOutputFormat.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/ConnectionEvents.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/src/common.browser/ProxyInfo.ts","../node_modules/react-dom/index.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/src/common.speech/Transcription/ConversationRequestSession.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/AvatarVideoFormat.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/Synthesizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/Exports.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/Recognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/SpeechKeyword.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/ServiceRecognizerBase.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/VoiceProfileClient.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/IntentServiceRecognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/ServicePropertyChannel.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/CancellationDetailsBase.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/src/common.speech/Transcription/ConversationTranslatorRecognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SpeechSynthesisResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/src/sdk/Transcription/ConversationTranslationCanceledEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/DialogConnectorFactory.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/Error.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/VoiceProfileType.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/src/common.speech/Transcription/ConversationServiceAdapter.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Transcription/src/sdk/Transcription/ParticipantChangedReason.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/VoiceServiceRecognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/ConversationServiceRecognizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SpeechSynthesisWordBoundaryEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/src/sdk/Audio/PushAudioOutputStreamCallback.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/HeaderNames.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/microsoft.cognitiveservices.speech.sdk.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/SpeechSynthesisAdapter.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/CancellationEventArgsBase.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/RecognitionEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SpeechSynthesisOutputFormat.ts","../node_modules/uuid/dist/commonjs-browser/stringify.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/src/sdk/Audio/AudioFileWriter.ts","../node_modules/uuid/dist/commonjs-browser/sha1.js","../node_modules/uuid/dist/commonjs-browser/rng.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/VoiceInfo.ts","../node_modules/scheduler/index.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/SynthesizerConfig.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SessionEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/LogLevel.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/TranslationRecognitionCanceledEventArgs.ts","../node_modules/uuid/dist/commonjs-browser/v3.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SpeechSynthesisBoundaryType.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/SpeechConnectionFactory.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/AvatarSynthesisAdapter.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/Guid.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/src/common.speech/Transcription/ConversationManager.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/ServiceMessages/src/common.speech/ServiceMessages/Enums.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/LanguageIdMode.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/Transcription/src/common.speech/Transcription/ConversationTranslatorEventArgs.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SynthesisResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/src/sdk/Audio/SpeakerAudioDestination.ts","../node_modules/uuid/dist/commonjs-browser/v5.js","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/Audio/src/sdk/Audio/AudioOutputStream.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SpeechSynthesizer.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/SpeakerRecognitionResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/SpeechContext.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.speech/src/common.speech/Exports.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common/src/common/BackgroundError.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/common.browser/src/common.browser/FileAudioSource.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/VoiceProfileResult.ts","../node_modules/microsoft-cognitiveservices-speech-sdk/distrib/lib/src/sdk/src/sdk/AutoDetectSourceLanguageConfig.ts","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../node_modules/@google/genai/src/pagers.ts","../node_modules/@google/genai/src/types.ts","../node_modules/@google/genai/src/_common.ts","../node_modules/@google/genai/src/_transformers.ts","../node_modules/@google/genai/src/converters/_caches_converters.ts","../node_modules/@google/genai/src/caches.ts","../node_modules/@google/genai/src/chats.ts","../node_modules/@google/genai/src/converters/_files_converters.ts","../node_modules/@google/genai/src/files.ts","../node_modules/@google/genai/src/converters/_models_converters.ts","../node_modules/@google/genai/src/converters/_live_converters.ts","../node_modules/@google/genai/src/live.ts","../node_modules/@google/genai/src/models.ts","../node_modules/@google/genai/src/converters/_operations_converters.ts","../node_modules/@google/genai/src/operations.ts","../node_modules/@google/genai/src/_api_client.ts","../node_modules/@google/genai/src/web/_browser_uploader.ts","../node_modules/@google/genai/src/cross/_cross_uploader.ts","../node_modules/@google/genai/src/web/_browser_websocket.ts","../node_modules/@google/genai/src/web/_web_auth.ts","../node_modules/@google/genai/src/web/web_client.ts","config.js","visemes/cartoonVisemes/viseme_id_21.svg","visemes/cartoonVisemes.js","visemes/cartoonVisemes/viseme_id_0.svg","visemes/cartoonVisemes/viseme_id_1.svg","visemes/cartoonVisemes/viseme_id_2.svg","visemes/cartoonVisemes/viseme_id_3.svg","visemes/cartoonVisemes/viseme_id_4.svg","visemes/cartoonVisemes/viseme_id_5.svg","visemes/cartoonVisemes/viseme_id_6.svg","visemes/cartoonVisemes/viseme_id_7.svg","visemes/cartoonVisemes/viseme_id_8.svg","visemes/cartoonVisemes/viseme_id_9.svg","visemes/cartoonVisemes/viseme_id_10.svg","visemes/cartoonVisemes/viseme_id_11.svg","visemes/cartoonVisemes/viseme_id_12.svg","visemes/cartoonVisemes/viseme_id_13.svg","visemes/cartoonVisemes/viseme_id_14.svg","visemes/cartoonVisemes/viseme_id_15.svg","visemes/cartoonVisemes/viseme_id_16.svg","visemes/cartoonVisemes/viseme_id_17.svg","visemes/cartoonVisemes/viseme_id_18.svg","visemes/cartoonVisemes/viseme_id_19.svg","visemes/cartoonVisemes/viseme_id_20.svg","components/VisemeDisplay.js","components/ChatDisplay.js","../node_modules/assemblyai/dist/browser.mjs","App.js","reportWebVitals.js","index.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport interface ITurnStatusResponsePayload {\r\n    interactionId: string;\r\n    conversationId: string;\r\n    statusCode: any;\r\n}\r\n\r\nexport class TurnStatusResponsePayload implements ITurnStatusResponsePayload {\r\n    private privMessageStatusResponse: ITurnStatusResponsePayload;\r\n\r\n    private constructor(json: string) {\r\n        this.privMessageStatusResponse = JSON.parse(json) as ITurnStatusResponsePayload;\r\n    }\r\n\r\n    public static fromJSON(json: string): TurnStatusResponsePayload {\r\n        return new TurnStatusResponsePayload(json);\r\n    }\r\n\r\n    public get interactionId(): string {\r\n        return this.privMessageStatusResponse.interactionId;\r\n    }\r\n\r\n    public get conversationId(): string {\r\n        return this.privMessageStatusResponse.conversationId;\r\n    }\r\n\r\n    public get statusCode(): any {\r\n        // Payloads may contain a limited set of textual representations or a numeric status\r\n        // code. The textual values are here converted into numeric ones.\r\n        switch (this.privMessageStatusResponse.statusCode) {\r\n            case \"Success\":\r\n                return 200;\r\n            case \"Failed\":\r\n                return 400;\r\n            case \"TimedOut\":\r\n                return 429;\r\n            default:\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n                return this.privMessageStatusResponse.statusCode;\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Profanity option.\r\n * Added in version 1.7.0.\r\n */\r\nexport enum ProfanityOption {\r\n    Masked = 0,\r\n    Removed = 1,\r\n    Raw = 2\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, RecognitionResult, ResultReason } from \"./Exports.js\";\r\n\r\n/**\r\n * Defines result of speech recognition.\r\n * @class SpeechRecognitionResult\r\n */\r\nexport class SpeechRecognitionResult extends RecognitionResult {\r\n    private readonly privSpeakerId: string;\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @public\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {string} text - The recognized text.\r\n     * @param {number} duration - The duration.\r\n     * @param {number} offset - The offset into the stream.\r\n     * @param {string} language - Primary Language detected, if provided.\r\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\r\n     * @param {string} speakerId - speaker id for conversation transcription, if provided.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {string} json - Additional Json, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    public constructor(resultId?: string, reason?: ResultReason, text?: string,\r\n                       duration?: number, offset?: number, language?: string,\r\n                       languageDetectionConfidence?: string, speakerId?: string, errorDetails?: string,\r\n                       json?: string, properties?: PropertyCollection) {\r\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties);\r\n        this.privSpeakerId = speakerId;\r\n    }\r\n\r\n    /**\r\n     * speaker id from conversation transcription/id scenarios\r\n     * @member SpeechRecognitionResult.prototype.speakerId\r\n     * @function\r\n     * @public\r\n     * @returns {string} id of speaker in given result\r\n     */\r\n    public get speakerId(): string {\r\n        return this.privSpeakerId;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the point system for pronunciation score calibration; default value is FivePoint.\r\n * Added in version 1.15.0\r\n * @class PronunciationAssessmentGradingSystem\r\n */\r\nexport enum PronunciationAssessmentGradingSystem {\r\n    /**\r\n     * Five point calibration\r\n     * @member PronunciationAssessmentGradingSystem.FivePoint\r\n     */\r\n    FivePoint = 1,\r\n\r\n    /**\r\n     * Hundred mark\r\n     * @member PronunciationAssessmentGradingSystem.HundredMark\r\n     */\r\n    HundredMark,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { TranscriberRecognizer } from \"../../common.speech/Exports.js\";\r\nimport { marshalPromiseToCallbacks } from \"../../common/Exports.js\";\r\nimport { Contracts } from \"../Contracts.js\";\r\nimport {\r\n    AudioConfig,\r\n    CancellationEventArgs,\r\n    Connection,\r\n    MeetingTranscriptionEventArgs,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    SessionEventArgs\r\n} from \"../Exports.js\";\r\nimport {\r\n    MeetingHandler,\r\n    MeetingImpl,\r\n    MeetingTranscriptionHandler\r\n} from \"./Exports.js\";\r\nimport { Callback, IMeeting } from \"./IMeeting.js\";\r\n\r\nexport class MeetingTranscriber implements MeetingTranscriptionHandler {\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during the meeting.\r\n     * @member MeetingTranscriber.prototype.MeetingCanceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public MeetingCanceled: (sender: MeetingHandler, event: CancellationEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during transcription.\r\n     * @member MeetingTranscriber.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: MeetingHandler, event: CancellationEventArgs) => void;\r\n\r\n     /**\r\n      * The event recognized signals that a final meeting transcription result is received.\r\n      * @member MeetingTranscriber.prototype.transcribed\r\n      * @function\r\n      * @public\r\n      */\r\n    public transcribed: (sender: MeetingTranscriptionHandler, event: MeetingTranscriptionEventArgs) => void;\r\n\r\n     /**\r\n      * The event recognizing signals that an intermediate meeting transcription result is received.\r\n      * @member MeetingTranscriber.prototype.transcribing\r\n      * @function\r\n      * @public\r\n      */\r\n    public transcribing: (sender: MeetingTranscriptionHandler, event: MeetingTranscriptionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for session started events.\r\n     * @member MeetingTranscriber.prototype.sessionStarted\r\n     * @function\r\n     * @public\r\n     */\r\n    public sessionStarted: (sender: MeetingHandler, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for session stopped events.\r\n     * @member MeetingTranscriber.prototype.sessionStopped\r\n     * @function\r\n     * @public\r\n     */\r\n    public sessionStopped: (sender: MeetingHandler, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for meeting started events.\r\n     * @member MeetingTranscriber.prototype.MeetingStarted\r\n     * @function\r\n     * @public\r\n     */\r\n    public MeetingStarted: (sender: MeetingHandler, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for meeting stopped events.\r\n     * @member MeetingTranscriber.prototype.MeetingStopped\r\n     * @function\r\n     * @public\r\n     */\r\n    public meetingStopped: (sender: MeetingHandler, event: SessionEventArgs) => void;\r\n\r\n    protected privAudioConfig: AudioConfig;\r\n    private privDisposedRecognizer: boolean;\r\n    private privRecognizer: TranscriberRecognizer;\r\n    private privProperties: PropertyCollection;\r\n\r\n    /**\r\n     * MeetingTranscriber constructor.\r\n     * @constructor\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\r\n     */\r\n    public constructor(audioConfig?: AudioConfig) {\r\n        this.privAudioConfig = audioConfig;\r\n        this.privProperties = new PropertyCollection();\r\n        this.privRecognizer = undefined;\r\n        this.privDisposedRecognizer = false;\r\n    }\r\n\r\n    /**\r\n     * Gets the spoken language of recognition.\r\n     * @member MeetingTranscriber.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} The spoken language of recognition.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this MeetingTranscriber.\r\n     * @member MeetingTranscriber.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this MeetingTranscriber.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * @Internal\r\n     * Internal data member to support fromRecognizer* pattern methods on other classes.\r\n     * Do not use externally, object returned will change without warning or notice.\r\n     */\r\n    public get internalData(): object {\r\n        return this.privRecognizer.internalData;\r\n    }\r\n\r\n    /**\r\n     * @Deprecated\r\n     * @Obsolete\r\n     * Please use the Connection.fromRecognizer pattern to obtain a connection object\r\n     */\r\n    public get connection(): Connection {\r\n        return Connection.fromRecognizer(this.privRecognizer);\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member MeetingTranscriber.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member MeetingTranscriber.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * @param {Meeting} meeting - meeting to be recognized\r\n     */\r\n    public joinMeetingAsync(meeting: IMeeting, cb?: Callback, err?: Callback): void {\r\n        /* eslint-disable no-console */\r\n        // console.log(\">> MeetingTranscriber::joinMeetingAsync\");\r\n        /* eslint-enable no-console */\r\n        const meetingImpl = meeting as MeetingImpl;\r\n        Contracts.throwIfNullOrUndefined(MeetingImpl, \"Meeting\");\r\n\r\n        // ref the meeting object\r\n        // create recognizer and subscribe to recognizer events\r\n        this.privRecognizer = new TranscriberRecognizer(meeting.config, this.privAudioConfig);\r\n        Contracts.throwIfNullOrUndefined(this.privRecognizer, \"Recognizer\");\r\n        this.privRecognizer.connectMeetingCallbacks(this);\r\n\r\n        marshalPromiseToCallbacks(meetingImpl.connectTranscriberRecognizer(this.privRecognizer), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts meeting transcription, until stopTranscribingAsync() is called.\r\n     * User must subscribe to events to receive transcription results.\r\n     * @member MeetingTranscriber.prototype.startTranscribingAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the transcription has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startTranscribingAsync(cb?: Callback, err?: Callback): void {\r\n        this.privRecognizer.startContinuousRecognitionAsync(cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts meeting transcription, until stopTranscribingAsync() is called.\r\n     * User must subscribe to events to receive transcription results.\r\n     * @member MeetingTranscriber.prototype.stopTranscribingAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the transcription has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopTranscribingAsync(cb?: Callback, err?: Callback): void {\r\n        this.privRecognizer.stopContinuousRecognitionAsync(cb, err);\r\n    }\r\n\r\n    /**\r\n     * Leave the current meeting. After this is called, you will no longer receive any events.\r\n     */\r\n    public leaveMeetingAsync(cb?: Callback, err?: Callback): void {\r\n        this.privRecognizer.disconnectCallbacks();\r\n        // eslint-disable-next-line\r\n        marshalPromiseToCallbacks((async (): Promise<void> => { return; })(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member MeetingTranscriber.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    /**\r\n     * Disposes any resources held by the object.\r\n     * @member MeetingTranscriber.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - true if disposing the object.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedRecognizer) {\r\n            return;\r\n        }\r\n        if (!!this.privRecognizer) {\r\n            await this.privRecognizer.close();\r\n            this.privRecognizer = undefined;\r\n        }\r\n        if (disposing) {\r\n            this.privDisposedRecognizer = true;\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ArgumentNullError, ConnectionMessage, IStringDictionary, MessageType } from \"../common/Exports.js\";\r\nimport { HeaderNames } from \"./HeaderNames.js\";\r\n\r\nexport class SpeechConnectionMessage extends ConnectionMessage {\r\n\r\n    private privPath: string;\r\n    private privRequestId: string;\r\n    private privContentType: string;\r\n    private privStreamId: string;\r\n    private privAdditionalHeaders: IStringDictionary<string>;\r\n\r\n    public constructor(\r\n        messageType: MessageType,\r\n        path: string,\r\n        requestId: string,\r\n        contentType: string,\r\n        body: any,\r\n        streamId?: string,\r\n        additionalHeaders?: IStringDictionary<string>,\r\n        id?: string) {\r\n\r\n        if (!path) {\r\n            throw new ArgumentNullError(\"path\");\r\n        }\r\n\r\n        if (!requestId) {\r\n            throw new ArgumentNullError(\"requestId\");\r\n        }\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        headers[HeaderNames.Path] = path;\r\n        headers[HeaderNames.RequestId] = requestId;\r\n        headers[HeaderNames.RequestTimestamp] = new Date().toISOString();\r\n        if (contentType) {\r\n            headers[HeaderNames.ContentType] = contentType;\r\n        }\r\n\r\n        if (streamId) {\r\n            headers[HeaderNames.RequestStreamId] = streamId;\r\n        }\r\n\r\n        if (additionalHeaders) {\r\n            for (const headerName in additionalHeaders) {\r\n                if (headerName) {\r\n                    headers[headerName] = additionalHeaders[headerName];\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if (id) {\r\n            super(messageType, body, headers, id);\r\n        } else {\r\n            super(messageType, body, headers);\r\n        }\r\n\r\n        this.privPath = path;\r\n        this.privRequestId = requestId;\r\n        this.privContentType = contentType;\r\n        this.privStreamId = streamId;\r\n        this.privAdditionalHeaders = additionalHeaders;\r\n    }\r\n\r\n    public get path(): string {\r\n        return this.privPath;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get contentType(): string {\r\n        return this.privContentType;\r\n    }\r\n\r\n    public get streamId(): string {\r\n        return this.privStreamId;\r\n    }\r\n\r\n    public get additionalHeaders(): IStringDictionary<string> {\r\n        return this.privAdditionalHeaders;\r\n    }\r\n\r\n    public static fromConnectionMessage(message: ConnectionMessage): SpeechConnectionMessage {\r\n        let path = null;\r\n        let requestId = null;\r\n        let contentType = null;\r\n        // let requestTimestamp = null;\r\n        let streamId = null;\r\n        const additionalHeaders: IStringDictionary<string> = {};\r\n\r\n        if (message.headers) {\r\n            for (const headerName in message.headers) {\r\n                if (headerName) {\r\n                    if (headerName.toLowerCase() === HeaderNames.Path.toLowerCase()) {\r\n                        path = message.headers[headerName];\r\n                    } else if (headerName.toLowerCase() === HeaderNames.RequestId.toLowerCase()) {\r\n                        requestId = message.headers[headerName];\r\n                    // } else if (headerName.toLowerCase() === HeaderNames.RequestTimestamp.toLowerCase()) {\r\n                       //  requestTimestamp = message.headers[headerName];\r\n                    } else if (headerName.toLowerCase() === HeaderNames.ContentType.toLowerCase()) {\r\n                        contentType = message.headers[headerName];\r\n                    } else if (headerName.toLowerCase() === HeaderNames.RequestStreamId.toLowerCase()) {\r\n                        streamId = message.headers[headerName];\r\n                    } else {\r\n                        additionalHeaders[headerName] = message.headers[headerName];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return new SpeechConnectionMessage(\r\n            message.messageType,\r\n            path,\r\n            requestId,\r\n            contentType,\r\n            message.body,\r\n            streamId,\r\n            additionalHeaders,\r\n            message.id);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * @class Contracts\r\n * @private\r\n */\r\nexport class Contracts {\r\n    public static throwIfNullOrUndefined(param: any, name: string): void {\r\n        if (param === undefined || param === null) {\r\n            throw new Error(\"throwIfNullOrUndefined:\" + name);\r\n        }\r\n    }\r\n\r\n    public static throwIfNull(param: any, name: string): void {\r\n        if (param === null) {\r\n            throw new Error(\"throwIfNull:\" + name);\r\n        }\r\n    }\r\n\r\n    public static throwIfNullOrWhitespace(param: string, name: string): void {\r\n        Contracts.throwIfNullOrUndefined(param, name);\r\n\r\n        if ((\"\" + param).trim().length < 1) {\r\n            throw new Error(\"throwIfNullOrWhitespace:\" + name);\r\n        }\r\n    }\r\n\r\n    public static throwIfNullOrTooLong(param: string, name: string, maxLength: number): void {\r\n        Contracts.throwIfNullOrUndefined(param, name);\r\n\r\n        if ((\"\" + param).length > maxLength) {\r\n            throw new Error(\"throwIfNullOrTooLong:\" + name + \" (more than \" + maxLength.toString() + \" characters)\");\r\n        }\r\n    }\r\n\r\n    public static throwIfNullOrTooShort(param: string, name: string, minLength: number): void {\r\n        Contracts.throwIfNullOrUndefined(param, name);\r\n\r\n        if ((\"\" + param).length < minLength) {\r\n            throw new Error(\"throwIfNullOrTooShort:\" + name + \" (less than \" + minLength.toString() + \" characters)\");\r\n        }\r\n    }\r\n\r\n    public static throwIfDisposed(isDisposed: boolean): void {\r\n        if (isDisposed) {\r\n            throw new Error(\"the object is already disposed\");\r\n        }\r\n    }\r\n\r\n    public static throwIfArrayEmptyOrWhitespace(array: string[], name: string): void {\r\n        Contracts.throwIfNullOrUndefined(array, name);\r\n\r\n        if (array.length === 0) {\r\n            throw new Error(\"throwIfArrayEmptyOrWhitespace:\" + name);\r\n        }\r\n\r\n        for (const item of array) {\r\n            Contracts.throwIfNullOrWhitespace(item, name);\r\n        }\r\n    }\r\n\r\n    public static throwIfFileDoesNotExist(param: string, name: string): void {\r\n        Contracts.throwIfNullOrWhitespace(param, name);\r\n\r\n        // TODO check for file existence.\r\n    }\r\n\r\n    public static throwIfNotUndefined(param: any, name: string): void {\r\n        if (param !== undefined) {\r\n            throw new Error(\"throwIfNotUndefined:\" + name);\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport { AgentConfig } from \"../common.speech/Exports.js\";\r\nimport { EventType, PlatformEvent } from \"./PlatformEvent.js\";\r\n\r\nexport class DialogEvent extends PlatformEvent {\r\n\r\n    public constructor(eventName: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n    }\r\n}\r\n\r\nexport class SendingAgentContextMessageEvent extends DialogEvent {\r\n    private privAgentConfig: AgentConfig;\r\n\r\n    public constructor(agentConfig: AgentConfig) {\r\n        super(\"SendingAgentContextMessageEvent\");\r\n        this.privAgentConfig = agentConfig;\r\n    }\r\n\r\n    public get agentConfig(): AgentConfig {\r\n        return this.privAgentConfig;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { createNoDashGuid } from \"./Guid.js\";\r\nimport { IStringDictionary } from \"./IDictionary.js\";\r\n\r\nexport enum EventType {\r\n    Debug,\r\n    Info,\r\n    Warning,\r\n    Error,\r\n    None,\r\n}\r\n\r\nexport class PlatformEvent {\r\n    private privName: string;\r\n    private privEventId: string;\r\n    private privEventTime: string;\r\n    private privEventType: EventType;\r\n    private privMetadata: IStringDictionary<string>;\r\n\r\n    public constructor(eventName: string, eventType: EventType) {\r\n        this.privName = eventName;\r\n        this.privEventId = createNoDashGuid();\r\n        this.privEventTime = new Date().toISOString();\r\n        this.privEventType = eventType;\r\n        this.privMetadata = { };\r\n    }\r\n\r\n    public get name(): string {\r\n        return this.privName;\r\n    }\r\n\r\n    public get eventId(): string {\r\n        return this.privEventId;\r\n    }\r\n\r\n    public get eventTime(): string {\r\n        return this.privEventTime;\r\n    }\r\n\r\n    public get eventType(): EventType {\r\n        return this.privEventType;\r\n    }\r\n\r\n    public get metadata(): IStringDictionary<string> {\r\n        return this.privMetadata;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the pronunciation evaluation granularity; default value is Phoneme.\r\n * Added in version 1.15.0\r\n * @class PronunciationAssessmentGranularity\r\n */\r\nexport enum PronunciationAssessmentGranularity {\r\n    /**\r\n     * Shows the score on the full text, word and phoneme level\r\n     * @member PronunciationAssessmentGranularity.Phoneme\r\n     */\r\n    Phoneme = 1,\r\n\r\n    /**\r\n     * Shows the score on the full text and word level\r\n     * @member PronunciationAssessmentGranularity.Word\r\n     */\r\n    Word,\r\n\r\n    /**\r\n     * Shows the score on the full text level only\r\n     * @member PronunciationAssessmentGranularity.FullText\r\n     */\r\n    FullText,\r\n}\r\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nimport { HeaderNames } from \"../common.speech/HeaderNames.js\";\r\nimport {\r\n    ConnectionMessage as IntConnectionMessage,\r\n    MessageType\r\n} from \"../common/Exports.js\";\r\nimport {\r\n    PropertyCollection\r\n} from \"./PropertyCollection.js\";\r\nimport { PropertyId } from \"./PropertyId.js\";\r\n\r\n/**\r\n * ConnectionMessage represents implementation specific messages sent to and received from\r\n * the speech service. These messages are provided for debugging purposes and should not\r\n * be used for production use cases with the Azure Cognitive Services Speech Service.\r\n * Messages sent to and received from the Speech Service are subject to change without\r\n * notice. This includes message contents, headers, payloads, ordering, etc.\r\n * Added in version 1.11.0.\r\n */\r\nexport abstract class ConnectionMessage {\r\n    /**\r\n     * The message path.\r\n     */\r\n    public abstract get path(): string;\r\n\r\n    /**\r\n     * Checks to see if the ConnectionMessage is a text message.\r\n     * See also IsBinaryMessage().\r\n     */\r\n    public abstract get isTextMessage(): boolean;\r\n\r\n    /**\r\n     * Checks to see if the ConnectionMessage is a binary message.\r\n     * See also GetBinaryMessage().\r\n     */\r\n    public abstract get isBinaryMessage(): boolean;\r\n\r\n    /**\r\n     * Gets the text message payload. Typically the text message content-type is\r\n     * application/json. To determine other content-types use\r\n     * Properties.GetProperty(\"Content-Type\").\r\n     */\r\n    public abstract get TextMessage(): string;\r\n\r\n    /**\r\n     * Gets the binary message payload.\r\n     */\r\n    public abstract get binaryMessage(): ArrayBuffer;\r\n\r\n    /**\r\n     * A collection of properties and their values defined for this <see cref=\"ConnectionMessage\"/>.\r\n     * Message headers can be accessed via this collection (e.g. \"Content-Type\").\r\n     */\r\n    public abstract get properties(): PropertyCollection;\r\n\r\n    /**\r\n     * Returns a string that represents the connection message.\r\n     */\r\n    public abstract toString(): string;\r\n}\r\n\r\nexport class ConnectionMessageImpl {\r\n\r\n    private privConnectionMessage: IntConnectionMessage;\r\n    private privProperties: PropertyCollection;\r\n\r\n    public constructor(message: IntConnectionMessage) {\r\n        this.privConnectionMessage = message;\r\n        this.privProperties = new PropertyCollection();\r\n        if (!!this.privConnectionMessage.headers[HeaderNames.ConnectionId]) {\r\n            this.privProperties.setProperty(PropertyId.Speech_SessionId, this.privConnectionMessage.headers[HeaderNames.ConnectionId]);\r\n        }\r\n\r\n        Object.keys(this.privConnectionMessage.headers).forEach((header: string): void => {\r\n            this.privProperties.setProperty(header, this.privConnectionMessage.headers[header]);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * The message path.\r\n     */\r\n    public get path(): string {\r\n        return this.privConnectionMessage.headers[Object.keys(this.privConnectionMessage.headers).find((key: string): boolean => key.toLowerCase() === \"path\".toLowerCase())];\r\n    }\r\n\r\n    /**\r\n     * Checks to see if the ConnectionMessage is a text message.\r\n     * See also IsBinaryMessage().\r\n     */\r\n    public get isTextMessage(): boolean {\r\n        return this.privConnectionMessage.messageType === MessageType.Text;\r\n    }\r\n\r\n    /**\r\n     * Checks to see if the ConnectionMessage is a binary message.\r\n     * See also GetBinaryMessage().\r\n     */\r\n    public get isBinaryMessage(): boolean {\r\n        return this.privConnectionMessage.messageType === MessageType.Binary;\r\n    }\r\n\r\n    /**\r\n     * Gets the text message payload. Typically the text message content-type is\r\n     * application/json. To determine other content-types use\r\n     * Properties.GetProperty(\"Content-Type\").\r\n     */\r\n    public get TextMessage(): string {\r\n        return this.privConnectionMessage.textBody;\r\n    }\r\n\r\n    /**\r\n     * Gets the binary message payload.\r\n     */\r\n    public get binaryMessage(): ArrayBuffer {\r\n        return this.privConnectionMessage.binaryBody;\r\n    }\r\n\r\n    /**\r\n     * A collection of properties and their values defined for this <see cref=\"ConnectionMessage\"/>.\r\n     * Message headers can be accessed via this collection (e.g. \"Content-Type\").\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Returns a string that represents the connection message.\r\n     */\r\n    public toString(): string {\r\n        return \"\";\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines error code in case that CancellationReason is Error.\r\n * Added in version 1.1.0.\r\n */\r\nexport enum CancellationErrorCode {\r\n    /**\r\n     * Indicates that no error occurred during speech recognition.\r\n     */\r\n    NoError,\r\n\r\n    /**\r\n     * Indicates an authentication error.\r\n     */\r\n    AuthenticationFailure,\r\n\r\n    /**\r\n     * Indicates that one or more recognition parameters are invalid.\r\n     */\r\n    BadRequestParameters,\r\n\r\n    /**\r\n     * Indicates that the number of parallel requests exceeded the number of allowed\r\n     * concurrent transcriptions for the subscription.\r\n     */\r\n    TooManyRequests,\r\n\r\n    /**\r\n     * Indicates a connection error.\r\n     */\r\n    ConnectionFailure,\r\n\r\n    /**\r\n     * Indicates a time-out error when waiting for response from service.\r\n     */\r\n    ServiceTimeout,\r\n\r\n    /**\r\n     * Indicates that an error is returned by the service.\r\n     */\r\n    ServiceError,\r\n\r\n    /**\r\n     * Indicates an unexpected runtime error.\r\n     */\r\n    RuntimeError,\r\n\r\n    /**\r\n     * Indicates an quota overrun on existing key.\r\n     */\r\n    Forbidden,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ObjectDisposedError } from \"./Error.js\";\r\nimport { createNoDashGuid } from \"./Guid.js\";\r\nimport { IDetachable } from \"./IDetachable.js\";\r\nimport { IStringDictionary } from \"./IDictionary.js\";\r\nimport { IEventListener } from \"./IEventListener.js\";\r\nimport { IEventSource } from \"./IEventSource.js\";\r\nimport { PlatformEvent } from \"./PlatformEvent.js\";\r\n\r\nexport class EventSource<TEvent extends PlatformEvent> implements IEventSource<TEvent> {\r\n    private privEventListeners: IStringDictionary<(event: TEvent) => void> = {};\r\n    private privMetadata: IStringDictionary<string>;\r\n    private privIsDisposed: boolean = false;\r\n    private privConsoleListener: IDetachable = undefined;\r\n\r\n    public constructor(metadata?: IStringDictionary<string>) {\r\n        this.privMetadata = metadata;\r\n    }\r\n\r\n    public onEvent(event: TEvent): void {\r\n        if (this.isDisposed()) {\r\n            throw (new ObjectDisposedError(\"EventSource\"));\r\n        }\r\n\r\n        if (this.metadata) {\r\n            for (const paramName in this.metadata) {\r\n                if (paramName) {\r\n                    if (event.metadata) {\r\n                        if (!event.metadata[paramName]) {\r\n                            event.metadata[paramName] = this.metadata[paramName];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const eventId in this.privEventListeners) {\r\n            if (eventId && this.privEventListeners[eventId]) {\r\n                this.privEventListeners[eventId](event);\r\n            }\r\n        }\r\n    }\r\n\r\n    public attach(onEventCallback: (event: TEvent) => void): IDetachable {\r\n        const id = createNoDashGuid();\r\n        this.privEventListeners[id] = onEventCallback;\r\n        return {\r\n            detach: (): Promise<void> => {\r\n                delete this.privEventListeners[id];\r\n                return Promise.resolve();\r\n            },\r\n        };\r\n    }\r\n\r\n    public attachListener(listener: IEventListener<TEvent>): IDetachable {\r\n        return this.attach((e: TEvent): void => listener.onEvent(e));\r\n    }\r\n\r\n    public attachConsoleListener(listener: IEventListener<TEvent>): IDetachable {\r\n        if (!!this.privConsoleListener) {\r\n            void this.privConsoleListener.detach(); // Detach implementation for eventListeners is synchronous\r\n        }\r\n        this.privConsoleListener = this.attach((e: TEvent): void => listener.onEvent(e));\r\n        return this.privConsoleListener;\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public dispose(): void {\r\n        this.privEventListeners = null;\r\n        this.privIsDisposed = true;\r\n    }\r\n\r\n    public get metadata(): IStringDictionary<string> {\r\n        return this.privMetadata;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports.js\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary\r\n} from \"../common/Exports.js\";\r\nimport {\r\n    PropertyId\r\n} from \"../sdk/Exports.js\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./ConnectionFactoryBase.js\";\r\nimport {\r\n    AuthInfo,\r\n    RecognizerConfig,\r\n    WebsocketMessageFormatter,\r\n} from \"./Exports.js\";\r\nimport { HeaderNames } from \"./HeaderNames.js\";\r\n\r\nclass SpeakerRecognitionConnectionFactoryBase extends ConnectionFactoryBase {\r\n\r\n    public create(\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        endpointPath: string,\r\n        connectionId?: string): IConnection {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint);\r\n        if (!endpoint) {\r\n            const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region);\r\n            const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n            const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, `wss://${region}.spr-frontend.speech${hostSuffix}`);\r\n            const scenario: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_SpeakerIdMode, \"TextIndependentIdentification\");\r\n            endpoint = `${host}/speaker/ws/${this.scenarioToPath(scenario)}/${endpointPath}`;\r\n        }\r\n\r\n        const queryParams: IStringDictionary<string> = {\r\n            format: \"simple\",\r\n            language: config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage),\r\n        };\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpoint);\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n        headers[HeaderNames.SpIDAuthKey] = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Key);\r\n\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n\r\n    private scenarioToPath(mode: string): string {\r\n        switch (mode) {\r\n            case \"TextIndependentVerification\":\r\n            case \"2\":\r\n                return \"verification/text-independent\";\r\n            case \"TextDependentVerification\":\r\n            case \"1\":\r\n                return \"verification/text-dependent\";\r\n            default:\r\n                return \"identification/text-independent\";\r\n        }\r\n    }\r\n}\r\n\r\nexport class SpeakerRecognitionConnectionFactory extends SpeakerRecognitionConnectionFactoryBase {\r\n    public create( config: RecognizerConfig, authInfo: AuthInfo, connectionId?: string): IConnection {\r\n        return super.create(config, authInfo, \"recognition\", connectionId);\r\n    }\r\n}\r\n\r\nexport class VoiceProfileConnectionFactory extends SpeakerRecognitionConnectionFactoryBase {\r\n    public create( config: RecognizerConfig, authInfo: AuthInfo, connectionId?: string): IConnection {\r\n        return super.create(config, authInfo, \"profile\", connectionId);\r\n    }\r\n}\r\n\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file, @typescript-eslint/typedef */\r\n\r\nexport enum PromiseState {\r\n    None,\r\n    Resolved,\r\n    Rejected,\r\n}\r\n\r\nexport interface IDeferred<T> {\r\n    readonly promise: Promise<T>;\r\n\r\n    resolve(result: T): IDeferred<T>;\r\n\r\n    reject(error: string): IDeferred<T>;\r\n}\r\n\r\nexport class PromiseResult<T> {\r\n    protected privIsCompleted: boolean;\r\n    protected privIsError: boolean;\r\n    protected privError: string;\r\n    protected privResult: T;\r\n\r\n    public constructor(promiseResultEventSource: PromiseResultEventSource<T>) {\r\n        promiseResultEventSource.on((result: T): void => {\r\n            if (!this.privIsCompleted) {\r\n                this.privIsCompleted = true;\r\n                this.privIsError = false;\r\n                this.privResult = result;\r\n            }\r\n        }, (error: string): void => {\r\n            if (!this.privIsCompleted) {\r\n                this.privIsCompleted = true;\r\n                this.privIsError = true;\r\n                this.privError = error;\r\n            }\r\n        });\r\n    }\r\n\r\n    public get isCompleted(): boolean {\r\n        return this.privIsCompleted;\r\n    }\r\n\r\n    public get isError(): boolean {\r\n        return this.privIsError;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n\r\n    public get result(): T {\r\n        return this.privResult;\r\n    }\r\n\r\n    public throwIfError = (): void => {\r\n        if (this.isError) {\r\n            throw this.error;\r\n        }\r\n    };\r\n}\r\n\r\nexport class PromiseResultEventSource<T>  {\r\n\r\n    private privOnSetResult: (result: T) => void;\r\n    private privOnSetError: (error: string) => void;\r\n\r\n    public setResult = (result: T): void => {\r\n        this.privOnSetResult(result);\r\n    };\r\n\r\n    public setError = (error: string): void => {\r\n        this.privOnSetError(error);\r\n    };\r\n\r\n    public on = (onSetResult: (result: T) => void, onSetError: (error: string) => void): void => {\r\n        this.privOnSetResult = onSetResult;\r\n        this.privOnSetError = onSetError;\r\n    };\r\n}\r\n\r\nexport class Deferred<T> implements IDeferred<T> {\r\n    private privPromise: Promise<T>;\r\n    private privResolve: (value?: T | PromiseLike<T>) => void;\r\n    private privReject: (reason?: any) => void;\r\n\r\n    public constructor() {\r\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\r\n        this.privPromise = new Promise<T>((resolve: (value: T) => void, reject: (reason: any) => void) => {\r\n            this.privResolve = resolve;\r\n            this.privReject = reject;\r\n        });\r\n    }\r\n\r\n    public get promise(): Promise<T> {\r\n        return this.privPromise;\r\n    }\r\n\r\n    public resolve = (result: T | Promise<T>): Deferred<T> => {\r\n        this.privResolve(result);\r\n        return this;\r\n    };\r\n\r\n    public reject = (error: string): Deferred<T> => {\r\n        this.privReject(error);\r\n        return this;\r\n    };\r\n}\r\n\r\nexport class Sink<T> {\r\n    private privState: PromiseState = PromiseState.None;\r\n    private privPromiseResult: PromiseResult<T> = null;\r\n    private privPromiseResultEvents: PromiseResultEventSource<T> = null;\r\n\r\n    private privSuccessHandlers: ((result: T) => void)[] = [];\r\n    private privErrorHandlers: ((e: string) => void)[] = [];\r\n\r\n    public constructor() {\r\n        this.privPromiseResultEvents = new PromiseResultEventSource();\r\n        this.privPromiseResult = new PromiseResult(this.privPromiseResultEvents);\r\n    }\r\n\r\n    public get state(): PromiseState {\r\n        return this.privState;\r\n    }\r\n\r\n    public get result(): PromiseResult<T> {\r\n        return this.privPromiseResult;\r\n    }\r\n\r\n    public resolve(result: T): void {\r\n        if (this.privState !== PromiseState.None) {\r\n            throw new Error(\"'Cannot resolve a completed promise'\");\r\n        }\r\n\r\n        this.privState = PromiseState.Resolved;\r\n        this.privPromiseResultEvents.setResult(result);\r\n\r\n        for (let i = 0; i < this.privSuccessHandlers.length; i++) {\r\n            this.executeSuccessCallback(result, this.privSuccessHandlers[i], this.privErrorHandlers[i]);\r\n        }\r\n\r\n        this.detachHandlers();\r\n    }\r\n\r\n    public reject(error: string): void {\r\n        if (this.privState !== PromiseState.None) {\r\n            throw new Error(\"'Cannot reject a completed promise'\");\r\n        }\r\n\r\n        this.privState = PromiseState.Rejected;\r\n        this.privPromiseResultEvents.setError(error);\r\n\r\n        for (const errorHandler of this.privErrorHandlers) {\r\n            this.executeErrorCallback(error, errorHandler);\r\n        }\r\n\r\n        this.detachHandlers();\r\n    }\r\n\r\n    public on(\r\n        successCallback: (result: T) => void,\r\n        errorCallback: (error: string) => void): void {\r\n\r\n        if (successCallback == null) {\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            successCallback = (): void => { };\r\n        }\r\n\r\n        if (this.privState === PromiseState.None) {\r\n            this.privSuccessHandlers.push(successCallback);\r\n            this.privErrorHandlers.push(errorCallback);\r\n        } else {\r\n            if (this.privState === PromiseState.Resolved) {\r\n                this.executeSuccessCallback(this.privPromiseResult.result, successCallback, errorCallback);\r\n            } else if (this.privState === PromiseState.Rejected) {\r\n                this.executeErrorCallback(this.privPromiseResult.error, errorCallback);\r\n            }\r\n\r\n            this.detachHandlers();\r\n        }\r\n    }\r\n\r\n    private executeSuccessCallback(result: T, successCallback: (result: T) => void, errorCallback: (error: string) => void): void {\r\n        try {\r\n            successCallback(result);\r\n        } catch (e) {\r\n            this.executeErrorCallback(`'Unhandled callback error: ${e as string}'`, errorCallback);\r\n        }\r\n    }\r\n\r\n    private executeErrorCallback(error: string, errorCallback: (error: string) => void): void {\r\n        if (errorCallback) {\r\n            try {\r\n                errorCallback(error);\r\n            } catch (e) {\r\n                throw new Error(`'Unhandled callback error: ${e as string}. InnerError: ${error}'`);\r\n            }\r\n        } else {\r\n            throw new Error(`'Unhandled error: ${error}'`);\r\n        }\r\n    }\r\n\r\n    private detachHandlers(): void {\r\n        this.privErrorHandlers = [];\r\n        this.privSuccessHandlers = [];\r\n    }\r\n}\r\n\r\n// eslint-disable-next-line prefer-arrow/prefer-arrow-functions\r\nexport function marshalPromiseToCallbacks<T>(\r\n    promise: Promise<T>,\r\n    cb?: (value: T) => void,\r\n    err?: (error: string) => void): void {\r\n    promise.then((val: T): void => {\r\n        try {\r\n            if (!!cb) {\r\n                cb(val);\r\n            }\r\n        } catch (error) {\r\n            if (!!err) {\r\n                try {\r\n                    if (error instanceof Error) {\r\n                        const typedError: Error = error ;\r\n                        err(typedError.name + \": \" + typedError.message);\r\n                    } else {\r\n                        err(error as string);\r\n                    }\r\n                // eslint-disable-next-line no-empty\r\n                } catch (error) { }\r\n            }\r\n        }\r\n    }, (error: any): void => {\r\n        if (!!err) {\r\n            try {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error as string);\r\n                }\r\n            // eslint-disable-next-line no-empty\r\n            } catch (error) { }\r\n        }\r\n    });\r\n}\r\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nimport { Contracts } from \"./Contracts.js\";\r\n\r\n/**\r\n * Language understanding model\r\n * @class LanguageUnderstandingModel\r\n */\r\nexport class LanguageUnderstandingModel {\r\n    /**\r\n     * Creates and initializes a new instance\r\n     * @constructor\r\n     */\r\n    protected constructor() {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Creates an language understanding model using the specified endpoint.\r\n     * @member LanguageUnderstandingModel.fromEndpoint\r\n     * @function\r\n     * @public\r\n     * @param {URL} uri - A String that represents the endpoint of the language understanding model.\r\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\r\n     */\r\n    public static fromEndpoint(uri: URL): LanguageUnderstandingModel {\r\n        Contracts.throwIfNull(uri, \"uri\");\r\n        Contracts.throwIfNullOrWhitespace(uri.hostname, \"uri\");\r\n\r\n        const langModelImp: LanguageUnderstandingModelImpl = new LanguageUnderstandingModelImpl();\r\n        // Need to extract the app ID from the URL.\r\n        // URL is in the format: https://<region>.api.cognitive.microsoft.com/luis/v2.0/apps/<Guid>?subscription-key=<key>&timezoneOffset=-360\r\n\r\n        // Start tearing the string apart.\r\n\r\n        // region can be extracted from the host name.\r\n        const firstDot: number = uri.host.indexOf(\".\");\r\n        if (-1 === firstDot) {\r\n            throw new Error(\"Could not determine region from endpoint\");\r\n        }\r\n        langModelImp.region = uri.host.substr(0, firstDot);\r\n\r\n        // Now the app ID.\r\n\r\n        const lastSegment: number = uri.pathname.lastIndexOf(\"/\") + 1;\r\n        if (-1 === lastSegment) {\r\n            throw new Error(\"Could not determine appId from endpoint\");\r\n        }\r\n\r\n        langModelImp.appId = uri.pathname.substr(lastSegment);\r\n\r\n        // And finally the key.\r\n        langModelImp.subscriptionKey = uri.searchParams.get(\"subscription-key\");\r\n        if (undefined === langModelImp.subscriptionKey) {\r\n            throw new Error(\"Could not determine subscription key from endpoint\");\r\n        }\r\n\r\n        return langModelImp;\r\n    }\r\n\r\n    /**\r\n     * Creates an language understanding model using the application id of Language Understanding service.\r\n     * @member LanguageUnderstandingModel.fromAppId\r\n     * @function\r\n     * @public\r\n     * @param {string} appId - A String that represents the application id of Language Understanding service.\r\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\r\n     */\r\n    public static fromAppId(appId: string): LanguageUnderstandingModel {\r\n        Contracts.throwIfNullOrWhitespace(appId, \"appId\");\r\n\r\n        const langModelImp: LanguageUnderstandingModelImpl = new LanguageUnderstandingModelImpl();\r\n        langModelImp.appId = appId;\r\n        return langModelImp;\r\n    }\r\n\r\n    /**\r\n     * Creates a language understanding model using hostname, subscription key and application\r\n     * id of Language Understanding service.\r\n     * @member LanguageUnderstandingModel.fromSubscription\r\n     * @function\r\n     * @public\r\n     * @param {string} subscriptionKey - A String that represents the subscription key of\r\n     * Language Understanding service.\r\n     * @param {string} appId - A String that represents the application id of Language\r\n     * Understanding service.\r\n     * @param {LanguageUnderstandingModel} region - A String that represents the region\r\n     * of the Language Understanding service (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {LanguageUnderstandingModel} The language understanding model being created.\r\n     */\r\n    public static fromSubscription(subscriptionKey: string, appId: string, region: string): LanguageUnderstandingModel {\r\n        Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\r\n        Contracts.throwIfNullOrWhitespace(appId, \"appId\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const langModelImp: LanguageUnderstandingModelImpl = new LanguageUnderstandingModelImpl();\r\n        langModelImp.appId = appId;\r\n        langModelImp.region = region;\r\n        langModelImp.subscriptionKey = subscriptionKey;\r\n        return langModelImp;\r\n    }\r\n}\r\n\r\n/**\r\n * @private\r\n * @class LanguageUnderstandingModelImpl\r\n */\r\nexport class LanguageUnderstandingModelImpl extends LanguageUnderstandingModel {\r\n    public appId: string;\r\n    public region: string;\r\n    public subscriptionKey: string;\r\n}\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _native = _interopRequireDefault(require(\"./native.js\"));\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = require(\"./stringify.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  if (_native.default.randomUUID && !buf && !options) {\n    return _native.default.randomUUID();\n  }\n\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.unsafeStringify)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationEventArgsBase,\r\n} from \"./CancellationEventArgsBase.js\";\r\n\r\n/**\r\n * Defines content of a RecognitionErrorEvent.\r\n * @class ConversationTranscriptionCanceledEventArgs\r\n */\r\nexport class ConversationTranscriptionCanceledEventArgs extends CancellationEventArgsBase {\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\ntype TWorkerMessage = ICallNotification | IClearResponse | IErrorNotification | IErrorResponse;\r\n\r\ninterface IClearResponse {\r\n    error: null;\r\n    id: number;\r\n}\r\n\r\ninterface IErrorNotification {\r\n    error: {\r\n        message: string;\r\n    };\r\n    id: null;\r\n    result: null;\r\n}\r\n\r\ninterface IErrorResponse {\r\n    error: {\r\n        message: string;\r\n    };\r\n    id: number;\r\n    result: null;\r\n}\r\n\r\ninterface ICallNotification {\r\n    id: null;\r\n    method: \"call\";\r\n    params: {\r\n        timerId: number;\r\n    };\r\n}\r\n\r\ninterface ISetNotification {\r\n    id: null;\r\n    method: \"set\";\r\n    params: {\r\n        delay: number;\r\n        now: number;\r\n        timerId: number;\r\n    };\r\n}\r\n\r\ninterface IClearRequest {\r\n    id: number;\r\n    method: \"clear\";\r\n    params: {\r\n        timerId: number;\r\n    };\r\n}\r\n\r\ninterface IWorkerEvent extends Event {\r\n    data: TWorkerMessage;\r\n}\r\n\r\ninterface IWorkerTimers {\r\n    clearTimeout: (timerId: number) => void;\r\n    setTimeout: (func: () => any, delay: number) => number;\r\n}\r\n\r\ndeclare type Func = () => any;\r\n\r\nexport class Timeout {\r\n\r\n    private static workerTimers: null | IWorkerTimers = null;\r\n\r\n    public static clearTimeout: IWorkerTimers[\"clearTimeout\"] = (timerId: number): void => Timeout.timers().clearTimeout(timerId);\r\n\r\n    public static setTimeout: IWorkerTimers[\"setTimeout\"] = (func: () => any, delay: number): number => Timeout.timers().setTimeout(func, delay);\r\n\r\n    public static load(): any {\r\n        // Prefilling the Maps with a function indexed by zero is necessary to be compliant with the specification.\r\n        const scheduledTimeoutFunctions: Map<number, number | Func> = new Map([[0, (): void => { }]]); // eslint-disable-line @typescript-eslint/no-empty-function\r\n        const unhandledRequests: Map<number, number> = new Map();\r\n\r\n        // eslint-disable-next-line\r\n        const workerScript = `!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=14)}([function(e,t,n){\"use strict\";n.d(t,\"a\",(function(){return i})),n.d(t,\"b\",(function(){return u})),n.d(t,\"c\",(function(){return a})),n.d(t,\"d\",(function(){return d}));const r=new Map,o=new Map,i=e=>{const t=r.get(e);if(void 0===t)throw new Error('There is no interval scheduled with the given id \"'.concat(e,'\".'));clearTimeout(t),r.delete(e)},u=e=>{const t=o.get(e);if(void 0===t)throw new Error('There is no timeout scheduled with the given id \"'.concat(e,'\".'));clearTimeout(t),o.delete(e)},f=(e,t)=>{let n,r;if(\"performance\"in self){const o=performance.now();n=o,r=e-Math.max(0,o-t)}else n=Date.now(),r=e;return{expected:n+r,remainingDelay:r}},c=(e,t,n,r)=>{const o=\"performance\"in self?performance.now():Date.now();o>n?postMessage({id:null,method:\"call\",params:{timerId:t}}):e.set(t,setTimeout(c,n-o,e,t,n))},a=(e,t,n)=>{const{expected:o,remainingDelay:i}=f(e,n);r.set(t,setTimeout(c,i,r,t,o))},d=(e,t,n)=>{const{expected:r,remainingDelay:i}=f(e,n);o.set(t,setTimeout(c,i,o,t,r))}},function(e,t,n){\"use strict\";n.r(t);var r=n(2);for(var o in r)\"default\"!==o&&function(e){n.d(t,e,(function(){return r[e]}))}(o);var i=n(3);for(var o in i)\"default\"!==o&&function(e){n.d(t,e,(function(){return i[e]}))}(o);var u=n(4);for(var o in u)\"default\"!==o&&function(e){n.d(t,e,(function(){return u[e]}))}(o);var f=n(5);for(var o in f)\"default\"!==o&&function(e){n.d(t,e,(function(){return f[e]}))}(o);var c=n(6);for(var o in c)\"default\"!==o&&function(e){n.d(t,e,(function(){return c[e]}))}(o);var a=n(7);for(var o in a)\"default\"!==o&&function(e){n.d(t,e,(function(){return a[e]}))}(o);var d=n(8);for(var o in d)\"default\"!==o&&function(e){n.d(t,e,(function(){return d[e]}))}(o);var s=n(9);for(var o in s)\"default\"!==o&&function(e){n.d(t,e,(function(){return s[e]}))}(o)},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){\"use strict\";n.r(t);var r=n(11);for(var o in r)\"default\"!==o&&function(e){n.d(t,e,(function(){return r[e]}))}(o);var i=n(12);for(var o in i)\"default\"!==o&&function(e){n.d(t,e,(function(){return i[e]}))}(o);var u=n(13);for(var o in u)\"default\"!==o&&function(e){n.d(t,e,(function(){return u[e]}))}(o)},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){\"use strict\";n.r(t);var r=n(0),o=n(1);for(var i in o)\"default\"!==i&&function(e){n.d(t,e,(function(){return o[e]}))}(i);var u=n(10);for(var i in u)\"default\"!==i&&function(e){n.d(t,e,(function(){return u[e]}))}(i);addEventListener(\"message\",({data:e})=>{try{if(\"clear\"===e.method){const{id:t,params:{timerId:n}}=e;Object(r.b)(n),postMessage({error:null,id:t})}else{if(\"set\"!==e.method)throw new Error('The given method \"'.concat(e.method,'\" is not supported'));{const{params:{delay:t,now:n,timerId:o}}=e;Object(r.d)(t,o,n)}}}catch(t){postMessage({error:{message:t.message},id:e.id,result:null})}})}]);`;\r\n        const workerUrl = \"data:text/javascript;base64,\" + btoa(workerScript);\r\n        const worker = new Worker(workerUrl);\r\n\r\n        worker.addEventListener(\"message\", ({ data }: IWorkerEvent): void => {\r\n            if (Timeout.isCallNotification(data)) {\r\n                const {\r\n                    params: { timerId }\r\n                } = data;\r\n\r\n                const idOrFunc = scheduledTimeoutFunctions.get(timerId);\r\n\r\n                if (typeof idOrFunc === \"number\") {\r\n                    const unhandledTimerId = unhandledRequests.get(idOrFunc);\r\n\r\n                    if (\r\n                        unhandledTimerId === undefined ||\r\n                        unhandledTimerId !== timerId\r\n                    ) {\r\n                        throw new Error(\"The timer is in an undefined state.\");\r\n                    }\r\n                } else if (typeof idOrFunc !== \"undefined\") {\r\n                    idOrFunc();\r\n\r\n                    // A timeout can be safely deleted because it is only called once.\r\n                    scheduledTimeoutFunctions.delete(timerId);\r\n                } else {\r\n                    throw new Error(\"The timer is in an undefined state.\");\r\n                }\r\n            } else if (Timeout.isClearResponse(data)) {\r\n                const { id } = data;\r\n\r\n                const unhandledTimerId = unhandledRequests.get(id);\r\n\r\n                if (unhandledTimerId === undefined) {\r\n                    throw new Error(\"The timer is in an undefined state.\");\r\n                }\r\n\r\n                unhandledRequests.delete(id);\r\n\r\n                scheduledTimeoutFunctions.delete(unhandledTimerId);\r\n            } else {\r\n                const {\r\n                    error: { message }\r\n                } = data;\r\n\r\n                throw new Error(message);\r\n            }\r\n        });\r\n\r\n        const clearTimeout = (timerId: number): void => {\r\n            const id = Math.random();\r\n\r\n            unhandledRequests.set(id, timerId);\r\n            scheduledTimeoutFunctions.set(timerId, id);\r\n\r\n            worker.postMessage({\r\n                id,\r\n                method: \"clear\",\r\n                params: { timerId }\r\n            } as IClearRequest);\r\n        };\r\n\r\n        const setTimeout = (func: () => void, delay: number): number => {\r\n            const timerId = Math.random();\r\n\r\n            scheduledTimeoutFunctions.set(timerId, func);\r\n\r\n            worker.postMessage({\r\n                id: null,\r\n                method: \"set\",\r\n                params: {\r\n                    delay,\r\n                    now: performance.now(),\r\n                    timerId\r\n                }\r\n            } as ISetNotification);\r\n\r\n            return timerId;\r\n        };\r\n\r\n        return {\r\n            clearTimeout,\r\n            setTimeout\r\n        };\r\n    }\r\n\r\n    private static loadWorkerTimers(): () => IWorkerTimers {\r\n        return (): IWorkerTimers => {\r\n            if (Timeout.workerTimers !== null) {\r\n                return Timeout.workerTimers;\r\n            }\r\n\r\n            Timeout.workerTimers = Timeout.load() as IWorkerTimers;\r\n\r\n            return Timeout.workerTimers;\r\n        };\r\n    }\r\n\r\n    public static timers: () => IWorkerTimers = Timeout.loadWorkerTimers();\r\n\r\n    private static isCallNotification(message: TWorkerMessage): message is ICallNotification {\r\n        return (message as ICallNotification).method !== undefined && (message as ICallNotification).method === \"call\";\r\n    }\r\n\r\n    private static isClearResponse(message: TWorkerMessage): message is IClearResponse {\r\n        return (message as IClearResponse).error === null && typeof message.id === \"number\";\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ITurnStatusResponsePayload,\r\n    TurnStatusResponsePayload\r\n    } from \"../common.speech/ServiceMessages/TurnStatusPayload.js\";\r\n\r\n/**\r\n * Defines contents of received message/events.\r\n * @class TurnStatusReceivedEventArgs\r\n */\r\nexport class TurnStatusReceivedEventArgs {\r\n    private privTurnStatus: ITurnStatusResponsePayload;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} turnStatus - The JSON-encoded turn status message.\r\n     */\r\n    public constructor(turnStatus: string) {\r\n        this.privTurnStatus = TurnStatusResponsePayload.fromJSON(turnStatus);\r\n    }\r\n\r\n    /**\r\n     * Gets the interaction identifier associated with this turn status event.\r\n     * @member TurnStatusReceivedEventArgs.prototype.interactionId\r\n     * @function\r\n     * @public\r\n     * @returns {any} the received interaction id.\r\n     */\r\n    public get interactionId(): any {\r\n        return this.privTurnStatus.interactionId;\r\n    }\r\n\r\n    /**\r\n     * Gets the conversation identifier associated with this turn status event.\r\n     * @member TurnStatusReceivedEventArgs.prototype.conversationId\r\n     * @function\r\n     * @public\r\n     * @returns {any} the received conversation id.\r\n     */\r\n    public get conversationId(): any {\r\n        return this.privTurnStatus.conversationId;\r\n    }\r\n\r\n    /**\r\n     * Gets the received turn status code.\r\n     * @member TurnStatusReceivedEventArgs.prototype.statusCode\r\n     * @function\r\n     * @public\r\n     * @returns {number} the received turn status.\r\n     */\r\n    public get statusCode(): number {\r\n        return this.privTurnStatus.statusCode; // eslint-disable-line @typescript-eslint/no-unsafe-return\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    AudioConfig,\r\n    SpeechTranslationConfig\r\n} from \"../Exports.js\";\r\nimport { Callback } from \"./IConversation.js\";\r\n\r\nexport class ConversationCommon {\r\n\r\n    protected privAudioConfig: AudioConfig;\r\n    protected privSpeechTranslationConfig: SpeechTranslationConfig;\r\n\r\n    public constructor(audioConfig?: AudioConfig) {\r\n        this.privAudioConfig = audioConfig;\r\n    }\r\n\r\n    protected handleCallback(cb: Callback, err: Callback): void {\r\n        if (!!cb) {\r\n            try {\r\n                cb();\r\n            } catch (e) {\r\n                if (!!err) {\r\n                    err(e);\r\n                }\r\n            }\r\n            cb = undefined;\r\n        }\r\n    }\r\n\r\n    protected handleError(error: any, err: Callback): void {\r\n        if (!!err) {\r\n            if (error instanceof Error) {\r\n                const typedError: Error = error;\r\n                err(typedError.name + \": \" + typedError.message);\r\n\r\n            } else {\r\n                err(error);\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\nimport { PullAudioOutputStream } from \"./Audio/AudioOutputStream.js\";\r\n\r\ninterface IActivity {\r\n    conversation?: any;\r\n    id?: string;\r\n    replyToId?: string;\r\n    type?: string;\r\n    text?: string;\r\n    speak?: any;\r\n}\r\n\r\n/**\r\n * Defines contents of received message/events.\r\n * @class ActivityReceivedEventArgs\r\n */\r\nexport class ActivityReceivedEventArgs {\r\n    private privActivity: IActivity;\r\n    private privAudioStream: PullAudioOutputStream;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {any} activity - The activity..\r\n     */\r\n    public constructor(activity: any, audioStream?: PullAudioOutputStream) {\r\n        this.privActivity = activity as IActivity;\r\n        this.privAudioStream = audioStream;\r\n    }\r\n\r\n    /**\r\n     * Gets the received activity\r\n     * @member ActivityReceivedEventArgs.prototype.activity\r\n     * @function\r\n     * @public\r\n     * @returns {any} the received activity.\r\n     */\r\n    public get activity(): any {\r\n        return this.privActivity;\r\n    }\r\n\r\n    public get audioStream(): PullAudioOutputStream {\r\n        return this.privAudioStream;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport { DialogServiceConfig, DialogServiceConfigImpl } from \"./DialogServiceConfig.js\";\r\nimport { PropertyId } from \"./Exports.js\";\r\n\r\n/**\r\n * Class that defines configurations for the dialog service connector object for using a CustomCommands backend.\r\n * @class CustomCommandsConfig\r\n */\r\nexport class CustomCommandsConfig extends DialogServiceConfigImpl {\r\n\r\n    /**\r\n     * Creates an instance of CustomCommandsConfig.\r\n     */\r\n    public constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the bot framework config with the specified subscription and region.\r\n     * @member CustomCommandsConfig.fromSubscription\r\n     * @function\r\n     * @public\r\n     * @param applicationId Speech Commands application id.\r\n     * @param subscription Subscription key associated with the bot\r\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {CustomCommandsConfig} A new bot framework config.\r\n     */\r\n    public static fromSubscription(applicationId: string, subscription: string, region: string): CustomCommandsConfig {\r\n        Contracts.throwIfNullOrWhitespace(applicationId, \"applicationId\");\r\n        Contracts.throwIfNullOrWhitespace(subscription, \"subscription\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const customCommandsConfig: CustomCommandsConfig = new DialogServiceConfigImpl();\r\n        customCommandsConfig.setProperty(PropertyId.Conversation_DialogType, DialogServiceConfig.DialogTypes.CustomCommands);\r\n        customCommandsConfig.setProperty(PropertyId.Conversation_ApplicationId, applicationId);\r\n        customCommandsConfig.setProperty(PropertyId.SpeechServiceConnection_Key, subscription);\r\n        customCommandsConfig.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        return customCommandsConfig;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the bot framework config with the specified Speech Commands application id, authorization token and region.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\r\n     * As configuration values are copied when creating a new recognizer, the new token value will not apply to recognizers that have already been created.\r\n     * For recognizers that have been created before, you need to set authorization token of the corresponding recognizer\r\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\r\n     * @member CustomCommandsConfig.fromAuthorizationToken\r\n     * @function\r\n     * @public\r\n     * @param applicationId Speech Commands application id.\r\n     * @param authorizationToken The authorization token associated with the application.\r\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {CustomCommandsConfig} A new speech commands config.\r\n     */\r\n    public static fromAuthorizationToken(applicationId: string, authorizationToken: string, region: string): CustomCommandsConfig {\r\n        Contracts.throwIfNullOrWhitespace(applicationId, \"applicationId\");\r\n        Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const customCommandsConfig: CustomCommandsConfig = new DialogServiceConfigImpl();\r\n        customCommandsConfig.setProperty(PropertyId.Conversation_DialogType, DialogServiceConfig.DialogTypes.CustomCommands);\r\n        customCommandsConfig.setProperty(PropertyId.Conversation_ApplicationId, applicationId);\r\n        customCommandsConfig.setProperty(PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\r\n        customCommandsConfig.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        return customCommandsConfig;\r\n    }\r\n\r\n    /**\r\n     * Sets the corresponding backend application identifier.\r\n     * @member CustomCommandsConfig.prototype.Conversation_ApplicationId\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The application identifier to set.\r\n     */\r\n    public set applicationId(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n        this.setProperty(PropertyId.Conversation_ApplicationId, value);\r\n    }\r\n\r\n    /**\r\n     * Gets the corresponding backend application identifier.\r\n     * @member CustomCommandsConfig.prototype.Conversation_ApplicationId\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The application identifier to get.\r\n     */\r\n    public get applicationId(): string {\r\n        return this.getProperty(PropertyId.Conversation_ApplicationId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport {Contracts} from \"./Contracts.js\";\r\nimport {\r\n    PropertyId,\r\n    RecognitionResult\r\n} from \"./Exports.js\";\r\n\r\ninterface AssessmentResult {\r\n    NBest: DetailResult[];\r\n}\r\n\r\ninterface DetailResult {\r\n    Words: WordResult[];\r\n    PronunciationAssessment: {\r\n        AccuracyScore: number;\r\n        CompletenessScore: number;\r\n        FluencyScore: number;\r\n        PronScore: number;\r\n        ProsodyScore: number;\r\n    };\r\n    ContentAssessment: {\r\n        GrammarScore: number;\r\n        VocabularyScore: number;\r\n        TopicScore: number;\r\n    };\r\n}\r\n\r\ninterface WordResult {\r\n    Word: string;\r\n    Phonemes: {\r\n        Phoneme?: string;\r\n        PronunciationAssessment?: {\r\n            NBestPhonemes: { Phoneme: string }[];\r\n        };\r\n     }[];\r\n    PronunciationAssessment?: {\r\n        AccuracyScore: number;\r\n        ErrorType: string;\r\n    };\r\n    Syllables: { Syllable: string }[];\r\n}\r\n\r\nexport class ContentAssessmentResult {\r\n    private privPronJson: DetailResult;\r\n\r\n    /**\r\n     * @Internal\r\n     * Do not use externally.\r\n     */\r\n    public constructor(detailResult: DetailResult) {\r\n        this.privPronJson = detailResult;\r\n    }\r\n\r\n    /**\r\n     * Correctness in using grammar and variety of sentence patterns.\r\n     * Grammatical errors are jointly evaluated by lexical accuracy,\r\n     * grammatical accuracy and diversity of sentence structures.\r\n     * @member ContentAssessmentResult.prototype.grammarScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Grammar score.\r\n     */\r\n    public get grammarScore(): number {\r\n        return this.privPronJson.ContentAssessment.GrammarScore;\r\n    }\r\n\r\n    /**\r\n     * Proficiency in lexical usage. It evaluates the speaker's effective usage\r\n     * of words and their appropriateness within the given context to express\r\n     * ideas accurately, as well as level of lexical complexity.\r\n     * @member ContentAssessmentResult.prototype.vocabularyScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Vocabulary score.\r\n     */\r\n    public get vocabularyScore(): number {\r\n        return this.privPronJson.ContentAssessment.VocabularyScore;\r\n    }\r\n\r\n    /**\r\n     * Level of understanding and engagement with the topic, which provides\r\n     * insights into the speaker’s ability to express their thoughts and ideas\r\n     * effectively and the ability to engage with the topic.\r\n     * @member ContentAssessmentResult.prototype.topicScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Topic score.\r\n     */\r\n    public get topicScore(): number {\r\n        return this.privPronJson.ContentAssessment.TopicScore;\r\n    }\r\n}\r\n\r\n/**\r\n * Pronunciation assessment results.\r\n * @class PronunciationAssessmentResult\r\n * Added in version 1.15.0.\r\n */\r\nexport class PronunciationAssessmentResult {\r\n    private privPronJson: DetailResult;\r\n\r\n    private constructor(jsonString: string) {\r\n        const j = JSON.parse(jsonString) as AssessmentResult;\r\n        Contracts.throwIfNullOrUndefined(j.NBest[0], \"NBest\");\r\n        this.privPronJson = j.NBest[0];\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentResult.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {RecognitionResult} result The recognition result.\r\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\r\n     * @summary Creates an instance of the PronunciationAssessmentResult from recognition result.\r\n     */\r\n    public static fromResult(result: RecognitionResult): PronunciationAssessmentResult {\r\n        Contracts.throwIfNullOrUndefined(result, \"result\");\r\n        const json: string = result.properties.getProperty(PropertyId.SpeechServiceResponse_JsonResult);\r\n        Contracts.throwIfNullOrUndefined(json, \"json\");\r\n        return new PronunciationAssessmentResult(json);\r\n    }\r\n\r\n    /**\r\n     * Gets the detail result of pronunciation assessment.\r\n     * @member PronunciationAssessmentConfig.prototype.detailResult\r\n     * @function\r\n     * @public\r\n     * @returns {DetailResult} detail result.\r\n     */\r\n    public get detailResult(): DetailResult {\r\n        return this.privPronJson;\r\n    }\r\n\r\n    /**\r\n     * The score indicating the pronunciation accuracy of the given speech, which indicates\r\n     * how closely the phonemes match a native speaker's pronunciation.\r\n     * @member PronunciationAssessmentResult.prototype.accuracyScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Accuracy score.\r\n     */\r\n    public get accuracyScore(): number {\r\n        return this.detailResult.PronunciationAssessment?.AccuracyScore;\r\n    }\r\n\r\n    /**\r\n     * The overall score indicating the pronunciation quality of the given speech.\r\n     * This is calculated from AccuracyScore, FluencyScore and CompletenessScore with weight.\r\n     * @member PronunciationAssessmentResult.prototype.pronunciationScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Pronunciation score.\r\n     */\r\n    public get pronunciationScore(): number {\r\n        return this.detailResult.PronunciationAssessment?.PronScore;\r\n    }\r\n\r\n    /**\r\n     * The score indicating the completeness of the given speech by calculating the ratio of pronounced words towards entire input.\r\n     * @member PronunciationAssessmentResult.prototype.completenessScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Completeness score.\r\n     */\r\n    public get completenessScore(): number {\r\n        return this.detailResult.PronunciationAssessment?.CompletenessScore;\r\n    }\r\n\r\n    /**\r\n     * The score indicating the fluency of the given speech.\r\n     * @member PronunciationAssessmentResult.prototype.fluencyScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Fluency score.\r\n     */\r\n    public get fluencyScore(): number {\r\n        return this.detailResult.PronunciationAssessment?.FluencyScore;\r\n    }\r\n\r\n    /**\r\n     * The prosody score, which indicates how nature of the given speech, including stress, intonation, speaking speed and rhythm.\r\n     * @member PronunciationAssessmentResult.prototype.prosodyScore\r\n     * @function\r\n     * @public\r\n     * @returns {number} Prosody score.\r\n     */\r\n    public get prosodyScore(): number {\r\n        return this.detailResult.PronunciationAssessment?.ProsodyScore;\r\n    }\r\n\r\n    /**\r\n     * The concent assessment result.\r\n     * Only available when content assessment is enabled.\r\n     * @member PronunciationAssessmentResult.prototype.contentAssessmentResult\r\n     * @function\r\n     * @public\r\n     * @returns {ContentAssessmentResult} Content assessment result.\r\n     */\r\n    public get contentAssessmentResult(): ContentAssessmentResult {\r\n        if (this.detailResult.ContentAssessment === undefined) {\r\n            return undefined;\r\n        }\r\n        return new ContentAssessmentResult(this.detailResult);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ServiceRecognizerBase } from \"../common.speech/ServiceRecognizerBase.js\";\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport {\r\n    PronunciationAssessmentGradingSystem,\r\n    PronunciationAssessmentGranularity,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer\r\n} from \"./Exports.js\";\r\n\r\ninterface PronunciationAssessmentJSON {\r\n    referenceText: string;\r\n    gradingSystem: string;\r\n    granularity: string;\r\n    phonemeAlphabet: string;\r\n    nbestPhonemeCount: number;\r\n    dimension: string;\r\n    enableMiscue: boolean;\r\n    enableProsodyAssessment: boolean;\r\n}\r\n\r\n/**\r\n * Pronunciation assessment configuration.\r\n * @class PronunciationAssessmentConfig\r\n * Added in version 1.15.0.\r\n */\r\nexport class PronunciationAssessmentConfig {\r\n    private privProperties: PropertyCollection;\r\n    private privPhonemeAlphabet: string;\r\n    private privNBestPhonemeCount: number;\r\n    private privEnableProsodyAssessment: boolean;\r\n    private privContentAssessmentTopic: string;\r\n\r\n    /**\r\n     * PronunciationAssessmentConfig constructor.\r\n     * @constructor\r\n     * @param {string} referenceText\r\n     * @param gradingSystem\r\n     * @param granularity\r\n     * @param enableMiscue\r\n     */\r\n    public constructor(referenceText: string,\r\n                       gradingSystem: PronunciationAssessmentGradingSystem = PronunciationAssessmentGradingSystem.FivePoint,\r\n                       granularity: PronunciationAssessmentGranularity = PronunciationAssessmentGranularity.Phoneme,\r\n                       enableMiscue: boolean = false) {\r\n        Contracts.throwIfNullOrUndefined(referenceText, \"referenceText\");\r\n        this.privProperties = new PropertyCollection();\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_ReferenceText, referenceText);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_GradingSystem, PronunciationAssessmentGradingSystem[gradingSystem]);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_Granularity, PronunciationAssessmentGranularity[granularity]);\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_EnableMiscue, String(enableMiscue));\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentConfig.fromJSON\r\n     * @function\r\n     * @public\r\n     * @param {string} json The json string containing the pronunciation assessment parameters.\r\n     * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\r\n     * @summary Creates an instance of the PronunciationAssessmentConfig from json.\r\n     * This method is designed to support the pronunciation assessment parameters still in preview.\r\n     * Under normal circumstances, use the constructor instead.\r\n     */\r\n    public static fromJSON(json: string): PronunciationAssessmentConfig {\r\n        Contracts.throwIfNullOrUndefined(json, \"json\");\r\n        const config = new PronunciationAssessmentConfig(\"\");\r\n        config.privProperties = new PropertyCollection();\r\n        config.properties.setProperty(PropertyId.PronunciationAssessment_Json, json);\r\n        return config;\r\n    }\r\n\r\n    public toJSON(): string {\r\n        this.updateJson();\r\n        return this.privProperties.getProperty(PropertyId.PronunciationAssessment_Params);\r\n    }\r\n\r\n    public applyTo(recognizer: Recognizer): void {\r\n        this.updateJson();\r\n        const recoBase = recognizer.internalData as ServiceRecognizerBase;\r\n        recoBase.expectContentAssessmentResponse = !!this.privContentAssessmentTopic;\r\n        recoBase.speechContext.setPronunciationAssessmentParams(\r\n            this.properties.getProperty(PropertyId.PronunciationAssessment_Params),\r\n            this.privContentAssessmentTopic,\r\n            recoBase.isSpeakerDiarizationEnabled);\r\n    }\r\n\r\n    /**\r\n     * Gets the reference text.\r\n     * @member PronunciationAssessmentConfig.prototype.referenceText\r\n     * @function\r\n     * @public\r\n     * @returns {string} Reference text.\r\n     */\r\n    public get referenceText(): string {\r\n        return this.properties.getProperty(PropertyId.PronunciationAssessment_ReferenceText);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the reference text.\r\n     * @member PronunciationAssessmentConfig.prototype.referenceText\r\n     * @function\r\n     * @public\r\n     * @param {string} referenceText - Reference text.\r\n     */\r\n    public set referenceText(referenceText: string) {\r\n        Contracts.throwIfNullOrWhitespace(referenceText, \"referenceText\");\r\n        this.properties.setProperty(PropertyId.PronunciationAssessment_ReferenceText, referenceText);\r\n    }\r\n\r\n    /**\r\n     * Sets the phoneme alphabet.\r\n     * The valid values are \"SAPI\" (default) and \"IPA\".\r\n     * Added in version 1.20.0\r\n     * @member PronunciationAssessmentConfig.prototype.phonemeAlphabet\r\n     * @function\r\n     * @public\r\n     * @param {string} phonemeAlphabet - Phoneme alphabet.\r\n     */\r\n    public set phonemeAlphabet(phonemeAlphabet: string) {\r\n        Contracts.throwIfNullOrWhitespace(phonemeAlphabet, \"phonemeAlphabet\");\r\n        this.privPhonemeAlphabet = phonemeAlphabet;\r\n    }\r\n\r\n    /**\r\n     * Sets the boolean enableMiscue property.\r\n     * Added in version 1.26.0\r\n     * @member PronunciationAssessmentConfig.prototype.enableMiscue\r\n     * @function\r\n     * @public\r\n     * @param {boolean} enableMiscue - enable miscue.\r\n     */\r\n    public set enableMiscue(enableMiscue: boolean) {\r\n        const enableMiscueString = enableMiscue ? \"true\" : \"false\";\r\n        this.properties.setProperty(PropertyId.PronunciationAssessment_EnableMiscue, enableMiscueString);\r\n    }\r\n\r\n    /**\r\n     * Gets the boolean enableMiscue property.\r\n     * Added in version 1.26.0\r\n     * @member PronunciationAssessmentConfig.prototype.enableMiscue\r\n     * @function\r\n     * @public\r\n     * @return {boolean} enableMiscue - enable miscue.\r\n     */\r\n    public get enableMiscue(): boolean {\r\n        const enableMiscueString = this.properties.getProperty(PropertyId.PronunciationAssessment_EnableMiscue, \"false\");\r\n        return (enableMiscueString.toLowerCase() === \"true\");\r\n    }\r\n\r\n    /**\r\n     * Sets the nbest phoneme count\r\n     * Added in version 1.20.0\r\n     * @member PronunciationAssessmentConfig.prototype.nbestPhonemeCount\r\n     * @function\r\n     * @public\r\n     * @param {number} nbestPhonemeCount - NBest phoneme count.\r\n     */\r\n    public set nbestPhonemeCount(nbestPhonemeCount: number) {\r\n        this.privNBestPhonemeCount = nbestPhonemeCount;\r\n    }\r\n\r\n    /**\r\n     * Enables the prosody assessment.\r\n     * Added in version 1.34.0\r\n     * @member PronunciationAssessmentConfig.prototype.enableProsodyAssessment\r\n     * @function\r\n     * @public\r\n     * @param {boolean} enableProsodyAssessment - enable prosody assessment.\r\n     */\r\n    public set enableProsodyAssessment(enableProsodyAssessment: boolean) {\r\n        this.privEnableProsodyAssessment = enableProsodyAssessment;\r\n    }\r\n\r\n    /**\r\n     * Enables content assessment and sets the topic.\r\n     * Added in version 1.34.0\r\n     * @member PronunciationAssessmentConfig.prototype.enableContentAssessmentWithTopic\r\n     * @function\r\n     * @public\r\n     * @param {string} topic - Topic for content assessment.\r\n     */\r\n    public enableContentAssessmentWithTopic(topic: string): void {\r\n        this.privContentAssessmentTopic = topic;\r\n    }\r\n\r\n    /**\r\n     * @member PronunciationAssessmentConfig.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @return {PropertyCollection} Properties of the config.\r\n     * @summary Gets a pronunciation assessment config properties\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    private updateJson(): void {\r\n        const jsonString = this.privProperties.getProperty(PropertyId.PronunciationAssessment_Json, \"{}\");\r\n        const paramsJson: PronunciationAssessmentJSON = JSON.parse(jsonString) as PronunciationAssessmentJSON;\r\n\r\n        const referenceText = this.privProperties.getProperty(PropertyId.PronunciationAssessment_ReferenceText);\r\n        if (referenceText) {\r\n            paramsJson.referenceText = referenceText;\r\n        }\r\n\r\n        const gradingSystem = this.privProperties.getProperty(PropertyId.PronunciationAssessment_GradingSystem);\r\n        if (gradingSystem) {\r\n            paramsJson.gradingSystem = gradingSystem;\r\n        }\r\n\r\n        const granularity = this.privProperties.getProperty(PropertyId.PronunciationAssessment_Granularity);\r\n        if (granularity) {\r\n            paramsJson.granularity = granularity;\r\n        }\r\n\r\n        if (this.privPhonemeAlphabet) {\r\n            paramsJson.phonemeAlphabet = this.privPhonemeAlphabet;\r\n        }\r\n\r\n        if (this.privNBestPhonemeCount) {\r\n            paramsJson.nbestPhonemeCount = this.privNBestPhonemeCount;\r\n        }\r\n\r\n        paramsJson.enableProsodyAssessment = this.privEnableProsodyAssessment;\r\n\r\n        // always set dimension to Comprehensive\r\n        paramsJson.dimension = \"Comprehensive\";\r\n\r\n        const enableMiscueString = this.privProperties.getProperty(PropertyId.PronunciationAssessment_EnableMiscue);\r\n        if (enableMiscueString) {\r\n            paramsJson.enableMiscue = this.enableMiscue;\r\n        }\r\n\r\n        this.privProperties.setProperty(PropertyId.PronunciationAssessment_Params, JSON.stringify(paramsJson));\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ConnectionEvent,\r\n    IAudioSource,\r\n    MessageType,\r\n    TranslationStatus,\r\n} from \"../common/Exports.js\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechRecognitionResult,\r\n    TranslationRecognitionCanceledEventArgs,\r\n    TranslationRecognitionEventArgs,\r\n    TranslationRecognitionResult,\r\n    TranslationRecognizer,\r\n    Translations,\r\n    TranslationSynthesisEventArgs,\r\n    TranslationSynthesisResult,\r\n} from \"../sdk/Exports.js\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    ConversationServiceRecognizer,\r\n    EnumTranslation,\r\n    ITranslationHypothesis,\r\n    RecognitionStatus,\r\n    SimpleSpeechPhrase,\r\n    SynthesisStatus,\r\n    TranslationHypothesis,\r\n    TranslationPhrase,\r\n    TranslationSynthesisEnd,\r\n} from \"./Exports.js\";\r\nimport { IAuthentication } from \"./IAuthentication.js\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory.js\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig.js\";\r\nimport { ITranslationPhrase } from \"./ServiceMessages/TranslationPhrase.js\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal.js\";\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nexport class TranslationServiceRecognizer extends ConversationServiceRecognizer {\r\n    private privTranslationRecognizer: TranslationRecognizer;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        translationRecognizer: TranslationRecognizer) {\r\n\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, translationRecognizer);\r\n        this.privTranslationRecognizer = translationRecognizer;\r\n        this.connectionEvents.attach((connectionEvent: ConnectionEvent): void => {\r\n            if (connectionEvent.name === \"ConnectionEstablishedEvent\") {\r\n                this.privTranslationRecognizer.onConnection();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    protected async processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        let processed: boolean = await this.processSpeechMessages(connectionMessage);\r\n        if (processed) {\r\n            return true;\r\n        }\r\n\r\n        const handleTranslationPhrase = async (translatedPhrase: TranslationPhrase): Promise<void> => {\r\n            resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, translatedPhrase.asJson());\r\n            this.privRequestSession.onPhraseRecognized(translatedPhrase.Offset + translatedPhrase.Duration);\r\n\r\n            if (translatedPhrase.RecognitionStatus === RecognitionStatus.Success) {\r\n\r\n                // OK, the recognition was successful. How'd the translation do?\r\n                const result: TranslationRecognitionEventArgs = this.fireEventForResult(translatedPhrase, resultProps);\r\n                if (!!this.privTranslationRecognizer.recognized) {\r\n                    try {\r\n                        this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, result);\r\n                        /* eslint-disable no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n\r\n                // report result to promise.\r\n                if (!!this.privSuccessCallback) {\r\n                    try {\r\n                        this.privSuccessCallback(result.result);\r\n                    } catch (e) {\r\n                        if (!!this.privErrorCallback) {\r\n                            this.privErrorCallback(e as string);\r\n                        }\r\n                    }\r\n                    // Only invoke the call back once.\r\n                    // and if it's successful don't invoke the\r\n                    // error after that.\r\n                    this.privSuccessCallback = undefined;\r\n                    this.privErrorCallback = undefined;\r\n                }\r\n            } else {\r\n                const reason: ResultReason = EnumTranslation.implTranslateRecognitionResult(translatedPhrase.RecognitionStatus);\r\n\r\n                const result = new TranslationRecognitionResult(\r\n                    undefined,\r\n                    this.privRequestSession.requestId,\r\n                    reason,\r\n                    translatedPhrase.Text,\r\n                    translatedPhrase.Duration,\r\n                    translatedPhrase.Offset,\r\n                    translatedPhrase.Language,\r\n                    translatedPhrase.Confidence,\r\n                    undefined,\r\n                    translatedPhrase.asJson(),\r\n                    resultProps);\r\n\r\n                if (reason === ResultReason.Canceled) {\r\n                    const cancelReason: CancellationReason = EnumTranslation.implTranslateCancelResult(translatedPhrase.RecognitionStatus);\r\n                    const cancellationErrorCode: CancellationErrorCode = EnumTranslation.implTranslateCancelErrorCode(translatedPhrase.RecognitionStatus);\r\n\r\n                    await this.cancelRecognitionLocal(\r\n                        cancelReason,\r\n                        cancellationErrorCode,\r\n                        EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\r\n\r\n                } else {\r\n                    if (translatedPhrase.RecognitionStatus !== RecognitionStatus.EndOfDictation) {\r\n                        const ev = new TranslationRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\r\n\r\n                        if (!!this.privTranslationRecognizer.recognized) {\r\n                            try {\r\n                                this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, ev);\r\n                                /* eslint-disable no-empty */\r\n                            } catch (error) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n\r\n                        // report result to promise.\r\n                        if (!!this.privSuccessCallback) {\r\n                            try {\r\n                                this.privSuccessCallback(result);\r\n                            } catch (e) {\r\n                                if (!!this.privErrorCallback) {\r\n                                    this.privErrorCallback(e as string);\r\n                                }\r\n                            }\r\n                            // Only invoke the call back once.\r\n                            // and if it's successful don't invoke the\r\n                            // error after that.\r\n                            this.privSuccessCallback = undefined;\r\n                            this.privErrorCallback = undefined;\r\n                        }\r\n                    }\r\n                }\r\n                processed = true;\r\n            }\r\n\r\n        };\r\n\r\n        const handleTranslationHypothesis = (hypothesis: TranslationHypothesis): void => {\r\n            resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, hypothesis.asJson());\r\n\r\n            const result: TranslationRecognitionEventArgs = this.fireEventForResult(hypothesis, resultProps);\r\n            this.privRequestSession.onHypothesis(result.offset);\r\n\r\n            if (!!this.privTranslationRecognizer.recognizing) {\r\n                try {\r\n                    this.privTranslationRecognizer.recognizing(this.privTranslationRecognizer, result);\r\n                    /* eslint-disable no-empty */\r\n                } catch (error) {\r\n                    // Not going to let errors in the event handler\r\n                    // trip things up.\r\n                }\r\n            }\r\n            processed = true;\r\n        };\r\n\r\n        if (connectionMessage.messageType === MessageType.Text) {\r\n            resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        }\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"translation.hypothesis\":\r\n                handleTranslationHypothesis(TranslationHypothesis.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset));\r\n                break;\r\n\r\n            case \"translation.response\":\r\n                const phrase: { SpeechPhrase: ITranslationPhrase } = JSON.parse(connectionMessage.textBody) as { SpeechPhrase: ITranslationPhrase };\r\n                if (!!phrase.SpeechPhrase) {\r\n                    await handleTranslationPhrase(TranslationPhrase.fromTranslationResponse(phrase, this.privRequestSession.currentTurnAudioOffset));\r\n                } else {\r\n                    const hypothesis: { SpeechHypothesis: ITranslationHypothesis } = JSON.parse(connectionMessage.textBody) as { SpeechHypothesis: ITranslationHypothesis };\r\n                    if (!!hypothesis.SpeechHypothesis) {\r\n                        handleTranslationHypothesis(TranslationHypothesis.fromTranslationResponse(hypothesis, this.privRequestSession.currentTurnAudioOffset));\r\n                    }\r\n                }\r\n                break;\r\n            case \"translation.phrase\":\r\n                await handleTranslationPhrase(TranslationPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset));\r\n                break;\r\n\r\n            case \"translation.synthesis\":\r\n                this.sendSynthesisAudio(connectionMessage.binaryBody, this.privRequestSession.sessionId);\r\n                processed = true;\r\n                break;\r\n\r\n            case \"audio.end\":\r\n            case \"translation.synthesis.end\":\r\n                const synthEnd: TranslationSynthesisEnd = TranslationSynthesisEnd.fromJSON(connectionMessage.textBody);\r\n\r\n                switch (synthEnd.SynthesisStatus) {\r\n                    case SynthesisStatus.Error:\r\n                        if (!!this.privTranslationRecognizer.synthesizing) {\r\n                            const result = new TranslationSynthesisResult(ResultReason.Canceled, undefined);\r\n                            const retEvent: TranslationSynthesisEventArgs = new TranslationSynthesisEventArgs(result, this.privRequestSession.sessionId);\r\n\r\n                            try {\r\n                                this.privTranslationRecognizer.synthesizing(this.privTranslationRecognizer, retEvent);\r\n                                /* eslint-disable no-empty */\r\n                            } catch (error) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n\r\n                        if (!!this.privTranslationRecognizer.canceled) {\r\n                            // And raise a canceled event to send the rich(er) error message back.\r\n                            const canceledResult: TranslationRecognitionCanceledEventArgs = new TranslationRecognitionCanceledEventArgs(\r\n                                this.privRequestSession.sessionId,\r\n                                CancellationReason.Error,\r\n                                synthEnd.FailureReason,\r\n                                CancellationErrorCode.ServiceError,\r\n                                null);\r\n\r\n                            try {\r\n                                this.privTranslationRecognizer.canceled(this.privTranslationRecognizer, canceledResult);\r\n                                /* eslint-disable no-empty */\r\n                            } catch (error) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n                        break;\r\n                    case SynthesisStatus.Success:\r\n                        this.sendSynthesisAudio(undefined, this.privRequestSession.sessionId);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return processed;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n        if (!!this.privTranslationRecognizer.canceled) {\r\n\r\n            const cancelEvent: TranslationRecognitionCanceledEventArgs = new TranslationRecognitionCanceledEventArgs(\r\n                sessionId,\r\n                cancellationReason,\r\n                error,\r\n                errorCode,\r\n                undefined);\r\n\r\n            try {\r\n                this.privTranslationRecognizer.canceled(this.privTranslationRecognizer, cancelEvent);\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            const result: TranslationRecognitionResult = new TranslationRecognitionResult(\r\n                undefined, // Translations\r\n                requestId,\r\n                ResultReason.Canceled,\r\n                undefined, // Text\r\n                undefined, // Druation\r\n                undefined, // Offset\r\n                undefined, // Language\r\n                undefined, // LanguageDetectionConfidence\r\n                error,\r\n                undefined, // Json\r\n                properties);\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                /* eslint-disable no-empty */\r\n                this.privSuccessCallback = undefined;\r\n            } catch { }\r\n        }\r\n    }\r\n\r\n    protected handleRecognizingCallback(result: SpeechRecognitionResult, offset: number, sessionId: string): void {\r\n        try {\r\n            const ev = new TranslationRecognitionEventArgs(TranslationRecognitionResult.fromSpeechRecognitionResult(result), offset, sessionId);\r\n            this.privTranslationRecognizer.recognizing(this.privTranslationRecognizer, ev);\r\n            /* eslint-disable no-empty */\r\n        } catch (error) {\r\n            // Not going to let errors in the event handler\r\n            // trip things up.\r\n        }\r\n    }\r\n\r\n    protected handleRecognizedCallback(result: SpeechRecognitionResult, offset: number, sessionId: string): void {\r\n        try {\r\n            const ev = new TranslationRecognitionEventArgs(TranslationRecognitionResult.fromSpeechRecognitionResult(result), offset, sessionId);\r\n            this.privTranslationRecognizer.recognized(this.privTranslationRecognizer, ev);\r\n        } catch (error) {\r\n            // Not going to let errors in the event handler\r\n            // trip things up.\r\n        }\r\n    }\r\n\r\n    private fireEventForResult(serviceResult: TranslationHypothesis | TranslationPhrase, properties: PropertyCollection): TranslationRecognitionEventArgs {\r\n        let translations: Translations;\r\n\r\n        if (undefined !== serviceResult.Translation.Translations) {\r\n            translations = new Translations();\r\n            for (const translation of serviceResult.Translation.Translations) {\r\n                translations.set(translation.Language, translation.Text || translation.DisplayText);\r\n            }\r\n        }\r\n\r\n        let resultReason: ResultReason;\r\n        let confidence: string;\r\n        if (serviceResult instanceof TranslationPhrase) {\r\n            if (!!serviceResult.Translation && serviceResult.Translation.TranslationStatus === TranslationStatus.Success) {\r\n                resultReason = ResultReason.TranslatedSpeech;\r\n            } else {\r\n                resultReason = ResultReason.RecognizedSpeech;\r\n            }\r\n            confidence = serviceResult.Confidence;\r\n        } else {\r\n            resultReason = ResultReason.TranslatingSpeech;\r\n        }\r\n        const language = serviceResult.Language;\r\n\r\n        const result = new TranslationRecognitionResult(\r\n            translations,\r\n            this.privRequestSession.requestId,\r\n            resultReason,\r\n            serviceResult.Text,\r\n            serviceResult.Duration,\r\n            serviceResult.Offset,\r\n            language,\r\n            confidence,\r\n            serviceResult.Translation.FailureReason,\r\n            serviceResult.asJson(),\r\n            properties);\r\n\r\n        const ev = new TranslationRecognitionEventArgs(result, serviceResult.Offset, this.privRequestSession.sessionId);\r\n        return ev;\r\n    }\r\n\r\n    private sendSynthesisAudio(audio: ArrayBuffer, sessionId: string): void {\r\n        const reason = (undefined === audio) ? ResultReason.SynthesizingAudioCompleted : ResultReason.SynthesizingAudio;\r\n        const result = new TranslationSynthesisResult(reason, audio);\r\n        const retEvent: TranslationSynthesisEventArgs = new TranslationSynthesisEventArgs(result, sessionId);\r\n\r\n        if (!!this.privTranslationRecognizer.synthesizing) {\r\n            try {\r\n                this.privTranslationRecognizer.synthesizing(this.privTranslationRecognizer, retEvent);\r\n                /* eslint-disable no-empty */\r\n            } catch (error) {\r\n                // Not going to let errors in the event handler\r\n                // trip things up.\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { SessionEventArgs } from \"../Exports.js\";\r\n\r\nexport class ConversationExpirationEventArgs extends SessionEventArgs {\r\n    private privExpirationTime: number;\r\n\r\n    public constructor(expirationTime: number, sessionId?: string) {\r\n        super(sessionId);\r\n        this.privExpirationTime = expirationTime;\r\n    }\r\n\r\n    /** How much longer until the conversation expires (in minutes). */\r\n    public get expirationTime(): number {\r\n        return this.privExpirationTime;\r\n    }\r\n}\r\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts.js\";\r\n\r\n/**\r\n * Represents a keyword recognition model for recognizing when\r\n * the user says a keyword to initiate further speech recognition.\r\n * @class KeywordRecognitionModel\r\n */\r\nexport class KeywordRecognitionModel {\r\n    private privDisposed: boolean = false;\r\n\r\n    /**\r\n     * Create and initializes a new instance.\r\n     * @constructor\r\n     */\r\n    private constructor() {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Creates a keyword recognition model using the specified filename.\r\n     * @member KeywordRecognitionModel.fromFile\r\n     * @function\r\n     * @public\r\n     * @param {string} fileName - A string that represents file name for the keyword recognition model.\r\n     * Note, the file can point to a zip file in which case the model\r\n     * will be extracted from the zip.\r\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\r\n     */\r\n    public static fromFile(fileName: string): KeywordRecognitionModel {\r\n        Contracts.throwIfFileDoesNotExist(fileName, \"fileName\");\r\n\r\n        throw new Error(\"Not yet implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Creates a keyword recognition model using the specified filename.\r\n     * @member KeywordRecognitionModel.fromStream\r\n     * @function\r\n     * @public\r\n     * @param {string} file - A File that represents file for the keyword recognition model.\r\n     * Note, the file can point to a zip file in which case the model will be extracted from the zip.\r\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\r\n     */\r\n    public static fromStream(file: File): KeywordRecognitionModel {\r\n        Contracts.throwIfNull(file, \"file\");\r\n\r\n        throw new Error(\"Not yet implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member KeywordRecognitionModel.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        if (this.privDisposed) {\r\n            return;\r\n        }\r\n\r\n        this.privDisposed = true;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IStreamChunk, Stream } from \"./Exports.js\";\r\n\r\nexport class ChunkedArrayBufferStream extends Stream<ArrayBuffer> {\r\n    private privTargetChunkSize: number;\r\n    private privNextBufferToWrite: ArrayBuffer;\r\n    private privNextBufferStartTime: number;\r\n    private privNextBufferReadyBytes: number;\r\n\r\n    public constructor(targetChunkSize: number, streamId?: string) {\r\n        super(streamId);\r\n        this.privTargetChunkSize = Math.round(targetChunkSize);\r\n        this.privNextBufferReadyBytes = 0;\r\n    }\r\n\r\n    public writeStreamChunk(chunk: IStreamChunk<ArrayBuffer>): void {\r\n        // No pending write, and the buffer is the right size so write it.\r\n        if (chunk.isEnd ||\r\n            (0 === this.privNextBufferReadyBytes && chunk.buffer.byteLength === this.privTargetChunkSize)) {\r\n            super.writeStreamChunk(chunk);\r\n            return;\r\n        }\r\n\r\n        let bytesCopiedFromBuffer: number = 0;\r\n\r\n        while (bytesCopiedFromBuffer < chunk.buffer.byteLength) {\r\n            // Fill the next buffer.\r\n            if (undefined === this.privNextBufferToWrite) {\r\n                this.privNextBufferToWrite = new ArrayBuffer(this.privTargetChunkSize);\r\n                this.privNextBufferStartTime = chunk.timeReceived;\r\n            }\r\n\r\n            // Find out how many bytes we can copy into the read buffer.\r\n            const bytesToCopy: number = Math.min(chunk.buffer.byteLength - bytesCopiedFromBuffer, this.privTargetChunkSize - this.privNextBufferReadyBytes);\r\n            const targetView: Uint8Array = new Uint8Array(this.privNextBufferToWrite);\r\n            const sourceView: Uint8Array = new Uint8Array(chunk.buffer.slice(bytesCopiedFromBuffer, bytesToCopy + bytesCopiedFromBuffer));\r\n\r\n            targetView.set(sourceView, this.privNextBufferReadyBytes);\r\n            this.privNextBufferReadyBytes += bytesToCopy;\r\n            bytesCopiedFromBuffer += bytesToCopy;\r\n\r\n            // Are we ready to write?\r\n            if (this.privNextBufferReadyBytes === this.privTargetChunkSize) {\r\n                super.writeStreamChunk({\r\n                    buffer: this.privNextBufferToWrite,\r\n                    isEnd: false,\r\n                    timeReceived: this.privNextBufferStartTime,\r\n                });\r\n                this.privNextBufferReadyBytes = 0;\r\n                this.privNextBufferToWrite = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    public close(): void {\r\n        // Send whatever is pending, then close the base class.\r\n        if (0 !== this.privNextBufferReadyBytes && !this.isClosed) {\r\n            super.writeStreamChunk({\r\n                buffer: this.privNextBufferToWrite.slice(0, this.privNextBufferReadyBytes),\r\n                isEnd: false,\r\n                timeReceived: this.privNextBufferStartTime,\r\n            });\r\n        }\r\n\r\n        super.close();\r\n    }\r\n}\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nvar _default = md5;\nexports.default = _default;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IAudioSource } from \"../common/Exports.js\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    OutputFormat,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    ConversationTranscriptionCanceledEventArgs,\r\n    ConversationTranscriptionEventArgs,\r\n    ConversationTranscriptionResult,\r\n    ConversationTranscriber,\r\n} from \"../sdk/Exports.js\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    DetailedSpeechPhrase,\r\n    EnumTranslation,\r\n    OutputFormatPropertyName,\r\n    RecognitionStatus,\r\n    ServiceRecognizerBase,\r\n    SimpleSpeechPhrase,\r\n    SpeechHypothesis,\r\n} from \"./Exports.js\";\r\nimport { IAuthentication } from \"./IAuthentication.js\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory.js\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig.js\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal.js\";\r\nimport { PhraseDetection, SpeakerDiarization } from \"./ServiceRecognizerBase.js\";\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nexport class ConversationTranscriptionServiceRecognizer extends ServiceRecognizerBase {\r\n\r\n    private privConversationTranscriber: ConversationTranscriber;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        conversationTranscriber: ConversationTranscriber) {\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, conversationTranscriber);\r\n        this.privConversationTranscriber = conversationTranscriber;\r\n        this.setSpeakerDiarizationJson();\r\n    }\r\n\r\n    protected setSpeakerDiarizationJson(): void {\r\n        if (this.privEnableSpeakerId) {\r\n            const phraseDetection = this.privSpeechContext.getSection(\"phraseDetection\") as PhraseDetection;\r\n            phraseDetection.mode = \"Conversation\";\r\n            const speakerDiarization: SpeakerDiarization = {};\r\n            speakerDiarization.mode = \"Anonymous\";\r\n            speakerDiarization.audioSessionId = this.privDiarizationSessionId;\r\n            speakerDiarization.audioOffsetMs = 0;\r\n            speakerDiarization.diarizeIntermediates = this.privRecognizerConfig.parameters.getProperty(PropertyId.SpeechServiceResponse_DiarizeIntermediateResults, \"false\") === \"true\";\r\n            phraseDetection.speakerDiarization = speakerDiarization;\r\n            this.privSpeechContext.setSection(\"phraseDetection\", phraseDetection);\r\n        }\r\n    }\r\n\r\n    protected async processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        let result: ConversationTranscriptionResult;\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        let processed: boolean = false;\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"speech.hypothesis\":\r\n            case \"speech.fragment\":\r\n                const hypothesis: SpeechHypothesis = SpeechHypothesis.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\r\n\r\n                result = new ConversationTranscriptionResult(\r\n                    this.privRequestSession.requestId,\r\n                    ResultReason.RecognizingSpeech,\r\n                    hypothesis.Text,\r\n                    hypothesis.Duration,\r\n                    hypothesis.Offset,\r\n                    hypothesis.Language,\r\n                    hypothesis.LanguageDetectionConfidence,\r\n                    hypothesis.SpeakerId,\r\n                    undefined,\r\n                    hypothesis.asJson(),\r\n                    resultProps);\r\n\r\n                this.privRequestSession.onHypothesis(hypothesis.Offset);\r\n\r\n                const ev = new ConversationTranscriptionEventArgs(result, hypothesis.Duration, this.privRequestSession.sessionId);\r\n\r\n                if (!!this.privConversationTranscriber.transcribing) {\r\n                    try {\r\n                        this.privConversationTranscriber.transcribing(this.privConversationTranscriber, ev);\r\n                        /* eslint-disable no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.phrase\":\r\n                const simple: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\r\n                const resultReason: ResultReason = EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus);\r\n\r\n                this.privRequestSession.onPhraseRecognized(simple.Offset + simple.Duration);\r\n\r\n                if (ResultReason.Canceled === resultReason) {\r\n                    const cancelReason: CancellationReason = EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\r\n                    const cancellationErrorCode: CancellationErrorCode = EnumTranslation.implTranslateCancelErrorCode(simple.RecognitionStatus);\r\n\r\n                    await this.cancelRecognitionLocal(\r\n                        cancelReason,\r\n                        cancellationErrorCode,\r\n                        EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\r\n\r\n                } else {\r\n                    if (!(this.privRequestSession.isSpeechEnded && resultReason === ResultReason.NoMatch && simple.RecognitionStatus !== RecognitionStatus.InitialSilenceTimeout)) {\r\n                        if (this.privRecognizerConfig.parameters.getProperty(OutputFormatPropertyName) === OutputFormat[OutputFormat.Simple]) {\r\n                            result = new ConversationTranscriptionResult(\r\n                                this.privRequestSession.requestId,\r\n                                resultReason,\r\n                                simple.DisplayText,\r\n                                simple.Duration,\r\n                                simple.Offset,\r\n                                simple.Language,\r\n                                simple.LanguageDetectionConfidence,\r\n                                simple.SpeakerId,\r\n                                undefined,\r\n                                simple.asJson(),\r\n                                resultProps);\r\n                        } else {\r\n                            const detailed: DetailedSpeechPhrase = DetailedSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\r\n\r\n                            result = new ConversationTranscriptionResult(\r\n                                this.privRequestSession.requestId,\r\n                                resultReason,\r\n                                detailed.RecognitionStatus === RecognitionStatus.Success ? detailed.NBest[0].Display : undefined,\r\n                                detailed.Duration,\r\n                                detailed.Offset,\r\n                                detailed.Language,\r\n                                detailed.LanguageDetectionConfidence,\r\n                                simple.SpeakerId,\r\n                                undefined,\r\n                                detailed.asJson(),\r\n                                resultProps);\r\n                        }\r\n\r\n                        const event: ConversationTranscriptionEventArgs = new ConversationTranscriptionEventArgs(result, result.offset, this.privRequestSession.sessionId);\r\n\r\n                        if (!!this.privConversationTranscriber.transcribed) {\r\n                            try {\r\n                                this.privConversationTranscriber.transcribed(this.privConversationTranscriber, event);\r\n                                /* eslint-disable no-empty */\r\n                            } catch (error) {\r\n                                // Not going to let errors in the event handler\r\n                                // trip things up.\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return processed;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n        if (!!this.privConversationTranscriber.canceled) {\r\n            const cancelEvent: ConversationTranscriptionCanceledEventArgs = new ConversationTranscriptionCanceledEventArgs(\r\n                cancellationReason,\r\n                error,\r\n                errorCode,\r\n                undefined,\r\n                sessionId);\r\n            try {\r\n                this.privConversationTranscriber.canceled(this.privConversationTranscriber, cancelEvent);\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\nimport { RecognitionEventArgs, SpeechRecognitionResult, ConversationTranscriptionResult } from \"./Exports.js\";\r\n\r\n/**\r\n * Defines contents of speech recognizing/recognized event.\r\n * @class SpeechRecognitionEventArgs\r\n */\r\nexport class SpeechRecognitionEventArgs extends RecognitionEventArgs {\r\n    private privResult: SpeechRecognitionResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {SpeechRecognitionResult} result - The speech recognition result.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: SpeechRecognitionResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the recognition result.\r\n     * @member SpeechRecognitionEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {SpeechRecognitionResult} the recognition result.\r\n     */\r\n    public get result(): SpeechRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n\r\n/**\r\n * Defines contents of conversation transcribed/transcribing event.\r\n * @class ConversationTranscriptionEventArgs\r\n */\r\nexport class ConversationTranscriptionEventArgs extends RecognitionEventArgs {\r\n    private privResult: ConversationTranscriptionResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {ConversationTranscriptionResult} result - The conversation transcription result.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: ConversationTranscriptionResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the transcription result.\r\n     * @member ConversationTranscription1EventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {ConversationTranscriptionResult} the recognition result.\r\n     */\r\n        public get result(): ConversationTranscriptionResult {\r\n            return this.privResult;\r\n        }\r\n}\r\n\r\n/**\r\n * Defines contents of meeting transcribed/transcribing event.\r\n * @class MeetingTranscriptionEventArgs\r\n */\r\nexport class MeetingTranscriptionEventArgs extends SpeechRecognitionEventArgs {\r\n}\r\n","\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    RestConfigBase\r\n} from \"../../common.browser/RestConfigBase.js\";\r\n\r\nexport class ConversationConnectionConfig extends RestConfigBase {\r\n\r\n    private static readonly privHost: string = \"dev.microsofttranslator.com\";\r\n    private static readonly privRestPath: string = \"/capito/room\";\r\n    private static readonly privApiVersion: string = \"2.0\";\r\n    private static readonly privDefaultLanguageCode: string = \"en-US\";\r\n    private static readonly privClientAppId: string = \"FC539C22-1767-4F1F-84BC-B4D811114F15\";\r\n    private static readonly privWebSocketPath: string = \"/capito/translate\";\r\n    private static readonly privTranscriptionEventKeys: string[] = [\"iCalUid\", \"callId\", \"organizer\", \"FLAC\", \"MTUri\", \"DifferentiateGuestSpeakers\", \"audiorecording\", \"Threadid\", \"OrganizerMri\", \"OrganizerTenantId\", \"UserToken\"];\r\n\r\n    public static get host(): string {\r\n        return ConversationConnectionConfig.privHost;\r\n    }\r\n\r\n    public static get apiVersion(): string {\r\n        return ConversationConnectionConfig.privApiVersion;\r\n    }\r\n\r\n    public static get clientAppId(): string {\r\n        return ConversationConnectionConfig.privClientAppId;\r\n    }\r\n\r\n    public static get defaultLanguageCode(): string {\r\n        return ConversationConnectionConfig.privDefaultLanguageCode;\r\n    }\r\n\r\n    public static get restPath(): string {\r\n        return ConversationConnectionConfig.privRestPath;\r\n    }\r\n\r\n    public static get webSocketPath(): string {\r\n        return ConversationConnectionConfig.privWebSocketPath;\r\n    }\r\n\r\n    public static get transcriptionEventKeys(): string[] {\r\n        return ConversationConnectionConfig.privTranscriptionEventKeys;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines speech property ids.\r\n * @class PropertyId\r\n */\r\nexport enum PropertyId {\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service subscription Key. If you are using an intent recognizer, you need to\r\n     * specify the LUIS endpoint key for your particular LUIS app. Under normal circumstances, you shouldn't\r\n     * have to use this property directly.\r\n     * Instead, use [[SpeechConfig.fromSubscription]].\r\n     * @member PropertyId.SpeechServiceConnection_Key\r\n     */\r\n    SpeechServiceConnection_Key = 0,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service endpoint (url). Under normal circumstances, you shouldn't\r\n     * have to use this property directly.\r\n     * Instead, use [[SpeechConfig.fromEndpoint]].\r\n     * NOTE: This endpoint is not the same as the endpoint used to obtain an access token.\r\n     * @member PropertyId.SpeechServiceConnection_Endpoint\r\n     */\r\n    SpeechServiceConnection_Endpoint,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service region. Under normal circumstances, you shouldn't have to\r\n     * use this property directly.\r\n     * Instead, use [[SpeechConfig.fromSubscription]], [[SpeechConfig.fromEndpoint]], [[SpeechConfig.fromAuthorizationToken]].\r\n     * @member PropertyId.SpeechServiceConnection_Region\r\n     */\r\n    SpeechServiceConnection_Region,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service authorization token (aka access token). Under normal circumstances,\r\n     * you shouldn't have to use this property directly.\r\n     * Instead, use [[SpeechConfig.fromAuthorizationToken]], [[SpeechRecognizer.authorizationToken]],\r\n     * [[IntentRecognizer.authorizationToken]], [[TranslationRecognizer.authorizationToken]], [[SpeakerRecognizer.authorizationToken]].\r\n     * @member PropertyId.SpeechServiceAuthorization_Token\r\n     */\r\n    SpeechServiceAuthorization_Token,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service authorization type. Currently unused.\r\n     * @member PropertyId.SpeechServiceAuthorization_Type\r\n     */\r\n    SpeechServiceAuthorization_Type,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service endpoint id. Under normal circumstances, you shouldn't\r\n     * have to use this property directly.\r\n     * Instead, use [[SpeechConfig.endpointId]].\r\n     * NOTE: The endpoint id is available in the Speech Portal, listed under Endpoint Details.\r\n     * @member PropertyId.SpeechServiceConnection_EndpointId\r\n     */\r\n    SpeechServiceConnection_EndpointId,\r\n\r\n    /**\r\n     * The list of comma separated languages (BCP-47 format) used as target translation languages. Under normal circumstances,\r\n     * you shouldn't have to use this property directly.\r\n     * Instead use [[SpeechTranslationConfig.addTargetLanguage]],\r\n     * [[SpeechTranslationConfig.targetLanguages]], [[TranslationRecognizer.targetLanguages]].\r\n     * @member PropertyId.SpeechServiceConnection_TranslationToLanguages\r\n     */\r\n    SpeechServiceConnection_TranslationToLanguages,\r\n\r\n    /**\r\n     * The name of the Cognitive Service Text to Speech Service Voice. Under normal circumstances, you shouldn't have to use this\r\n     * property directly.\r\n     * Instead, use [[SpeechTranslationConfig.voiceName]].\r\n     * NOTE: Valid voice names can be found <a href=\"https://aka.ms/csspeech/voicenames\">here</a>.\r\n     * @member PropertyId.SpeechServiceConnection_TranslationVoice\r\n     */\r\n    SpeechServiceConnection_TranslationVoice,\r\n\r\n    /**\r\n     * Translation features.\r\n     * @member PropertyId.SpeechServiceConnection_TranslationFeatures\r\n     */\r\n    SpeechServiceConnection_TranslationFeatures,\r\n\r\n    /**\r\n     * The Language Understanding Service Region. Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Instead, use [[LanguageUnderstandingModel]].\r\n     * @member PropertyId.SpeechServiceConnection_IntentRegion\r\n     */\r\n    SpeechServiceConnection_IntentRegion,\r\n\r\n    /**\r\n     * The host name of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\r\n     * You shouldn't have to use this property directly.\r\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\r\n     * Added in version 1.4.0.\r\n     */\r\n    SpeechServiceConnection_ProxyHostName,\r\n\r\n    /**\r\n     * The port of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\r\n     * You shouldn't have to use this property directly.\r\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\r\n     * Added in version 1.4.0.\r\n     */\r\n    SpeechServiceConnection_ProxyPort,\r\n\r\n    /**\r\n     * The user name of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\r\n     * You shouldn't have to use this property directly.\r\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\r\n     * Added in version 1.4.0.\r\n     */\r\n    SpeechServiceConnection_ProxyUserName,\r\n\r\n    /**\r\n     * The password of the proxy server used to connect to the Cognitive Services Speech Service. Only relevant in Node.js environments.\r\n     * You shouldn't have to use this property directly.\r\n     * Instead use <see cref=\"SpeechConfig.SetProxy(string,int,string,string)\"/>.\r\n     * Added in version 1.4.0.\r\n     */\r\n    SpeechServiceConnection_ProxyPassword,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service recognition Mode. Can be \"INTERACTIVE\", \"CONVERSATION\", \"DICTATION\".\r\n     * This property is intended to be read-only. The SDK is using it internally.\r\n     * @member PropertyId.SpeechServiceConnection_RecoMode\r\n     */\r\n    SpeechServiceConnection_RecoMode,\r\n\r\n    /**\r\n     * The spoken language to be recognized (in BCP-47 format). Under normal circumstances, you shouldn't have to use this property\r\n     * directly.\r\n     * Instead, use [[SpeechConfig.speechRecognitionLanguage]].\r\n     * @member PropertyId.SpeechServiceConnection_RecoLanguage\r\n     */\r\n    SpeechServiceConnection_RecoLanguage,\r\n\r\n    /**\r\n     * The session id. This id is a universally unique identifier (aka UUID) representing a specific binding of an audio input stream\r\n     * and the underlying speech recognition instance to which it is bound. Under normal circumstances, you shouldn't have to use this\r\n     * property directly.\r\n     * Instead use [[SessionEventArgs.sessionId]].\r\n     * @member PropertyId.Speech_SessionId\r\n     */\r\n    Speech_SessionId,\r\n\r\n    /**\r\n     * The spoken language to be synthesized (e.g. en-US)\r\n     * @member PropertyId.SpeechServiceConnection_SynthLanguage\r\n     */\r\n    SpeechServiceConnection_SynthLanguage,\r\n\r\n    /**\r\n     * The name of the TTS voice to be used for speech synthesis\r\n     * @member PropertyId.SpeechServiceConnection_SynthVoice\r\n     */\r\n    SpeechServiceConnection_SynthVoice,\r\n\r\n    /**\r\n     * The string to specify TTS output audio format\r\n     * @member PropertyId.SpeechServiceConnection_SynthOutputFormat\r\n     */\r\n    SpeechServiceConnection_SynthOutputFormat,\r\n\r\n    /**\r\n     * The list of comma separated languages used as possible source languages\r\n     * Added in version 1.13.0\r\n     * @member PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages\r\n     */\r\n    SpeechServiceConnection_AutoDetectSourceLanguages,\r\n\r\n    /**\r\n     * The requested Cognitive Services Speech Service response output format (simple or detailed). Under normal circumstances, you shouldn't have\r\n     * to use this property directly.\r\n     * Instead use [[SpeechConfig.outputFormat]].\r\n     * @member PropertyId.SpeechServiceResponse_RequestDetailedResultTrueFalse\r\n     */\r\n    SpeechServiceResponse_RequestDetailedResultTrueFalse,\r\n\r\n    /**\r\n     * The requested Cognitive Services Speech Service response output profanity level. Currently unused.\r\n     * @member PropertyId.SpeechServiceResponse_RequestProfanityFilterTrueFalse\r\n     */\r\n    SpeechServiceResponse_RequestProfanityFilterTrueFalse,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service response output (in JSON format). This property is available on recognition result objects only.\r\n     * @member PropertyId.SpeechServiceResponse_JsonResult\r\n     */\r\n    SpeechServiceResponse_JsonResult,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service error details (in JSON format). Under normal circumstances, you shouldn't have to\r\n     * use this property directly. Instead use [[CancellationDetails.errorDetails]].\r\n     * @member PropertyId.SpeechServiceResponse_JsonErrorDetails\r\n     */\r\n    SpeechServiceResponse_JsonErrorDetails,\r\n\r\n    /**\r\n     * The cancellation reason. Currently unused.\r\n     * @member PropertyId.CancellationDetails_Reason\r\n     */\r\n    CancellationDetails_Reason,\r\n\r\n    /**\r\n     * The cancellation text. Currently unused.\r\n     * @member PropertyId.CancellationDetails_ReasonText\r\n     */\r\n    CancellationDetails_ReasonText,\r\n\r\n    /**\r\n     * The Cancellation detailed text. Currently unused.\r\n     * @member PropertyId.CancellationDetails_ReasonDetailedText\r\n     */\r\n    CancellationDetails_ReasonDetailedText,\r\n\r\n    /**\r\n     * The Language Understanding Service response output (in JSON format). Available via [[IntentRecognitionResult]]\r\n     * @member PropertyId.LanguageUnderstandingServiceResponse_JsonResult\r\n     */\r\n    LanguageUnderstandingServiceResponse_JsonResult,\r\n\r\n    /**\r\n     * The URL string built from speech configuration.\r\n     * This property is intended to be read-only. The SDK is using it internally.\r\n     * NOTE: Added in version 1.7.0.\r\n     */\r\n    SpeechServiceConnection_Url,\r\n\r\n    /**\r\n     * The initial silence timeout value (in milliseconds) used by the service.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceConnection_InitialSilenceTimeoutMs,\r\n\r\n    /**\r\n     * The end silence timeout value (in milliseconds) used by the service.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceConnection_EndSilenceTimeoutMs,\r\n\r\n    /**\r\n     * A duration of detected silence, measured in milliseconds, after which speech-to-text will determine a spoken\r\n     * phrase has ended and generate a final Recognized result. Configuring this timeout may be helpful in situations\r\n     * where spoken input is significantly faster or slower than usual and default segmentation behavior consistently\r\n     * yields results that are too long or too short. Segmentation timeout values that are inappropriately high or low\r\n     * can negatively affect speech-to-text accuracy; this property should be carefully configured and the resulting\r\n     * behavior should be thoroughly validated as intended.\r\n     *\r\n     * For more information about timeout configuration that includes discussion of default behaviors, please visit\r\n     * https://aka.ms/csspeech/timeouts.\r\n     *\r\n     * Added in version 1.21.0.\r\n     */\r\n    Speech_SegmentationSilenceTimeoutMs,\r\n\r\n    /**\r\n     * SegmentationMaximumTimeMs represents the maximum length of a spoken phrase when using the Time segmentation strategy.\r\n     * As the length of a spoken phrase approaches this value, the @member Speech_SegmentationSilenceTimeoutMs will be reduced until either\r\n     * the phrase silence timeout is reached or the phrase reaches the maximum length.\r\n     *\r\n     * Added in version 1.42.0.\r\n     */\r\n    Speech_SegmentationMaximumTimeMs,\r\n\r\n    /**\r\n     * SegmentationStrategy defines the strategy used to determine when a spoken phrase has ended and a final Recognized result should be generated.\r\n     * Allowed values are \"Default\", \"Time\", and \"Semantic\".\r\n     *\r\n     * Valid values:\r\n     * - \"Default\": Uses the default strategy and settings as determined by the Speech Service. Suitable for most situations.\r\n     * - \"Time\": Uses a time-based strategy where the amount of silence between speech determines when to generate a final result.\r\n     * - \"Semantic\": Uses an AI model to determine the end of a spoken phrase based on the phrase's content.\r\n     *\r\n     * Additional Notes:\r\n     * - When using the Time strategy, @member Speech_SegmentationSilenceTimeoutMs can be adjusted to modify the required silence duration for ending a phrase,\r\n     * and @member Speech_SegmentationMaximumTimeMs can be adjusted to set the maximum length of a spoken phrase.\r\n     * - The Semantic strategy does not have any adjustable properties.\r\n     *\r\n     * Added in version 1.42.0.\r\n     */\r\n    Speech_SegmentationStrategy,\r\n\r\n    /**\r\n     * A boolean value specifying whether audio logging is enabled in the service or not.\r\n     * Audio and content logs are stored either in Microsoft-owned storage, or in your own storage account linked\r\n     * to your Cognitive Services subscription (Bring Your Own Storage (BYOS) enabled Speech resource).\r\n     * The logs will be removed after 30 days.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceConnection_EnableAudioLogging,\r\n\r\n    /**\r\n     * The speech service connection language identifier mode.\r\n     * Can be \"AtStart\" (the default), or \"Continuous\". See Language\r\n     * Identification document https://aka.ms/speech/lid?pivots=programming-language-javascript\r\n     * for more details.\r\n     * Added in 1.25.0\r\n     **/\r\n    SpeechServiceConnection_LanguageIdMode,\r\n\r\n    /**\r\n     * A string value representing the desired endpoint version to target for Speech Recognition.\r\n     * Added in version 1.21.0\r\n     */\r\n    SpeechServiceConnection_RecognitionEndpointVersion,\r\n\r\n    /**\r\n    /**\r\n     * A string value the current speaker recognition scenario/mode (TextIndependentIdentification, etc.).\r\n     * Added in version 1.23.0\r\n     */\r\n    SpeechServiceConnection_SpeakerIdMode,\r\n\r\n    /**\r\n     * The requested Cognitive Services Speech Service response output profanity setting.\r\n     * Allowed values are \"masked\", \"removed\", and \"raw\".\r\n     * Added in version 1.7.0.\r\n     */\r\n    SpeechServiceResponse_ProfanityOption,\r\n\r\n    /**\r\n     * A string value specifying which post processing option should be used by service.\r\n     * Allowed values are \"TrueText\".\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceResponse_PostProcessingOption,\r\n\r\n    /**\r\n     * A boolean value specifying whether to include word-level timestamps in the response result.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceResponse_RequestWordLevelTimestamps,\r\n\r\n    /**\r\n     * The number of times a word has to be in partial results to be returned.\r\n     * Added in version 1.7.0\r\n     */\r\n    SpeechServiceResponse_StablePartialResultThreshold,\r\n\r\n    /**\r\n     * A string value specifying the output format option in the response result. Internal use only.\r\n     * Added in version 1.7.0.\r\n     */\r\n    SpeechServiceResponse_OutputFormatOption,\r\n\r\n    /**\r\n     * A boolean value to request for stabilizing translation partial results by omitting words in the end.\r\n     * Added in version 1.7.0.\r\n     */\r\n    SpeechServiceResponse_TranslationRequestStablePartialResult,\r\n\r\n    /**\r\n     * A boolean value specifying whether to request WordBoundary events.\r\n     * @member PropertyId.SpeechServiceResponse_RequestWordBoundary\r\n     * Added in version 1.21.0.\r\n     */\r\n    SpeechServiceResponse_RequestWordBoundary,\r\n\r\n    /**\r\n     * A boolean value specifying whether to request punctuation boundary in WordBoundary Events. Default is true.\r\n     * @member PropertyId.SpeechServiceResponse_RequestPunctuationBoundary\r\n     * Added in version 1.21.0.\r\n     */\r\n    SpeechServiceResponse_RequestPunctuationBoundary,\r\n\r\n    /**\r\n     * A boolean value specifying whether to request sentence boundary in WordBoundary Events. Default is false.\r\n     * @member PropertyId.SpeechServiceResponse_RequestSentenceBoundary\r\n     * Added in version 1.21.0.\r\n     */\r\n    SpeechServiceResponse_RequestSentenceBoundary,\r\n\r\n    /**\r\n     * Determines if intermediate results contain speaker identification.\r\n     * Allowed values are \"true\" or \"false\". If set to \"true\", the intermediate results will contain speaker identification.\r\n     * The default value if unset or set to an invalid value is \"false\".\r\n     * This is currently only supported for scenarios using the ConversationTranscriber\".\r\n     * @member PropertyId.SpeechServiceResponse_DiarizeIntermediateResults\r\n     * Adding in version 1.41.\r\n     */\r\n    SpeechServiceResponse_DiarizeIntermediateResults,\r\n\r\n    /**\r\n     * Identifier used to connect to the backend service.\r\n     * @member PropertyId.Conversation_ApplicationId\r\n     */\r\n    Conversation_ApplicationId,\r\n\r\n    /**\r\n     * Type of dialog backend to connect to.\r\n     * @member PropertyId.Conversation_DialogType\r\n     */\r\n    Conversation_DialogType,\r\n\r\n    /**\r\n     * Silence timeout for listening\r\n     * @member PropertyId.Conversation_Initial_Silence_Timeout\r\n     */\r\n    Conversation_Initial_Silence_Timeout,\r\n\r\n    /**\r\n     * From Id to add to speech recognition activities.\r\n     * @member PropertyId.Conversation_From_Id\r\n     */\r\n    Conversation_From_Id,\r\n\r\n    /**\r\n     * ConversationId for the session.\r\n     * @member PropertyId.Conversation_Conversation_Id\r\n     */\r\n    Conversation_Conversation_Id,\r\n\r\n    /**\r\n     * Comma separated list of custom voice deployment ids.\r\n     * @member PropertyId.Conversation_Custom_Voice_Deployment_Ids\r\n     */\r\n    Conversation_Custom_Voice_Deployment_Ids,\r\n\r\n    /**\r\n     * Speech activity template, stamp properties from the template on the activity generated by the service for speech.\r\n     * @member PropertyId.Conversation_Speech_Activity_Template\r\n     * Added in version 1.10.0.\r\n     */\r\n    Conversation_Speech_Activity_Template,\r\n\r\n    /**\r\n     * Enables or disables the receipt of turn status messages as obtained on the turnStatusReceived event.\r\n     * @member PropertyId.Conversation_Request_Bot_Status_Messages\r\n     * Added in version 1.15.0.\r\n     */\r\n    Conversation_Request_Bot_Status_Messages,\r\n\r\n    /**\r\n     * Specifies the connection ID to be provided in the Agent configuration message, e.g. a Direct Line token for\r\n     * channel authentication.\r\n     * Added in version 1.15.1.\r\n     */\r\n    Conversation_Agent_Connection_Id,\r\n\r\n    /**\r\n     * The Cognitive Services Speech Service host (url). Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Instead, use [[SpeechConfig.fromHost]].\r\n     */\r\n    SpeechServiceConnection_Host,\r\n\r\n    /**\r\n     * Set the host for service calls to the Conversation Translator REST management and websocket calls.\r\n     */\r\n    ConversationTranslator_Host,\r\n\r\n    /**\r\n     * Optionally set the the host's display name.\r\n     * Used when joining a conversation.\r\n     */\r\n    ConversationTranslator_Name,\r\n\r\n    /**\r\n     * Optionally set a value for the X-CorrelationId request header.\r\n     * Used for troubleshooting errors in the server logs. It should be a valid guid.\r\n     */\r\n    ConversationTranslator_CorrelationId,\r\n\r\n    /**\r\n     * Set the conversation token to be sent to the speech service. This enables the\r\n     * service to service call from the speech service to the Conversation Translator service for relaying\r\n     * recognitions. For internal use.\r\n     */\r\n    ConversationTranslator_Token,\r\n\r\n    /**\r\n     * The reference text of the audio for pronunciation evaluation.\r\n     * For this and the following pronunciation assessment parameters, see\r\n     * https://docs.microsoft.com/azure/cognitive-services/speech-service/rest-speech-to-text#pronunciation-assessment-parameters for details.\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_ReferenceText,\r\n\r\n    /**\r\n     * The point system for pronunciation score calibration (FivePoint or HundredMark).\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_GradingSystem,\r\n\r\n    /**\r\n     * The pronunciation evaluation granularity (Phoneme, Word, or FullText).\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_Granularity,\r\n\r\n    /**\r\n     * Defines if enable miscue calculation.\r\n     * With this enabled, the pronounced words will be compared to the reference text,\r\n     * and will be marked with omission/insertion based on the comparison. The default setting is False.\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_EnableMiscue,\r\n\r\n    /**\r\n     * The json string of pronunciation assessment parameters\r\n     * Under normal circumstances, you shouldn't have to use this property directly.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_Json,\r\n\r\n    /**\r\n     * Pronunciation assessment parameters.\r\n     * This property is intended to be read-only. The SDK is using it internally.\r\n     * Added in version 1.15.0\r\n     */\r\n    PronunciationAssessment_Params,\r\n\r\n    /**\r\n     * Version of Speaker Recognition API to use.\r\n     * Added in version 1.18.0\r\n     */\r\n    SpeakerRecognition_Api_Version,\r\n\r\n    /**\r\n     * Specifies whether to allow load of data URL for web worker\r\n     * Allowed values are \"off\" and \"on\". Default is \"on\".\r\n     * Added in version 1.32.0\r\n     */\r\n    WebWorkerLoadType,\r\n\r\n    /**\r\n     * Talking avatar service WebRTC session description protocol.\r\n     * This property is intended to be read-only. The SDK is using it internally.\r\n     * Added in version 1.33.0\r\n     */\r\n    TalkingAvatarService_WebRTC_SDP,\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport * as fs from \"fs\";\r\nimport { LogLevel } from \"../sdk/LogLevel.js\";\r\nimport { IEventListener, PlatformEvent } from \"../common/Exports.js\";\r\nimport { Contracts } from \"../sdk/Contracts.js\";\r\n\r\nexport class ConsoleLoggingListener implements IEventListener<PlatformEvent> {\r\n    private privLogLevelFilter: LogLevel;\r\n    private privLogPath: fs.PathLike = undefined;\r\n    private privEnableConsoleOutput: boolean = true;\r\n\r\n    public logCallback: (s: string) => void;\r\n\r\n    public constructor(logLevelFilter: LogLevel = LogLevel.None) { // Console output disabled by default\r\n        this.privLogLevelFilter = logLevelFilter;\r\n    }\r\n\r\n    public set logPath(path: fs.PathLike) {\r\n        Contracts.throwIfNullOrUndefined(fs.openSync, \"\\nFile System access not available\");\r\n        this.privLogPath = path;\r\n    }\r\n\r\n    public set enableConsoleOutput(enableOutput: boolean) {\r\n        this.privEnableConsoleOutput = enableOutput;\r\n    }\r\n\r\n    public onEvent(event: PlatformEvent): void {\r\n        if (event.eventType >= this.privLogLevelFilter) {\r\n            const log = this.toString(event);\r\n            if (!!this.logCallback) {\r\n                this.logCallback(log);\r\n            }\r\n            if (!!this.privLogPath) {\r\n                fs.writeFileSync(this.privLogPath, log + \"\\n\", { flag: \"a+\" });\r\n            }\r\n\r\n            if (this.privEnableConsoleOutput) {\r\n                switch (event.eventType) {\r\n                    case LogLevel.Debug:\r\n                        // eslint-disable-next-line no-console\r\n                        console.debug(log);\r\n                        break;\r\n                    case LogLevel.Info:\r\n                        // eslint-disable-next-line no-console\r\n                        console.info(log);\r\n                        break;\r\n                    case LogLevel.Warning:\r\n                        // eslint-disable-next-line no-console\r\n                        console.warn(log);\r\n                        break;\r\n                    case LogLevel.Error:\r\n                        // eslint-disable-next-line no-console\r\n                        console.error(log);\r\n                        break;\r\n                    default:\r\n                        // eslint-disable-next-line no-console\r\n                        console.log(log);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private toString(event: PlatformEvent): string {\r\n        const logFragments = [\r\n            `${event.eventTime}`,\r\n            `${event.name}`,\r\n        ];\r\n\r\n        const e: any = event as any;\r\n        for (const prop in e) {\r\n            if (prop && event.hasOwnProperty(prop) &&\r\n                prop !== \"eventTime\" && prop !== \"eventType\" &&\r\n                prop !== \"eventId\" && prop !== \"name\" &&\r\n                prop !== \"constructor\") {\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n                const value = e[prop];\r\n                let valueToLog = \"<NULL>\";\r\n                if (value !== undefined && value !== null) {\r\n                    if (typeof (value) === \"number\" || typeof (value) === \"string\") {\r\n                        valueToLog = value.toString();\r\n                    } else {\r\n                        valueToLog = JSON.stringify(value);\r\n                    }\r\n                }\r\n\r\n                logFragments.push(`${prop}: ${valueToLog}`);\r\n            }\r\n\r\n        }\r\n\r\n        return logFragments.join(\" | \");\r\n    }\r\n}\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    createNoDashGuid,\r\n    Deferred,\r\n    Events,\r\n    IAudioDestination\r\n} from \"../common/Exports.js\";\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat.js\";\r\nimport { PullAudioOutputStreamImpl } from \"../sdk/Audio/AudioOutputStream.js\";\r\nimport {\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechSynthesisResult,\r\n} from \"../sdk/Exports.js\";\r\nimport { ISynthesisMetadata, MetadataType } from \"./ServiceMessages/SynthesisAudioMetadata.js\";\r\nimport {\r\n    ConnectingToSynthesisServiceEvent,\r\n    SpeechSynthesisEvent,\r\n    SynthesisStartedEvent,\r\n    SynthesisTriggeredEvent,\r\n} from \"./SynthesisEvents.js\";\r\n\r\nexport interface ISynthesisResponseContext {\r\n    serviceTag: string;\r\n}\r\n\r\nexport interface ISynthesisResponseAudio {\r\n    type: string;\r\n    streamId: string;\r\n}\r\n\r\nexport interface ISynthesisResponse {\r\n    context: ISynthesisResponseContext;\r\n    audio: ISynthesisResponseAudio;\r\n    webrtc: {\r\n        connectionString: string;\r\n    };\r\n}\r\n\r\nexport class SynthesisTurn {\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get streamId(): string {\r\n        return this.privStreamId;\r\n    }\r\n\r\n    public set streamId(value: string) {\r\n        this.privStreamId = value;\r\n    }\r\n\r\n    public get audioOutputFormat(): AudioOutputFormatImpl {\r\n        return this.privAudioOutputFormat;\r\n    }\r\n\r\n    public set audioOutputFormat(format: AudioOutputFormatImpl) {\r\n        this.privAudioOutputFormat = format;\r\n    }\r\n\r\n    public get turnCompletionPromise(): Promise<void> {\r\n        return this.privTurnDeferral.promise;\r\n    }\r\n\r\n    public get isSynthesisEnded(): boolean {\r\n        return this.privIsSynthesisEnded;\r\n    }\r\n\r\n    public get isSynthesizing(): boolean {\r\n        return this.privIsSynthesizing;\r\n    }\r\n\r\n    public get currentTextOffset(): number {\r\n        return this.privTextOffset;\r\n    }\r\n\r\n    public get currentSentenceOffset(): number {\r\n        return this.privSentenceOffset;\r\n    }\r\n\r\n    // The number of bytes received for current turn\r\n    public get bytesReceived(): number {\r\n        return this.privBytesReceived;\r\n    }\r\n\r\n    public get audioDuration(): number {\r\n        return this.privAudioDuration;\r\n    }\r\n\r\n    public get extraProperties(): PropertyCollection {\r\n        if (!!this.privWebRTCSDP) {\r\n            const properties = new PropertyCollection();\r\n            properties.setProperty(PropertyId.TalkingAvatarService_WebRTC_SDP, this.privWebRTCSDP);\r\n            return properties;\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    private privIsDisposed: boolean = false;\r\n    private privAuthFetchEventId: string;\r\n    private privIsSynthesizing: boolean = false;\r\n    private privIsSynthesisEnded: boolean = false;\r\n    private privBytesReceived: number = 0;\r\n    private privRequestId: string;\r\n    private privStreamId: string;\r\n    private privTurnDeferral: Deferred<void>;\r\n    private privInTurn: boolean = false;\r\n    private privAudioOutputFormat: AudioOutputFormatImpl;\r\n    private privAudioOutputStream: PullAudioOutputStreamImpl;\r\n    private privReceivedAudio: ArrayBuffer;\r\n    private privReceivedAudioWithHeader: ArrayBuffer;\r\n    private privTextOffset: number = 0;\r\n    private privNextSearchTextIndex: number = 0;\r\n    private privSentenceOffset: number = 0;\r\n    private privNextSearchSentenceIndex: number = 0;\r\n    private privPartialVisemeAnimation: string;\r\n    private privRawText: string;\r\n    private privIsSSML: boolean;\r\n    private privTurnAudioDestination: IAudioDestination;\r\n    private privAudioDuration: number;\r\n    private privWebRTCSDP: string;\r\n\r\n    public constructor() {\r\n        this.privRequestId = createNoDashGuid();\r\n        this.privTurnDeferral = new Deferred<void>();\r\n\r\n        // We're not in a turn, so resolve.\r\n        this.privTurnDeferral.resolve();\r\n    }\r\n\r\n    public async getAllReceivedAudio(): Promise<ArrayBuffer> {\r\n        if (!!this.privReceivedAudio) {\r\n            return Promise.resolve(this.privReceivedAudio);\r\n        }\r\n        if (!this.privIsSynthesisEnded) {\r\n            return null;\r\n        }\r\n        await this.readAllAudioFromStream();\r\n        return Promise.resolve(this.privReceivedAudio);\r\n    }\r\n\r\n    public async getAllReceivedAudioWithHeader(): Promise<ArrayBuffer> {\r\n        if (!!this.privReceivedAudioWithHeader) {\r\n            return this.privReceivedAudioWithHeader;\r\n        }\r\n        if (!this.privIsSynthesisEnded) {\r\n            return null;\r\n        }\r\n        if (this.audioOutputFormat.hasHeader) {\r\n            const audio: ArrayBuffer = await this.getAllReceivedAudio();\r\n            this.privReceivedAudioWithHeader = this.audioOutputFormat.addHeader(audio);\r\n            return this.privReceivedAudioWithHeader;\r\n        } else {\r\n            return this.getAllReceivedAudio();\r\n        }\r\n    }\r\n\r\n    public startNewSynthesis(requestId: string, rawText: string, isSSML: boolean, audioDestination?: IAudioDestination): void {\r\n        this.privIsSynthesisEnded = false;\r\n        this.privIsSynthesizing = true;\r\n        this.privRequestId = requestId;\r\n        this.privRawText = rawText;\r\n        this.privIsSSML = isSSML;\r\n        this.privAudioOutputStream = new PullAudioOutputStreamImpl();\r\n        this.privAudioOutputStream.format = this.privAudioOutputFormat;\r\n        this.privReceivedAudio = null;\r\n        this.privReceivedAudioWithHeader = null;\r\n        this.privBytesReceived = 0;\r\n        this.privTextOffset = 0;\r\n        this.privNextSearchTextIndex = 0;\r\n        this.privSentenceOffset = 0;\r\n        this.privNextSearchSentenceIndex = 0;\r\n        this.privPartialVisemeAnimation = \"\";\r\n        this.privWebRTCSDP = \"\";\r\n        if (audioDestination !== undefined) {\r\n            this.privTurnAudioDestination = audioDestination;\r\n            this.privTurnAudioDestination.format = this.privAudioOutputFormat;\r\n        }\r\n        this.onEvent(new SynthesisTriggeredEvent(this.requestId, undefined, audioDestination === undefined ? undefined : audioDestination.id()));\r\n    }\r\n\r\n    public onPreConnectionStart(authFetchEventId: string): void {\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n        this.onEvent(new ConnectingToSynthesisServiceEvent(this.privRequestId, this.privAuthFetchEventId));\r\n    }\r\n\r\n    public onAuthCompleted(isError: boolean): void {\r\n        if (isError) {\r\n            this.onComplete();\r\n        }\r\n    }\r\n\r\n    public onConnectionEstablishCompleted(statusCode: number): void {\r\n        if (statusCode === 200) {\r\n            this.onEvent(new SynthesisStartedEvent(this.requestId, this.privAuthFetchEventId));\r\n            this.privBytesReceived = 0;\r\n            return;\r\n        } else if (statusCode === 403) {\r\n            this.onComplete();\r\n        }\r\n    }\r\n\r\n    public onServiceResponseMessage(responseJson: string): void {\r\n        const response: ISynthesisResponse = JSON.parse(responseJson) as ISynthesisResponse;\r\n        this.streamId = response.audio.streamId;\r\n    }\r\n\r\n    public onServiceTurnEndResponse(): void {\r\n        this.privInTurn = false;\r\n        this.privTurnDeferral.resolve();\r\n        this.onComplete();\r\n    }\r\n\r\n    public onServiceTurnStartResponse(responseJson: string): void {\r\n        if (!!this.privTurnDeferral && !!this.privInTurn) {\r\n            // What? How are we starting a turn with another not done?\r\n            this.privTurnDeferral.reject(\"Another turn started before current completed.\");\r\n            // Avoid UnhandledPromiseRejection if privTurnDeferral is not being awaited\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            this.privTurnDeferral.promise.then().catch((): void => { });\r\n        }\r\n        this.privInTurn = true;\r\n        this.privTurnDeferral = new Deferred<void>();\r\n        const response: ISynthesisResponse = JSON.parse(responseJson) as ISynthesisResponse;\r\n        if (!!response.webrtc) {\r\n            this.privWebRTCSDP = response.webrtc.connectionString;\r\n        }\r\n    }\r\n\r\n    public onAudioChunkReceived(data: ArrayBuffer): void {\r\n        if (this.isSynthesizing) {\r\n            this.privAudioOutputStream.write(data);\r\n            this.privBytesReceived += data.byteLength;\r\n            if (this.privTurnAudioDestination !== undefined) {\r\n                this.privTurnAudioDestination.write(data);\r\n            }\r\n        }\r\n    }\r\n\r\n    public onTextBoundaryEvent(metadata: ISynthesisMetadata): void {\r\n        this.updateTextOffset(metadata.Data.text.Text, metadata.Type);\r\n    }\r\n\r\n    public onVisemeMetadataReceived(metadata: ISynthesisMetadata): void {\r\n        if (metadata.Data.AnimationChunk !== undefined) {\r\n            this.privPartialVisemeAnimation += metadata.Data.AnimationChunk;\r\n        }\r\n    }\r\n\r\n    public onSessionEnd(metadata: ISynthesisMetadata): void {\r\n        this.privAudioDuration = metadata.Data.Offset;\r\n    }\r\n\r\n    public async constructSynthesisResult(): Promise<SpeechSynthesisResult> {\r\n        const audioBuffer: ArrayBuffer = await this.getAllReceivedAudioWithHeader();\r\n        return new SpeechSynthesisResult(\r\n            this.requestId,\r\n            ResultReason.SynthesizingAudioCompleted,\r\n            audioBuffer,\r\n            undefined,\r\n            this.extraProperties,\r\n            this.audioDuration\r\n        );\r\n    }\r\n\r\n    public dispose(): void {\r\n        if (!this.privIsDisposed) {\r\n            // we should have completed by now. If we did not its an unknown error.\r\n            this.privIsDisposed = true;\r\n        }\r\n    }\r\n\r\n    public onStopSynthesizing(): void {\r\n        this.onComplete();\r\n    }\r\n\r\n    /**\r\n     * Gets the viseme animation string (merged from animation chunk), and clears the internal\r\n     * partial animation.\r\n     */\r\n    public getAndClearVisemeAnimation(): string {\r\n        const animation: string = this.privPartialVisemeAnimation;\r\n        this.privPartialVisemeAnimation = \"\";\r\n        return animation;\r\n    }\r\n\r\n    protected onEvent(event: SpeechSynthesisEvent): void {\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Check if the text is an XML(SSML) tag\r\n     * @param text\r\n     * @private\r\n     */\r\n    private static isXmlTag(text: string): boolean {\r\n        return text.length >= 2 && text[0] === \"<\" && text[text.length - 1] === \">\";\r\n    }\r\n\r\n    private updateTextOffset(text: string, type: MetadataType): void {\r\n        if (type === MetadataType.WordBoundary) {\r\n            this.privTextOffset = this.privRawText.indexOf(text, this.privNextSearchTextIndex);\r\n            if (this.privTextOffset >= 0) {\r\n                this.privNextSearchTextIndex = this.privTextOffset + text.length;\r\n                if (this.privIsSSML) {\r\n                    if (this.withinXmlTag(this.privTextOffset) && !SynthesisTurn.isXmlTag(text)) {\r\n                        this.updateTextOffset(text, type);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            this.privSentenceOffset = this.privRawText.indexOf(text, this.privNextSearchSentenceIndex);\r\n            if (this.privSentenceOffset >= 0) {\r\n                this.privNextSearchSentenceIndex = this.privSentenceOffset + text.length;\r\n                if (this.privIsSSML) {\r\n                    if (this.withinXmlTag(this.privSentenceOffset) && !SynthesisTurn.isXmlTag(text)) {\r\n                        this.updateTextOffset(text, type);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private onComplete(): void {\r\n        if (this.privIsSynthesizing) {\r\n            this.privIsSynthesizing = false;\r\n            this.privIsSynthesisEnded = true;\r\n            this.privAudioOutputStream.close();\r\n            this.privInTurn = false;\r\n            if (this.privTurnAudioDestination !== undefined) {\r\n                this.privTurnAudioDestination.close();\r\n                this.privTurnAudioDestination = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    private async readAllAudioFromStream(): Promise<void> {\r\n        if (this.privIsSynthesisEnded) {\r\n            this.privReceivedAudio = new ArrayBuffer(this.bytesReceived);\r\n            try {\r\n                await this.privAudioOutputStream.read(this.privReceivedAudio);\r\n            } catch (e) {\r\n                this.privReceivedAudio = new ArrayBuffer(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if current idx is in XML(SSML) tag\r\n     * @param idx\r\n     * @private\r\n     */\r\n    private withinXmlTag(idx: number): boolean {\r\n        return this.privRawText.indexOf(\"<\", idx + 1) > this.privRawText.indexOf(\">\", idx + 1);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"../../sdk/Contracts.js\";\r\nimport { IPrimaryLanguage, ITranslations, RecognitionStatus } from \"../Exports.js\";\r\nimport { TranslationStatus } from \"../TranslationStatus.js\";\r\n\r\n// translation.phrase\r\nexport interface ITranslationPhrase {\r\n    RecognitionStatus: RecognitionStatus;\r\n    Offset: number;\r\n    Duration: number;\r\n    Translation?: ITranslations;\r\n    Text?: string;\r\n    DisplayText?: string;\r\n    PrimaryLanguage?: IPrimaryLanguage;\r\n}\r\n\r\nexport class TranslationPhrase implements ITranslationPhrase {\r\n    private privTranslationPhrase: ITranslationPhrase;\r\n\r\n    private constructor(phrase: ITranslationPhrase, baseOffset: number) {\r\n        this.privTranslationPhrase = phrase;\r\n        this.privTranslationPhrase.Offset += baseOffset;\r\n        this.privTranslationPhrase.RecognitionStatus = this.mapRecognitionStatus(this.privTranslationPhrase.RecognitionStatus);\r\n        if (this.privTranslationPhrase.Translation !== undefined) {\r\n            this.privTranslationPhrase.Translation.TranslationStatus = this.mapTranslationStatus(this.privTranslationPhrase.Translation.TranslationStatus);\r\n        }\r\n    }\r\n\r\n    public static fromJSON(json: string, baseOffset: number): TranslationPhrase {\r\n        return new TranslationPhrase(JSON.parse(json) as ITranslationPhrase, baseOffset);\r\n    }\r\n\r\n    public static fromTranslationResponse(translationResponse: { SpeechPhrase: ITranslationPhrase }, baseOffset: number): TranslationPhrase {\r\n        Contracts.throwIfNullOrUndefined(translationResponse, \"translationResponse\");\r\n        const phrase: ITranslationPhrase = translationResponse.SpeechPhrase;\r\n        translationResponse.SpeechPhrase = undefined;\r\n        phrase.Translation = (translationResponse as unknown as ITranslations);\r\n        phrase.Text = phrase.DisplayText;\r\n        return new TranslationPhrase(phrase, baseOffset);\r\n    }\r\n\r\n    public get RecognitionStatus(): RecognitionStatus {\r\n        return this.privTranslationPhrase.RecognitionStatus;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privTranslationPhrase.Offset;\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privTranslationPhrase.Duration;\r\n    }\r\n\r\n    public get Text(): string | undefined {\r\n        return this.privTranslationPhrase.Text;\r\n    }\r\n\r\n    public get Language(): string | undefined {\r\n        return this.privTranslationPhrase.PrimaryLanguage?.Language;\r\n    }\r\n\r\n    public get Confidence(): string | undefined {\r\n        return this.privTranslationPhrase.PrimaryLanguage?.Confidence;\r\n    }\r\n\r\n    public get Translation(): ITranslations | undefined {\r\n        return this.privTranslationPhrase.Translation;\r\n    }\r\n\r\n    public asJson(): string {\r\n        const jsonObj = { ...this.privTranslationPhrase };\r\n\r\n        // Convert the enum values to their string representations for serialization\r\n        const serializedObj: any = {\r\n            ...jsonObj,\r\n            RecognitionStatus: RecognitionStatus[jsonObj.RecognitionStatus]\r\n        };\r\n\r\n        if (jsonObj.Translation) {\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n            serializedObj.Translation = {\r\n                ...jsonObj.Translation,\r\n                TranslationStatus: TranslationStatus[jsonObj.Translation.TranslationStatus]\r\n            };\r\n        }\r\n\r\n        return JSON.stringify(serializedObj);\r\n    }\r\n\r\n    private mapRecognitionStatus(status: any): RecognitionStatus {\r\n        if (typeof status === \"string\") {\r\n            return RecognitionStatus[status as keyof typeof RecognitionStatus];\r\n        } else if (typeof status === \"number\") {\r\n            return status;\r\n        }\r\n    }\r\n\r\n    private mapTranslationStatus(status: any): TranslationStatus {\r\n        if (typeof status === \"string\") {\r\n            return TranslationStatus[status as keyof typeof TranslationStatus];\r\n        } else if (typeof status === \"number\") {\r\n            return status;\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { CancellationEventArgsBase } from \"../CancellationEventArgsBase.js\";\r\n\r\nexport class MeetingTranscriptionCanceledEventArgs extends CancellationEventArgsBase {\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { RecognitionEventArgs } from \"../Exports.js\";\r\nimport { ConversationTranslationResult } from \"./Exports.js\";\r\n\r\nexport class ConversationTranslationEventArgs extends RecognitionEventArgs {\r\n    private privResult: ConversationTranslationResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {ConversationTranslationResult} result - The translation recognition result.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: ConversationTranslationResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the recognition result.\r\n     * @returns {ConversationTranslationResult} the recognition result.\r\n     */\r\n    public get result(): ConversationTranslationResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport { SpeakerRecognitionModel } from \"./SpeakerRecognitionModel.js\";\r\nimport {\r\n    VoiceProfile,\r\n    VoiceProfileType,\r\n} from \"./Exports.js\";\r\n\r\n/**\r\n * Defines SpeakerVerificationModel class for Speaker Recognition\r\n * Model contains a profile against which to verify a speaker\r\n * @class SpeakerVerificationModel\r\n */\r\nexport class SpeakerVerificationModel implements SpeakerRecognitionModel {\r\n    private privVoiceProfile: VoiceProfile;\r\n\r\n    private constructor(profile: VoiceProfile) {\r\n        Contracts.throwIfNullOrUndefined(profile, \"VoiceProfile\");\r\n        if (profile.profileType === VoiceProfileType.TextIndependentIdentification) {\r\n            throw new Error(\"Verification model cannot be created from Identification profile\");\r\n        }\r\n        this.privVoiceProfile = profile;\r\n    }\r\n\r\n    public static fromProfile(profile: VoiceProfile): SpeakerVerificationModel {\r\n        return new SpeakerVerificationModel(profile);\r\n    }\r\n\r\n    public get voiceProfile(): VoiceProfile {\r\n        return this.privVoiceProfile;\r\n    }\r\n\r\n    public get profileIds(): string[] {\r\n        return [ this.voiceProfile.profileId ];\r\n    }\r\n\r\n    public get scenario(): string {\r\n        if (this.voiceProfile.profileType === VoiceProfileType.TextDependentVerification) {\r\n            return \"TextDependentVerification\";\r\n        } else {\r\n            return \"TextIndependentVerification\";\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    AutoDetectSourceLanguagesOpenRangeOptionName,\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig,\r\n    TranslationConnectionFactory,\r\n    TranslationServiceRecognizer\r\n} from \"../common.speech/Exports.js\";\r\nimport { marshalPromiseToCallbacks } from \"../common/Exports.js\";\r\nimport { AudioConfigImpl } from \"./Audio/AudioConfig.js\";\r\nimport { Connection } from \"./Connection.js\";\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport {\r\n    AudioConfig,\r\n    AutoDetectSourceLanguageConfig,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    TranslationRecognitionCanceledEventArgs,\r\n    TranslationRecognitionEventArgs,\r\n    TranslationRecognitionResult,\r\n    TranslationSynthesisEventArgs\r\n} from \"./Exports.js\";\r\nimport { SpeechTranslationConfig, SpeechTranslationConfigImpl } from \"./SpeechTranslationConfig.js\";\r\n\r\n/**\r\n * Translation recognizer\r\n * @class TranslationRecognizer\r\n */\r\nexport class TranslationRecognizer extends Recognizer {\r\n    /**\r\n     * The event recognizing signals that an intermediate recognition result is received.\r\n     * @member TranslationRecognizer.prototype.recognizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognizing: (sender: TranslationRecognizer, event: TranslationRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event recognized signals that a final recognition result is received.\r\n     * @member TranslationRecognizer.prototype.recognized\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognized: (sender: TranslationRecognizer, event: TranslationRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during recognition.\r\n     * @member TranslationRecognizer.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: TranslationRecognizer, event: TranslationRecognitionCanceledEventArgs) => void;\r\n\r\n    /**\r\n     * The event synthesizing signals that a translation synthesis result is received.\r\n     * @member TranslationRecognizer.prototype.synthesizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public synthesizing: (sender: TranslationRecognizer, event: TranslationSynthesisEventArgs) => void;\r\n\r\n    private privDisposedTranslationRecognizer: boolean;\r\n\r\n    /**\r\n     * Initializes an instance of the TranslationRecognizer.\r\n     * @constructor\r\n     * @param {SpeechTranslationConfig} speechConfig - Set of properties to configure this recognizer.\r\n     * @param {AudioConfig} audioConfig - An optional audio config associated with the recognizer\r\n     * @param {IConnectionFactory} connectionFactory - An optional connection factory to use to generate the endpoint URIs, headers to set, etc...\r\n     */\r\n    public constructor(speechConfig: SpeechTranslationConfig, audioConfig?: AudioConfig, connectionFactory?: IConnectionFactory) {\r\n        const configImpl = speechConfig as SpeechTranslationConfigImpl;\r\n        Contracts.throwIfNull(configImpl, \"speechConfig\");\r\n\r\n        super(audioConfig, configImpl.properties, connectionFactory || new TranslationConnectionFactory());\r\n\r\n        this.privDisposedTranslationRecognizer = false;\r\n\r\n        if (this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice, undefined) !== undefined) {\r\n            Contracts.throwIfNullOrWhitespace(\r\n                this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice),\r\n                PropertyId[PropertyId.SpeechServiceConnection_TranslationVoice]);\r\n        }\r\n\r\n        Contracts.throwIfNullOrWhitespace(\r\n            this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages),\r\n            PropertyId[PropertyId.SpeechServiceConnection_TranslationToLanguages]);\r\n\r\n        Contracts.throwIfNullOrWhitespace(this.properties.getProperty(\r\n            PropertyId.SpeechServiceConnection_RecoLanguage),\r\n            PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n\r\n    }\r\n\r\n    /**\r\n     * TranslationRecognizer constructor.\r\n     * @constructor\r\n     * @param {SpeechTranslationConfig} speechTranslationConfig - an set of initial properties for this recognizer\r\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the recognizer\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\r\n     */\r\n    public static FromConfig(speechTranslationConfig: SpeechTranslationConfig, autoDetectSourceLanguageConfig: AutoDetectSourceLanguageConfig, audioConfig?: AudioConfig): TranslationRecognizer {\r\n        const speechTranslationConfigImpl: SpeechTranslationConfigImpl = speechTranslationConfig as SpeechTranslationConfigImpl;\r\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechTranslationConfigImpl.properties);\r\n\r\n        if (autoDetectSourceLanguageConfig.properties.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, undefined) === AutoDetectSourceLanguagesOpenRangeOptionName) {\r\n            speechTranslationConfigImpl.properties.setProperty(PropertyId.SpeechServiceConnection_RecoLanguage, \"en-US\");\r\n        }\r\n        return new TranslationRecognizer(speechTranslationConfig, audioConfig);\r\n    }\r\n\r\n    /**\r\n     * Gets the language name that was set when the recognizer was created.\r\n     * @member TranslationRecognizer.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} Gets the language name that was set when the recognizer was created.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    /**\r\n     * Gets target languages for translation that were set when the recognizer was created.\r\n     * The language is specified in BCP-47 format. The translation will provide translated text for each of language.\r\n     * @member TranslationRecognizer.prototype.targetLanguages\r\n     * @function\r\n     * @public\r\n     * @returns {string[]} Gets target languages for translation that were set when the recognizer was created.\r\n     */\r\n    public get targetLanguages(): string[] {\r\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\r\n    }\r\n\r\n    /**\r\n     * Gets the name of output voice.\r\n     * @member TranslationRecognizer.prototype.voiceName\r\n     * @function\r\n     * @public\r\n     * @returns {string} the name of output voice.\r\n     */\r\n    public get voiceName(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice, undefined);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this TranslationRecognizer.\r\n     * @member TranslationRecognizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this TranslationRecognizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member TranslationRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member TranslationRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} value - Authorization token.\r\n     */\r\n    public set authorizationToken(value: string) {\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, value);\r\n    }\r\n\r\n    /**\r\n     * Starts recognition and translation, and stops after the first utterance is recognized.\r\n     * The task returns the translation text as result.\r\n     * Note: recognizeOnceAsync returns when the first utterance has been recognized, so it is suitable only\r\n     * for single shot recognition like command or query. For long-running recognition,\r\n     * use startContinuousRecognitionAsync() instead.\r\n     * @member TranslationRecognizer.prototype.recognizeOnceAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the result when the translation has completed.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public recognizeOnceAsync(cb?: (e: TranslationRecognitionResult) => void, err?: (e: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\r\n        marshalPromiseToCallbacks(this.recognizeOnceAsyncImpl(RecognitionMode.Interactive), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts recognition and translation, until stopContinuousRecognitionAsync() is called.\r\n     * User must subscribe to events to receive translation results.\r\n     * @member TranslationRecognizer.prototype.startContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the translation has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Stops continuous recognition and translation.\r\n     * @member TranslationRecognizer.prototype.stopContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the translation has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * dynamically remove a language from list of target language\r\n     * (can be used while recognition is ongoing)\r\n     * @member TranslationRecognizer.prototype.removeTargetLanguage\r\n     * @function\r\n     * @param lang - language to be removed\r\n     * @public\r\n     */\r\n    public removeTargetLanguage(lang: string): void {\r\n        Contracts.throwIfNullOrUndefined(lang, \"language to be removed\");\r\n        if (this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\r\n            const languages: string[] = this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\r\n            const index: number = languages.indexOf(lang);\r\n            if (index > -1) {\r\n                languages.splice(index, 1);\r\n                this.properties.setProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\r\n                this.updateLanguages(languages);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * dynamically add a language to list of target language\r\n     * (can be used while recognition is ongoing)\r\n     * @member TranslationRecognizer.prototype.addTargetLanguage\r\n     * @function\r\n     * @param lang - language to be added\r\n     * @public\r\n     */\r\n    public addTargetLanguage(lang: string): void {\r\n        Contracts.throwIfNullOrUndefined(lang, \"language to be added\");\r\n        let languages: string[] = [];\r\n        if (this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\r\n            languages = this.properties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\r\n            if (!languages.includes(lang)) {\r\n                languages.push(lang);\r\n                this.properties.setProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\r\n            }\r\n        } else {\r\n            this.properties.setProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, lang);\r\n            languages = [lang];\r\n        }\r\n        this.updateLanguages(languages);\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member TranslationRecognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedTranslationRecognizer);\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    /**\r\n     * handles ConnectionEstablishedEvent for conversation translation scenarios.\r\n     * @member TranslationRecognizer.prototype.onConnection\r\n     * @function\r\n     * @public\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    public onConnection(): void { }\r\n\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedTranslationRecognizer) {\r\n            return;\r\n        }\r\n\r\n        this.privDisposedTranslationRecognizer = true;\r\n\r\n        if (disposing) {\r\n            await this.implRecognizerStop();\r\n            await super.dispose(disposing);\r\n        }\r\n    }\r\n\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.privProperties);\r\n    }\r\n\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n\r\n        const configImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n\r\n        return new TranslationServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\r\n    }\r\n\r\n    private updateLanguages(languages: string[]): void {\r\n        const conn: Connection = Connection.fromRecognizer(this);\r\n        if (!!conn) {\r\n            conn.setMessageProperty(\"speech.context\", \"translationcontext\", { to: languages });\r\n            conn.sendMessageAsync(\"event\", JSON.stringify({\r\n                id: \"translation\",\r\n                name: \"updateLanguage\",\r\n                to: languages\r\n            }));\r\n        }\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ArgumentNullError,\r\n} from \"../common/Exports.js\";\r\nimport { HeaderNames } from \"./HeaderNames.js\";\r\nimport {\r\n    AuthInfo,\r\n    IAuthentication\r\n} from \"./IAuthentication.js\";\r\n\r\n/**\r\n * @class\r\n */\r\nexport class CognitiveSubscriptionKeyAuthentication implements IAuthentication {\r\n    private privAuthInfo: AuthInfo;\r\n\r\n    /**\r\n     * Creates and initializes an instance of the CognitiveSubscriptionKeyAuthentication class.\r\n     * @constructor\r\n     * @param {string} subscriptionKey - The subscription key\r\n     */\r\n    public constructor(subscriptionKey: string) {\r\n        if (!subscriptionKey) {\r\n            throw new ArgumentNullError(\"subscriptionKey\");\r\n        }\r\n\r\n        this.privAuthInfo = new AuthInfo(HeaderNames.AuthKey, subscriptionKey);\r\n    }\r\n\r\n    /**\r\n     * Fetches the subscription key.\r\n     * @member\r\n     * @function\r\n     * @public\r\n     * @param {string} authFetchEventId - The id to fetch.\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    public fetch(authFetchEventId: string): Promise<AuthInfo> {\r\n        return Promise.resolve(this.privAuthInfo);\r\n    }\r\n\r\n    /**\r\n     * Fetches the subscription key.\r\n     * @member\r\n     * @function\r\n     * @public\r\n     * @param {string} authFetchEventId - The id to fetch.\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    public fetchOnExpiry(authFetchEventId: string): Promise<AuthInfo> {\r\n        return Promise.resolve(this.privAuthInfo);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport { ConversationManager } from \"./ConversationManager.js\";\r\nexport { ConversationConnectionConfig } from \"./ConversationConnectionConfig.js\";\r\nexport { ConversationRecognizerFactory } from \"./ConversationTranslatorRecognizer.js\";\r\nexport { TranscriberRecognizer } from \"./TranscriberRecognizer.js\";\r\nexport {\r\n    ConversationReceivedTranslationEventArgs,\r\n    LockRoomEventArgs,\r\n    MuteAllEventArgs,\r\n    ParticipantAttributeEventArgs,\r\n    ParticipantEventArgs,\r\n    ParticipantsListEventArgs } from \"./ConversationTranslatorEventArgs.js\";\r\nexport {\r\n    ConversationRecognizer,\r\n    ConversationTranslatorCommandTypes,\r\n    ConversationTranslatorMessageTypes,\r\n    IInternalConversation,\r\n    IInternalParticipant,\r\n    InternalParticipants} from \"./ConversationTranslatorInterfaces.js\";\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError, ObjectDisposedError } from \"./Error.js\";\r\nimport { IDetachable } from \"./IDetachable.js\";\r\nimport { IDisposable } from \"./IDisposable.js\";\r\nimport { List } from \"./List.js\";\r\nimport {\r\n    Deferred,\r\n} from \"./Promise.js\";\r\nexport interface IQueue<TItem> extends IDisposable {\r\n    enqueue(item: TItem): void;\r\n    enqueueFromPromise(promise: Promise<TItem>): void;\r\n    dequeue(): Promise<TItem>;\r\n    peek(): Promise<TItem>;\r\n    length(): number;\r\n}\r\n\r\nenum SubscriberType {\r\n    Dequeue,\r\n    Peek,\r\n}\r\n\r\nexport class Queue<TItem> implements IQueue<TItem> {\r\n    private privPromiseStore: List<Promise<TItem>> = new List<Promise<TItem>>();\r\n    private privList: List<TItem>;\r\n    private privDetachables: IDetachable[];\r\n    private privSubscribers: List<{ type: SubscriberType; deferral: Deferred<TItem> }>;\r\n    private privIsDrainInProgress: boolean = false;\r\n    private privIsDisposing: boolean = false;\r\n    private privDisposeReason: string = null;\r\n\r\n    public constructor(list?: List<TItem>) {\r\n        this.privList = list ? list : new List<TItem>();\r\n        this.privDetachables = [];\r\n        this.privSubscribers = new List<{ type: SubscriberType; deferral: Deferred<TItem> }>();\r\n        this.privDetachables.push(this.privList.onAdded((): void => this.drain()));\r\n    }\r\n\r\n    public enqueue(item: TItem): void {\r\n        this.throwIfDispose();\r\n        this.enqueueFromPromise(new Promise<TItem>((resolve: (value: TItem) => void): void => resolve(item)));\r\n    }\r\n\r\n    public enqueueFromPromise(promise: Promise<TItem>): void {\r\n        this.throwIfDispose();\r\n        promise.then((val: TItem): void => {\r\n            this.privList.add(val);\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        }, (): void => { });\r\n    }\r\n\r\n    public dequeue(): Promise<TItem> {\r\n        this.throwIfDispose();\r\n        const deferredSubscriber = new Deferred<TItem>();\r\n\r\n        if (this.privSubscribers) {\r\n            this.privSubscribers.add({ deferral: deferredSubscriber, type: SubscriberType.Dequeue });\r\n            this.drain();\r\n        }\r\n\r\n        return deferredSubscriber.promise;\r\n    }\r\n\r\n    public peek(): Promise<TItem> {\r\n        this.throwIfDispose();\r\n        const deferredSubscriber = new Deferred<TItem>();\r\n\r\n        const subs = this.privSubscribers;\r\n        if (subs) {\r\n            this.privSubscribers.add({ deferral: deferredSubscriber, type: SubscriberType.Peek });\r\n            this.drain();\r\n        }\r\n\r\n        return deferredSubscriber.promise;\r\n    }\r\n\r\n    public length(): number {\r\n        this.throwIfDispose();\r\n        return this.privList.length();\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privSubscribers == null;\r\n    }\r\n\r\n    public async drainAndDispose(pendingItemProcessor: (pendingItemInQueue: TItem) => void, reason?: string): Promise<void> {\r\n        if (!this.isDisposed() && !this.privIsDisposing) {\r\n            this.privDisposeReason = reason;\r\n            this.privIsDisposing = true;\r\n\r\n            const subs = this.privSubscribers;\r\n            if (subs) {\r\n                while (subs.length() > 0) {\r\n                    const subscriber = subs.removeFirst();\r\n                    // TODO: this needs work (Resolve(null) instead?).\r\n                    subscriber.deferral.resolve(undefined);\r\n                    // subscriber.deferral.reject(\"Disposed\");\r\n                }\r\n\r\n                // note: this block assumes cooperative multitasking, i.e.,\r\n                // between the if-statement and the assignment there are no\r\n                // thread switches.\r\n                // Reason is that between the initial const = this.; and this\r\n                // point there is the derral.resolve() operation that might have\r\n                // caused recursive calls to the Queue, especially, calling\r\n                // Dispose() on the queue alredy (which would reset the var\r\n                // here to null!).\r\n                // That should generally hold true for javascript...\r\n                if (this.privSubscribers === subs) {\r\n                    this.privSubscribers = subs;\r\n                }\r\n            }\r\n\r\n            for (const detachable of this.privDetachables) {\r\n                await detachable.detach();\r\n            }\r\n\r\n            if (this.privPromiseStore.length() > 0 && pendingItemProcessor) {\r\n                const promiseArray: Promise<TItem>[] = [];\r\n\r\n                this.privPromiseStore.toArray().forEach((wrapper: Promise<TItem>): void => {\r\n                    promiseArray.push(wrapper);\r\n                });\r\n                return Promise.all(promiseArray).finally((): void => {\r\n                    this.privSubscribers = null;\r\n                    this.privList.forEach((item: TItem): void => {\r\n                        pendingItemProcessor(item);\r\n                    });\r\n                    this.privList = null;\r\n                    return;\r\n                }).then<void>();\r\n            } else {\r\n                this.privSubscribers = null;\r\n                this.privList = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public async dispose(reason?: string): Promise<void> {\r\n        await this.drainAndDispose(null, reason);\r\n    }\r\n\r\n    private drain(): void {\r\n        if (!this.privIsDrainInProgress && !this.privIsDisposing) {\r\n            this.privIsDrainInProgress = true;\r\n\r\n            const subs = this.privSubscribers;\r\n            const lists = this.privList;\r\n            if (subs && lists) {\r\n                while (lists.length() > 0 && subs.length() > 0 && !this.privIsDisposing) {\r\n                    const subscriber = subs.removeFirst();\r\n                    if (subscriber.type === SubscriberType.Peek) {\r\n                        subscriber.deferral.resolve(lists.first());\r\n                    } else {\r\n                        const dequeuedItem = lists.removeFirst();\r\n                        subscriber.deferral.resolve(dequeuedItem);\r\n                    }\r\n                }\r\n\r\n                // note: this block assumes cooperative multitasking, i.e.,\r\n                // between the if-statement and the assignment there are no\r\n                // thread switches.\r\n                // Reason is that between the initial const = this.; and this\r\n                // point there is the derral.resolve() operation that might have\r\n                // caused recursive calls to the Queue, especially, calling\r\n                // Dispose() on the queue alredy (which would reset the var\r\n                // here to null!).\r\n                // That should generally hold true for javascript...\r\n                if (this.privSubscribers === subs) {\r\n                    this.privSubscribers = subs;\r\n                }\r\n\r\n                // note: this block assumes cooperative multitasking, i.e.,\r\n                // between the if-statement and the assignment there are no\r\n                // thread switches.\r\n                // Reason is that between the initial const = this.; and this\r\n                // point there is the derral.resolve() operation that might have\r\n                // caused recursive calls to the Queue, especially, calling\r\n                // Dispose() on the queue alredy (which would reset the var\r\n                // here to null!).\r\n                // That should generally hold true for javascript...\r\n                if (this.privList === lists) {\r\n                    this.privList = lists;\r\n                }\r\n            }\r\n\r\n            this.privIsDrainInProgress = false;\r\n        }\r\n    }\r\n\r\n    private throwIfDispose(): void {\r\n        if (this.isDisposed()) {\r\n            if (this.privDisposeReason) {\r\n                throw new InvalidOperationError(this.privDisposeReason);\r\n            }\r\n\r\n            throw new ObjectDisposedError(\"Queue\");\r\n        } else if (this.privIsDisposing) {\r\n            throw new InvalidOperationError(\"Queue disposing\");\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the possible reasons a recognition result might be canceled.\r\n * @class CancellationReason\r\n */\r\nexport enum CancellationReason {\r\n    /**\r\n     * Indicates that an error occurred during speech recognition.\r\n     * @member CancellationReason.Error\r\n     */\r\n    Error,\r\n\r\n    /**\r\n     * Indicates that the end of the audio stream was reached.\r\n     * @member CancellationReason.EndOfStream\r\n     */\r\n    EndOfStream,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// response\r\n\r\nexport interface IIntentResponse {\r\n    query?: string;\r\n    topScoringIntent?: ISingleIntent;\r\n    entities?: IIntentEntity[];\r\n}\r\n\r\nexport interface IIntentEntity {\r\n    entity: string;\r\n    type: string;\r\n    startIndex: number;\r\n    endIndex: number;\r\n    score: number;\r\n}\r\n\r\nexport interface ISingleIntent {\r\n    intent: string;\r\n    score: number;\r\n}\r\n\r\nexport class IntentResponse implements IIntentResponse {\r\n    private privIntentResponse: IIntentResponse;\r\n\r\n    private constructor(json: string) {\r\n        if (json === \"\") {\r\n            this.privIntentResponse = {};\r\n        } else {\r\n            this.privIntentResponse = JSON.parse(json) as IIntentResponse;\r\n        }\r\n    }\r\n\r\n    public static fromJSON(json: string): IntentResponse {\r\n        return new IntentResponse(json);\r\n    }\r\n\r\n    public get query(): string {\r\n        return this.privIntentResponse.query;\r\n    }\r\n\r\n    public get topScoringIntent(): ISingleIntent {\r\n        return this.privIntentResponse.topScoringIntent;\r\n    }\r\n\r\n    public get entities(): IIntentEntity[] {\r\n        return this.privIntentResponse.entities;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport { EventType, PlatformEvent } from \"./PlatformEvent.js\";\r\n\r\nexport class AudioSourceEvent extends PlatformEvent {\r\n    private privAudioSourceId: string;\r\n\r\n    public constructor(eventName: string, audioSourceId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n        this.privAudioSourceId = audioSourceId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n}\r\n\r\nexport class AudioSourceInitializingEvent extends AudioSourceEvent {\r\n    public constructor(audioSourceId: string) {\r\n        super(\"AudioSourceInitializingEvent\", audioSourceId);\r\n    }\r\n}\r\n\r\nexport class AudioSourceReadyEvent extends AudioSourceEvent {\r\n    public constructor(audioSourceId: string) {\r\n        super(\"AudioSourceReadyEvent\", audioSourceId);\r\n    }\r\n}\r\n\r\nexport class AudioSourceOffEvent extends AudioSourceEvent {\r\n    public constructor(audioSourceId: string) {\r\n        super(\"AudioSourceOffEvent\", audioSourceId);\r\n    }\r\n}\r\n\r\nexport class AudioSourceErrorEvent extends AudioSourceEvent {\r\n    private privError: string;\r\n\r\n    public constructor(audioSourceId: string, error: string) {\r\n        super(\"AudioSourceErrorEvent\", audioSourceId, EventType.Error);\r\n        this.privError = error;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeEvent extends AudioSourceEvent {\r\n    private privAudioNodeId: string;\r\n\r\n    public constructor(eventName: string, audioSourceId: string, audioNodeId: string) {\r\n        super(eventName, audioSourceId);\r\n        this.privAudioNodeId = audioNodeId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeAttachingEvent extends AudioStreamNodeEvent {\r\n    public constructor(audioSourceId: string, audioNodeId: string) {\r\n        super(\"AudioStreamNodeAttachingEvent\", audioSourceId, audioNodeId);\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeAttachedEvent extends AudioStreamNodeEvent {\r\n    public constructor(audioSourceId: string, audioNodeId: string) {\r\n        super(\"AudioStreamNodeAttachedEvent\", audioSourceId, audioNodeId);\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeDetachedEvent extends AudioStreamNodeEvent {\r\n    public constructor(audioSourceId: string, audioNodeId: string) {\r\n        super(\"AudioStreamNodeDetachedEvent\", audioSourceId, audioNodeId);\r\n    }\r\n}\r\n\r\nexport class AudioStreamNodeErrorEvent extends AudioStreamNodeEvent {\r\n    private privError: string;\r\n\r\n    public constructor(audioSourceId: string, audioNodeId: string, error: string) {\r\n        super(\"AudioStreamNodeErrorEvent\", audioSourceId, audioNodeId);\r\n        this.privError = error;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport * from \"./ConsoleLoggingListener.js\";\r\nexport * from \"./IRecorder.js\";\r\nexport * from \"./MicAudioSource.js\";\r\nexport * from \"./FileAudioSource.js\";\r\nexport * from \"./PCMRecorder.js\";\r\nexport * from \"./WebsocketConnection.js\";\r\nexport * from \"./WebsocketMessageAdapter.js\";\r\nexport * from \"./ReplayableAudioNode.js\";\r\nexport * from \"./ProxyInfo.js\";\r\nexport * from \"./RestMessageAdapter.js\";\r\nexport * from \"./RestConfigBase.js\";\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport * from \"./AudioSourceEvents.js\";\r\nexport * from \"./ConnectionEvents.js\";\r\nexport * from \"./ConnectionMessage.js\";\r\nexport * from \"./ConnectionOpenResponse.js\";\r\nexport * from \"./DeferralMap.js\";\r\nexport * from \"./DialogEvents.js\";\r\nexport * from \"./Error.js\";\r\nexport * from \"./Events.js\";\r\nexport * from \"./EventSource.js\";\r\nexport * from \"./Guid.js\";\r\nexport * from \"./IAudioSource.js\";\r\nexport * from \"./IConnection.js\";\r\nexport * from \"./IDetachable.js\";\r\nexport * from \"./IDictionary.js\";\r\nexport * from \"./IDisposable.js\";\r\nexport * from \"./IEventListener.js\";\r\nexport * from \"./IEventSource.js\";\r\nexport * from \"./IErrorMessages.js\";\r\nexport * from \"./ITimer.js\";\r\nexport * from \"./IWebsocketMessageFormatter.js\";\r\nexport * from \"./List.js\";\r\nexport * from \"./PlatformEvent.js\";\r\nexport * from \"./Promise.js\";\r\nexport * from \"./Queue.js\";\r\nexport * from \"./RawWebsocketMessage.js\";\r\nexport * from \"./RiffPcmEncoder.js\";\r\nexport * from \"./Stream.js\";\r\nexport { TranslationStatus } from \"../common.speech/TranslationStatus.js\";\r\nexport * from \"./ChunkedArrayBufferStream.js\";\r\nexport * from \"./IAudioDestination.js\";\r\nexport * from \"./Timeout.js\";\r\nexport * from \"./OCSPEvents.js\";\r\nexport * from \"./BackgroundError.js\";\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IVoiceJson,\r\n    PropertyCollection,\r\n    ResultReason,\r\n    SynthesisResult,\r\n    VoiceInfo,\r\n} from \"./Exports.js\";\r\n\r\n/**\r\n * Defines result of speech synthesis.\r\n * @class SynthesisVoicesResult\r\n * Added in version 1.20.0\r\n */\r\nexport class SynthesisVoicesResult extends SynthesisResult {\r\n    private privVoices: VoiceInfo[];\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param requestId - result id for request.\r\n     * @param json - json payload from endpoint.\r\n     */\r\n    public constructor(requestId: string, json: any, errorDetails: string ) {\r\n        if (Array.isArray(json)) {\r\n            super(requestId, ResultReason.VoicesListRetrieved, undefined, new PropertyCollection());\r\n            this.privVoices = [];\r\n            for (const item of json) {\r\n                this.privVoices.push(new VoiceInfo(item as IVoiceJson));\r\n            }\r\n        } else {\r\n            super(requestId, ResultReason.Canceled, errorDetails ? errorDetails : \"Error information unavailable\", new PropertyCollection());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The list of voices\r\n     * @member SynthesisVoicesResult.prototype.voices\r\n     * @function\r\n     * @public\r\n     * @returns {VoiceInfo[]} List of synthesized voices.\r\n     */\r\n    public get voices(): VoiceInfo[] {\r\n        return this.privVoices;\r\n    }\r\n}\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason, SpeechRecognitionResult } from \"./Exports.js\";\r\n\r\n/**\r\n * Intent recognition result.\r\n * @class\r\n */\r\nexport class IntentRecognitionResult extends SpeechRecognitionResult {\r\n    private privIntentId: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param intentId - The intent id.\r\n     * @param resultId - The result id.\r\n     * @param reason - The reason.\r\n     * @param text - The recognized text.\r\n     * @param duration - The duration.\r\n     * @param offset - The offset into the stream.\r\n     * @param language - Primary Language detected, if provided.\r\n     * @param languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\r\n     * @param errorDetails - Error details, if provided.\r\n     * @param json - Additional Json, if provided.\r\n     * @param properties - Additional properties, if provided.\r\n     */\r\n    public constructor(intentId?: string, resultId?: string, reason?: ResultReason, text?: string,\r\n                duration?: number, offset?: number, language?: string, languageDetectionConfidence?: string,\r\n                errorDetails?: string, json?: string, properties?: PropertyCollection) {\r\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, undefined, errorDetails, json, properties);\r\n\r\n        this.privIntentId = intentId;\r\n    }\r\n\r\n    /**\r\n     * A String that represents the intent identifier being recognized.\r\n     * @member IntentRecognitionResult.prototype.intentId\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the intent identifier being recognized.\r\n     */\r\n    public get intentId(): string {\r\n        return this.privIntentId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports.js\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary,\r\n} from \"../common/Exports.js\";\r\nimport { StringUtils } from \"../common/StringUtils.js\";\r\nimport {\r\n    PropertyId\r\n} from \"../sdk/Exports.js\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./ConnectionFactoryBase.js\";\r\nimport {\r\n    AuthInfo,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    WebsocketMessageFormatter,\r\n} from \"./Exports.js\";\r\nimport { HeaderNames } from \"./HeaderNames.js\";\r\nimport { QueryParameterNames } from \"./QueryParameterNames.js\";\r\n\r\nexport class TranslationConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    public create(\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection {\r\n\r\n        const endpoint: string = this.getEndpointUrl(config);\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n\r\n        if (config.autoDetectSourceLanguages !== undefined) {\r\n            queryParams[QueryParameterNames.EnableLanguageId] = \"true\";\r\n        }\r\n        this.setQueryParams(queryParams, config, endpoint);\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n\r\n    public getEndpointUrl(config: RecognizerConfig, returnRegionPlaceholder?: boolean): string {\r\n\r\n        const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region);\r\n        const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n\r\n        let endpointUrl: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        if (!endpointUrl) {\r\n            if (config.autoDetectSourceLanguages !== undefined) {\r\n                const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://{region}.stt.speech\" + hostSuffix);\r\n                endpointUrl = host + \"/speech/universal/v2\";\r\n            } else {\r\n                const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://{region}.s2s.speech\" + hostSuffix);\r\n                endpointUrl = host + \"/speech/translation/cognitiveservices/v1\";\r\n            }\r\n        }\r\n\r\n        if (returnRegionPlaceholder === true) {\r\n            return endpointUrl;\r\n        }\r\n\r\n        return StringUtils.formatString(endpointUrl, { region });\r\n    }\r\n\r\n    public setQueryParams(queryParams: IStringDictionary<string>, config: RecognizerConfig, endpointUrl: string): void {\r\n\r\n        queryParams.from = config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n        queryParams.to = config.parameters.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages);\r\n        queryParams.scenario = config.recognitionMode === RecognitionMode.Interactive ? \"interactive\" :\r\n            config.recognitionMode === RecognitionMode.Conversation ? \"conversation\" : \"\";\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpointUrl);\r\n        this.setUrlParameter(\r\n            PropertyId.SpeechServiceResponse_TranslationRequestStablePartialResult,\r\n            QueryParameterNames.StableTranslation,\r\n            config,\r\n            queryParams,\r\n            endpointUrl\r\n        );\r\n\r\n        const translationVoice: string =  config.parameters.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice, undefined);\r\n        if (translationVoice !== undefined) {\r\n            queryParams.voice = translationVoice;\r\n            queryParams.features = \"texttospeech\";\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport {\r\n    ConversationConnectionConfig,\r\n    ConversationManager,\r\n    ConversationReceivedTranslationEventArgs,\r\n    ConversationRecognizer,\r\n    ConversationRecognizerFactory,\r\n    ConversationTranslatorCommandTypes,\r\n    ConversationTranslatorMessageTypes,\r\n    IAuthentication,\r\n    IInternalConversation,\r\n    IInternalParticipant,\r\n    InternalParticipants,\r\n    MuteAllEventArgs,\r\n    ParticipantAttributeEventArgs,\r\n    ParticipantEventArgs,\r\n    ParticipantsListEventArgs,\r\n    TranscriberRecognizer\r\n} from \"../../common.speech/Exports.js\";\r\nimport {\r\n    IDisposable,\r\n    IErrorMessages,\r\n    marshalPromiseToCallbacks\r\n} from \"../../common/Exports.js\";\r\nimport { Contracts } from \"../Contracts.js\";\r\nimport {\r\n    ConnectionEventArgs,\r\n    ConversationExpirationEventArgs,\r\n    ConversationParticipantsChangedEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    ConversationTranslationEventArgs,\r\n    ConversationTranslator,\r\n    Participant,\r\n    ParticipantChangedReason,\r\n    ProfanityOption,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    SpeechTranslationConfig,\r\n} from \"../Exports.js\";\r\nimport { SpeechTranslationConfigImpl } from \"../SpeechTranslationConfig.js\";\r\nimport { Callback, ConversationInfo, ConversationProperties, IConversation } from \"./IConversation.js\";\r\nimport { IParticipant, IUser, TranscriptionParticipant } from \"./IParticipant.js\";\r\n\r\nexport abstract class Conversation implements IConversation {\r\n\r\n    protected constructor() {\r\n        return;\r\n    }\r\n\r\n    public abstract get authorizationToken(): string;\r\n\r\n    public abstract get config(): SpeechTranslationConfig;\r\n\r\n    public abstract get conversationId(): string;\r\n    public abstract get conversationInfo(): ConversationInfo;\r\n    public abstract get properties(): PropertyCollection;\r\n    public abstract get speechRecognitionLanguage(): string;\r\n    public abstract get participants(): Participant[];\r\n    public abstract set authorizationToken(value: string);\r\n    public abstract get isConnected(): boolean;\r\n\r\n    /**\r\n     * Create a conversation\r\n     * @param speechConfig\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public static createConversationAsync(speechConfig: SpeechTranslationConfig, arg2?: string | Callback, arg3?: Callback, arg4?: Callback): Conversation {\r\n        Contracts.throwIfNullOrUndefined(speechConfig, ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"config\"));\r\n        Contracts.throwIfNullOrUndefined(speechConfig.region, ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Region\"));\r\n        if (!speechConfig.subscriptionKey && !speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceAuthorization_Token])) {\r\n            Contracts.throwIfNullOrUndefined(speechConfig.subscriptionKey, ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Key\"));\r\n        }\r\n        let conversationImpl: ConversationImpl;\r\n        let cb: Callback;\r\n        let err: Callback;\r\n        if (typeof arg2 === \"string\") {\r\n            conversationImpl = new ConversationImpl(speechConfig, arg2);\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            marshalPromiseToCallbacks((async (): Promise<void> => {})(), arg3, arg4);\r\n        } else {\r\n            conversationImpl = new ConversationImpl(speechConfig);\r\n            cb = arg2;\r\n            err = arg3;\r\n            conversationImpl.createConversationAsync(\r\n                ((): void => {\r\n                    if (!!cb) {\r\n                        cb();\r\n                    }\r\n                }),\r\n                (error: any): void => {\r\n                    if (!!err) {\r\n                        err(error);\r\n                    }\r\n                });\r\n        }\r\n        return conversationImpl;\r\n\r\n    }\r\n\r\n    /** Start a conversation. */\r\n    public abstract startConversationAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** Delete a conversation. After this no one will be able to join the conversation. */\r\n    public abstract deleteConversationAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** End a conversation. */\r\n    public abstract endConversationAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** Lock a conversation. This will prevent new participants from joining. */\r\n    public abstract lockConversationAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** Add Participant to Conversation. */\r\n    public abstract addParticipantAsync(participant: IParticipant, cb?: Callback, err?: Callback): void;\r\n\r\n    /**\r\n     * Mute all other participants in the conversation. After this no other participants will\r\n     * have their speech recognitions broadcast, nor be able to send text messages.\r\n     */\r\n    public abstract muteAllParticipantsAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /**\r\n     * Mute a participant.\r\n     * @param userId A user identifier\r\n     */\r\n    public abstract muteParticipantAsync(userId: string, cb?: Callback, err?: Callback): void;\r\n\r\n    /**\r\n     * Remove a participant from a conversation using the user id, Participant or User object\r\n     * @param userId A user identifier\r\n     */\r\n    public abstract removeParticipantAsync(userId: string | IParticipant | IUser, cb?: Callback, err?: Callback): void;\r\n\r\n    /** Unlocks a conversation. */\r\n    public abstract unlockConversationAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** Unmute all other participants in the conversation. */\r\n    public abstract unmuteAllParticipantsAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /**\r\n     * Unmute a participant.\r\n     * @param userId A user identifier\r\n     */\r\n    public abstract unmuteParticipantAsync(userId: string, cb?: Callback, err?: Callback): void;\r\n}\r\n\r\nexport class ConversationImpl extends Conversation implements IDisposable {\r\n\r\n    private privConfig: SpeechTranslationConfig;\r\n    private privProperties: PropertyCollection;\r\n    private privLanguage: string;\r\n    private privToken: string;\r\n    private privIsDisposed: boolean;\r\n    private privRoom: IInternalConversation;\r\n    private privManager: ConversationManager;\r\n    private privConversationRecognizer: ConversationRecognizer;\r\n    private privIsConnected: boolean;\r\n    private privParticipants: InternalParticipants;\r\n    private privIsReady: boolean;\r\n    private privConversationTranslator: ConversationTranslator;\r\n    private privTranscriberRecognizer: TranscriberRecognizer;\r\n    private privErrors: IErrorMessages = ConversationConnectionConfig.restErrors;\r\n    private privConversationId: string;\r\n    private readonly privTextMessageMaxLength: number;\r\n\r\n    /**\r\n     * Create a conversation impl\r\n     * @param speechConfig\r\n     * @param {string} id - optional conversationId\r\n     */\r\n    public constructor(speechConfig: SpeechTranslationConfig, id?: string) {\r\n        super();\r\n        this.privIsConnected = false;\r\n        this.privIsDisposed = false;\r\n        this.privConversationId = \"\";\r\n        this.privProperties = new PropertyCollection();\r\n        this.privManager = new ConversationManager();\r\n\r\n        // check the speech language\r\n        const language: string = speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n        if (!language) {\r\n            speechConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage], ConversationConnectionConfig.defaultLanguageCode);\r\n        }\r\n        this.privLanguage = speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n\r\n        if (!id) {\r\n            // check the target language(s)\r\n            if (speechConfig.targetLanguages.length === 0) {\r\n                speechConfig.addTargetLanguage(this.privLanguage);\r\n            }\r\n\r\n            // check the profanity setting: speech and conversationTranslator should be in sync\r\n            const profanity: string = speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceResponse_ProfanityOption]);\r\n            if (!profanity) {\r\n                speechConfig.setProfanity(ProfanityOption.Masked);\r\n            }\r\n            // check the nickname: it should pass this regex: ^\\w+([\\s-][\\w\\(\\)]+)*$\"\r\n            // TODO: specify the regex required. Nicknames must be unique or get the duplicate nickname error\r\n            // TODO: check what the max length is and if a truncation is required or if the service handles it without an error\r\n            let hostNickname: string = speechConfig.getProperty(PropertyId[PropertyId.ConversationTranslator_Name]);\r\n            if (hostNickname === undefined || hostNickname === null) {\r\n                hostNickname = \"Host\";\r\n            }\r\n            Contracts.throwIfNullOrTooLong(hostNickname, \"nickname\", 50);\r\n            Contracts.throwIfNullOrTooShort(hostNickname, \"nickname\", 2);\r\n            speechConfig.setProperty(PropertyId[PropertyId.ConversationTranslator_Name], hostNickname);\r\n\r\n        } else {\r\n            this.privConversationId = id;\r\n        }\r\n\r\n        // save the speech config for future usage\r\n        this.privConfig = speechConfig;\r\n\r\n        // save the config properties\r\n        const configImpl = speechConfig as SpeechTranslationConfigImpl;\r\n        Contracts.throwIfNull(configImpl, \"speechConfig\");\r\n        this.privProperties = configImpl.properties.clone();\r\n        this.privIsConnected = false;\r\n        this.privParticipants = new InternalParticipants();\r\n        this.privIsReady = false;\r\n        this.privTextMessageMaxLength = 1000;\r\n    }\r\n\r\n    // get the internal data about a conversation\r\n    public get room(): IInternalConversation {\r\n        return this.privRoom;\r\n    }\r\n\r\n    // get the wrapper for connecting to the websockets\r\n    public get connection(): ConversationRecognizer {\r\n        return this.privConversationRecognizer; // this.privConnection;\r\n    }\r\n\r\n    // get the config\r\n    public get config(): SpeechTranslationConfig {\r\n        return this.privConfig;\r\n    }\r\n\r\n    // get the conversation Id\r\n    public get conversationId(): string {\r\n        return this.privRoom ? this.privRoom.roomId : this.privConversationId;\r\n    }\r\n\r\n    // get the properties\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    // get the speech language\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privLanguage;\r\n    }\r\n\r\n    public get isMutedByHost(): boolean {\r\n        return this.privParticipants.me?.isHost ? false : this.privParticipants.me?.isMuted;\r\n    }\r\n\r\n    public get isConnected(): boolean {\r\n        return this.privIsConnected && this.privIsReady;\r\n    }\r\n\r\n    public get participants(): Participant[] {\r\n        return this.toParticipants(true);\r\n    }\r\n\r\n    public get me(): Participant {\r\n        return this.toParticipant(this.privParticipants.me);\r\n    }\r\n\r\n    public get host(): Participant {\r\n        return this.toParticipant(this.privParticipants.host);\r\n    }\r\n\r\n    public get transcriberRecognizer(): TranscriberRecognizer {\r\n        return this.privTranscriberRecognizer;\r\n    }\r\n\r\n    public get conversationInfo(): ConversationInfo {\r\n        const convId: string = this.conversationId;\r\n        const p: TranscriptionParticipant[] = this.participants.map((part: Participant): TranscriptionParticipant => (\r\n            {\r\n                id: part.id,\r\n                preferredLanguage: part.preferredLanguage,\r\n                voice: part.voice\r\n            }\r\n        ));\r\n        const props: ConversationProperties = {};\r\n        for (const key of ConversationConnectionConfig.transcriptionEventKeys) {\r\n            const val: string = this.properties.getProperty(key, \"\");\r\n            if (val !== \"\") {\r\n                props[key] = val;\r\n            }\r\n        }\r\n        const info: ConversationInfo = { id: convId, participants: p, conversationProperties: props };\r\n        return info;\r\n    }\r\n\r\n    private get canSend(): boolean {\r\n        return this.privIsConnected && !this.privParticipants.me?.isMuted;\r\n    }\r\n\r\n    private get canSendAsHost(): boolean {\r\n        return this.privIsConnected && this.privParticipants.me?.isHost;\r\n    }\r\n\r\n    // get / set the speech auth token\r\n    // eslint-disable-next-line @typescript-eslint/member-ordering\r\n    public get authorizationToken(): string {\r\n        return this.privToken;\r\n    }\r\n\r\n    public set authorizationToken(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"authorizationToken\");\r\n        this.privToken = value;\r\n    }\r\n\r\n    public set conversationTranslator(conversationTranslator: ConversationTranslator) {\r\n        this.privConversationTranslator = conversationTranslator;\r\n    }\r\n\r\n    public onToken(token: IAuthentication): void {\r\n        this.privConversationTranslator.onToken(token);\r\n    }\r\n\r\n    /**\r\n     * Create a new conversation as Host\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public createConversationAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            if (!!this.privConversationRecognizer) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\r\n            }\r\n            this.privManager.createOrJoin(this.privProperties, undefined,\r\n                ((room: IInternalConversation): void => {\r\n                    if (!room) {\r\n                        this.handleError(new Error(this.privErrors.permissionDeniedConnect), err);\r\n                    }\r\n                    this.privRoom = room;\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                ((error: any): void => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Starts a new conversation as host.\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public startConversationAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            // check if there is already a recognizer\r\n            if (!!this.privConversationRecognizer) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\r\n            }\r\n            // check if there is conversation data available\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedConnect);\r\n            // connect to the conversation websocket\r\n            this.privParticipants.meId = this.privRoom.participantId;\r\n            this.privConversationRecognizer = ConversationRecognizerFactory.fromConfig(this, this.privConfig);\r\n\r\n            // Because ConversationTranslator manually sets up and manages the connection, Conversation\r\n            // has to forward serviceRecognizer connection events that usually get passed automatically\r\n            this.privConversationRecognizer.connected = this.onConnected;\r\n            this.privConversationRecognizer.disconnected = this.onDisconnected;\r\n            this.privConversationRecognizer.canceled = this.onCanceled;\r\n\r\n            this.privConversationRecognizer.participantUpdateCommandReceived = this.onParticipantUpdateCommandReceived;\r\n            this.privConversationRecognizer.lockRoomCommandReceived = this.onLockRoomCommandReceived;\r\n            this.privConversationRecognizer.muteAllCommandReceived = this.onMuteAllCommandReceived;\r\n            this.privConversationRecognizer.participantJoinCommandReceived = this.onParticipantJoinCommandReceived;\r\n            this.privConversationRecognizer.participantLeaveCommandReceived = this.onParticipantLeaveCommandReceived;\r\n            this.privConversationRecognizer.translationReceived = this.onTranslationReceived;\r\n            this.privConversationRecognizer.participantsListReceived = this.onParticipantsListReceived;\r\n            this.privConversationRecognizer.conversationExpiration = this.onConversationExpiration;\r\n\r\n            this.privConversationRecognizer.connect(this.privRoom.token,\r\n                ((): void => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                ((error: any): void => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Join a conversation as a participant.\r\n     * @param { IParticipant } participant - participant to add\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public addParticipantAsync(participant: IParticipant, cb?: Callback, err?: Callback): void {\r\n        Contracts.throwIfNullOrUndefined(participant, \"Participant\");\r\n        marshalPromiseToCallbacks(this.addParticipantImplAsync(participant), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Join a conversation as a participant.\r\n     * @param conversation\r\n     * @param nickname\r\n     * @param lang\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public joinConversationAsync(conversationId: string, nickname: string, lang: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            // TODO\r\n            // if (!!this.privConversationRecognizer) {\r\n            //     throw new Error(this.privErrors.permissionDeniedStart);\r\n            // }\r\n            Contracts.throwIfNullOrWhitespace(conversationId, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversationId\"));\r\n            Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\r\n            Contracts.throwIfNullOrWhitespace(lang, this.privErrors.invalidArgs.replace(\"{arg}\", \"language\"));\r\n            // join the conversation\r\n            this.privManager.createOrJoin(this.privProperties, conversationId,\r\n                ((room: IInternalConversation): void => {\r\n                    Contracts.throwIfNullOrUndefined(room, this.privErrors.permissionDeniedConnect);\r\n                    this.privRoom = room;\r\n                    this.privConfig.authorizationToken = room.cognitiveSpeechAuthToken;\r\n                    // join callback\r\n                    if (!!cb) {\r\n                        cb(room.cognitiveSpeechAuthToken);\r\n                    }\r\n                }),\r\n                ((error: any): void => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Deletes a conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public deleteConversationAsync(cb?: Callback, err?: Callback): void {\r\n        marshalPromiseToCallbacks(this.deleteConversationImplAsync(), cb, err);\r\n    }\r\n\r\n    public async deleteConversationImplAsync(): Promise<void> {\r\n            Contracts.throwIfNullOrUndefined(this.privProperties, this.privErrors.permissionDeniedConnect);\r\n            Contracts.throwIfNullOrWhitespace(this.privRoom.token, this.privErrors.permissionDeniedConnect);\r\n            await this.privManager.leave(this.privProperties, this.privRoom.token);\r\n\r\n            this.dispose();\r\n    }\r\n\r\n    /**\r\n     * Issues a request to close the client websockets\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public endConversationAsync(cb?: Callback, err?: Callback): void {\r\n        marshalPromiseToCallbacks(this.endConversationImplAsync(), cb, err);\r\n    }\r\n\r\n    public endConversationImplAsync(): Promise<void> {\r\n        return this.close(true);\r\n    }\r\n\r\n    /**\r\n     * Issues a request to lock the conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public lockConversationAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSendAsHost) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"lock\")), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getLockCommand(true),\r\n                    ((): void => {\r\n                        this.handleCallback(cb, err);\r\n                    }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to mute the conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public muteAllParticipantsAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrUndefined(this.privConversationRecognizer, this.privErrors.permissionDeniedSend);\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            // check the user's permissions\r\n            if (!this.canSendAsHost) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"mute\")), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getMuteAllCommand(true),\r\n                    ((): void => {\r\n                        this.handleCallback(cb, err);\r\n                    }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to mute a participant in the conversation\r\n     * @param userId\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public muteParticipantAsync(userId: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            // check the connection is open (host + participant can perform the mute command)\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            // if not host, check the participant is not muting another participant\r\n            if (!this.me.isHost && this.me.id !== userId) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\r\n            }\r\n            // check the user exists\r\n            const exists: number = this.privParticipants.getParticipantIndex(userId);\r\n            if (exists === -1) {\r\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getMuteCommand(userId, true), ((): void => {\r\n                        this.handleCallback(cb, err);\r\n                    }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to remove a participant from the conversation\r\n     * @param userId\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public removeParticipantAsync(userId: string | IParticipant | IUser, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            if (!!this.privTranscriberRecognizer && userId.hasOwnProperty(\"id\")) {\r\n                // Assume this is a transcription participant\r\n                marshalPromiseToCallbacks(this.removeParticipantImplAsync(userId as IParticipant), cb, err);\r\n            } else {\r\n                Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n                Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n                if (!this.canSendAsHost) {\r\n                    this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"remove\")), err);\r\n                }\r\n                let participantId = \"\";\r\n                if (typeof userId === \"string\") {\r\n                    participantId = userId;\r\n                } else if (userId.hasOwnProperty(\"id\")) {\r\n                    const participant: IParticipant = userId as IParticipant;\r\n                    participantId = participant.id;\r\n                } else if (userId.hasOwnProperty(\"userId\")) {\r\n                    const user: IUser = userId as IUser;\r\n                    participantId = user.userId;\r\n                }\r\n                Contracts.throwIfNullOrWhitespace(participantId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\r\n                // check the participant exists\r\n                const index: number = this.participants.findIndex((p: Participant): boolean => p.id === participantId);\r\n                if (index === -1) {\r\n                    this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\r\n                }\r\n                if (!!this.privConversationRecognizer) {\r\n                    this.privConversationRecognizer.sendRequest(this.getEjectCommand(participantId), ((): void => {\r\n                        this.handleCallback(cb, err);\r\n                    }),\r\n                        ((error: any): void => {\r\n                            this.handleError(error, err);\r\n                        }));\r\n                }\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to unlock the conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public unlockConversationAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSendAsHost) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unlock\")), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getLockCommand(false), ((): void => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n                }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to unmute all participants in the conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public unmuteAllParticipantsAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSendAsHost) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unmute all\")), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getMuteAllCommand(false), ((): void => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to unmute a participant in the conversation\r\n     * @param userId\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public unmuteParticipantAsync(userId: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            // check the connection is open (host + participant can perform the mute command)\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            // if not host, check the participant is not muting another participant\r\n            if (!this.me.isHost && this.me.id !== userId) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\r\n            }\r\n            // check the user exists\r\n            const exists: number = this.privParticipants.getParticipantIndex(userId);\r\n            if (exists === -1) {\r\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getMuteCommand(userId, false), ((): void => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send a text message\r\n     * @param message\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public sendTextMessageAsync(message: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrWhitespace(message, this.privErrors.invalidArgs.replace(\"{arg}\", \"message\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            // TODO: is a max length check required?\r\n            if (message.length > this.privTextMessageMaxLength) {\r\n                this.handleError(new Error(this.privErrors.invalidArgs.replace(\"{arg}\", \"message length\")), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getMessageCommand(message), ((): void => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set translated to languages\r\n     * @param {string[]} languages - languages to translate to\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public setTranslatedLanguagesAsync(languages: string[], cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfArrayEmptyOrWhitespace(languages, this.privErrors.invalidArgs.replace(\"{arg}\", \"languages\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getSetTranslateToLanguagesCommand(languages),\r\n                    ((): void => {\r\n                        this.handleCallback(cb, err);\r\n                    }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Change nickname\r\n     * @param {string} nickname - new nickname for the room\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public changeNicknameAsync(nickname: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getChangeNicknameCommand(nickname),\r\n                    ((): void => {\r\n                        this.handleCallback(cb, err);\r\n                    }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public dispose(): void {\r\n        if (this.isDisposed) {\r\n            return;\r\n        }\r\n        this.privIsDisposed = true;\r\n        if (!!this.config) {\r\n            this.config.close();\r\n        }\r\n        this.privConfig = undefined;\r\n        this.privLanguage = undefined;\r\n        this.privProperties = undefined;\r\n        this.privRoom = undefined;\r\n        this.privToken = undefined;\r\n        this.privManager = undefined;\r\n        this.privIsConnected = false;\r\n        this.privIsReady = false;\r\n        this.privParticipants = undefined;\r\n    }\r\n\r\n    public async connectTranscriberRecognizer(recognizer: TranscriberRecognizer): Promise<void> {\r\n        if (!!this.privTranscriberRecognizer) {\r\n            await this.privTranscriberRecognizer.close();\r\n        }\r\n        await recognizer.enforceAudioGating();\r\n        this.privTranscriberRecognizer = recognizer;\r\n        this.privTranscriberRecognizer.conversation = this;\r\n    }\r\n\r\n    public getKeepAlive(): string {\r\n        const nickname: string = (!!this.me) ? this.me.displayName : \"default_nickname\";\r\n        return JSON.stringify({\r\n            id: \"0\",\r\n            nickname,\r\n            participantId: this.privRoom.participantId,\r\n            roomId: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.keepAlive\r\n        });\r\n    }\r\n\r\n    /** websocket callbacks */\r\n    /* eslint-disable @typescript-eslint/typedef */\r\n    private onConnected = (e: ConnectionEventArgs): void => {\r\n        this.privIsConnected = true;\r\n        try {\r\n            if (!!this.privConversationTranslator?.sessionStarted) {\r\n                this.privConversationTranslator.sessionStarted(this.privConversationTranslator, e);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onDisconnected = (e: ConnectionEventArgs): void => {\r\n        try {\r\n            if (!!this.privConversationTranslator?.sessionStopped) {\r\n                this.privConversationTranslator.sessionStopped(this.privConversationTranslator, e);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        } finally {\r\n            void this.close(false);\r\n        }\r\n    };\r\n\r\n    private onCanceled = (r: ConversationRecognizer, e: ConversationTranslationCanceledEventArgs): void => {\r\n        try {\r\n            if (!!this.privConversationTranslator?.canceled) {\r\n                this.privConversationTranslator.canceled(this.privConversationTranslator, e);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onParticipantUpdateCommandReceived = (r: ConversationRecognizer, e: ParticipantAttributeEventArgs): void => {\r\n        try {\r\n            const updatedParticipant: IInternalParticipant = this.privParticipants.getParticipant(e.id);\r\n            if (updatedParticipant !== undefined) {\r\n\r\n                switch (e.key) {\r\n                    case ConversationTranslatorCommandTypes.changeNickname:\r\n                        updatedParticipant.displayName = e.value as string;\r\n                        break;\r\n                    case ConversationTranslatorCommandTypes.setUseTTS:\r\n                        updatedParticipant.isUsingTts = e.value as boolean;\r\n                        break;\r\n                    case ConversationTranslatorCommandTypes.setProfanityFiltering:\r\n                        updatedParticipant.profanity = e.value as boolean;\r\n                        break;\r\n                    case ConversationTranslatorCommandTypes.setMute:\r\n                        updatedParticipant.isMuted = e.value as boolean;\r\n                        break;\r\n                    case ConversationTranslatorCommandTypes.setTranslateToLanguages:\r\n                        updatedParticipant.translateToLanguages = e.value as string[];\r\n                        break;\r\n                }\r\n                this.privParticipants.addOrUpdateParticipant(updatedParticipant);\r\n\r\n                if (!!this.privConversationTranslator) {\r\n                    this.privConversationTranslator.participantsChanged(\r\n                        this.privConversationTranslator,\r\n                        new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.Updated,\r\n                            [this.toParticipant(updatedParticipant)], e.sessionId));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onLockRoomCommandReceived = (): void => {\r\n        // TODO\r\n    };\r\n\r\n    private onMuteAllCommandReceived = (r: ConversationRecognizer, e: MuteAllEventArgs): void => {\r\n        try {\r\n            this.privParticipants.participants.forEach((p: IInternalParticipant): boolean => p.isMuted = (p.isHost ? false : e.isMuted));\r\n            if (!!this.privConversationTranslator) {\r\n                this.privConversationTranslator.participantsChanged(\r\n                    this.privConversationTranslator,\r\n                    new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.Updated,\r\n                        this.toParticipants(false), e.sessionId));\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onParticipantJoinCommandReceived = (r: ConversationRecognizer, e: ParticipantEventArgs): void => {\r\n        try {\r\n            const newParticipant: IInternalParticipant = this.privParticipants.addOrUpdateParticipant(e.participant);\r\n            if (newParticipant !== undefined) {\r\n                if (!!this.privConversationTranslator) {\r\n                    this.privConversationTranslator.participantsChanged(\r\n                        this.privConversationTranslator,\r\n                        new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.JoinedConversation,\r\n                            [this.toParticipant(newParticipant)], e.sessionId));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onParticipantLeaveCommandReceived = (r: ConversationRecognizer, e: ParticipantEventArgs): void => {\r\n        try {\r\n            const ejectedParticipant: IInternalParticipant = this.privParticipants.getParticipant(e.participant.id);\r\n            if (ejectedParticipant !== undefined) {\r\n                // remove the participant from the internal participants list\r\n                this.privParticipants.deleteParticipant(e.participant.id);\r\n                if (!!this.privConversationTranslator) {\r\n                    // notify subscribers that the participant has left the conversation\r\n                    this.privConversationTranslator.participantsChanged(\r\n                        this.privConversationTranslator,\r\n                        new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.LeftConversation,\r\n                            [this.toParticipant(ejectedParticipant)], e.sessionId));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onTranslationReceived = (r: ConversationRecognizer, e: ConversationReceivedTranslationEventArgs): void => {\r\n        try {\r\n            switch (e.command) {\r\n                case ConversationTranslatorMessageTypes.final:\r\n                    if (!!this.privConversationTranslator) {\r\n                        this.privConversationTranslator.transcribed(\r\n                            this.privConversationTranslator,\r\n                            new ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\r\n                    }\r\n                    break;\r\n                case ConversationTranslatorMessageTypes.partial:\r\n                    if (!!this.privConversationTranslator) {\r\n                        this.privConversationTranslator.transcribing(\r\n                            this.privConversationTranslator,\r\n                            new ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\r\n                    }\r\n                    break;\r\n                case ConversationTranslatorMessageTypes.instantMessage:\r\n                    if (!!this.privConversationTranslator) {\r\n                        this.privConversationTranslator.textMessageReceived(\r\n                            this.privConversationTranslator,\r\n                            new ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\r\n                    }\r\n                    break;\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onParticipantsListReceived = (r: ConversationRecognizer, e: ParticipantsListEventArgs): void => {\r\n        try {\r\n            // check if the session token needs to be updated\r\n            if (e.sessionToken !== undefined && e.sessionToken !== null) {\r\n                this.privRoom.token = e.sessionToken;\r\n            }\r\n            // save the participants\r\n            this.privParticipants.participants = [...e.participants];\r\n            // enable the conversation\r\n            if (this.privParticipants.me !== undefined) {\r\n                this.privIsReady = true;\r\n            }\r\n            if (!!this.privConversationTranslator) {\r\n                this.privConversationTranslator.participantsChanged(\r\n                    this.privConversationTranslator,\r\n                    new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.JoinedConversation, this.toParticipants(true), e.sessionId));\r\n            }\r\n            // if this is the host, update the nickname if needed\r\n            if (this.me.isHost) {\r\n                const nickname: string = this.privConversationTranslator?.properties.getProperty(PropertyId.ConversationTranslator_Name);\r\n                if (nickname !== undefined && nickname.length > 0 && nickname !== this.me.displayName) {\r\n                    // issue a change nickname request\r\n                    this.changeNicknameAsync(nickname);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onConversationExpiration = (r: ConversationRecognizer, e: ConversationExpirationEventArgs): void => {\r\n        try {\r\n            if (!!this.privConversationTranslator) {\r\n                this.privConversationTranslator.conversationExpiration(this.privConversationTranslator, e);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n    /* eslint-enable @typescript-eslint/typedef */\r\n\r\n    private addParticipantImplAsync(participant: IParticipant): Promise<void> {\r\n        const newParticipant: IInternalParticipant = this.privParticipants.addOrUpdateParticipant(participant);\r\n        if (newParticipant !== undefined) {\r\n            if (!!this.privTranscriberRecognizer) {\r\n                const conversationInfo = this.conversationInfo;\r\n                conversationInfo.participants = [participant];\r\n                return this.privTranscriberRecognizer.pushConversationEvent(conversationInfo, \"join\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private removeParticipantImplAsync(participant: IParticipant): Promise<void> {\r\n        this.privParticipants.deleteParticipant(participant.id);\r\n        const conversationInfo = this.conversationInfo;\r\n        conversationInfo.participants = [participant];\r\n        return this.privTranscriberRecognizer.pushConversationEvent(conversationInfo, \"leave\");\r\n    }\r\n\r\n    private async close(dispose: boolean): Promise<void> {\r\n        try {\r\n            this.privIsConnected = false;\r\n            await this.privConversationRecognizer?.close();\r\n            this.privConversationRecognizer = undefined;\r\n            if (!!this.privConversationTranslator) {\r\n                this.privConversationTranslator.dispose();\r\n            }\r\n        } catch (e) {\r\n            // ignore error\r\n            throw e;\r\n        }\r\n        if (dispose) {\r\n            this.dispose();\r\n        }\r\n    }\r\n\r\n    /** Helpers */\r\n    private handleCallback(cb: () => void, err: (message: string) => void): void {\r\n        if (!!cb) {\r\n            try {\r\n                cb();\r\n            } catch (e) {\r\n                if (!!err) {\r\n                    err(e as string);\r\n                }\r\n            }\r\n            cb = undefined;\r\n        }\r\n    }\r\n\r\n    private handleError(error: any, err: (message: string) => void): void {\r\n        if (!!err) {\r\n            if (error instanceof Error) {\r\n                const typedError: Error = error;\r\n                err(typedError.name + \": \" + typedError.message);\r\n\r\n            } else {\r\n                err(error as string);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Participant Helpers */\r\n    private toParticipants(includeHost: boolean): Participant[] {\r\n\r\n        const participants: Participant[] = this.privParticipants.participants.map((p: IInternalParticipant): Participant => ( this.toParticipant(p) ) );\r\n        if (!includeHost) {\r\n            return participants.filter((p: Participant): boolean => p.isHost === false);\r\n        } else {\r\n            return participants;\r\n        }\r\n    }\r\n\r\n    private toParticipant(p: IInternalParticipant): Participant {\r\n        return new Participant(p.id, p.avatar, p.displayName, p.isHost, p.isMuted, p.isUsingTts, p.preferredLanguage, p.voice);\r\n    }\r\n\r\n    private getMuteAllCommand(isMuted: boolean): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.setMuteAll,\r\n            participantId: this.privRoom.participantId, // the id of the host\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: isMuted\r\n        });\r\n    }\r\n\r\n    private getMuteCommand(participantId: string, isMuted: boolean): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.setMute,\r\n            // eslint-disable-next-line object-shorthand\r\n            participantId: participantId,\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: isMuted\r\n        });\r\n    }\r\n\r\n    private getLockCommand(isLocked: boolean): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.setLockState,\r\n            participantId: this.privRoom.participantId,\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: isLocked\r\n        });\r\n    }\r\n\r\n    private getEjectCommand(participantId: string): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.ejectParticipant,\r\n            // eslint-disable-next-line object-shorthand\r\n            participantId: participantId,\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n        });\r\n    }\r\n\r\n    private getSetTranslateToLanguagesCommand(languages: string[]): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.setTranslateToLanguages,\r\n            participantId: this.privRoom.participantId, // the id of the host\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: languages\r\n        });\r\n    }\r\n\r\n    private getChangeNicknameCommand(nickname: string): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(nickname, \"nickname\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.changeNickname,\r\n            nickname,\r\n            participantId: this.privRoom.participantId, // the id of the host\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: nickname\r\n        });\r\n    }\r\n\r\n    private getMessageCommand(message: string): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n        Contracts.throwIfNullOrWhitespace(message, \"message\");\r\n\r\n        return JSON.stringify({\r\n            participantId: this.privRoom.participantId,\r\n            roomId: this.privRoom.roomId,\r\n            text: message,\r\n            type: ConversationTranslatorMessageTypes.instantMessage\r\n        });\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport bent, { BentResponse, RequestBody } from \"bent\";\r\nimport {\r\n    ArgumentNullError,\r\n    Deferred\r\n} from \"../common/Exports.js\";\r\nimport { IRequestOptions } from \"./Exports.js\";\r\n\r\nexport enum RestRequestType {\r\n    Get = \"GET\",\r\n    Post = \"POST\",\r\n    Delete = \"DELETE\",\r\n    File = \"file\",\r\n}\r\n\r\nexport interface IRestResponse {\r\n    ok: boolean;\r\n    status: number;\r\n    statusText: string;\r\n    data: string;\r\n    json: any;\r\n    headers: string;\r\n}\r\n\r\ninterface JsonError {\r\n    error?: {\r\n        message: string;\r\n    };\r\n}\r\n\r\n// accept rest operations via request method and return abstracted objects from server response\r\nexport class RestMessageAdapter {\r\n\r\n    private privIgnoreCache: boolean;\r\n    private privHeaders: { [key: string]: string };\r\n\r\n    public constructor(\r\n        configParams: IRequestOptions\r\n        ) {\r\n\r\n        if (!configParams) {\r\n            throw new ArgumentNullError(\"configParams\");\r\n        }\r\n\r\n        this.privHeaders = configParams.headers;\r\n        this.privIgnoreCache = configParams.ignoreCache;\r\n    }\r\n\r\n    public static extractHeaderValue(headerKey: string, headers: string): string {\r\n        let headerValue: string = \"\";\r\n\r\n        try {\r\n            const arr = headers.trim().split(/[\\r\\n]+/);\r\n            const headerMap: { [key: string]: string } = {};\r\n            arr.forEach((line: string): void => {\r\n                const parts = line.split(\": \");\r\n                const header = parts.shift().toLowerCase();\r\n                const value = parts.join(\": \");\r\n                headerMap[header] = value;\r\n            });\r\n\r\n            headerValue = headerMap[headerKey.toLowerCase()];\r\n        } catch (e) {\r\n            // ignore the error\r\n        }\r\n\r\n        return headerValue;\r\n    }\r\n\r\n    public set options(configParams: IRequestOptions) {\r\n        this.privHeaders = configParams.headers;\r\n        this.privIgnoreCache = configParams.ignoreCache;\r\n    }\r\n\r\n    public setHeaders(key: string, value: string): void {\r\n        this.privHeaders[key] = value;\r\n    }\r\n\r\n    public request(\r\n        method: RestRequestType,\r\n        uri: string,\r\n        queryParams: { [key: string]: any } = {},\r\n        body: any = null,\r\n        ): Promise<IRestResponse> {\r\n\r\n        const responseReceivedDeferral = new Deferred<IRestResponse>();\r\n\r\n        const requestCommand = method === RestRequestType.File ? \"POST\" : method;\r\n        const handleRestResponse = (data: BentResponse, j: JsonError = {}): IRestResponse => {\r\n            const d: { statusText?: string; statusMessage?: string } = data;\r\n            return {\r\n                data: JSON.stringify(j),\r\n                headers: JSON.stringify(data.headers),\r\n                json: j,\r\n                ok: data.statusCode >= 200 && data.statusCode < 300,\r\n                status: data.statusCode,\r\n                statusText: j.error ? j.error.message : d.statusText ? d.statusText : d.statusMessage\r\n            };\r\n        };\r\n\r\n        const send = (postData: RequestBody): void => {\r\n            const sendRequest = bent(uri, requestCommand, this.privHeaders, 200, 201, 202, 204, 400, 401, 402, 403, 404);\r\n            const params = this.queryParams(queryParams) === \"\" ? \"\" : `?${this.queryParams(queryParams)}`;\r\n            sendRequest(params, postData).then( async (data: BentResponse): Promise<void> => {\r\n                if (method === RestRequestType.Delete || data.statusCode === 204) {\r\n                    // No JSON from Delete and reset (204) operations\r\n                    responseReceivedDeferral.resolve(handleRestResponse(data));\r\n                } else {\r\n                    try {\r\n                        const j: JsonError = await data.json() as JsonError;\r\n                        responseReceivedDeferral.resolve(handleRestResponse(data, j));\r\n                    } catch {\r\n                        responseReceivedDeferral.resolve(handleRestResponse(data));\r\n                    }\r\n                }\r\n            }).catch((error: string): void => {\r\n                responseReceivedDeferral.reject(error);\r\n            });\r\n        };\r\n\r\n        if (this.privIgnoreCache) {\r\n            this.privHeaders[\"Cache-Control\"] = \"no-cache\";\r\n        }\r\n\r\n        if (method === RestRequestType.Post && body) {\r\n            this.privHeaders[\"content-type\"] = \"application/json\";\r\n            this.privHeaders[\"Content-Type\"] = \"application/json\";\r\n        }\r\n        send(body as RequestBody);\r\n        return responseReceivedDeferral.promise;\r\n    }\r\n\r\n    private queryParams(params: { [key: string]: string } = {}): string {\r\n        return Object.keys(params)\r\n            .map((k: string): string => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k]))\r\n            .join(\"&\");\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport {\r\n    ConversationConnectionConfig,\r\n    IAuthentication,\r\n    ServicePropertiesPropertyName,\r\n} from \"../../common.speech/Exports.js\";\r\nimport { ConversationTranslatorConnectionFactory } from \"../../common.speech/Transcription/ConversationTranslatorConnectionFactory.js\";\r\nimport {\r\n    IDisposable,\r\n    IErrorMessages,\r\n    IStringDictionary,\r\n    marshalPromiseToCallbacks\r\n} from \"../../common/Exports.js\";\r\nimport { Contracts } from \"../Contracts.js\";\r\nimport {\r\n    AudioConfig,\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    ProfanityOption,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ServicePropertyChannel,\r\n    SessionEventArgs,\r\n    SpeechTranslationConfig,\r\n    TranslationRecognitionEventArgs,\r\n    TranslationRecognizer\r\n} from \"../Exports.js\";\r\nimport { ConversationImpl } from \"./Conversation.js\";\r\nimport {\r\n    ConversationCommon,\r\n    ConversationExpirationEventArgs,\r\n    ConversationHandler,\r\n    ConversationParticipantsChangedEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    ConversationTranslationEventArgs,\r\n    IConversationTranslator,\r\n    Participant\r\n} from \"./Exports.js\";\r\nimport { Callback, IConversation } from \"./IConversation.js\";\r\n\r\nexport enum SpeechState {\r\n    Inactive, Connecting, Connected\r\n}\r\n\r\n// child class of TranslationRecognizer meant only for use with ConversationTranslator\r\nclass ConversationTranslationRecognizer extends TranslationRecognizer {\r\n    private privTranslator: ConversationTranslator;\r\n    private privSpeechState: SpeechState;\r\n\r\n    public constructor(speechConfig: SpeechTranslationConfig, audioConfig: AudioConfig, translator: ConversationTranslator, convGetter: () => ConversationImpl) {\r\n\r\n        super(speechConfig, audioConfig, new ConversationTranslatorConnectionFactory(convGetter));\r\n\r\n        this.privSpeechState = SpeechState.Inactive;\r\n        if (!!translator) {\r\n            this.privTranslator = translator;\r\n            this.sessionStarted = (): void => {\r\n                this.privSpeechState = SpeechState.Connected;\r\n            };\r\n\r\n            this.sessionStopped = (): void => {\r\n                this.privSpeechState = SpeechState.Inactive;\r\n            };\r\n\r\n            this.recognizing = (tr: TranslationRecognizer, e: TranslationRecognitionEventArgs): void => {\r\n                if (!!this.privTranslator.recognizing) {\r\n                    this.privTranslator.recognizing(this.privTranslator, e);\r\n                }\r\n            };\r\n\r\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\r\n            this.recognized = async (tr: TranslationRecognizer, e: TranslationRecognitionEventArgs): Promise<void> => {\r\n                // if there is an error connecting to the conversation service from the speech service the error will be returned in the ErrorDetails field.\r\n                if (e.result?.errorDetails) {\r\n                    await this.cancelSpeech();\r\n                    // TODO: format the error message contained in 'errorDetails'\r\n                    this.fireCancelEvent(e.result.errorDetails);\r\n                } else {\r\n                    if (!!this.privTranslator.recognized) {\r\n                        this.privTranslator.recognized(this.privTranslator, e);\r\n                    }\r\n                }\r\n                return;\r\n            };\r\n\r\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\r\n            this.canceled = async (): Promise<void> => {\r\n                if (this.privSpeechState !== SpeechState.Inactive) {\r\n                    try {\r\n                        await this.cancelSpeech();\r\n                    } catch (error) {\r\n                        this.privSpeechState = SpeechState.Inactive;\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    public get state(): SpeechState {\r\n        return this.privSpeechState;\r\n    }\r\n\r\n    public set state(newState: SpeechState) {\r\n        this.privSpeechState = newState;\r\n    }\r\n\r\n    public set authentication(token: IAuthentication) {\r\n        this.privReco.authentication = token;\r\n    }\r\n\r\n\r\n    public onConnection(): void {\r\n        this.privSpeechState = SpeechState.Connected;\r\n    }\r\n\r\n    public async onCancelSpeech(): Promise<void> {\r\n        this.privSpeechState = SpeechState.Inactive;\r\n        await this.cancelSpeech();\r\n    }\r\n\r\n    /**\r\n     * Fire a cancel event\r\n     * @param error\r\n     */\r\n    private fireCancelEvent(error: string): void {\r\n        try {\r\n            if (!!this.privTranslator.canceled) {\r\n                const cancelEvent: ConversationTranslationCanceledEventArgs = new ConversationTranslationCanceledEventArgs(\r\n                    CancellationReason.Error,\r\n                    error,\r\n                    CancellationErrorCode.RuntimeError\r\n                    );\r\n\r\n                this.privTranslator.canceled(this.privTranslator, cancelEvent);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    }\r\n\r\n    private async cancelSpeech(): Promise<void> {\r\n        try {\r\n            this.stopContinuousRecognitionAsync();\r\n            await this.privReco?.disconnect();\r\n            this.privSpeechState = SpeechState.Inactive;\r\n        } catch (e) {\r\n            // ignore the error\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Join, leave or connect to a conversation.\r\n */\r\nexport class ConversationTranslator extends ConversationCommon implements IConversationTranslator, IDisposable {\r\n\r\n    public canceled: (sender: ConversationHandler, event: ConversationTranslationCanceledEventArgs) => void;\r\n    public conversationExpiration: (sender: IConversationTranslator, event: ConversationExpirationEventArgs) => void;\r\n    public participantsChanged: (sender: IConversationTranslator, event: ConversationParticipantsChangedEventArgs) => void;\r\n    public sessionStarted: (sender: ConversationHandler, event: SessionEventArgs) => void;\r\n    public sessionStopped: (sender: ConversationHandler, event: SessionEventArgs) => void;\r\n    public textMessageReceived: (sender: IConversationTranslator, event: ConversationTranslationEventArgs) => void;\r\n\r\n    // Callbacks for whole conversation results\r\n    public transcribed: (sender: IConversationTranslator, event: ConversationTranslationEventArgs) => void;\r\n    public transcribing: (sender: IConversationTranslator, event: ConversationTranslationEventArgs) => void;\r\n\r\n    // Callbacks for detecting speech/translation results from self\r\n    public recognized: (sender: IConversationTranslator, event: TranslationRecognitionEventArgs) => void;\r\n    public recognizing: (sender: IConversationTranslator, event: TranslationRecognitionEventArgs) => void;\r\n\r\n    private privSpeechRecognitionLanguage: string;\r\n    private privProperties: PropertyCollection;\r\n    private privIsDisposed: boolean;\r\n    private privCTRecognizer: ConversationTranslationRecognizer;\r\n    private privIsSpeaking: boolean;\r\n    private privConversation: ConversationImpl;\r\n    private privErrors: IErrorMessages = ConversationConnectionConfig.restErrors;\r\n    private privPlaceholderKey: string;\r\n    private privPlaceholderRegion: string;\r\n\r\n    public constructor(audioConfig?: AudioConfig) {\r\n        super(audioConfig);\r\n        this.privIsDisposed = false;\r\n        this.privIsSpeaking = false;\r\n        this.privPlaceholderKey = \"abcdefghijklmnopqrstuvwxyz012345\";\r\n        this.privPlaceholderRegion = \"westus\";\r\n        this.privProperties = new PropertyCollection();\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privSpeechRecognitionLanguage;\r\n    }\r\n\r\n    public get participants(): Participant[] {\r\n        return this.privConversation?.participants;\r\n    }\r\n\r\n    private get canSpeak(): boolean {\r\n\r\n        // is there a Conversation websocket available and has the Recognizer been set up\r\n        if (!this.privConversation.isConnected || !this.privCTRecognizer) {\r\n            return false;\r\n        }\r\n\r\n        // is the user already speaking\r\n        if (this.privIsSpeaking || this.privCTRecognizer.state === SpeechState.Connected || this.privCTRecognizer.state === SpeechState.Connecting) {\r\n            return false;\r\n        }\r\n\r\n        // is the user muted\r\n        if (this.privConversation.isMutedByHost) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public onToken(token: IAuthentication): void {\r\n        this.privCTRecognizer.authentication = token;\r\n    }\r\n\r\n    public setServiceProperty(name: string, value: string): void {\r\n        const currentProperties: IStringDictionary<string> = JSON.parse(this.privProperties.getProperty(ServicePropertiesPropertyName, \"{}\")) as IStringDictionary<string>;\r\n\r\n        currentProperties[name] = value;\r\n\r\n        this.privProperties.setProperty(ServicePropertiesPropertyName, JSON.stringify(currentProperties));\r\n    }\r\n\r\n    /**\r\n     * Join a conversation. If this is the host, pass in the previously created Conversation object.\r\n     * @param conversation\r\n     * @param nickname\r\n     * @param lang\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public joinConversationAsync(conversation: IConversation, nickname: string, cb?: Callback, err?: Callback): void;\r\n    public joinConversationAsync(conversationId: string, nickname: string, lang: string, cb?: Callback, err?: Callback): void;\r\n    public joinConversationAsync(conversation: string | IConversation, nickname: string, param1?: string | Callback, param2?: Callback, param3?: Callback): void {\r\n\r\n        try {\r\n\r\n            if (typeof conversation === \"string\") {\r\n\r\n                Contracts.throwIfNullOrUndefined(conversation, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversation id\"));\r\n                Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\r\n\r\n                if (!!this.privConversation) {\r\n                    this.handleError(new Error(this.privErrors.permissionDeniedStart), param3);\r\n                }\r\n\r\n                let lang: string = param1 as string;\r\n                if (lang === undefined || lang === null || lang === \"\") {\r\n                    lang = ConversationConnectionConfig.defaultLanguageCode;\r\n                }\r\n\r\n                // create a placeholder config\r\n                this.privSpeechTranslationConfig = SpeechTranslationConfig.fromSubscription(\r\n                    this.privPlaceholderKey,\r\n                    this.privPlaceholderRegion);\r\n                this.privSpeechTranslationConfig.setProfanity(ProfanityOption.Masked);\r\n                this.privSpeechTranslationConfig.addTargetLanguage(lang);\r\n                this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage], lang);\r\n                this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.ConversationTranslator_Name], nickname);\r\n\r\n                const propertyIdsToCopy: (string | PropertyId)[] = [\r\n                    PropertyId.SpeechServiceConnection_Host,\r\n                    PropertyId.ConversationTranslator_Host,\r\n                    PropertyId.SpeechServiceConnection_Endpoint,\r\n                    PropertyId.SpeechServiceConnection_ProxyHostName,\r\n                    PropertyId.SpeechServiceConnection_ProxyPassword,\r\n                    PropertyId.SpeechServiceConnection_ProxyPort,\r\n                    PropertyId.SpeechServiceConnection_ProxyUserName,\r\n                    \"ConversationTranslator_MultiChannelAudio\",\r\n                    \"ConversationTranslator_Region\"\r\n                ];\r\n\r\n                for (const prop of propertyIdsToCopy) {\r\n                    const value = this.privProperties.getProperty(prop);\r\n                    if (value) {\r\n                        const key = typeof prop === \"string\" ? prop : PropertyId[prop];\r\n                        this.privSpeechTranslationConfig.setProperty(key, value);\r\n                    }\r\n                }\r\n\r\n                const currentProperties  = JSON.parse(this.privProperties.getProperty(ServicePropertiesPropertyName, \"{}\")) as IStringDictionary<string>;\r\n                for (const prop of Object.keys(currentProperties)) {\r\n                    this.privSpeechTranslationConfig.setServiceProperty(prop, currentProperties[prop], ServicePropertyChannel.UriQueryParameter);\r\n                }\r\n\r\n                // join the conversation\r\n                this.privConversation = new ConversationImpl(this.privSpeechTranslationConfig);\r\n                this.privConversation.conversationTranslator = this;\r\n\r\n                this.privConversation.joinConversationAsync(\r\n                    conversation,\r\n                    nickname,\r\n                    lang,\r\n                    ((result: string): void => {\r\n\r\n                        if (!result) {\r\n                            this.handleError(new Error(this.privErrors.permissionDeniedConnect), param3);\r\n                        }\r\n\r\n                        this.privSpeechTranslationConfig.authorizationToken = result;\r\n                        this.privConversation.room.isHost = false;\r\n\r\n                        // connect to the ws\r\n                        this.privConversation.startConversationAsync(\r\n                            ((): void => {\r\n                                this.handleCallback(param2, param3);\r\n                            }),\r\n                            ((error: any): void => {\r\n                                this.handleError(error, param3);\r\n                            }));\r\n\r\n                    }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, param3);\r\n                    }));\r\n\r\n            } else if (typeof conversation === \"object\") {\r\n\r\n                Contracts.throwIfNullOrUndefined(conversation, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversation id\"));\r\n                Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\r\n\r\n                // save the nickname\r\n                this.privProperties.setProperty(PropertyId.ConversationTranslator_Name, nickname);\r\n                // ref the conversation object\r\n                this.privConversation = conversation as ConversationImpl;\r\n                // ref the conversation translator object\r\n                this.privConversation.conversationTranslator = this;\r\n                this.privConversation.room.isHost = true;\r\n\r\n                Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedConnect);\r\n                Contracts.throwIfNullOrUndefined(this.privConversation.room.token, this.privErrors.permissionDeniedConnect);\r\n\r\n                this.privSpeechTranslationConfig = conversation.config;\r\n\r\n                this.handleCallback(param1 as Callback, param2);\r\n            } else {\r\n                this.handleError(\r\n                    new Error(this.privErrors.invalidArgs.replace(\"{arg}\", \"invalid conversation type\")),\r\n                    param2);\r\n            }\r\n\r\n        } catch (error) {\r\n            this.handleError(error, typeof param1 === \"string\" ? param3 : param2);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Leave the conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public leaveConversationAsync(cb?: Callback, err?: Callback): void {\r\n\r\n        marshalPromiseToCallbacks((async (): Promise<void> => {\r\n\r\n            // stop the speech websocket\r\n            await this.cancelSpeech();\r\n            // stop the websocket\r\n            await this.privConversation.endConversationImplAsync();\r\n            // https delete request\r\n            await this.privConversation.deleteConversationImplAsync();\r\n            this.dispose();\r\n\r\n        })(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Send a text message\r\n     * @param message\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public sendTextMessageAsync(message: string, cb?: Callback, err?: Callback): void {\r\n\r\n        try {\r\n            Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedSend);\r\n            Contracts.throwIfNullOrWhitespace(message, this.privErrors.invalidArgs.replace(\"{arg}\", message));\r\n\r\n            this.privConversation.sendTextMessageAsync(message, cb, err);\r\n        } catch (error) {\r\n\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Start speaking\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public startTranscribingAsync(cb?: Callback, err?: Callback): void {\r\n        marshalPromiseToCallbacks((async (): Promise<void> => {\r\n            try {\r\n                Contracts.throwIfNullOrUndefined(this.privConversation, this.privErrors.permissionDeniedSend);\r\n                Contracts.throwIfNullOrUndefined(this.privConversation.room.token, this.privErrors.permissionDeniedConnect);\r\n\r\n                if (this.privCTRecognizer === undefined) {\r\n                    await this.connectTranslatorRecognizer();\r\n                }\r\n                Contracts.throwIfNullOrUndefined(this.privCTRecognizer, this.privErrors.permissionDeniedSend);\r\n\r\n                if (!this.canSpeak) {\r\n                    this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n                }\r\n\r\n                await this.startContinuousRecognition();\r\n\r\n                this.privIsSpeaking = true;\r\n            } catch (error) {\r\n                this.privIsSpeaking = false;\r\n                await this.cancelSpeech();\r\n                throw error;\r\n            }\r\n        })(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Stop speaking\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public stopTranscribingAsync(cb?: Callback, err?: Callback): void {\r\n        marshalPromiseToCallbacks((async (): Promise<void> => {\r\n            try {\r\n                if (!this.privIsSpeaking) {\r\n                    // stop speech\r\n                    await this.cancelSpeech();\r\n                    return;\r\n                }\r\n\r\n                // stop the recognition but leave the websocket open\r\n                this.privIsSpeaking = false;\r\n                await new Promise((resolve: () => void, reject: (error: string) => void): void => {\r\n                    this.privCTRecognizer.stopContinuousRecognitionAsync(resolve, reject);\r\n                });\r\n\r\n            } catch (error) {\r\n                await this.cancelSpeech();\r\n            }\r\n        })(), cb, err);\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public dispose(reason?: string, success?: () => void, err?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks((async (): Promise<void> => {\r\n            if (this.isDisposed && !this.privIsSpeaking) {\r\n                return;\r\n            }\r\n            await this.cancelSpeech();\r\n            this.privIsDisposed = true;\r\n            this.privSpeechTranslationConfig.close();\r\n            this.privSpeechRecognitionLanguage = undefined;\r\n            this.privProperties = undefined;\r\n            this.privAudioConfig = undefined;\r\n            this.privSpeechTranslationConfig = undefined;\r\n            this.privConversation.dispose();\r\n            this.privConversation = undefined;\r\n        })(), success, err);\r\n    }\r\n\r\n    /**\r\n     * Cancel the speech websocket\r\n     */\r\n    private async cancelSpeech(): Promise<void> {\r\n        try {\r\n            this.privIsSpeaking = false;\r\n            await this.privCTRecognizer?.onCancelSpeech();\r\n            this.privCTRecognizer = undefined;\r\n        } catch (e) {\r\n            // ignore the error\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Connect to the speech translation recognizer.\r\n     * Currently there is no language validation performed before sending the SpeechLanguage code to the service.\r\n     * If it's an invalid language the raw error will be: 'Error during WebSocket handshake: Unexpected response code: 400'\r\n     * e.g. pass in 'fr' instead of 'fr-FR', or a text-only language 'cy'\r\n     */\r\n    private async connectTranslatorRecognizer(): Promise<void> {\r\n        try {\r\n\r\n            if (this.privAudioConfig === undefined) {\r\n                this.privAudioConfig = AudioConfig.fromDefaultMicrophoneInput();\r\n            }\r\n\r\n            // clear the temp subscription key if it's a participant joining\r\n            if (this.privSpeechTranslationConfig.getProperty(PropertyId[PropertyId.SpeechServiceConnection_Key])\r\n                === this.privPlaceholderKey) {\r\n                this.privSpeechTranslationConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_Key], \"\");\r\n            }\r\n\r\n            const convGetter = (): ConversationImpl => this.privConversation;\r\n            this.privCTRecognizer = new ConversationTranslationRecognizer(this.privSpeechTranslationConfig, this.privAudioConfig, this, convGetter);\r\n        } catch (error) {\r\n            await this.cancelSpeech();\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle the start speaking request\r\n     */\r\n    private startContinuousRecognition(): Promise<void> {\r\n        return new Promise((resolve: () => void, reject: (error: string) => void): void => {\r\n            this.privCTRecognizer.startContinuousRecognitionAsync(resolve, reject);\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ObjectDisposedError } from \"./Error.js\";\r\nimport { IDetachable } from \"./IDetachable.js\";\r\nimport { IStringDictionary } from \"./IDictionary.js\";\r\nimport { IDisposable } from \"./IDisposable.js\";\r\n\r\nexport interface IList<TItem> extends IDisposable {\r\n    get(itemIndex: number): TItem;\r\n    first(): TItem;\r\n    last(): TItem;\r\n\r\n    add(item: TItem): void;\r\n    insertAt(index: number, item: TItem): void;\r\n\r\n    removeFirst(): TItem;\r\n    removeLast(): TItem;\r\n    removeAt(index: number): TItem;\r\n    remove(index: number, count: number): TItem[];\r\n    clear(): void;\r\n\r\n    length(): number;\r\n\r\n    onAdded(addedCallback: () => void): IDetachable;\r\n    onRemoved(removedCallback: () => void): IDetachable;\r\n    onDisposed(disposedCallback: () => void): IDetachable;\r\n\r\n    join(seperator?: string): string;\r\n\r\n    toArray(): TItem[];\r\n\r\n    any(callback?: (item: TItem, index: number) => boolean): boolean;\r\n    all(callback: (item: TItem) => boolean): boolean;\r\n    forEach(callback: (item: TItem, index: number) => void): void;\r\n    select<T2>(callback: (item: TItem, index: number) => T2): List<T2>;\r\n    where(callback: (item: TItem, index: number) => boolean): List<TItem>;\r\n    orderBy(compareFn: (a: TItem, b: TItem) => number): List<TItem>;\r\n    orderByDesc(compareFn: (a: TItem, b: TItem) => number): List<TItem>;\r\n    clone(): List<TItem>;\r\n    concat(list: List<TItem>): List<TItem>;\r\n    concatArray(array: TItem[]): List<TItem>;\r\n}\r\n\r\nexport class List<TItem> implements IList<TItem>  {\r\n    private privList: TItem[];\r\n    private privSubscriptionIdCounter: number = 0;\r\n    private privAddSubscriptions: IStringDictionary<() => void> = {};\r\n    private privRemoveSubscriptions: IStringDictionary<() => void> = {};\r\n    private privDisposedSubscriptions: IStringDictionary<() => void> = {};\r\n    private privDisposeReason: string = null;\r\n\r\n    public constructor(list?: TItem[]) {\r\n        this.privList = [];\r\n        // copy the list rather than taking as is.\r\n        if (list) {\r\n            for (const item of list) {\r\n                this.privList.push(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    public get(itemIndex: number): TItem {\r\n        this.throwIfDisposed();\r\n        return this.privList[itemIndex];\r\n    }\r\n\r\n    public first(): TItem {\r\n        return this.get(0);\r\n    }\r\n\r\n    public last(): TItem {\r\n        return this.get(this.length() - 1);\r\n    }\r\n\r\n    public add(item: TItem): void {\r\n        this.throwIfDisposed();\r\n        this.insertAt(this.privList.length, item);\r\n    }\r\n\r\n    public insertAt(index: number, item: TItem): void {\r\n        this.throwIfDisposed();\r\n        if (index === 0) {\r\n            this.privList.unshift(item);\r\n        } else if (index === this.privList.length) {\r\n            this.privList.push(item);\r\n        } else {\r\n            this.privList.splice(index, 0, item);\r\n        }\r\n        this.triggerSubscriptions(this.privAddSubscriptions);\r\n    }\r\n\r\n    public removeFirst(): TItem {\r\n        this.throwIfDisposed();\r\n        return this.removeAt(0);\r\n    }\r\n\r\n    public removeLast(): TItem {\r\n        this.throwIfDisposed();\r\n        return this.removeAt(this.length() - 1);\r\n    }\r\n\r\n    public removeAt(index: number): TItem {\r\n        this.throwIfDisposed();\r\n        return this.remove(index, 1)[0];\r\n    }\r\n\r\n    public remove(index: number, count: number): TItem[] {\r\n        this.throwIfDisposed();\r\n        const removedElements = this.privList.splice(index, count);\r\n        this.triggerSubscriptions(this.privRemoveSubscriptions);\r\n        return removedElements;\r\n    }\r\n\r\n    public clear(): void {\r\n        this.throwIfDisposed();\r\n        this.remove(0, this.length());\r\n    }\r\n\r\n    public length(): number {\r\n        this.throwIfDisposed();\r\n        return this.privList.length;\r\n    }\r\n\r\n    public onAdded(addedCallback: () => void): IDetachable {\r\n        this.throwIfDisposed();\r\n        const subscriptionId = this.privSubscriptionIdCounter++;\r\n\r\n        this.privAddSubscriptions[subscriptionId] = addedCallback;\r\n\r\n        return {\r\n            detach: (): Promise<void> => {\r\n                delete this.privAddSubscriptions[subscriptionId];\r\n                return Promise.resolve();\r\n            },\r\n        };\r\n    }\r\n\r\n    public onRemoved(removedCallback: () => void): IDetachable {\r\n        this.throwIfDisposed();\r\n        const subscriptionId = this.privSubscriptionIdCounter++;\r\n\r\n        this.privRemoveSubscriptions[subscriptionId] = removedCallback;\r\n\r\n        return {\r\n            detach: (): Promise<void> => {\r\n                delete this.privRemoveSubscriptions[subscriptionId];\r\n                return Promise.resolve();\r\n            },\r\n        };\r\n    }\r\n\r\n    public onDisposed(disposedCallback: () => void): IDetachable {\r\n        this.throwIfDisposed();\r\n        const subscriptionId = this.privSubscriptionIdCounter++;\r\n\r\n        this.privDisposedSubscriptions[subscriptionId] = disposedCallback;\r\n\r\n        return {\r\n            detach: (): Promise<void> => {\r\n                delete this.privDisposedSubscriptions[subscriptionId];\r\n                return Promise.resolve();\r\n            },\r\n        };\r\n    }\r\n\r\n    public join(seperator?: string): string {\r\n        this.throwIfDisposed();\r\n        return this.privList.join(seperator);\r\n    }\r\n\r\n    public toArray(): TItem[] {\r\n        const cloneCopy = Array<TItem>();\r\n        this.privList.forEach((val: TItem): void => {\r\n            cloneCopy.push(val);\r\n        });\r\n        return cloneCopy;\r\n    }\r\n\r\n    public any(callback?: (item: TItem, index: number) => boolean): boolean {\r\n        this.throwIfDisposed();\r\n        if (callback) {\r\n            return this.where(callback).length() > 0;\r\n        } else {\r\n            return this.length() > 0;\r\n        }\r\n    }\r\n\r\n    public all(callback: (item: TItem) => boolean): boolean {\r\n        this.throwIfDisposed();\r\n        return this.where(callback).length() === this.length();\r\n    }\r\n\r\n    public forEach(callback: (item: TItem, index: number) => void): void {\r\n        this.throwIfDisposed();\r\n        for (let i = 0; i < this.length(); i++) {\r\n            callback(this.privList[i], i);\r\n        }\r\n    }\r\n\r\n    public select<T2>(callback: (item: TItem, index: number) => T2): List<T2> {\r\n        this.throwIfDisposed();\r\n        const selectList: T2[] = [];\r\n        for (let i = 0; i < this.privList.length; i++) {\r\n            selectList.push(callback(this.privList[i], i));\r\n        }\r\n\r\n        return new List<T2>(selectList);\r\n    }\r\n\r\n    public where(callback: (item: TItem, index: number) => boolean): List<TItem> {\r\n        this.throwIfDisposed();\r\n        const filteredList = new List<TItem>();\r\n        for (let i = 0; i < this.privList.length; i++) {\r\n            if (callback(this.privList[i], i)) {\r\n                filteredList.add(this.privList[i]);\r\n            }\r\n        }\r\n        return filteredList;\r\n    }\r\n\r\n    public orderBy(compareFn: (a: TItem, b: TItem) => number): List<TItem> {\r\n        this.throwIfDisposed();\r\n        const clonedArray = this.toArray();\r\n        const orderedArray = clonedArray.sort(compareFn);\r\n        return new List(orderedArray);\r\n    }\r\n\r\n    public orderByDesc(compareFn: (a: TItem, b: TItem) => number): List<TItem> {\r\n        this.throwIfDisposed();\r\n        return this.orderBy((a: TItem, b: TItem): number => compareFn(b, a));\r\n    }\r\n\r\n    public clone(): List<TItem> {\r\n        this.throwIfDisposed();\r\n        return new List<TItem>(this.toArray());\r\n    }\r\n\r\n    public concat(list: List<TItem>): List<TItem> {\r\n        this.throwIfDisposed();\r\n        return new List<TItem>(this.privList.concat(list.toArray()));\r\n    }\r\n\r\n    public concatArray(array: TItem[]): List<TItem> {\r\n        this.throwIfDisposed();\r\n        return new List<TItem>(this.privList.concat(array));\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privList == null;\r\n    }\r\n\r\n    public dispose(reason?: string): void {\r\n        if (!this.isDisposed()) {\r\n            this.privDisposeReason = reason;\r\n            this.privList = null;\r\n            this.privAddSubscriptions = null;\r\n            this.privRemoveSubscriptions = null;\r\n            this.triggerSubscriptions(this.privDisposedSubscriptions);\r\n        }\r\n    }\r\n\r\n    private throwIfDisposed(): void {\r\n        if (this.isDisposed()) {\r\n            throw new ObjectDisposedError(\"List\", this.privDisposeReason);\r\n        }\r\n    }\r\n\r\n    private triggerSubscriptions(subscriptions: IStringDictionary<() => void>): void {\r\n        if (subscriptions) {\r\n            for (const subscriptionId in subscriptions) {\r\n                if (subscriptionId) {\r\n                    subscriptions[subscriptionId]();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ServicePropertiesPropertyName,\r\n} from \"../common.speech/Exports.js\";\r\nimport { IConnection, IStringDictionary } from \"../common/Exports.js\";\r\nimport { PropertyId } from \"../sdk/Exports.js\";\r\nimport { AuthInfo, IConnectionFactory, RecognizerConfig } from \"./Exports.js\";\r\nimport { QueryParameterNames } from \"./QueryParameterNames.js\";\r\n\r\nexport abstract class ConnectionFactoryBase implements IConnectionFactory {\r\n\r\n    public static getHostSuffix(region: string): string {\r\n        if (!!region) {\r\n            if (region.toLowerCase().startsWith(\"china\")) {\r\n                return \".azure.cn\";\r\n            }\r\n            if (region.toLowerCase().startsWith(\"usgov\")) {\r\n                return \".azure.us\";\r\n            }\r\n        }\r\n        return \".microsoft.com\";\r\n    }\r\n\r\n    public abstract create(\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection;\r\n\r\n    protected setCommonUrlParams(\r\n        config: RecognizerConfig,\r\n        queryParams: IStringDictionary<string>,\r\n        endpoint: string): void {\r\n\r\n        const propertyIdToParameterMap: Map<number, string> = new Map([\r\n            [PropertyId.Speech_SegmentationSilenceTimeoutMs, QueryParameterNames.SegmentationSilenceTimeoutMs],\r\n            [PropertyId.SpeechServiceConnection_EnableAudioLogging, QueryParameterNames.EnableAudioLogging],\r\n            [PropertyId.SpeechServiceConnection_EndSilenceTimeoutMs, QueryParameterNames.EndSilenceTimeoutMs],\r\n            [PropertyId.SpeechServiceConnection_InitialSilenceTimeoutMs, QueryParameterNames.InitialSilenceTimeoutMs],\r\n            [PropertyId.SpeechServiceResponse_PostProcessingOption, QueryParameterNames.Postprocessing],\r\n            [PropertyId.SpeechServiceResponse_ProfanityOption, QueryParameterNames.Profanity],\r\n            [PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, QueryParameterNames.EnableWordLevelTimestamps],\r\n            [PropertyId.SpeechServiceResponse_StablePartialResultThreshold, QueryParameterNames.StableIntermediateThreshold],\r\n        ]);\r\n\r\n        propertyIdToParameterMap.forEach((parameterName: string, propertyId: PropertyId): void => {\r\n            this.setUrlParameter(propertyId, parameterName, config, queryParams, endpoint);\r\n        });\r\n\r\n\r\n        const serviceProperties: IStringDictionary<string> = JSON.parse(config.parameters.getProperty(ServicePropertiesPropertyName, \"{}\")) as IStringDictionary<string>;\r\n\r\n        Object.keys(serviceProperties).forEach((value: string): void => {\r\n            queryParams[value] = serviceProperties[value];\r\n        });\r\n    }\r\n\r\n    protected setUrlParameter(\r\n        propId: PropertyId,\r\n        parameterName: string,\r\n        config: RecognizerConfig,\r\n        queryParams: IStringDictionary<string>,\r\n        endpoint: string): void {\r\n\r\n        const value: string = config.parameters.getProperty(propId, undefined);\r\n\r\n        // FIXME: The .search() check will incorrectly match parameter name anywhere in the string\r\n        //        including e.g. the path portion, or even as a substring of other query parameters\r\n        if (value && (!endpoint || endpoint.search(parameterName) === -1)) {\r\n            queryParams[parameterName] = value.toLocaleLowerCase();\r\n        }\r\n    }\r\n\r\n}\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nvar _default = {\n  randomUUID\n};\nexports.default = _default;","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","/* eslint-disable @typescript-eslint/no-unsafe-return */\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"./Error.js\";\r\nimport { createNoDashGuid } from \"./Guid.js\";\r\nimport { IStringDictionary } from \"./IDictionary.js\";\r\n\r\nexport enum MessageType {\r\n    Text,\r\n    Binary,\r\n}\r\n\r\nexport class ConnectionMessage {\r\n\r\n    private privMessageType: MessageType;\r\n    private privHeaders: IStringDictionary<string>;\r\n    private privBody: any = null;\r\n    private privSize: number;\r\n\r\n    private privId: string;\r\n\r\n    public constructor(\r\n        messageType: MessageType,\r\n        body: any,\r\n        headers?: IStringDictionary<string>,\r\n        id?: string) {\r\n\r\n        if (messageType === MessageType.Text && body && !(typeof (body) === \"string\")) {\r\n            throw new InvalidOperationError(\"Payload must be a string\");\r\n        }\r\n\r\n        if (messageType === MessageType.Binary && body && !(body instanceof ArrayBuffer)) {\r\n            throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\r\n        }\r\n\r\n        this.privMessageType = messageType;\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n        this.privBody = body;\r\n        this.privHeaders = headers ? headers : {};\r\n        this.privId = id ? id : createNoDashGuid();\r\n        switch (this.messageType) {\r\n            case MessageType.Binary:\r\n                this.privSize = this.binaryBody !== null ? this.binaryBody.byteLength : 0;\r\n                break;\r\n            case MessageType.Text:\r\n                this.privSize = this.textBody.length;\r\n        }\r\n    }\r\n\r\n    public get messageType(): MessageType {\r\n        return this.privMessageType;\r\n    }\r\n\r\n    public get headers(): IStringDictionary<string> {\r\n        return this.privHeaders;\r\n    }\r\n\r\n    public get body(): any {\r\n        return this.privBody;\r\n    }\r\n\r\n    public get textBody(): string {\r\n        if (this.privMessageType === MessageType.Binary) {\r\n            throw new InvalidOperationError(\"Not supported for binary message\");\r\n        }\r\n\r\n        return this.privBody as string;\r\n    }\r\n\r\n    public get binaryBody(): ArrayBuffer {\r\n        if (this.privMessageType === MessageType.Text) {\r\n            throw new InvalidOperationError(\"Not supported for text message\");\r\n        }\r\n\r\n        return this.privBody;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason, SpeechRecognitionResult, Translations } from \"./Exports.js\";\r\n\r\n/**\r\n * Translation text result.\r\n * @class TranslationRecognitionResult\r\n */\r\nexport class TranslationRecognitionResult extends SpeechRecognitionResult {\r\n    private privTranslations: Translations;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {Translations} translations - The translations.\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {string} text - The recognized text.\r\n     * @param {number} duration - The duration.\r\n     * @param {number} offset - The offset into the stream.\r\n     * @param {string} language - Primary Language detected, if provided.\r\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {string} json - Additional Json, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    public constructor(translations: Translations, resultId?: string, reason?: ResultReason,\r\n                       text?: string, duration?: number, offset?: number, language?: string,\r\n                       languageDetectionConfidence?: string, errorDetails?: string,\r\n                       json?: string, properties?: PropertyCollection) {\r\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, undefined, errorDetails, json, properties);\r\n\r\n        this.privTranslations = translations;\r\n    }\r\n\r\n    public static fromSpeechRecognitionResult(result: SpeechRecognitionResult): TranslationRecognitionResult {\r\n        return new TranslationRecognitionResult(undefined, result.resultId, result.reason, result.text, result.duration, result.offset, result.language, result.languageDetectionConfidence, result.errorDetails, result.json, result.properties);\r\n    }\r\n\r\n    /**\r\n     * Presents the translation results. Each item in the dictionary represents\r\n     * a translation result in one of target languages, where the key is the name\r\n     * of the target language, in BCP-47 format, and the value is the translation\r\n     * text in the specified language.\r\n     * @member TranslationRecognitionResult.prototype.translations\r\n     * @function\r\n     * @public\r\n     * @returns {Translations} the current translation map that holds all translations requested.\r\n     */\r\n    public get translations(): Translations {\r\n        return this.privTranslations;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ArgumentNullError,\r\n    ConnectionEvent,\r\n    ConnectionMessage,\r\n    ConnectionOpenResponse,\r\n    ConnectionState,\r\n    createNoDashGuid,\r\n    EventSource,\r\n    IConnection,\r\n    IStringDictionary,\r\n    IWebsocketMessageFormatter,\r\n} from \"../common/Exports.js\";\r\nimport { ProxyInfo } from \"./ProxyInfo.js\";\r\nimport { WebsocketMessageAdapter } from \"./WebsocketMessageAdapter.js\";\r\n\r\nexport class WebsocketConnection implements IConnection {\r\n\r\n    private privUri: string;\r\n    private privMessageFormatter: IWebsocketMessageFormatter;\r\n    private privConnectionMessageAdapter: WebsocketMessageAdapter;\r\n    private privId: string;\r\n    private privIsDisposed: boolean = false;\r\n\r\n    public constructor(\r\n        uri: string,\r\n        queryParameters: IStringDictionary<string>,\r\n        headers: IStringDictionary<string>,\r\n        messageFormatter: IWebsocketMessageFormatter,\r\n        proxyInfo: ProxyInfo,\r\n        enableCompression: boolean = false,\r\n        connectionId?: string) {\r\n\r\n        if (!uri) {\r\n            throw new ArgumentNullError(\"uri\");\r\n        }\r\n\r\n        if (!messageFormatter) {\r\n            throw new ArgumentNullError(\"messageFormatter\");\r\n        }\r\n\r\n        this.privMessageFormatter = messageFormatter;\r\n\r\n        let queryParams = \"\";\r\n        let i = 0;\r\n\r\n        if (queryParameters) {\r\n            for (const paramName in queryParameters) {\r\n                if (paramName) {\r\n                    queryParams += ((i === 0) && (uri.indexOf(\"?\") === -1)) ? \"?\" : \"&\";\r\n\r\n                    const key = encodeURIComponent(paramName);\r\n                    queryParams += key;\r\n\r\n                    let val = queryParameters[paramName];\r\n                    if (val) {\r\n                        val = encodeURIComponent(val);\r\n                        queryParams += `=${val}`;\r\n                    }\r\n\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (headers) {\r\n            for (const headerName in headers) {\r\n                if (headerName) {\r\n                    queryParams += ((i === 0) && (uri.indexOf(\"?\") === -1)) ? \"?\" : \"&\";\r\n                    const val = encodeURIComponent(headers[headerName]);\r\n                    queryParams += `${headerName}=${val}`;\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.privUri = uri + queryParams;\r\n        this.privId = connectionId ? connectionId : createNoDashGuid();\r\n\r\n        this.privConnectionMessageAdapter = new WebsocketMessageAdapter(\r\n            this.privUri,\r\n            this.id,\r\n            this.privMessageFormatter,\r\n            proxyInfo,\r\n            headers,\r\n            enableCompression);\r\n    }\r\n\r\n    public async dispose(): Promise<void> {\r\n        this.privIsDisposed = true;\r\n\r\n        if (this.privConnectionMessageAdapter) {\r\n            await this.privConnectionMessageAdapter.close();\r\n        }\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public get uri(): string {\r\n        return this.privUri;\r\n    }\r\n\r\n    public state(): ConnectionState {\r\n        return this.privConnectionMessageAdapter.state;\r\n    }\r\n\r\n    public open(): Promise<ConnectionOpenResponse> {\r\n        return this.privConnectionMessageAdapter.open();\r\n    }\r\n\r\n    public send(message: ConnectionMessage): Promise<void> {\r\n        return this.privConnectionMessageAdapter.send(message);\r\n    }\r\n\r\n    public read(): Promise<ConnectionMessage> {\r\n        return this.privConnectionMessageAdapter.read();\r\n    }\r\n\r\n    public get events(): EventSource<ConnectionEvent> {\r\n        return this.privConnectionMessageAdapter.events;\r\n    }\r\n}\r\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport { ConsoleLoggingListener } from \"../common.browser/Exports.js\";\r\nimport { Events } from \"../common/Exports.js\";\r\nimport { LogLevel } from \"./LogLevel.js\";\r\n\r\ntype LogCallback = (s: string) => void;\r\n\r\n/**\r\n * Defines diagnostics API for managing console output\r\n * Added in version 1.21.0\r\n */\r\nexport class Diagnostics {\r\n    private static privListener: ConsoleLoggingListener = undefined;\r\n\r\n    public static SetLoggingLevel(logLevel: LogLevel): void {\r\n        this.privListener = new ConsoleLoggingListener(logLevel);\r\n        Events.instance.attachConsoleListener(this.privListener);\r\n    }\r\n\r\n    public static StartConsoleOutput(): void {\r\n        if (!!this.privListener) {\r\n            this.privListener.enableConsoleOutput = true;\r\n        }\r\n    }\r\n\r\n    public static StopConsoleOutput(): void {\r\n        if (!!this.privListener) {\r\n            this.privListener.enableConsoleOutput = false;\r\n        }\r\n    }\r\n\r\n    public static SetLogOutputPath(path: string): void {\r\n        if (typeof window === \"undefined\") {\r\n            if (!!this.privListener) {\r\n                this.privListener.logPath = path;\r\n            }\r\n        } else {\r\n            throw new Error(\"File system logging not available in browser.\");\r\n        }\r\n    }\r\n\r\n\r\n    public static set onLogOutput( callback: LogCallback ) {\r\n        if (!!this.privListener) {\r\n            this.privListener.logCallback = callback;\r\n        }\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport {\r\n    ForceDictationPropertyName,\r\n    OutputFormatPropertyName,\r\n    ServicePropertiesPropertyName\r\n} from \"../common.speech/Exports.js\";\r\nimport {IStringDictionary} from \"../common/Exports.js\";\r\nimport {Contracts} from \"./Contracts.js\";\r\nimport {\r\n    OutputFormat,\r\n    ProfanityOption,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ServicePropertyChannel,\r\n    SpeechSynthesisOutputFormat,\r\n} from \"./Exports.js\";\r\n\r\n/**\r\n * Speech configuration.\r\n * @class SpeechConfig\r\n */\r\nexport abstract class SpeechConfig {\r\n    /**\r\n     * Creates and initializes an instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Static instance of SpeechConfig returned by passing subscriptionKey and service region.\r\n     * Note: Please use your LanguageUnderstanding subscription key in case you want to use the Intent recognizer.\r\n     * @member SpeechConfig.fromSubscription\r\n     * @function\r\n     * @public\r\n     * @param {string} subscriptionKey - The subscription key.\r\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {SpeechConfig} The speech factory\r\n     */\r\n    public static fromSubscription(subscriptionKey: string, region: string): SpeechConfig {\r\n        Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const speechImpl: SpeechConfigImpl = new SpeechConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_IntentRegion, region);\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech config with specified endpoint and subscription key.\r\n     * This method is intended only for users who use a non-standard service endpoint or parameters.\r\n     * Note: Please use your LanguageUnderstanding subscription key in case you want to use the Intent recognizer.\r\n     * Note: The query parameters specified in the endpoint URL are not changed, even if they are set by any other APIs.\r\n     * For example, if language is defined in the uri as query parameter \"language=de-DE\", and also set by\r\n     * SpeechConfig.speechRecognitionLanguage = \"en-US\", the language setting in uri takes precedence,\r\n     * and the effective language is \"de-DE\". Only the parameters that are not specified in the\r\n     * endpoint URL can be set by other APIs.\r\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\r\n     * fromEndpoint method, and then set authorizationToken=\"token\" on the created SpeechConfig instance to\r\n     * use the authorization token.\r\n     * @member SpeechConfig.fromEndpoint\r\n     * @function\r\n     * @public\r\n     * @param {URL} endpoint - The service endpoint to connect to.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\r\n     * @returns {SpeechConfig} A speech factory instance.\r\n     */\r\n    public static fromEndpoint(endpoint: URL, subscriptionKey?: string): SpeechConfig {\r\n        Contracts.throwIfNull(endpoint, \"endpoint\");\r\n\r\n        const speechImpl: SpeechConfigImpl = new SpeechConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Endpoint, endpoint.href);\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech config with specified host and subscription key.\r\n     * This method is intended only for users who use a non-default service host. Standard resource path will be assumed.\r\n     * For services with a non-standard resource path or no path at all, use fromEndpoint instead.\r\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\r\n     * Note: To use an authorization token with fromHost, use fromHost(URL),\r\n     * and then set the AuthorizationToken property on the created SpeechConfig instance.\r\n     * Note: Added in version 1.9.0.\r\n     * @member SpeechConfig.fromHost\r\n     * @function\r\n     * @public\r\n     * @param {URL} host - The service endpoint to connect to. Format is \"protocol://host:port\" where \":port\" is optional.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\r\n     * @returns {SpeechConfig} A speech factory instance.\r\n     */\r\n    public static fromHost(hostName: URL, subscriptionKey?: string): SpeechConfig {\r\n        Contracts.throwIfNull(hostName, \"hostName\");\r\n\r\n        const speechImpl: SpeechConfigImpl = new SpeechConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Host, hostName.protocol + \"//\" + hostName.hostname + (hostName.port === \"\" ? \"\" : \":\" + hostName.port));\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech factory with specified initial authorization token and region.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\r\n     * Note: Please use a token derived from your LanguageUnderstanding subscription key in case you want\r\n     * to use the Intent recognizer. As configuration values are copied when creating a new recognizer,\r\n     * the new token value will not apply to recognizers that have already been created. For recognizers\r\n     * that have been created before, you need to set authorization token of the corresponding recognizer\r\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\r\n     * @member SpeechConfig.fromAuthorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} authorizationToken - The initial authorization token.\r\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {SpeechConfig} A speech factory instance.\r\n     */\r\n    public static fromAuthorizationToken(authorizationToken: string, region: string): SpeechConfig {\r\n        Contracts.throwIfNull(authorizationToken, \"authorizationToken\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const speechImpl: SpeechConfigImpl = new SpeechConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_IntentRegion, region);\r\n        speechImpl.authorizationToken = authorizationToken;\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server.\r\n     * @param proxyPort The port number of the proxy server.\r\n     */\r\n    public abstract setProxy(proxyHostName: string, proxyPort: number): void;\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server, without the protocol scheme (http://)\r\n     * @param proxyPort The port number of the proxy server.\r\n     * @param proxyUserName The username of the proxy server.\r\n     * @param proxyPassword The password of the proxy server.\r\n     */\r\n    public abstract setProxy(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string): void;\r\n\r\n    /**\r\n     * Gets the authorization token.\r\n     * @member SpeechConfig.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract get authorizationToken(): string;\r\n\r\n    /**\r\n     * Gets/Sets the authorization token.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\r\n     * @member SpeechConfig.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public abstract set authorizationToken(value: string);\r\n\r\n    /**\r\n     * Returns the configured language.\r\n     * @member SpeechConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract get speechRecognitionLanguage(): string;\r\n\r\n    /**\r\n     * Gets/Sets the input language.\r\n     * @member SpeechConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public abstract set speechRecognitionLanguage(value: string);\r\n\r\n    /**\r\n     * Sets an arbitrary property.\r\n     * @member SpeechConfig.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string | PropertyId} name - The name of the property to set.\r\n     * @param {string} value - The new value of the property.\r\n     */\r\n    public abstract setProperty(name: string | PropertyId, value: string): void;\r\n\r\n    /**\r\n     * Returns the current value of an arbitrary property.\r\n     * @member SpeechConfig.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to query.\r\n     * @param {string} def - The value to return in case the property is not known.\r\n     * @returns {string} The current value, or provided default, of the given property.\r\n     */\r\n    public abstract getProperty(name: string, def?: string): string;\r\n\r\n    /**\r\n     * Gets speech recognition output format (simple or detailed).\r\n     * Note: This output format is for speech recognition result, use [SpeechConfig.speechSynthesisOutputFormat] to\r\n     * get synthesized audio output format.\r\n     * @member SpeechConfig.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {OutputFormat} Returns the output format.\r\n     */\r\n    public abstract get outputFormat(): OutputFormat;\r\n\r\n    /**\r\n     * Gets/Sets speech recognition output format (simple or detailed).\r\n     * Note: This output format is for speech recognition result, use [SpeechConfig.speechSynthesisOutputFormat] to\r\n     * set synthesized audio output format.\r\n     * @member SpeechConfig.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract set outputFormat(format: OutputFormat);\r\n\r\n    /**\r\n     * Gets the endpoint ID of a customized speech model that is used for speech recognition.\r\n     * @member SpeechConfig.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     * @return {string} The endpoint ID\r\n     */\r\n    public abstract get endpointId(): string;\r\n\r\n    /**\r\n     * Gets/Sets the endpoint ID of a customized speech model that is used for speech recognition.\r\n     * @member SpeechConfig.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The endpoint ID\r\n     */\r\n    public abstract set endpointId(value: string);\r\n\r\n    /**\r\n     * Closes the configuration.\r\n     * @member SpeechConfig.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    public close(): void { }\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.subscriptionKey\r\n     * @function\r\n     * @public\r\n     * @return {string} The subscription key set on the config.\r\n     */\r\n    public abstract get subscriptionKey(): string;\r\n\r\n    /**\r\n     * @member SpeechConfig.prototype.region\r\n     * @function\r\n     * @public\r\n     * @return {region} The region set on the config.\r\n     */\r\n    public abstract get region(): string;\r\n\r\n    /**\r\n     * Sets a property value that will be passed to service using the specified channel.\r\n     * Added in version 1.7.0.\r\n     * @member SpeechConfig.prototype.setServiceProperty\r\n     * @function\r\n     * @public\r\n     * @param {name} The name of the property.\r\n     * @param {value} Value to set.\r\n     * @param {channel} The channel used to pass the specified property to service.\r\n     */\r\n    public abstract setServiceProperty(name: string, value: string, channel: ServicePropertyChannel): void;\r\n\r\n    /**\r\n     * Sets profanity option.\r\n     * Added in version 1.7.0.\r\n     * @member SpeechConfig.prototype.setProfanity\r\n     * @function\r\n     * @public\r\n     * @param {profanity} Profanity option to set.\r\n     */\r\n    public abstract setProfanity(profanity: ProfanityOption): void;\r\n\r\n    /**\r\n     * Enable audio logging in service.\r\n     * Audio and content logs are stored either in Microsoft-owned storage, or in your own storage account linked\r\n     * to your Cognitive Services subscription (Bring Your Own Storage (BYOS) enabled Speech resource).\r\n     * The logs will be removed after 30 days.\r\n     * Added in version 1.7.0.\r\n     * @member SpeechConfig.prototype.enableAudioLogging\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract enableAudioLogging(): void;\r\n\r\n    /**\r\n     * Includes word-level timestamps.\r\n     * Added in version 1.7.0.\r\n     * @member SpeechConfig.prototype.requestWordLevelTimestamps\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract requestWordLevelTimestamps(): void;\r\n\r\n    /**\r\n     * Enable dictation. Only supported in speech continuous recognition.\r\n     * Added in version 1.7.0.\r\n     * @member SpeechConfig.prototype.enableDictation\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract enableDictation(): void;\r\n\r\n    /**\r\n     * Gets the language of the speech synthesizer.\r\n     * Added in version 1.11.0.\r\n     * @member SpeechConfig.prototype.speechSynthesisLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} Returns the speech synthesis language.\r\n     */\r\n    public abstract get speechSynthesisLanguage(): string;\r\n\r\n    /**\r\n     * Sets the language of the speech synthesizer.\r\n     * Added in version 1.11.0.\r\n     * @member SpeechConfig.prototype.speechSynthesisLanguage\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract set speechSynthesisLanguage(language: string);\r\n\r\n    /**\r\n     * Gets the voice of the speech synthesizer.\r\n     * Added in version 1.11.0.\r\n     * @member SpeechConfig.prototype.speechSynthesisVoiceName\r\n     * @function\r\n     * @public\r\n     * @returns {string} Returns the speech synthesis voice.\r\n     */\r\n    public abstract get speechSynthesisVoiceName(): string;\r\n\r\n    /**\r\n     * Sets the voice of the speech synthesizer. (see <a href=\"https://aka.ms/speech/tts-languages\">available voices</a>).\r\n     * Added in version 1.11.0.\r\n     * @member SpeechConfig.prototype.speechSynthesisVoiceName\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract set speechSynthesisVoiceName(voice: string);\r\n\r\n    /**\r\n     * Gets the speech synthesis output format.\r\n     * Added in version 1.11.0.\r\n     * @member SpeechConfig.prototype.speechSynthesisOutputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {SpeechSynthesisOutputFormat} Returns the speech synthesis output format\r\n     */\r\n    public abstract get speechSynthesisOutputFormat(): SpeechSynthesisOutputFormat;\r\n\r\n    /**\r\n     * Sets the speech synthesis output format (e.g. Riff16Khz16BitMonoPcm).\r\n     * The default format is Audio16Khz64KBitRateMonoMp3 for browser and Riff16Khz16BitMonoPcm for Node.JS.\r\n     * Added in version 1.11.0.\r\n     * @member SpeechConfig.prototype.speechSynthesisOutputFormat\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract set speechSynthesisOutputFormat(format: SpeechSynthesisOutputFormat);\r\n}\r\n\r\n/**\r\n * @public\r\n * @class SpeechConfigImpl\r\n */\r\nexport class SpeechConfigImpl extends SpeechConfig {\r\n\r\n    private privProperties: PropertyCollection;\r\n\r\n    public constructor() {\r\n        super();\r\n        this.privProperties = new PropertyCollection();\r\n        this.speechRecognitionLanguage = \"en-US\"; // Should we have a default?\r\n        this.outputFormat = OutputFormat.Simple;\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get endPoint(): URL {\r\n        return new URL(this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Endpoint));\r\n    }\r\n\r\n    public get subscriptionKey(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Key);\r\n    }\r\n\r\n    public get region(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Region);\r\n    }\r\n\r\n    public get authorizationToken(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    public set authorizationToken(value: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceAuthorization_Token, value);\r\n    }\r\n\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    public set speechRecognitionLanguage(value: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_RecoLanguage, value);\r\n    }\r\n\r\n    public get autoDetectSourceLanguages(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages);\r\n    }\r\n\r\n    public set autoDetectSourceLanguages(value: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, value);\r\n    }\r\n\r\n    public get outputFormat(): OutputFormat {\r\n        return OutputFormat[this.privProperties.getProperty(OutputFormatPropertyName, undefined) as keyof typeof OutputFormat];\r\n    }\r\n\r\n    public set outputFormat(value: OutputFormat) {\r\n        this.privProperties.setProperty(OutputFormatPropertyName, OutputFormat[value]);\r\n    }\r\n\r\n    public get endpointId(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_EndpointId);\r\n    }\r\n\r\n    public set endpointId(value: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_EndpointId, value);\r\n    }\r\n\r\n    public setProperty(name: string | PropertyId, value: string): void {\r\n        Contracts.throwIfNull(value, \"value\");\r\n\r\n        this.privProperties.setProperty(name, value);\r\n    }\r\n\r\n    public getProperty(name: string | PropertyId, def?: string): string {\r\n\r\n        return this.privProperties.getProperty(name, def);\r\n    }\r\n\r\n    public setProxy(proxyHostName: string, proxyPort: number): void;\r\n    public setProxy(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string): void;\r\n    public setProxy(proxyHostName: any, proxyPort: any, proxyUserName?: any, proxyPassword?: any): void {\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyHostName], proxyHostName as string);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPort], proxyPort as string);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyUserName], proxyUserName as string);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPassword], proxyPassword as string);\r\n    }\r\n\r\n    public setServiceProperty(name: string, value: string): void {\r\n        const currentProperties: IStringDictionary<string> = JSON.parse(this.privProperties.getProperty(ServicePropertiesPropertyName, \"{}\")) as IStringDictionary<string>;\r\n\r\n        currentProperties[name] = value;\r\n\r\n        this.privProperties.setProperty(ServicePropertiesPropertyName, JSON.stringify(currentProperties));\r\n    }\r\n\r\n    public setProfanity(profanity: ProfanityOption): void {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceResponse_ProfanityOption, ProfanityOption[profanity]);\r\n    }\r\n\r\n    public enableAudioLogging(): void {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_EnableAudioLogging, \"true\");\r\n    }\r\n    public requestWordLevelTimestamps(): void {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"true\");\r\n        this.privProperties.setProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Detailed]);\r\n    }\r\n    public enableDictation(): void {\r\n        this.privProperties.setProperty(ForceDictationPropertyName, \"true\");\r\n    }\r\n\r\n    public clone(): SpeechConfigImpl {\r\n        const ret: SpeechConfigImpl = new SpeechConfigImpl();\r\n        ret.privProperties = this.privProperties.clone();\r\n        return ret;\r\n    }\r\n\r\n    public get speechSynthesisLanguage(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_SynthLanguage);\r\n    }\r\n\r\n    public set speechSynthesisLanguage(language: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_SynthLanguage, language);\r\n    }\r\n\r\n    public get speechSynthesisVoiceName(): string {\r\n        return this.privProperties.getProperty(PropertyId.SpeechServiceConnection_SynthVoice);\r\n    }\r\n\r\n    public set speechSynthesisVoiceName(voice: string) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_SynthVoice, voice);\r\n    }\r\n\r\n    public get speechSynthesisOutputFormat(): SpeechSynthesisOutputFormat {\r\n        return SpeechSynthesisOutputFormat[this.privProperties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined) as keyof typeof SpeechSynthesisOutputFormat];\r\n    }\r\n\r\n    public set speechSynthesisOutputFormat(format: SpeechSynthesisOutputFormat) {\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, SpeechSynthesisOutputFormat[format]);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport class RiffPcmEncoder {\r\n\r\n    private privActualSampleRate: number;\r\n    private privDesiredSampleRate: number;\r\n\r\n    public constructor(actualSampleRate: number, desiredSampleRate: number) {\r\n        this.privActualSampleRate = actualSampleRate;\r\n        this.privDesiredSampleRate = desiredSampleRate;\r\n    }\r\n\r\n    public encode(actualAudioFrame: Float32Array): ArrayBuffer {\r\n\r\n        const audioFrame = this.downSampleAudioFrame(actualAudioFrame, this.privActualSampleRate, this.privDesiredSampleRate);\r\n\r\n        if (!audioFrame) {\r\n            return null;\r\n        }\r\n\r\n        const audioLength = audioFrame.length * 2;\r\n\r\n        const buffer = new ArrayBuffer(audioLength);\r\n        const view = new DataView(buffer);\r\n        this.floatTo16BitPCM(view, 0, audioFrame);\r\n\r\n        return buffer;\r\n    }\r\n\r\n    private setString(view: DataView, offset: number, str: string): void {\r\n        for (let i = 0; i < str.length; i++) {\r\n            view.setUint8(offset + i, str.charCodeAt(i));\r\n        }\r\n    }\r\n\r\n    private floatTo16BitPCM(view: DataView, offset: number, input: Float32Array): void {\r\n        for (let i = 0; i < input.length; i++ , offset += 2) {\r\n            const s = Math.max(-1, Math.min(1, input[i]));\r\n            view.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\r\n        }\r\n    }\r\n\r\n    private downSampleAudioFrame(\r\n        srcFrame: Float32Array,\r\n        srcRate: number,\r\n        dstRate: number): Float32Array {\r\n\r\n        if (!srcFrame) {\r\n            return null;\r\n        }\r\n\r\n        if (dstRate === srcRate || dstRate > srcRate) {\r\n            return srcFrame;\r\n        }\r\n\r\n        const ratio = srcRate / dstRate;\r\n        const dstLength = Math.round(srcFrame.length / ratio);\r\n        const dstFrame = new Float32Array(dstLength);\r\n        let srcOffset = 0;\r\n        let dstOffset = 0;\r\n        while (dstOffset < dstLength) {\r\n            const nextSrcOffset = Math.round((dstOffset + 1) * ratio);\r\n            let accum = 0;\r\n            let count = 0;\r\n            while (srcOffset < nextSrcOffset && srcOffset < srcFrame.length) {\r\n                accum += srcFrame[srcOffset++];\r\n                count++;\r\n            }\r\n            dstFrame[dstOffset++] = accum / count;\r\n        }\r\n\r\n        return dstFrame;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ConnectionEvent } from \"./ConnectionEvents.js\";\r\nimport { ConnectionMessage } from \"./ConnectionMessage.js\";\r\nimport { ConnectionOpenResponse } from \"./ConnectionOpenResponse.js\";\r\nimport { EventSource } from \"./EventSource.js\";\r\n\r\nexport enum ConnectionState {\r\n    None,\r\n    Connected,\r\n    Connecting,\r\n    Disconnected,\r\n}\r\n\r\nexport interface IConnection {\r\n    id: string;\r\n    state(): ConnectionState;\r\n    open(): Promise<ConnectionOpenResponse>;\r\n    send(message: ConnectionMessage): Promise<void>;\r\n    read(): Promise<ConnectionMessage>;\r\n    events: EventSource<ConnectionEvent>;\r\n    dispose(disposing?: string): Promise<void>;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ResultReason } from \"./ResultReason.js\";\r\n\r\n/**\r\n * Defines translation synthesis result, i.e. the voice output of the translated\r\n * text in the target language.\r\n * @class TranslationSynthesisResult\r\n */\r\nexport class TranslationSynthesisResult {\r\n    private privReason: ResultReason;\r\n    private privAudio: ArrayBuffer;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {ResultReason} reason - The synthesis reason.\r\n     * @param {ArrayBuffer} audio - The audio data.\r\n     */\r\n    public constructor(reason: ResultReason, audio: ArrayBuffer) {\r\n        this.privReason = reason;\r\n        this.privAudio = audio;\r\n    }\r\n\r\n    /**\r\n     * Translated text in the target language.\r\n     * @member TranslationSynthesisResult.prototype.audio\r\n     * @function\r\n     * @public\r\n     * @returns {ArrayBuffer} Translated audio in the target language.\r\n     */\r\n    public get audio(): ArrayBuffer {\r\n        return this.privAudio;\r\n    }\r\n\r\n    /**\r\n     * The synthesis status.\r\n     * @member TranslationSynthesisResult.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {ResultReason} The synthesis status.\r\n     */\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SynthesisStatus } from \"../Exports.js\";\r\n\r\n// translation.synthesis.end\r\nexport interface ITranslationSynthesisEnd {\r\n    SynthesisStatus?: SynthesisStatus;\r\n    FailureReason?: string;\r\n    Status?: SynthesisStatus;\r\n}\r\n\r\nexport class TranslationSynthesisEnd implements ITranslationSynthesisEnd {\r\n    private privSynthesisEnd: ITranslationSynthesisEnd;\r\n\r\n    private constructor(json: string) {\r\n        this.privSynthesisEnd = JSON.parse(json) as ITranslationSynthesisEnd;\r\n        if (!!this.privSynthesisEnd.SynthesisStatus) {\r\n            this.privSynthesisEnd.SynthesisStatus = SynthesisStatus[this.privSynthesisEnd.SynthesisStatus as unknown as keyof typeof SynthesisStatus];\r\n        }\r\n        if (!!this.privSynthesisEnd.Status) {\r\n            this.privSynthesisEnd.SynthesisStatus = SynthesisStatus[this.privSynthesisEnd.Status as unknown as keyof typeof SynthesisStatus];\r\n        }\r\n    }\r\n\r\n    public static fromJSON(json: string): TranslationSynthesisEnd {\r\n        return new TranslationSynthesisEnd(json);\r\n    }\r\n\r\n    public get SynthesisStatus(): SynthesisStatus {\r\n        return this.privSynthesisEnd.SynthesisStatus;\r\n    }\r\n\r\n    public get FailureReason(): string {\r\n        return this.privSynthesisEnd.FailureReason;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SpeechSynthesisResult } from \"./Exports.js\";\r\n\r\n/**\r\n * Defines contents of speech synthesis events.\r\n * @class SpeechSynthesisEventArgs\r\n * Added in version 1.11.0\r\n */\r\nexport class SpeechSynthesisEventArgs {\r\n    private readonly privResult: SpeechSynthesisResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {SpeechSynthesisResult} result - The speech synthesis result.\r\n     */\r\n    public constructor(result: SpeechSynthesisResult) {\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the synthesis result.\r\n     * @member SpeechSynthesisEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {SpeechSynthesisResult} the synthesis result.\r\n     */\r\n    public get result(): SpeechSynthesisResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n","import {\r\n    IRequestOptions,\r\n    IRestResponse,\r\n    RestConfigBase,\r\n    RestMessageAdapter,\r\n    RestRequestType,\r\n} from \"../common.browser/Exports.js\";\r\nimport {\r\n    PropertyId,\r\n} from \"../sdk/Exports.js\";\r\nimport { ConnectionFactoryBase } from \"./ConnectionFactoryBase.js\";\r\nimport { AuthInfo, IAuthentication, SynthesizerConfig } from \"./Exports.js\";\r\nimport { HeaderNames } from \"./HeaderNames.js\";\r\n\r\n/**\r\n * Implements methods for speaker recognition classes, sending requests to endpoint\r\n * and parsing response into expected format\r\n * @class SynthesisRestAdapter\r\n */\r\nexport class SynthesisRestAdapter {\r\n    private privRestAdapter: RestMessageAdapter;\r\n    private privUri: string;\r\n    private privAuthentication: IAuthentication;\r\n\r\n    public constructor(config: SynthesizerConfig, authentication: IAuthentication) {\r\n\r\n        let endpoint = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        if (!endpoint) {\r\n            const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, \"westus\");\r\n            const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n            endpoint = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, `https://${region}.tts.speech${hostSuffix}`);\r\n        }\r\n        this.privUri = `${endpoint}/cognitiveservices/voices/list`;\r\n\r\n        const options: IRequestOptions = RestConfigBase.requestOptions;\r\n        this.privRestAdapter = new RestMessageAdapter(options);\r\n        this.privAuthentication = authentication;\r\n    }\r\n\r\n    /**\r\n     * Sends list voices request to endpoint.\r\n     * @function\r\n     * @public\r\n     * @param connectionId - guid for connectionId\r\n     * @returns {Promise<IRestResponse>} rest response to status request\r\n     */\r\n    public getVoicesList(connectionId: string): Promise<IRestResponse> {\r\n        this.privRestAdapter.setHeaders(HeaderNames.ConnectionId, connectionId);\r\n        return this.privAuthentication.fetch(connectionId).then((authInfo: AuthInfo): Promise<IRestResponse> => {\r\n            this.privRestAdapter.setHeaders(authInfo.headerName, authInfo.token);\r\n            return this.privRestAdapter.request(RestRequestType.Get, this.privUri);\r\n        });\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IPrimaryLanguage, RecognitionStatus } from \"../Exports.js\";\r\n\r\n// speech.phrase for detailed\r\nexport interface IDetailedSpeechPhrase {\r\n    RecognitionStatus: RecognitionStatus;\r\n    NBest: IPhrase[];\r\n    Duration?: number;\r\n    Offset?: number;\r\n    PrimaryLanguage?: IPrimaryLanguage;\r\n    DisplayText?: string;\r\n    SpeakerId?: string;\r\n    [key: string]: any;\r\n}\r\n\r\nexport interface IPhrase {\r\n    Confidence?: number;\r\n    Lexical: string;\r\n    ITN: string;\r\n    MaskedITN: string;\r\n    Display?: string;\r\n    DisplayText?: string;\r\n    Words?: IWord[];\r\n    DisplayWords?: IWord[];\r\n}\r\n\r\nexport interface IWord {\r\n    Word: string;\r\n    Offset: number;\r\n    Duration: number;\r\n}\r\n\r\nexport class DetailedSpeechPhrase implements IDetailedSpeechPhrase {\r\n    private privDetailedSpeechPhrase: IDetailedSpeechPhrase;\r\n\r\n    private constructor(json: string, baseOffset: number) {\r\n        this.privDetailedSpeechPhrase = JSON.parse(json) as IDetailedSpeechPhrase;\r\n        this.privDetailedSpeechPhrase.RecognitionStatus = this.mapRecognitionStatus(this.privDetailedSpeechPhrase.RecognitionStatus);\r\n        this.updateOffsets(baseOffset);\r\n    }\r\n\r\n    public static fromJSON(json: string, baseOffset: number): DetailedSpeechPhrase {\r\n        return new DetailedSpeechPhrase(json, baseOffset);\r\n    }\r\n\r\n    private updateOffsets(baseOffset: number): void {\r\n        this.privDetailedSpeechPhrase.Offset += baseOffset;\r\n\r\n        if (!!this.privDetailedSpeechPhrase.NBest) {\r\n            for (const phrase of this.privDetailedSpeechPhrase.NBest) {\r\n                if (!!phrase.Words) {\r\n                    for (const word of phrase.Words) {\r\n                        word.Offset += baseOffset;\r\n                    }\r\n                }\r\n                if (!!phrase.DisplayWords) {\r\n                    for (const word of phrase.DisplayWords) {\r\n                        word.Offset += baseOffset;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public asJson(): string {\r\n        const jsonObj = { ...this.privDetailedSpeechPhrase };\r\n        // Convert the enum value to its string representation for serialization purposes.\r\n        return JSON.stringify({\r\n            ...jsonObj,\r\n            RecognitionStatus: RecognitionStatus[jsonObj.RecognitionStatus] as keyof typeof RecognitionStatus\r\n        });\r\n    }\r\n\r\n    public get RecognitionStatus(): RecognitionStatus {\r\n        return this.privDetailedSpeechPhrase.RecognitionStatus;\r\n    }\r\n    public get NBest(): IPhrase[] {\r\n        return this.privDetailedSpeechPhrase.NBest;\r\n    }\r\n    public get Duration(): number {\r\n        return this.privDetailedSpeechPhrase.Duration;\r\n    }\r\n    public get Offset(): number {\r\n        return this.privDetailedSpeechPhrase.Offset;\r\n    }\r\n    public get Language(): string {\r\n        return this.privDetailedSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privDetailedSpeechPhrase.PrimaryLanguage.Language;\r\n    }\r\n    public get LanguageDetectionConfidence(): string {\r\n        return this.privDetailedSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privDetailedSpeechPhrase.PrimaryLanguage.Confidence;\r\n    }\r\n    public get Text(): string {\r\n        if (!!this.privDetailedSpeechPhrase.NBest && this.privDetailedSpeechPhrase.NBest[0]) {\r\n            return this.privDetailedSpeechPhrase.NBest[0].Display || this.privDetailedSpeechPhrase.NBest[0].DisplayText;\r\n        }\r\n        return this.privDetailedSpeechPhrase.DisplayText;\r\n    }\r\n    public get SpeakerId(): string {\r\n        return this.privDetailedSpeechPhrase.SpeakerId;\r\n    }\r\n    private mapRecognitionStatus(status: any): RecognitionStatus {\r\n        if (typeof status === \"string\") {\r\n            return RecognitionStatus[status as keyof typeof RecognitionStatus];\r\n        } else if (typeof status === \"number\") {\r\n            return status;\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection\r\n} from \"../common.browser/Exports.js\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary\r\n} from \"../common/Exports.js\";\r\nimport { PropertyId } from \"../sdk/Exports.js\";\r\nimport { ConnectionFactoryBase } from \"./ConnectionFactoryBase.js\";\r\nimport {\r\n    AuthInfo,\r\n    SynthesizerConfig,\r\n    WebsocketMessageFormatter\r\n} from \"./Exports.js\";\r\nimport { HeaderNames } from \"./HeaderNames.js\";\r\nimport { ISynthesisConnectionFactory } from \"./ISynthesisConnectionFactory.js\";\r\nimport {\r\n    QueryParameterNames\r\n} from \"./QueryParameterNames.js\";\r\n\r\nexport class SpeechSynthesisConnectionFactory implements ISynthesisConnectionFactory {\r\n\r\n    private readonly synthesisUri: string = \"/cognitiveservices/websocket/v1\";\r\n\r\n    public create(\r\n        config: SynthesizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, undefined);\r\n        const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n        const endpointId = config.parameters.getProperty(PropertyId.SpeechServiceConnection_EndpointId, undefined);\r\n        const hostPrefix = (endpointId === undefined) ? \"tts\" : \"voice\";\r\n        const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".\" + hostPrefix + \".speech\" + hostSuffix);\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n        const headers: IStringDictionary<string> = {};\r\n\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n        if (endpointId !== undefined && endpointId !== \"\") {\r\n            if (!endpoint || endpoint.search(QueryParameterNames.CustomVoiceDeploymentId) === -1) {\r\n                queryParams[QueryParameterNames.CustomVoiceDeploymentId] = endpointId;\r\n            }\r\n        }\r\n\r\n        if (config.avatarEnabled) {\r\n            if (!endpoint || endpoint.search(QueryParameterNames.EnableAvatar) === -1) {\r\n                queryParams[QueryParameterNames.EnableAvatar] = \"true\";\r\n            }\r\n        }\r\n\r\n        if (!endpoint) {\r\n            endpoint = host + this.synthesisUri;\r\n        }\r\n\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromParameters(config.parameters), enableCompression, connectionId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { LanguageUnderstandingModelImpl } from \"../sdk/LanguageUnderstandingModel.js\";\r\n\r\n/**\r\n * @class AddedLmIntent\r\n */\r\n// eslint-disable-next-line max-classes-per-file\r\nexport class AddedLmIntent {\r\n    public modelImpl: LanguageUnderstandingModelImpl;\r\n    public intentName: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param modelImpl - The model.\r\n     * @param intentName - The intent name.\r\n     */\r\n    public constructor(modelImpl: LanguageUnderstandingModelImpl, intentName: string) {\r\n        this.modelImpl = modelImpl;\r\n        this.intentName = intentName;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    ResultReason\r\n} from \"../sdk/Exports.js\";\r\nimport { RecognitionStatus } from \"./Exports.js\";\r\n\r\nexport class EnumTranslation {\r\n    public static implTranslateRecognitionResult(recognitionStatus: RecognitionStatus, expectEndOfDictation: boolean = false): ResultReason {\r\n        let reason = ResultReason.Canceled;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Success:\r\n                reason = ResultReason.RecognizedSpeech;\r\n                break;\r\n            case RecognitionStatus.EndOfDictation:\r\n                // If we need the result in EndOfDictation (typically some session level result),\r\n                // translate into RecognizedSpeech, otherwise NoMatch\r\n                reason = expectEndOfDictation ? ResultReason.RecognizedSpeech : ResultReason.NoMatch;\r\n                break;\r\n            case RecognitionStatus.NoMatch:\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n            case RecognitionStatus.BabbleTimeout:\r\n                reason = ResultReason.NoMatch;\r\n                break;\r\n            case RecognitionStatus.Error:\r\n            case RecognitionStatus.BadRequest:\r\n            case RecognitionStatus.Forbidden:\r\n            default:\r\n                reason = ResultReason.Canceled;\r\n                break;\r\n        }\r\n        return reason;\r\n    }\r\n\r\n    public static implTranslateCancelResult(recognitionStatus: RecognitionStatus): CancellationReason {\r\n        let reason = CancellationReason.EndOfStream;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Success:\r\n            case RecognitionStatus.EndOfDictation:\r\n            case RecognitionStatus.NoMatch:\r\n                reason = CancellationReason.EndOfStream;\r\n                break;\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n            case RecognitionStatus.BabbleTimeout:\r\n            case RecognitionStatus.Error:\r\n            case RecognitionStatus.BadRequest:\r\n            case RecognitionStatus.Forbidden:\r\n            default:\r\n                reason = CancellationReason.Error;\r\n                break;\r\n        }\r\n        return reason;\r\n    }\r\n\r\n    public static implTranslateCancelErrorCode(recognitionStatus: RecognitionStatus): CancellationErrorCode {\r\n        let reason: CancellationErrorCode = CancellationErrorCode.NoError;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Error:\r\n                reason = CancellationErrorCode.ServiceError;\r\n                break;\r\n            case RecognitionStatus.TooManyRequests:\r\n                reason = CancellationErrorCode.TooManyRequests;\r\n                break;\r\n            case RecognitionStatus.BadRequest:\r\n                reason = CancellationErrorCode.BadRequestParameters;\r\n                break;\r\n            case RecognitionStatus.Forbidden:\r\n                reason = CancellationErrorCode.Forbidden;\r\n                break;\r\n            default:\r\n                reason = CancellationErrorCode.NoError;\r\n                break;\r\n        }\r\n\r\n        return reason;\r\n\r\n    }\r\n\r\n    public static implTranslateErrorDetails(cancellationErrorCode: CancellationErrorCode): string {\r\n        let errorDetails: string = \"The speech service encountered an internal error and could not continue.\";\r\n        switch (cancellationErrorCode) {\r\n            case CancellationErrorCode.Forbidden:\r\n                errorDetails = \"The recognizer is using a free subscription that ran out of quota.\";\r\n                break;\r\n            case CancellationErrorCode.BadRequestParameters:\r\n                errorDetails = \"Invalid parameter or unsupported audio format in the request.\";\r\n                break;\r\n            case CancellationErrorCode.TooManyRequests:\r\n                errorDetails = \"The number of parallel requests exceeded the number of allowed concurrent transcriptions.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return errorDetails;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ConnectionMessage,\r\n    Deferred,\r\n    IStringDictionary,\r\n    IWebsocketMessageFormatter,\r\n    MessageType,\r\n    RawWebsocketMessage,\r\n} from \"../common/Exports.js\";\r\n\r\nconst CRLF: string = \"\\r\\n\";\r\n\r\nexport class WebsocketMessageFormatter implements IWebsocketMessageFormatter {\r\n\r\n    public toConnectionMessage(message: RawWebsocketMessage): Promise<ConnectionMessage> {\r\n        const deferral = new Deferred<ConnectionMessage>();\r\n\r\n        try {\r\n            if (message.messageType === MessageType.Text) {\r\n                const textMessage: string = message.textContent;\r\n                let headers: IStringDictionary<string> = {};\r\n                let body: string = null;\r\n\r\n                if (textMessage) {\r\n                    const headerBodySplit = textMessage.split(\"\\r\\n\\r\\n\");\r\n                    if (headerBodySplit && headerBodySplit.length > 0) {\r\n                        headers = this.parseHeaders(headerBodySplit[0]);\r\n                        if (headerBodySplit.length > 1) {\r\n                            body = headerBodySplit[1];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                deferral.resolve(new ConnectionMessage(message.messageType, body, headers, message.id));\r\n            } else if (message.messageType === MessageType.Binary) {\r\n                const binaryMessage: ArrayBuffer = message.binaryContent;\r\n                let headers: IStringDictionary<string> = {};\r\n                let body: ArrayBuffer = null;\r\n\r\n                if (!binaryMessage || binaryMessage.byteLength < 2) {\r\n                    throw new Error(\"Invalid binary message format. Header length missing.\");\r\n                }\r\n\r\n                const dataView = new DataView(binaryMessage);\r\n                const headerLength = dataView.getInt16(0);\r\n\r\n                if (binaryMessage.byteLength < headerLength + 2) {\r\n                    throw new Error(\"Invalid binary message format. Header content missing.\");\r\n                }\r\n\r\n                let headersString = \"\";\r\n                for (let i = 0; i < headerLength; i++) {\r\n                    headersString += String.fromCharCode((dataView).getInt8(i + 2));\r\n                }\r\n\r\n                headers = this.parseHeaders(headersString);\r\n\r\n                if (binaryMessage.byteLength > headerLength + 2) {\r\n                    body = binaryMessage.slice(2 + headerLength);\r\n                }\r\n\r\n                deferral.resolve(new ConnectionMessage(message.messageType, body, headers, message.id));\r\n            }\r\n        } catch (e) {\r\n            deferral.reject(`Error formatting the message. Error: ${e as string}`);\r\n        }\r\n\r\n        return deferral.promise;\r\n    }\r\n\r\n    public fromConnectionMessage(message: ConnectionMessage): Promise<RawWebsocketMessage> {\r\n        const deferral = new Deferred<RawWebsocketMessage>();\r\n\r\n        try {\r\n            if (message.messageType === MessageType.Text) {\r\n                const payload = `${this.makeHeaders(message)}${CRLF}${message.textBody ? message.textBody : \"\"}`;\r\n\r\n                deferral.resolve(new RawWebsocketMessage(MessageType.Text, payload, message.id));\r\n\r\n            } else if (message.messageType === MessageType.Binary) {\r\n                const headersString = this.makeHeaders(message);\r\n                const content = message.binaryBody;\r\n\r\n                const headerBuffer = this.stringToArrayBuffer(headersString);\r\n                const headerInt8Array = new Int8Array(headerBuffer);\r\n                const headerLength = headerInt8Array.byteLength;\r\n\r\n                const payloadInt8Array = new Int8Array(2 + headerLength + (content ? content.byteLength : 0));\r\n                payloadInt8Array[0] = ((headerLength >> 8) & 0xff);\r\n                payloadInt8Array[1] = headerLength & 0xff;\r\n                payloadInt8Array.set(headerInt8Array, 2);\r\n\r\n                if (content) {\r\n                    const bodyInt8Array = new Int8Array(content);\r\n                    payloadInt8Array.set(bodyInt8Array, 2 + headerLength);\r\n                }\r\n\r\n                const payload: ArrayBuffer = payloadInt8Array.buffer;\r\n\r\n                deferral.resolve(new RawWebsocketMessage(MessageType.Binary, payload, message.id));\r\n            }\r\n        } catch (e) {\r\n            deferral.reject(`Error formatting the message. ${e as string}`);\r\n        }\r\n\r\n        return deferral.promise;\r\n    }\r\n\r\n    private makeHeaders(message: ConnectionMessage): string {\r\n        let headersString: string = \"\";\r\n\r\n        if (message.headers) {\r\n            for (const header in message.headers) {\r\n                if (header) {\r\n                    headersString += `${header}: ${message.headers[header]}${CRLF}`;\r\n                }\r\n            }\r\n        }\r\n\r\n        return headersString;\r\n    }\r\n\r\n    private parseHeaders(headersString: string): IStringDictionary<string> {\r\n        const headers: IStringDictionary<string> = {};\r\n\r\n        if (headersString) {\r\n            const headerMatches = headersString.match(/[^\\r\\n]+/g);\r\n            if (headers) {\r\n                for (const header of headerMatches) {\r\n                    if (header) {\r\n                        const separatorIndex = header.indexOf(\":\");\r\n                        const headerName = separatorIndex > 0 ? header.substr(0, separatorIndex).trim().toLowerCase() : header;\r\n                        const headerValue =\r\n                            separatorIndex > 0 && header.length > (separatorIndex + 1) ?\r\n                                header.substr(separatorIndex + 1).trim() :\r\n                                \"\";\r\n\r\n                        headers[headerName] = headerValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    private stringToArrayBuffer(str: string): ArrayBuffer {\r\n        const buffer = new ArrayBuffer(str.length);\r\n        const view = new DataView(buffer);\r\n        for (let i = 0; i < str.length; i++) {\r\n            view.setUint8(i, str.charCodeAt(i));\r\n        }\r\n        return buffer;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\nimport {\r\n    ForceDictationPropertyName,\r\n    OutputFormatPropertyName,\r\n    ServicePropertiesPropertyName\r\n} from \"../common.speech/Exports.js\";\r\nimport { IStringDictionary } from \"../common/Exports.js\";\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport {\r\n    OutputFormat,\r\n    ProfanityOption,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    SpeechConfig,\r\n    SpeechSynthesisOutputFormat,\r\n} from \"./Exports.js\";\r\n\r\n/**\r\n * Speech translation configuration.\r\n * @class SpeechTranslationConfig\r\n */\r\nexport abstract class SpeechTranslationConfig extends SpeechConfig {\r\n\r\n    /**\r\n     * Creates an instance of recognizer config.\r\n     */\r\n    protected constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Static instance of SpeechTranslationConfig returned by passing a subscription key and service region.\r\n     * @member SpeechTranslationConfig.fromSubscription\r\n     * @function\r\n     * @public\r\n     * @param {string} subscriptionKey - The subscription key.\r\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {SpeechTranslationConfig} The speech translation config.\r\n     */\r\n    public static fromSubscription(subscriptionKey: string, region: string): SpeechTranslationConfig {\r\n        Contracts.throwIfNullOrWhitespace(subscriptionKey, \"subscriptionKey\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const ret: SpeechTranslationConfigImpl = new SpeechTranslationConfigImpl();\r\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Static instance of SpeechTranslationConfig returned by passing authorization token and service region.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     * expires, the caller needs to refresh it by setting the property authorizationToken with a new\r\n     * valid token. Otherwise, all the recognizers created by this SpeechTranslationConfig instance\r\n     * will encounter errors during recognition.\r\n     * As configuration values are copied when creating a new recognizer, the new token value will not apply\r\n     * to recognizers that have already been created.\r\n     * For recognizers that have been created before, you need to set authorization token of the corresponding recognizer\r\n     * to refresh the token. Otherwise, the recognizers will encounter errors during recognition.\r\n     * @member SpeechTranslationConfig.fromAuthorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} authorizationToken - The authorization token.\r\n     * @param {string} region - The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @returns {SpeechTranslationConfig} The speech translation config.\r\n     */\r\n    public static fromAuthorizationToken(authorizationToken: string, region: string): SpeechTranslationConfig {\r\n        Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const ret: SpeechTranslationConfigImpl = new SpeechTranslationConfigImpl();\r\n        ret.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\r\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech config with specified host and subscription key.\r\n     * This method is intended only for users who use a non-default service host. Standard resource path will be assumed.\r\n     * For services with a non-standard resource path or no path at all, use fromEndpoint instead.\r\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\r\n     * Note: To use an authorization token with fromHost, use fromHost(URL),\r\n     * and then set the AuthorizationToken property on the created SpeechConfig instance.\r\n     * Note: Added in version 1.9.0.\r\n     * @member SpeechConfig.fromHost\r\n     * @function\r\n     * @public\r\n     * @param {URL} host - The service endpoint to connect to. Format is \"protocol://host:port\" where \":port\" is optional.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization token must be set.\r\n     * @returns {SpeechConfig} A speech factory instance.\r\n     */\r\n    public static fromHost(hostName: URL, subscriptionKey?: string): SpeechConfig {\r\n        Contracts.throwIfNull(hostName, \"hostName\");\r\n\r\n        const speechImpl: SpeechTranslationConfigImpl = new SpeechTranslationConfigImpl();\r\n        speechImpl.setProperty(PropertyId.SpeechServiceConnection_Host, hostName.protocol + \"//\" + hostName.hostname + (hostName.port === \"\" ? \"\" : \":\" + hostName.port));\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            speechImpl.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n        return speechImpl;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of the speech translation config with specified endpoint and subscription key.\r\n     * This method is intended only for users who use a non-standard service endpoint or paramters.\r\n     * Note: The query properties specified in the endpoint URL are not changed, even if they are\r\n     * set by any other APIs. For example, if language is defined in the uri as query parameter\r\n     * \"language=de-DE\", and also set by the speechRecognitionLanguage property, the language\r\n     * setting in uri takes precedence, and the effective language is \"de-DE\".\r\n     * Only the properties that are not specified in the endpoint URL can be set by other APIs.\r\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\r\n     * fromEndpoint method, and then set authorizationToken=\"token\" on the created SpeechConfig instance to\r\n     * use the authorization token.\r\n     * @member SpeechTranslationConfig.fromEndpoint\r\n     * @function\r\n     * @public\r\n     * @param {URL} endpoint - The service endpoint to connect to.\r\n     * @param {string} subscriptionKey - The subscription key.\r\n     * @returns {SpeechTranslationConfig} A speech config instance.\r\n     */\r\n    public static fromEndpoint(endpoint: URL, subscriptionKey: string): SpeechTranslationConfig {\r\n        Contracts.throwIfNull(endpoint, \"endpoint\");\r\n        Contracts.throwIfNull(subscriptionKey, \"subscriptionKey\");\r\n\r\n        const ret: SpeechTranslationConfigImpl = new SpeechTranslationConfigImpl();\r\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Endpoint, endpoint.href);\r\n        ret.properties.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token.\r\n     * Note: The caller needs to ensure that the authorization token is valid. Before the authorization token\r\n     * expires, the caller needs to refresh it by calling this setter with a new valid token.\r\n     * @member SpeechTranslationConfig.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public abstract set authorizationToken(value: string);\r\n\r\n    /**\r\n     * Gets/Sets the speech recognition language.\r\n     * @member SpeechTranslationConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public abstract set speechRecognitionLanguage(value: string);\r\n\r\n    /**\r\n     * Add a (text) target language to translate into.\r\n     * @member SpeechTranslationConfig.prototype.addTargetLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language such as de-DE\r\n     */\r\n    public abstract addTargetLanguage(value: string): void;\r\n\r\n    /**\r\n     * Gets the (text) target language to translate into.\r\n     * @member SpeechTranslationConfig.prototype.targetLanguages\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language such as de-DE\r\n     */\r\n    public abstract get targetLanguages(): string[];\r\n\r\n    /**\r\n     * Gets the selected voice name.\r\n     * @member SpeechTranslationConfig.prototype.voiceName\r\n     * @function\r\n     * @public\r\n     * @returns {string} The voice name.\r\n     */\r\n    public abstract get voiceName(): string;\r\n\r\n    /**\r\n     * Gets/Sets voice of the translated language, enable voice synthesis output.\r\n     * @member SpeechTranslationConfig.prototype.voiceName\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The name of the voice.\r\n     */\r\n    public abstract set voiceName(value: string);\r\n\r\n    /**\r\n     * Sets a named property as value\r\n     * @member SpeechTranslationConfig.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string | PropertyId} name - The name of the property to set.\r\n     * @param {string} value - The new value of the property.\r\n     */\r\n    public abstract setProperty(name: string | PropertyId, value: string): void;\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member SpeechTranslationConfig.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * @private\r\n * @class SpeechTranslationConfigImpl\r\n */\r\nexport class SpeechTranslationConfigImpl extends SpeechTranslationConfig {\r\n\r\n    private privSpeechProperties: PropertyCollection;\r\n\r\n    public constructor() {\r\n        super();\r\n        this.privSpeechProperties = new PropertyCollection();\r\n        this.outputFormat = OutputFormat.Simple;\r\n    }\r\n    /**\r\n     * Gets/Sets the authorization token.\r\n     * If this is set, subscription key is ignored.\r\n     * User needs to make sure the provided authorization token is valid and not expired.\r\n     * @member SpeechTranslationConfigImpl.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public set authorizationToken(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceAuthorization_Token, value);\r\n    }\r\n\r\n    /**\r\n     * Sets the speech recognition language.\r\n     * @member SpeechTranslationConfigImpl.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The authorization token.\r\n     */\r\n    public set speechRecognitionLanguage(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_RecoLanguage, value);\r\n    }\r\n\r\n    /**\r\n     * Gets the speech recognition language.\r\n     * @member SpeechTranslationConfigImpl.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @return {string} The speechRecognitionLanguage.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n    }\r\n\r\n    /**\r\n     * @member SpeechTranslationConfigImpl.prototype.subscriptionKey\r\n     * @function\r\n     * @public\r\n     */\r\n    public get subscriptionKey(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId[PropertyId.SpeechServiceConnection_Key]);\r\n    }\r\n\r\n    /**\r\n     * Gets the output format\r\n     * @member SpeechTranslationConfigImpl.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     */\r\n    public get outputFormat(): OutputFormat {\r\n        // eslint-disable-next-line\r\n        return (OutputFormat as any)[this.privSpeechProperties.getProperty(OutputFormatPropertyName, undefined)];\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the output format\r\n     * @member SpeechTranslationConfigImpl.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     */\r\n    public set outputFormat(value: OutputFormat) {\r\n        this.privSpeechProperties.setProperty(OutputFormatPropertyName, OutputFormat[value]);\r\n    }\r\n\r\n    /**\r\n     * Gets the endpoint id.\r\n     * @member SpeechTranslationConfigImpl.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     */\r\n    public get endpointId(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_EndpointId);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the endpoint id.\r\n     * @member SpeechTranslationConfigImpl.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     */\r\n    public set endpointId(value: string) {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_EndpointId, value);\r\n    }\r\n\r\n    /**\r\n     * Add a (text) target language to translate into.\r\n     * @member SpeechTranslationConfigImpl.prototype.addTargetLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language such as de-DE\r\n     */\r\n    public addTargetLanguage(value: string): void {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n\r\n        const languages: string[] = this.targetLanguages;\r\n        if (!languages.includes(value)) {\r\n            languages.push(value);\r\n            this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, languages.join(\",\"));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the (text) target language to translate into.\r\n     * @member SpeechTranslationConfigImpl.prototype.targetLanguages\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language such as de-DE\r\n     */\r\n    public get targetLanguages(): string[] {\r\n\r\n        if (this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined) !== undefined) {\r\n            return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages).split(\",\");\r\n        } else {\r\n            return [];\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Gets the voice name.\r\n     * @member SpeechTranslationConfigImpl.prototype.voiceName\r\n     * @function\r\n     * @public\r\n     */\r\n    public get voiceName(): string {\r\n        return this.getProperty(PropertyId[PropertyId.SpeechServiceConnection_TranslationVoice]);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the voice of the translated language, enable voice synthesis output.\r\n     * @member SpeechTranslationConfigImpl.prototype.voiceName\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The name of the voice.\r\n     */\r\n    public set voiceName(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_TranslationVoice, value);\r\n    }\r\n\r\n    /**\r\n     * Provides the region.\r\n     * @member SpeechTranslationConfigImpl.prototype.region\r\n     * @function\r\n     * @public\r\n     * @returns {string} The region.\r\n     */\r\n    public get region(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_Region);\r\n    }\r\n\r\n    public setProxy(proxyHostName: string, proxyPort: number): void;\r\n    public setProxy(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string): void;\r\n    public setProxy(proxyHostName: any, proxyPort: any, proxyUserName?: any, proxyPassword?: any): void {\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyHostName], proxyHostName as string);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPort], proxyPort as string);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyUserName], proxyUserName as string);\r\n        this.setProperty(PropertyId[PropertyId.SpeechServiceConnection_ProxyPassword], proxyPassword as string);\r\n    }\r\n\r\n    /**\r\n     * Gets an arbitrary property value.\r\n     * @member SpeechTranslationConfigImpl.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property.\r\n     * @param {string} def - The default value of the property in case it is not set.\r\n     * @returns {string} The value of the property.\r\n     */\r\n    public getProperty(name: string, def?: string): string {\r\n        return this.privSpeechProperties.getProperty(name, def);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets an arbitrary property value.\r\n     * @member SpeechTranslationConfigImpl.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string | PropertyId} name - The name of the property to set.\r\n     * @param {string} value - The value of the property.\r\n     */\r\n    public setProperty(name: string | PropertyId, value: string): void {\r\n        this.privSpeechProperties.setProperty(name, value);\r\n    }\r\n\r\n    /**\r\n     * Provides access to custom properties.\r\n     * @member SpeechTranslationConfigImpl.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The properties.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privSpeechProperties;\r\n    }\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member SpeechTranslationConfigImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        return;\r\n    }\r\n\r\n    public setServiceProperty(name: string, value: string): void {\r\n        const currentProperties: IStringDictionary<string> = JSON.parse(this.privSpeechProperties.getProperty(ServicePropertiesPropertyName, \"{}\")) as IStringDictionary<string>;\r\n\r\n        currentProperties[name] = value;\r\n\r\n        this.privSpeechProperties.setProperty(ServicePropertiesPropertyName, JSON.stringify(currentProperties));\r\n    }\r\n\r\n    public setProfanity(profanity: ProfanityOption): void {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceResponse_ProfanityOption, ProfanityOption[profanity]);\r\n    }\r\n\r\n    public enableAudioLogging(): void {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_EnableAudioLogging, \"true\");\r\n    }\r\n    public requestWordLevelTimestamps(): void {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"true\");\r\n    }\r\n    public enableDictation(): void {\r\n        this.privSpeechProperties.setProperty(ForceDictationPropertyName, \"true\");\r\n    }\r\n\r\n    public get speechSynthesisLanguage(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_SynthLanguage);\r\n    }\r\n\r\n    public set speechSynthesisLanguage(language: string) {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_SynthLanguage, language);\r\n    }\r\n\r\n    public get speechSynthesisVoiceName(): string {\r\n        return this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_SynthVoice);\r\n    }\r\n\r\n    public set speechSynthesisVoiceName(voice: string) {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_SynthVoice, voice);\r\n    }\r\n\r\n    public get speechSynthesisOutputFormat(): SpeechSynthesisOutputFormat {\r\n        // eslint-disable-next-line\r\n        return (SpeechSynthesisOutputFormat as any)[this.privSpeechProperties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)];\r\n    }\r\n\r\n    public set speechSynthesisOutputFormat(format: SpeechSynthesisOutputFormat) {\r\n        this.privSpeechProperties.setProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, SpeechSynthesisOutputFormat[format]);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, RecognitionResult, ResultReason } from \"../Exports.js\";\r\n\r\n/**\r\n * Defines result of conversation transcription.\r\n * @class ConversationTranscriptionResult\r\n */\r\nexport class ConversationTranscriptionResult extends RecognitionResult {\r\n    private readonly privSpeakerId: string;\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @public\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {string} text - The recognized text.\r\n     * @param {number} duration - The duration.\r\n     * @param {number} offset - The offset into the stream.\r\n     * @param {string} language - Primary Language detected, if provided.\r\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\r\n     * @param {string} speakerId - speaker id for conversation transcription.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {string} json - Additional Json, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    public constructor(resultId?: string, reason?: ResultReason, text?: string,\r\n                       duration?: number, offset?: number, language?: string,\r\n                       languageDetectionConfidence?: string, speakerId?: string, errorDetails?: string,\r\n                       json?: string, properties?: PropertyCollection) {\r\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties);\r\n        this.privSpeakerId = speakerId;\r\n    }\r\n\r\n    /**\r\n     * speaker id\r\n     * @member ConversationTranscriptionResult.prototype.speakerId\r\n     * @function\r\n     * @public\r\n     * @returns {string} id of speaker in given result\r\n     */\r\n    public get speakerId(): string {\r\n        return this.privSpeakerId;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports.js\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary\r\n} from \"../common/Exports.js\";\r\nimport {\r\n    OutputFormat,\r\n    PropertyId\r\n} from \"../sdk/Exports.js\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./ConnectionFactoryBase.js\";\r\nimport {\r\n    AuthInfo,\r\n    OutputFormatPropertyName,\r\n    RecognizerConfig,\r\n    WebsocketMessageFormatter\r\n} from \"./Exports.js\";\r\nimport { HeaderNames } from \"./HeaderNames.js\";\r\nimport {\r\n    QueryParameterNames\r\n} from \"./QueryParameterNames.js\";\r\n\r\nexport class TranscriberConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    private readonly multiaudioRelativeUri: string = \"/speech/recognition/multiaudio\";\r\n\r\n    public create(\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, \"centralus\");\r\n        const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n        const hostDefault: string = \"wss://transcribe.\" + region + \".cts.speech\" + hostSuffix + this.multiaudioRelativeUri;\r\n        const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, hostDefault);\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n        this.setQueryParams(queryParams, config, endpoint);\r\n\r\n        if (!endpoint) {\r\n            endpoint = host;\r\n        }\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n\r\n    public setQueryParams(queryParams: IStringDictionary<string>, config: RecognizerConfig, endpointUrl: string): void {\r\n\r\n        const endpointId: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_EndpointId, undefined);\r\n        const language: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\r\n\r\n        if (endpointId && !(QueryParameterNames.CustomSpeechDeploymentId in queryParams)) {\r\n            queryParams[QueryParameterNames.CustomSpeechDeploymentId] = endpointId;\r\n        }\r\n\r\n        if (language && !(QueryParameterNames.Language in queryParams)) {\r\n            queryParams[QueryParameterNames.Language] = language;\r\n        }\r\n\r\n        const wordLevelTimings: boolean = config.parameters.getProperty(PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"false\").toLowerCase() === \"true\";\r\n        const detailed: boolean = config.parameters.getProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Simple]) !== OutputFormat[OutputFormat.Simple];\r\n        if (wordLevelTimings || detailed) {\r\n            queryParams[QueryParameterNames.Format] = OutputFormat[OutputFormat.Detailed].toLowerCase();\r\n        }\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpointUrl);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ReplayableAudioNode } from \"../common.browser/Exports.js\";\r\nimport {\r\n    createNoDashGuid,\r\n    Deferred,\r\n    Events,\r\n    IDetachable,\r\n    IEventSource,\r\n    PlatformEvent\r\n} from \"../common/Exports.js\";\r\nimport {\r\n    ConnectingToServiceEvent,\r\n    ListeningStartedEvent,\r\n    RecognitionStartedEvent,\r\n    RecognitionTriggeredEvent,\r\n    SpeechRecognitionEvent,\r\n} from \"./RecognitionEvents.js\";\r\nimport { ServiceTelemetryListener } from \"./ServiceTelemetryListener.Internal.js\";\r\n\r\nexport class RequestSession {\r\n    private privIsDisposed: boolean = false;\r\n    private privServiceTelemetryListener: ServiceTelemetryListener;\r\n    private privDetachables: IDetachable[] = new Array<IDetachable>();\r\n    private privRequestId: string;\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n    private privAudioNode: ReplayableAudioNode;\r\n    private privAuthFetchEventId: string;\r\n    private privIsAudioNodeDetached: boolean = false;\r\n    private privIsRecognizing: boolean = false;\r\n    private privIsSpeechEnded: boolean = false;\r\n    private privTurnStartAudioOffset: number = 0;\r\n    private privLastRecoOffset: number = 0;\r\n    private privHypothesisReceived: boolean = false;\r\n    private privBytesSent: number = 0;\r\n    private privRecognitionBytesSent: number = 0;\r\n    private privRecogNumber: number = 0;\r\n    private privSessionId: string;\r\n    private privTurnDeferral: Deferred<void>;\r\n    private privInTurn: boolean = false;\r\n    private privConnectionAttempts: number = 0;\r\n\r\n    public constructor(audioSourceId: string) {\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privRequestId = createNoDashGuid();\r\n        this.privAudioNodeId = createNoDashGuid();\r\n        this.privTurnDeferral = new Deferred<void>();\r\n\r\n        // We're not in a turn, so resolve.\r\n        this.privTurnDeferral.resolve();\r\n    }\r\n\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n\r\n    public get turnCompletionPromise(): Promise<void> {\r\n        return this.privTurnDeferral.promise;\r\n    }\r\n\r\n    public get isSpeechEnded(): boolean {\r\n        return this.privIsSpeechEnded;\r\n    }\r\n\r\n    public get isRecognizing(): boolean {\r\n        return this.privIsRecognizing;\r\n    }\r\n\r\n    public get currentTurnAudioOffset(): number {\r\n        return this.privTurnStartAudioOffset;\r\n    }\r\n\r\n    public get recogNumber(): number {\r\n        return this.privRecogNumber;\r\n    }\r\n\r\n    public get numConnectionAttempts(): number {\r\n        return this.privConnectionAttempts;\r\n    }\r\n\r\n    // The number of bytes sent for the current connection.\r\n    // Counter is reset to 0 each time a connection is established.\r\n    public get bytesSent(): number {\r\n        return this.privBytesSent;\r\n    }\r\n\r\n    // The number of bytes sent for the current recognition.\r\n    // Counter is reset to 0 each time recognition is started.\r\n    public get recognitionBytesSent(): number {\r\n        return this.privRecognitionBytesSent;\r\n    }\r\n\r\n    public listenForServiceTelemetry(eventSource: IEventSource<PlatformEvent>): void {\r\n        if (!!this.privServiceTelemetryListener) {\r\n            this.privDetachables.push(eventSource.attachListener(this.privServiceTelemetryListener));\r\n        }\r\n    }\r\n\r\n    public startNewRecognition(): void {\r\n        this.privRecognitionBytesSent = 0;\r\n        this.privIsSpeechEnded = false;\r\n        this.privIsRecognizing = true;\r\n        this.privTurnStartAudioOffset = 0;\r\n        this.privLastRecoOffset = 0;\r\n        this.privRecogNumber++;\r\n        this.privServiceTelemetryListener = new ServiceTelemetryListener(this.privRequestId, this.privAudioSourceId, this.privAudioNodeId);\r\n        this.onEvent(new RecognitionTriggeredEvent(this.requestId, this.privSessionId, this.privAudioSourceId, this.privAudioNodeId));\r\n    }\r\n\r\n    public async onAudioSourceAttachCompleted(audioNode: ReplayableAudioNode, isError: boolean): Promise<void> {\r\n        this.privAudioNode = audioNode;\r\n        this.privIsAudioNodeDetached = false;\r\n\r\n        if (isError) {\r\n            await this.onComplete();\r\n        } else {\r\n            this.onEvent(new ListeningStartedEvent(this.privRequestId, this.privSessionId, this.privAudioSourceId, this.privAudioNodeId));\r\n        }\r\n    }\r\n\r\n    public onPreConnectionStart(authFetchEventId: string, connectionId: string): void {\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n        this.privSessionId = connectionId;\r\n        this.onEvent(new ConnectingToServiceEvent(this.privRequestId, this.privAuthFetchEventId, this.privSessionId));\r\n    }\r\n\r\n    public async onAuthCompleted(isError: boolean): Promise<void> {\r\n        if (isError) {\r\n            await this.onComplete();\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    public async onConnectionEstablishCompleted(statusCode: number, reason?: string): Promise<void> {\r\n        if (statusCode === 200) {\r\n            this.onEvent(new RecognitionStartedEvent(this.requestId, this.privAudioSourceId, this.privAudioNodeId, this.privAuthFetchEventId, this.privSessionId));\r\n            if (!!this.privAudioNode) {\r\n                this.privAudioNode.replay();\r\n            }\r\n            this.privTurnStartAudioOffset = this.privLastRecoOffset;\r\n            this.privBytesSent = 0;\r\n            return;\r\n        } else if (statusCode === 403) {\r\n            await this.onComplete();\r\n        }\r\n    }\r\n\r\n    public async onServiceTurnEndResponse(continuousRecognition: boolean): Promise<void> {\r\n        this.privTurnDeferral.resolve();\r\n\r\n        if (!continuousRecognition || this.isSpeechEnded) {\r\n            await this.onComplete();\r\n            this.privInTurn = false;\r\n        } else {\r\n            // Start a new request set.\r\n            this.privTurnStartAudioOffset = this.privLastRecoOffset;\r\n            this.privAudioNode.replay();\r\n        }\r\n    }\r\n\r\n    public onSpeechContext(): void {\r\n        this.privRequestId = createNoDashGuid();\r\n    }\r\n\r\n    public onServiceTurnStartResponse(): void {\r\n        if (!!this.privTurnDeferral && !!this.privInTurn) {\r\n            // What? How are we starting a turn with another not done?\r\n            this.privTurnDeferral.reject(\"Another turn started before current completed.\");\r\n            // Avoid UnhandledPromiseRejection if privTurnDeferral is not being awaited\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            this.privTurnDeferral.promise.then().catch((): void => { });\r\n        }\r\n        this.privInTurn = true;\r\n        this.privTurnDeferral = new Deferred<void>();\r\n    }\r\n\r\n    public onHypothesis(offset: number): void {\r\n        if (!this.privHypothesisReceived) {\r\n            this.privHypothesisReceived = true;\r\n            this.privServiceTelemetryListener.hypothesisReceived(this.privAudioNode.findTimeAtOffset(offset));\r\n        }\r\n    }\r\n\r\n    public onPhraseRecognized(offset: number): void {\r\n        this.privServiceTelemetryListener.phraseReceived(this.privAudioNode.findTimeAtOffset(offset));\r\n        this.onServiceRecognized(offset);\r\n    }\r\n\r\n    public onServiceRecognized(offset: number): void {\r\n        this.privLastRecoOffset = offset;\r\n        this.privHypothesisReceived = false;\r\n        this.privAudioNode.shrinkBuffers(offset);\r\n        this.privConnectionAttempts = 0;\r\n    }\r\n\r\n    public onAudioSent(bytesSent: number): void {\r\n        this.privBytesSent += bytesSent;\r\n        this.privRecognitionBytesSent += bytesSent;\r\n    }\r\n\r\n    public onRetryConnection(): void {\r\n        this.privConnectionAttempts++;\r\n    }\r\n\r\n    public async dispose(): Promise<void> {\r\n        if (!this.privIsDisposed) {\r\n            // we should have completed by now. If we did not its an unknown error.\r\n            this.privIsDisposed = true;\r\n            for (const detachable of this.privDetachables) {\r\n                await detachable.detach();\r\n            }\r\n\r\n            if (!!this.privServiceTelemetryListener) {\r\n                this.privServiceTelemetryListener.dispose();\r\n            }\r\n            this.privIsRecognizing = false;\r\n        }\r\n    }\r\n\r\n    public getTelemetry(): string {\r\n        if (this.privServiceTelemetryListener.hasTelemetry) {\r\n            return this.privServiceTelemetryListener.getTelemetry();\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public async onStopRecognizing(): Promise<void> {\r\n        await this.onComplete();\r\n    }\r\n\r\n    // Should be called with the audioNode for this session has indicated that it is out of speech.\r\n    public onSpeechEnded(): void {\r\n        this.privIsSpeechEnded = true;\r\n    }\r\n\r\n    protected onEvent(event: SpeechRecognitionEvent): void {\r\n        if (!!this.privServiceTelemetryListener) {\r\n            this.privServiceTelemetryListener.onEvent(event);\r\n        }\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private async onComplete(): Promise<void> {\r\n        if (!!this.privIsRecognizing) {\r\n            this.privIsRecognizing = false;\r\n            await this.detachAudioNode();\r\n        }\r\n    }\r\n\r\n    private async detachAudioNode(): Promise<void> {\r\n        if (!this.privIsAudioNodeDetached) {\r\n            this.privIsAudioNodeDetached = true;\r\n            if (this.privAudioNode) {\r\n                await this.privAudioNode.detach();\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport { PropertyCollection, PropertyId, ServicePropertyChannel, SpeechConfigImpl } from \"./Exports.js\";\r\nimport { OutputFormat } from \"./OutputFormat.js\";\r\n\r\n/**\r\n * Class that defines base configurations for dialog service connector\r\n * @class DialogServiceConfig\r\n */\r\nexport abstract class DialogServiceConfig {\r\n\r\n    /**\r\n     * Creates an instance of DialogService config.\r\n     * @constructor\r\n     */\r\n    protected constructor() {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Sets an arbitrary property.\r\n     * @member DialogServiceConfig.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to set.\r\n     * @param {string} value - The new value of the property.\r\n     */\r\n    public abstract setProperty(name: string | PropertyId, value: string): void;\r\n\r\n    /**\r\n     * Returns the current value of an arbitrary property.\r\n     * @member DialogServiceConfig.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to query.\r\n     * @param {string} def - The value to return in case the property is not known.\r\n     * @returns {string} The current value, or provided default, of the given property.\r\n     */\r\n    public abstract getProperty(name: string | PropertyId, def?: string): string;\r\n\r\n    /**\r\n     * @member DialogServiceConfig.prototype.setServiceProperty\r\n     * @function\r\n     * @public\r\n     * @param {name} The name of the property.\r\n     * @param {value} Value to set.\r\n     * @param {channel} The channel used to pass the specified property to service.\r\n     * @summary Sets a property value that will be passed to service using the specified channel.\r\n     */\r\n    public abstract setServiceProperty(name: string, value: string, channel: ServicePropertyChannel): void;\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server.\r\n     * @param proxyPort The port number of the proxy server.\r\n     */\r\n    public abstract setProxy(proxyHostName: string, proxyPort: number): void;\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server, without the protocol scheme (http://)\r\n     * @param porxyPort The port number of the proxy server.\r\n     * @param proxyUserName The user name of the proxy server.\r\n     * @param proxyPassword The password of the proxy server.\r\n     */\r\n    public abstract setProxy(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string): void;\r\n\r\n    /**\r\n     * Returns the configured language.\r\n     * @member DialogServiceConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract get speechRecognitionLanguage(): string;\r\n\r\n    /**\r\n     * Gets/Sets the input language.\r\n     * @member DialogServiceConfig.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language to use for recognition.\r\n     */\r\n    public abstract set speechRecognitionLanguage(value: string);\r\n\r\n    /**\r\n     * Sets the corresponding backend application identifier.\r\n     * @member DialogServiceConfig.prototype.Conversation_ApplicationId\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The application identifier to set.\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    public set applicationId(value: string) { }\r\n\r\n    public static get DialogTypes(): { BotFramework: string; CustomCommands: string } {\r\n        return {\r\n            BotFramework: \"bot_framework\",\r\n            CustomCommands: \"custom_commands\"\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * Dialog Service configuration.\r\n * @class DialogServiceConfigImpl\r\n */\r\nexport class DialogServiceConfigImpl extends DialogServiceConfig {\r\n\r\n    private privSpeechConfig: SpeechConfigImpl;\r\n\r\n    /**\r\n     * Creates an instance of dialogService config.\r\n     */\r\n    public constructor() {\r\n        super();\r\n        this.privSpeechConfig = new SpeechConfigImpl();\r\n    }\r\n\r\n    /**\r\n     * Provides access to custom properties.\r\n     * @member DialogServiceConfigImpl.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The properties.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privSpeechConfig.properties;\r\n    }\r\n\r\n    /**\r\n     * Gets the speech recognition language.\r\n     * @member DialogServiceConfigImpl.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privSpeechConfig.speechRecognitionLanguage;\r\n    }\r\n\r\n    /**\r\n     * Sets the speech recognition language.\r\n     * @member DialogServiceConfigImpl.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} value - The language to set.\r\n     */\r\n    public set speechRecognitionLanguage(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"value\");\r\n        this.privSpeechConfig.speechRecognitionLanguage = value;\r\n    }\r\n\r\n    public get outputFormat(): OutputFormat {\r\n        return this.privSpeechConfig.outputFormat;\r\n    }\r\n\r\n    public set outputFormat(value: OutputFormat) {\r\n        this.privSpeechConfig.outputFormat = value;\r\n    }\r\n\r\n    /**\r\n     * Sets a named property as value\r\n     * @member DialogServiceConfigImpl.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {PropertyId | string} name - The property to set.\r\n     * @param {string} value - The value.\r\n     */\r\n    public setProperty(name: string | PropertyId, value: string): void {\r\n        this.privSpeechConfig.setProperty(name, value);\r\n    }\r\n\r\n    /**\r\n     * Sets a named property as value\r\n     * @member DialogServiceConfigImpl.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {PropertyId | string} name - The property to get.\r\n     * @param {string} def - The default value to return in case the property is not known.\r\n     * @returns {string} The current value, or provided default, of the given property.\r\n     */\r\n    public getProperty(name: string | PropertyId, def?: string): string {\r\n        void def;\r\n        return this.privSpeechConfig.getProperty(name);\r\n    }\r\n\r\n    /**\r\n     * Sets the proxy configuration.\r\n     * Only relevant in Node.js environments.\r\n     * Added in version 1.4.0.\r\n     * @param proxyHostName The host name of the proxy server, without the protocol scheme (http://)\r\n     * @param proxyPort The port number of the proxy server.\r\n     * @param proxyUserName The user name of the proxy server.\r\n     * @param proxyPassword The password of the proxy server.\r\n     */\r\n    public setProxy(proxyHostName: string, proxyPort: number, proxyUserName?: string, proxyPassword?: string): void {\r\n        this.setProperty(PropertyId.SpeechServiceConnection_ProxyHostName, proxyHostName);\r\n        this.setProperty(PropertyId.SpeechServiceConnection_ProxyPort, `${proxyPort}`);\r\n        if (proxyUserName) {\r\n            this.setProperty(PropertyId.SpeechServiceConnection_ProxyUserName, proxyUserName);\r\n        }\r\n        if (proxyPassword) {\r\n            this.setProperty(PropertyId.SpeechServiceConnection_ProxyPassword, proxyPassword);\r\n        }\r\n    }\r\n\r\n    public setServiceProperty(name: string, value: string, channel: ServicePropertyChannel): void {\r\n        void channel;\r\n        this.privSpeechConfig.setServiceProperty(name, value);\r\n    }\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member DialogServiceConfigImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        return;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the payload for incoming websocket commands\r\n */\r\nexport interface ICommandResponsePayload {\r\n    type: string;\r\n    command?: string;\r\n    id?: string; // incoming ws\r\n    nickname?: string; // incoming ws\r\n    participantId?: string;\r\n    roomid?: string;\r\n    value: boolean | number | string;\r\n    token?: string;\r\n}\r\n\r\nconst parseCommandResponse = (json: string): ICommandResponsePayload => JSON.parse(json) as ICommandResponsePayload;\r\n\r\nexport class CommandResponsePayload implements ICommandResponsePayload {\r\n    private privCommandResponse: ICommandResponsePayload;\r\n\r\n    public constructor(json: string) {\r\n        this.privCommandResponse = parseCommandResponse(json);\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privCommandResponse.type;\r\n    }\r\n    public get command(): string {\r\n        return this.privCommandResponse.command;\r\n    }\r\n    public get id(): string {\r\n        return this.privCommandResponse.id;\r\n    }\r\n    public get nickname(): string {\r\n        return this.privCommandResponse.nickname;\r\n    }\r\n    public get participantId(): string {\r\n        return this.privCommandResponse.participantId;\r\n    }\r\n    public get roomid(): string {\r\n        return this.privCommandResponse.roomid;\r\n    }\r\n    public get value(): boolean | number | string {\r\n        return this.privCommandResponse.value;\r\n    }\r\n    public get token(): string {\r\n        return this.privCommandResponse.token;\r\n    }\r\n\r\n    public static fromJSON(json: string): CommandResponsePayload {\r\n        return new CommandResponsePayload(json);\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { CancellationEventArgs } from \"./CancellationEventArgs.js\";\r\nimport { CancellationErrorCode, CancellationReason, IntentRecognitionEventArgs, IntentRecognitionResult } from \"./Exports.js\";\r\n\r\n/**\r\n * Define payload of intent recognition canceled result events.\r\n * @class IntentRecognitionCanceledEventArgs\r\n */\r\nexport class IntentRecognitionCanceledEventArgs extends IntentRecognitionEventArgs implements CancellationEventArgs {\r\n    private privReason: CancellationReason;\r\n    private privErrorDetails: string;\r\n    private privErrorCode: CancellationErrorCode;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {CancellationReason} result - The result of the intent recognition.\r\n     * @param {string} offset - The offset.\r\n     * @param {IntentRecognitionResult} sessionId - The session id.\r\n     */\r\n    public constructor(\r\n        reason: CancellationReason,\r\n        errorDetails: string,\r\n        errorCode: CancellationErrorCode,\r\n        result?: IntentRecognitionResult,\r\n        offset?: number,\r\n        sessionId?: string) {\r\n        super(result, offset, sessionId);\r\n\r\n        this.privReason = reason;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privErrorCode = errorCode;\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member IntentRecognitionCanceledEventArgs.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {CancellationReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): CancellationReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * The error code in case of an unsuccessful recognition.\r\n     * Added in version 1.1.0.\r\n     * @return An error code that represents the error reason.\r\n     */\r\n    public get errorCode(): CancellationErrorCode {\r\n        return this.privErrorCode;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful recognition, provides details of the occurred error.\r\n     * @member IntentRecognitionCanceledEventArgs.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the error details.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IErrorMessages } from \"../common/Exports.js\";\r\n/**\r\n * HTTP request helper\r\n */\r\nexport interface IRequestOptions {\r\n    headers?: {[key: string]: string};\r\n    ignoreCache?: boolean;\r\n    timeout?: number;\r\n}\r\n\r\nexport interface IRestParams {\r\n    apiVersion: string;\r\n    authorization: string;\r\n    clientAppId: string;\r\n    contentTypeKey: string;\r\n    correlationId: string;\r\n    languageCode: string;\r\n    nickname: string;\r\n    profanity: string;\r\n    requestId: string;\r\n    roomId: string;\r\n    sessionToken: string;\r\n    subscriptionKey: string;\r\n    subscriptionRegion: string;\r\n    token: string;\r\n}\r\n\r\nexport class RestConfigBase {\r\n\r\n    public static get requestOptions(): IRequestOptions {\r\n        return RestConfigBase.privDefaultRequestOptions;\r\n    }\r\n\r\n    public static get configParams(): IRestParams {\r\n        return RestConfigBase.privDefaultParams;\r\n    }\r\n\r\n    public static get restErrors(): IErrorMessages {\r\n        return RestConfigBase.privRestErrors;\r\n    }\r\n\r\n    private static readonly privDefaultRequestOptions: IRequestOptions = {\r\n        headers: {\r\n            Accept: \"application/json\",\r\n        },\r\n        ignoreCache: false,\r\n        timeout: 10000,\r\n    };\r\n\r\n    private static readonly privRestErrors: IErrorMessages = {\r\n        authInvalidSubscriptionKey: \"You must specify either an authentication token to use, or a Cognitive Speech subscription key.\",\r\n        authInvalidSubscriptionRegion: \"You must specify the Cognitive Speech region to use.\",\r\n        invalidArgs: \"Required input not found: {arg}.\",\r\n        invalidCreateJoinConversationResponse: \"Creating/Joining conversation failed with HTTP {status}.\",\r\n        invalidParticipantRequest: \"The requested participant was not found.\",\r\n        permissionDeniedConnect: \"Required credentials not found.\",\r\n        permissionDeniedConversation: \"Invalid operation: only the host can {command} the conversation.\",\r\n        permissionDeniedParticipant: \"Invalid operation: only the host can {command} a participant.\",\r\n        permissionDeniedSend: \"Invalid operation: the conversation is not in a connected state.\",\r\n        permissionDeniedStart: \"Invalid operation: there is already an active conversation.\",\r\n    };\r\n\r\n    private static readonly privDefaultParams: IRestParams = {\r\n        apiVersion: \"api-version\",\r\n        authorization: \"Authorization\",\r\n        clientAppId: \"X-ClientAppId\",\r\n        contentTypeKey: \"Content-Type\",\r\n        correlationId: \"X-CorrelationId\",\r\n        languageCode: \"language\",\r\n        nickname: \"nickname\",\r\n        profanity: \"profanity\",\r\n        requestId: \"X-RequestId\",\r\n        roomId: \"roomid\",\r\n        sessionToken: \"token\",\r\n        subscriptionKey: \"Ocp-Apim-Subscription-Key\",\r\n        subscriptionRegion: \"Ocp-Apim-Subscription-Region\",\r\n        token: \"X-CapitoToken\",\r\n    };\r\n\r\n}\r\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport { SessionEventArgs } from \"./Exports.js\";\r\n\r\n/**\r\n * Defines payload for any Service message event\r\n * Added in version 1.9.0\r\n */\r\n\r\nexport class ServiceEventArgs extends SessionEventArgs {\r\n    private privJsonResult: string;\r\n    private privEventName: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} json - json payload of the USP message.\r\n     */\r\n    public constructor(json: string,  name: string, sessionId?: string) {\r\n        super(sessionId);\r\n        this.privJsonResult = json;\r\n        this.privEventName = name;\r\n    }\r\n\r\n    public get jsonString(): string {\r\n        return this.privJsonResult;\r\n    }\r\n\r\n    public get eventName(): string {\r\n        return this.privEventName;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Define Speech Recognizer output formats.\r\n * @class OutputFormat\r\n */\r\nexport enum OutputFormat {\r\n    /**\r\n     * @member OutputFormat.Simple\r\n     */\r\n    Simple = 0,\r\n\r\n    /**\r\n     * @member OutputFormat.Detailed\r\n     */\r\n    Detailed,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport { EventType, PlatformEvent } from \"../common/Exports.js\";\r\n\r\nexport class SpeechSynthesisEvent extends PlatformEvent {\r\n    private privRequestId: string;\r\n\r\n    public constructor(eventName: string, requestId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n\r\n        this.privRequestId = requestId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n}\r\n\r\nexport class SynthesisTriggeredEvent extends SpeechSynthesisEvent {\r\n    private privSessionAudioDestinationId: string;\r\n    private privTurnAudioDestinationId: string;\r\n\r\n    public constructor(requestId: string, sessionAudioDestinationId: string, turnAudioDestinationId: string) {\r\n        super(\"SynthesisTriggeredEvent\", requestId);\r\n\r\n        this.privSessionAudioDestinationId = sessionAudioDestinationId;\r\n        this.privTurnAudioDestinationId = turnAudioDestinationId;\r\n    }\r\n\r\n    public get audioSessionDestinationId(): string {\r\n        return this.privSessionAudioDestinationId;\r\n    }\r\n\r\n    public get audioTurnDestinationId(): string {\r\n        return this.privTurnAudioDestinationId;\r\n    }\r\n}\r\n\r\nexport class ConnectingToSynthesisServiceEvent extends SpeechSynthesisEvent {\r\n    private privAuthFetchEventId: string;\r\n\r\n    public constructor(requestId: string, authFetchEventId: string) {\r\n        super(\"ConnectingToSynthesisServiceEvent\", requestId);\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n}\r\n\r\nexport class SynthesisStartedEvent extends SpeechSynthesisEvent {\r\n    private privAuthFetchEventId: string;\r\n\r\n    public constructor(requestId: string, authFetchEventId: string) {\r\n        super(\"SynthesisStartedEvent\", requestId);\r\n\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the possible reasons a recognition result might be generated.\r\n * @class ResultReason\r\n */\r\nexport enum ResultReason {\r\n    /**\r\n     * Indicates speech could not be recognized. More details\r\n     * can be found in the NoMatchDetails object.\r\n     * @member ResultReason.NoMatch\r\n     */\r\n    NoMatch,\r\n\r\n    /**\r\n     * Indicates that the recognition was canceled. More details\r\n     * can be found using the CancellationDetails object.\r\n     * @member ResultReason.Canceled\r\n     */\r\n    Canceled,\r\n\r\n    /**\r\n     * Indicates the speech result contains hypothesis text.\r\n     * @member ResultReason.RecognizedSpeech\r\n     */\r\n    RecognizingSpeech,\r\n\r\n    /**\r\n     * Indicates the speech result contains final text that has been recognized.\r\n     * Speech Recognition is now complete for this phrase.\r\n     * @member ResultReason.RecognizedSpeech\r\n     */\r\n    RecognizedSpeech,\r\n\r\n    /**\r\n     * Indicates the speech result contains a finalized acceptance of a provided keyword.\r\n     * Speech recognition will continue unless otherwise configured.\r\n     * @member ResultReason.RecognizedKeyword\r\n     */\r\n    RecognizedKeyword,\r\n\r\n    /**\r\n     * Indicates the intent result contains hypothesis text and intent.\r\n     * @member ResultReason.RecognizingIntent\r\n     */\r\n    RecognizingIntent,\r\n\r\n    /**\r\n     * Indicates the intent result contains final text and intent.\r\n     * Speech Recognition and Intent determination are now complete for this phrase.\r\n     * @member ResultReason.RecognizedIntent\r\n     */\r\n    RecognizedIntent,\r\n\r\n    /**\r\n     * Indicates the translation result contains hypothesis text and its translation(s).\r\n     * @member ResultReason.TranslatingSpeech\r\n     */\r\n    TranslatingSpeech,\r\n\r\n    /**\r\n     * Indicates the translation result contains final text and corresponding translation(s).\r\n     * Speech Recognition and Translation are now complete for this phrase.\r\n     * @member ResultReason.TranslatedSpeech\r\n     */\r\n    TranslatedSpeech,\r\n\r\n    /**\r\n     * Indicates the synthesized audio result contains a non-zero amount of audio data\r\n     * @member ResultReason.SynthesizingAudio\r\n     */\r\n    SynthesizingAudio,\r\n\r\n    /**\r\n     * Indicates the synthesized audio is now complete for this phrase.\r\n     * @member ResultReason.SynthesizingAudioCompleted\r\n     */\r\n    SynthesizingAudioCompleted,\r\n\r\n    /**\r\n     * Indicates the speech synthesis is now started\r\n     * @member ResultReason.SynthesizingAudioStarted\r\n     */\r\n    SynthesizingAudioStarted,\r\n\r\n    /**\r\n     * Indicates the voice profile is being enrolled and customers need to send more audio to create a voice profile.\r\n     * @member ResultReason.EnrollingVoiceProfile\r\n     */\r\n    EnrollingVoiceProfile,\r\n\r\n    /**\r\n     * Indicates the voice profile has been enrolled.\r\n     * @member ResultReason.EnrolledVoiceProfile\r\n     */\r\n    EnrolledVoiceProfile,\r\n\r\n    /**\r\n     * Indicates successful identification of some speakers.\r\n     * @member ResultReason.RecognizedSpeakers\r\n     */\r\n    RecognizedSpeakers,\r\n\r\n    /**\r\n     * Indicates successfully verified one speaker.\r\n     * @member ResultReason.RecognizedSpeaker\r\n     */\r\n    RecognizedSpeaker,\r\n\r\n    /**\r\n     * Indicates a voice profile has been reset successfully.\r\n     * @member ResultReason.ResetVoiceProfile\r\n     */\r\n    ResetVoiceProfile,\r\n\r\n    /**\r\n     * Indicates a voice profile has been deleted successfully.\r\n     * @member ResultReason.DeletedVoiceProfile\r\n     */\r\n    DeletedVoiceProfile,\r\n\r\n    /**\r\n     * Indicates synthesis voices list has been successfully retrieved.\r\n     * @member ResultReason.VoicesListRetrieved\r\n     */\r\n    VoicesListRetrieved,\r\n\r\n    /**\r\n     * Indicates the transcription result contains hypothesis text and its translation(s) for\r\n     * other participants in the conversation.\r\n     * @member ResultReason.TranslatingParticipantSpeech\r\n     */\r\n    TranslatingParticipantSpeech,\r\n\r\n    /**\r\n     * Indicates the transcription result contains final text and corresponding translation(s)\r\n     * for other participants in the conversation. Speech Recognition and Translation are now\r\n     * complete for this phrase.\r\n     * @member ResultReason.TranslatedParticipantSpeech\r\n     */\r\n    TranslatedParticipantSpeech,\r\n\r\n    /**\r\n     * <summary>\r\n     * Indicates the transcription result contains the instant message and corresponding\r\n     * translation(s).\r\n     * @member ResultReason.TranslatedInstantMessage\r\n     */\r\n    TranslatedInstantMessage,\r\n\r\n    /**\r\n     * Indicates the transcription result contains the instant message for other participants\r\n     * in the conversation and corresponding translation(s).\r\n     * @member ResultReason.TranslatedParticipantInstantMessage\r\n     */\r\n    TranslatedParticipantInstantMessage,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines contents of speech synthesis viseme event.\r\n * @class SpeechSynthesisVisemeEventArgs\r\n * Added in version 1.16.0\r\n */\r\nexport class SpeechSynthesisVisemeEventArgs {\r\n    private privAudioOffset: number;\r\n    private privVisemeId: number;\r\n    private privAnimation: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} audioOffset - The audio offset.\r\n     * @param {number} visemeId - The viseme ID.\r\n     * @param {string} animation - The animation, could be in svg or other format.\r\n     */\r\n    public constructor(audioOffset: number, visemeId: number, animation: string) {\r\n        this.privAudioOffset = audioOffset;\r\n        this.privVisemeId = visemeId;\r\n        this.privAnimation = animation;\r\n    }\r\n\r\n    /**\r\n     * Specifies the audio offset.\r\n     * @member SpeechSynthesisVisemeEventArgs.prototype.audioOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the audio offset.\r\n     */\r\n    public get audioOffset(): number {\r\n        return this.privAudioOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the viseme ID.\r\n     * @member SpeechSynthesisVisemeEventArgs.prototype.visemeId\r\n     * @function\r\n     * @public\r\n     * @returns {number} the viseme ID.\r\n     */\r\n    public get visemeId(): number {\r\n        return this.privVisemeId;\r\n    }\r\n\r\n    /**\r\n     * Specifies the animation.\r\n     * @member SpeechSynthesisVisemeEventArgs.prototype.animation\r\n     * @function\r\n     * @public\r\n     * @returns {string} the animation, could be in svg or other format.\r\n     */\r\n    public get animation(): string {\r\n        return this.privAnimation;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RiffPcmEncoder, Stream } from \"../common/Exports\";\r\nimport { IRecorder } from \"./IRecorder\";\r\n\r\nexport class PcmRecorder implements IRecorder {\r\n    private privMediaResources: IMediaResources;\r\n    private privSpeechProcessorScript: string; // speech-processor.js Url\r\n    private privStopInputOnRelease: boolean;\r\n\r\n    public constructor(stopInputOnRelease: boolean) {\r\n        this.privStopInputOnRelease = stopInputOnRelease;\r\n    }\r\n\r\n    public record(context: AudioContext, mediaStream: MediaStream, outputStream: Stream<ArrayBuffer>): void {\r\n        const desiredSampleRate = 16000;\r\n\r\n        const waveStreamEncoder = new RiffPcmEncoder(context.sampleRate, desiredSampleRate);\r\n\r\n        const micInput = context.createMediaStreamSource(mediaStream);\r\n\r\n        const attachScriptProcessor = (): void => {\r\n            // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\r\n            const scriptNode = (() => {\r\n                let bufferSize = 0;\r\n                try {\r\n                    return context.createScriptProcessor(bufferSize, 1, 1);\r\n                } catch (error) {\r\n                    // Webkit (<= version 31) requires a valid bufferSize.\r\n                    bufferSize = 2048;\r\n                    let audioSampleRate = context.sampleRate;\r\n                    while (bufferSize < 16384 && audioSampleRate >= (2 * desiredSampleRate)) {\r\n                        bufferSize <<= 1;\r\n                        audioSampleRate >>= 1;\r\n                    }\r\n                    return context.createScriptProcessor(bufferSize, 1, 1);\r\n                }\r\n            })();\r\n            scriptNode.onaudioprocess = (event: AudioProcessingEvent): void => {\r\n                const inputFrame = event.inputBuffer.getChannelData(0);\r\n\r\n                if (outputStream && !outputStream.isClosed) {\r\n                    const waveFrame = waveStreamEncoder.encode(inputFrame);\r\n                    if (!!waveFrame) {\r\n                        outputStream.writeStreamChunk({\r\n                            buffer: waveFrame,\r\n                            isEnd: false,\r\n                            timeReceived: Date.now(),\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n            micInput.connect(scriptNode);\r\n            scriptNode.connect(context.destination);\r\n            this.privMediaResources = {\r\n                scriptProcessorNode: scriptNode,\r\n                source: micInput,\r\n                stream: mediaStream,\r\n            };\r\n        };\r\n\r\n        // https://webaudio.github.io/web-audio-api/#audioworklet\r\n        // Using AudioWorklet to improve audio quality and avoid audio glitches due to blocking the UI thread\r\n        const skipAudioWorklet = !!this.privSpeechProcessorScript && this.privSpeechProcessorScript.toLowerCase() === \"ignore\";\r\n\r\n        if (!!context.audioWorklet && !skipAudioWorklet) {\r\n            if (!this.privSpeechProcessorScript) {\r\n                const workletScript = `class SP extends AudioWorkletProcessor {\r\n                    constructor(options) {\r\n                      super(options);\r\n                    }\r\n                    process(inputs, outputs) {\r\n                      const input = inputs[0];\r\n                      const output = [];\r\n                      for (let channel = 0; channel < input.length; channel += 1) {\r\n                        output[channel] = input[channel];\r\n                      }\r\n                      this.port.postMessage(output[0]);\r\n                      return true;\r\n                    }\r\n                  }\r\n                  registerProcessor('speech-processor', SP);`;\r\n                const blob = new Blob([workletScript], { type: \"application/javascript; charset=utf-8\" });\r\n                this.privSpeechProcessorScript = URL.createObjectURL(blob);\r\n            }\r\n\r\n            context.audioWorklet\r\n                .addModule(this.privSpeechProcessorScript)\r\n                .then((): void => {\r\n                    const workletNode = new AudioWorkletNode(context, \"speech-processor\");\r\n                    workletNode.port.onmessage = (ev: MessageEvent): void => {\r\n                        const inputFrame: Float32Array = ev.data as Float32Array;\r\n\r\n                        if (outputStream && !outputStream.isClosed) {\r\n                            const waveFrame = waveStreamEncoder.encode(inputFrame);\r\n                            if (!!waveFrame) {\r\n                                outputStream.writeStreamChunk({\r\n                                    buffer: waveFrame,\r\n                                    isEnd: false,\r\n                                    timeReceived: Date.now(),\r\n                                });\r\n                            }\r\n                        }\r\n                    };\r\n                    micInput.connect(workletNode);\r\n                    workletNode.connect(context.destination);\r\n                    this.privMediaResources = {\r\n                        scriptProcessorNode: workletNode,\r\n                        source: micInput,\r\n                        stream: mediaStream,\r\n                    };\r\n                })\r\n                .catch((): void => {\r\n                    attachScriptProcessor();\r\n                });\r\n        } else {\r\n            try {\r\n                attachScriptProcessor();\r\n            } catch (err) {\r\n                throw new Error(`Unable to start audio worklet node for PCMRecorder: ${err as string}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    public releaseMediaResources(context: AudioContext): void {\r\n        if (this.privMediaResources) {\r\n            if (this.privMediaResources.scriptProcessorNode) {\r\n                this.privMediaResources.scriptProcessorNode.disconnect(context.destination);\r\n                this.privMediaResources.scriptProcessorNode = null;\r\n            }\r\n            if (this.privMediaResources.source) {\r\n                this.privMediaResources.source.disconnect();\r\n                if (this.privStopInputOnRelease) {\r\n                    this.privMediaResources.stream.getTracks().forEach((track: MediaStreamTrack): void => track.stop());\r\n                }\r\n                this.privMediaResources.source = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public setWorkletUrl(url: string): void {\r\n        this.privSpeechProcessorScript = url;\r\n    }\r\n}\r\n\r\ninterface IMediaResources {\r\n    source: MediaStreamAudioSourceNode;\r\n    scriptProcessorNode: ScriptProcessorNode | AudioWorkletNode;\r\n    stream: MediaStream;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nimport {\r\n    IAudioStreamNode,\r\n    IStreamChunk,\r\n} from \"../common/Exports.js\";\r\n\r\nexport class ReplayableAudioNode implements IAudioStreamNode {\r\n    private privAudioNode: IAudioStreamNode;\r\n    private privBytesPerSecond: number;\r\n    private privBuffers: BufferEntry[] = [];\r\n    private privReplayOffset: number = 0;\r\n    private privLastShrinkOffset: number = 0;\r\n    private privBufferStartOffset: number = 0;\r\n    private privBufferSerial: number = 0;\r\n    private privBufferedBytes: number = 0;\r\n    private privReplay: boolean = false;\r\n    private privLastChunkAcquiredTime: number = 0;\r\n\r\n    public constructor(audioSource: IAudioStreamNode, bytesPerSecond: number) {\r\n        this.privAudioNode = audioSource;\r\n        this.privBytesPerSecond = bytesPerSecond;\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privAudioNode.id();\r\n    }\r\n\r\n    // Reads and returns the next chunk of audio buffer.\r\n    // If replay of existing buffers are needed, read() will first seek and replay\r\n    // existing content, and upoin completion it will read new content from the underlying\r\n    // audio node, saving that content into the replayable buffers.\r\n    public read(): Promise<IStreamChunk<ArrayBuffer>> {\r\n        // if there is a replay request to honor.\r\n        if (!!this.privReplay && this.privBuffers.length !== 0) {\r\n            // Find the start point in the buffers.\r\n            // Offsets are in 100ns increments.\r\n            // So how many bytes do we need to seek to get the right offset?\r\n            const offsetToSeek: number = this.privReplayOffset - this.privBufferStartOffset;\r\n\r\n            let bytesToSeek: number = Math.round(offsetToSeek * this.privBytesPerSecond * 1e-7);\r\n            if (0 !== (bytesToSeek % 2)) {\r\n                bytesToSeek++;\r\n            }\r\n\r\n            let i: number = 0;\r\n\r\n            while (i < this.privBuffers.length && bytesToSeek >= this.privBuffers[i].chunk.buffer.byteLength) {\r\n                bytesToSeek -= this.privBuffers[i++].chunk.buffer.byteLength;\r\n            }\r\n\r\n            if (i < this.privBuffers.length) {\r\n                const retVal: ArrayBuffer = this.privBuffers[i].chunk.buffer.slice(bytesToSeek);\r\n\r\n                this.privReplayOffset += (retVal.byteLength / this.privBytesPerSecond) * 1e+7;\r\n\r\n                // If we've reached the end of the buffers, stop replaying.\r\n                if (i === this.privBuffers.length - 1) {\r\n                    this.privReplay = false;\r\n                }\r\n\r\n                return Promise.resolve<IStreamChunk<ArrayBuffer>>({\r\n                    buffer: retVal,\r\n                    isEnd: false,\r\n                    timeReceived: this.privBuffers[i].chunk.timeReceived,\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.privAudioNode.read()\r\n            .then((result: IStreamChunk<ArrayBuffer>): IStreamChunk<ArrayBuffer> => {\r\n                if (result && result.buffer) {\r\n                    this.privBuffers.push(new BufferEntry(result, this.privBufferSerial++, this.privBufferedBytes));\r\n                    this.privBufferedBytes += result.buffer.byteLength;\r\n                }\r\n                return result;\r\n            });\r\n    }\r\n\r\n    public detach(): Promise<void> {\r\n        this.privBuffers = undefined;\r\n        return this.privAudioNode.detach();\r\n    }\r\n\r\n    public replay(): void {\r\n        if (this.privBuffers && 0 !== this.privBuffers.length) {\r\n            this.privReplay = true;\r\n            this.privReplayOffset = this.privLastShrinkOffset;\r\n        }\r\n    }\r\n\r\n    // Shrinks the existing audio buffers to start at the new offset, or at the\r\n    // beginning of the buffer closest to the requested offset.\r\n    // A replay request will start from the last shrink point.\r\n    public shrinkBuffers(offset: number): void {\r\n        if (this.privBuffers === undefined || this.privBuffers.length === 0) {\r\n            return;\r\n        }\r\n\r\n        this.privLastShrinkOffset = offset;\r\n\r\n        // Find the start point in the buffers.\r\n        // Offsets are in 100ns increments.\r\n        // So how many bytes do we need to seek to get the right offset?\r\n        const offsetToSeek: number = offset - this.privBufferStartOffset;\r\n\r\n        let bytesToSeek: number = Math.round(offsetToSeek * this.privBytesPerSecond * 1e-7);\r\n\r\n        let i: number = 0;\r\n\r\n        while (i < this.privBuffers.length && bytesToSeek >= this.privBuffers[i].chunk.buffer.byteLength) {\r\n            bytesToSeek -= this.privBuffers[i++].chunk.buffer.byteLength;\r\n        }\r\n        this.privBufferStartOffset = Math.round(offset - ((bytesToSeek / this.privBytesPerSecond) * 1e+7));\r\n        this.privBuffers = this.privBuffers.slice(i);\r\n    }\r\n\r\n    // Finds the time a buffer of audio was first seen by offset.\r\n    public findTimeAtOffset(offset: number): number {\r\n        if (offset < this.privBufferStartOffset || this.privBuffers === undefined) {\r\n            return 0;\r\n        }\r\n\r\n        for (const value of this.privBuffers) {\r\n            const startOffset: number = (value.byteOffset / this.privBytesPerSecond) * 1e7;\r\n            const endOffset: number = startOffset + ((value.chunk.buffer.byteLength / this.privBytesPerSecond) * 1e7);\r\n\r\n            if (offset >= startOffset && offset <= endOffset) {\r\n                return value.chunk.timeReceived;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n}\r\n\r\n// Primary use of this class is to help debugging problems with the replay\r\n// code. If the memory cost of alloc / dealloc gets too much, drop it and just use\r\n// the ArrayBuffer directly.\r\nclass BufferEntry {\r\n    public chunk: IStreamChunk<ArrayBuffer>;\r\n    public serial: number;\r\n    public byteOffset: number;\r\n\r\n    public constructor(chunk: IStreamChunk<ArrayBuffer>, serial: number, byteOffset: number) {\r\n        this.chunk = chunk;\r\n        this.serial = serial;\r\n        this.byteOffset = byteOffset;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IntentRecognitionResult, RecognitionEventArgs } from \"./Exports.js\";\r\n\r\n/**\r\n * Intent recognition result event arguments.\r\n * @class\r\n */\r\nexport class IntentRecognitionEventArgs extends RecognitionEventArgs {\r\n    private privResult: IntentRecognitionResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param result - The result of the intent recognition.\r\n     * @param offset - The offset.\r\n     * @param sessionId - The session id.\r\n     */\r\n    public constructor(result: IntentRecognitionResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Represents the intent recognition result.\r\n     * @member IntentRecognitionEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {IntentRecognitionResult} Represents the intent recognition result.\r\n     */\r\n    public get result(): IntentRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport { EventType, PlatformEvent } from \"../common/Exports.js\";\r\n\r\nexport class SpeechRecognitionEvent extends PlatformEvent {\r\n    private privRequestId: string;\r\n    private privSessionId: string;\r\n\r\n    public constructor(eventName: string, requestId: string, sessionId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n\r\n        this.privRequestId = requestId;\r\n        this.privSessionId = sessionId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n}\r\n\r\nexport class RecognitionTriggeredEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n\r\n    public constructor(requestId: string, sessionId: string, audioSourceId: string, audioNodeId: string) {\r\n        super(\"RecognitionTriggeredEvent\", requestId, sessionId);\r\n\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n}\r\n\r\nexport class ListeningStartedEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n\r\n    public constructor(requestId: string, sessionId: string, audioSourceId: string, audioNodeId: string) {\r\n        super(\"ListeningStartedEvent\", requestId, sessionId);\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n}\r\n\r\nexport class ConnectingToServiceEvent extends SpeechRecognitionEvent {\r\n    private privAuthFetchEventid: string;\r\n\r\n    public constructor(requestId: string, authFetchEventid: string, sessionId: string) {\r\n        super(\"ConnectingToServiceEvent\", requestId, sessionId);\r\n        this.privAuthFetchEventid = authFetchEventid;\r\n    }\r\n\r\n    public get authFetchEventid(): string {\r\n        return this.privAuthFetchEventid;\r\n    }\r\n}\r\n\r\nexport class RecognitionStartedEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n    private privAuthFetchEventId: string;\r\n\r\n    public constructor(requestId: string, audioSourceId: string, audioNodeId: string, authFetchEventId: string, sessionId: string) {\r\n        super(\"RecognitionStartedEvent\", requestId, sessionId);\r\n\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n}\r\n\r\nexport enum RecognitionCompletionStatus {\r\n    Success,\r\n    AudioSourceError,\r\n    AudioSourceTimeout,\r\n    AuthTokenFetchError,\r\n    AuthTokenFetchTimeout,\r\n    UnAuthorized,\r\n    ConnectTimeout,\r\n    ConnectError,\r\n    ClientRecognitionActivityTimeout,\r\n    UnknownError,\r\n}\r\n\r\nexport class RecognitionEndedEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n    private privAuthFetchEventId: string;\r\n    private privServiceTag: string;\r\n    private privStatus: RecognitionCompletionStatus;\r\n    private privError: string;\r\n\r\n    public constructor(\r\n        requestId: string,\r\n        audioSourceId: string,\r\n        audioNodeId: string,\r\n        authFetchEventId: string,\r\n        sessionId: string,\r\n        serviceTag: string,\r\n        status: RecognitionCompletionStatus,\r\n        error: string) {\r\n\r\n        super(\"RecognitionEndedEvent\", requestId, sessionId, status === RecognitionCompletionStatus.Success ? EventType.Info : EventType.Error);\r\n\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n        this.privStatus = status;\r\n        this.privError = error;\r\n        this.privServiceTag = serviceTag;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n\r\n    public get serviceTag(): string {\r\n        return this.privServiceTag;\r\n    }\r\n\r\n    public get status(): RecognitionCompletionStatus {\r\n        return this.privStatus;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { CancellationErrorCodePropertyName, EnumTranslation, SimpleSpeechPhrase } from \"../common.speech/Exports.js\";\r\nimport { CancellationDetailsBase } from \"./CancellationDetailsBase.js\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    RecognitionResult,\r\n    SpeechSynthesisResult\r\n} from \"./Exports.js\";\r\n\r\n/**\r\n * Contains detailed information about why a result was canceled.\r\n * @class CancellationDetails\r\n */\r\nexport class CancellationDetails extends CancellationDetailsBase {\r\n\r\n    private constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        super(reason, errorDetails, errorCode);\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of CancellationDetails object for the canceled RecognitionResult.\r\n     * @member CancellationDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {RecognitionResult | SpeechSynthesisResult} result - The result that was canceled.\r\n     * @returns {CancellationDetails} The cancellation details object being created.\r\n     */\r\n    public static fromResult(result: RecognitionResult | SpeechSynthesisResult): CancellationDetails {\r\n        let reason = CancellationReason.Error;\r\n        let errorCode: CancellationErrorCode = CancellationErrorCode.NoError;\r\n\r\n        if (result instanceof RecognitionResult && !!result.json) {\r\n            const simpleSpeech: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(result.json, 0); // Offset fixups are already done.\r\n            reason = EnumTranslation.implTranslateCancelResult(simpleSpeech.RecognitionStatus);\r\n        }\r\n\r\n        if (!!result.properties) {\r\n            errorCode = CancellationErrorCode[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError]) as keyof typeof CancellationErrorCode];\r\n        }\r\n\r\n        return new CancellationDetails(reason, result.errorDetails || EnumTranslation.implTranslateErrorDetails(errorCode), errorCode);\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IDynamicGrammar,\r\n    IDynamicGrammarGeneric,\r\n} from \"./Exports.js\";\r\n\r\n/**\r\n * Responsible for building the object to be sent to the speech service to support dynamic grammars.\r\n * @class DynamicGrammarBuilder\r\n */\r\nexport class DynamicGrammarBuilder {\r\n\r\n    private privPhrases: string[];\r\n    private privGrammars: string[];\r\n\r\n    // Adds one more reference phrases to the dynamic grammar to send.\r\n    // All added phrases are generic phrases.\r\n    public addPhrase(phrase: string | string[]): void {\r\n        if (!this.privPhrases) {\r\n            this.privPhrases = [];\r\n        }\r\n\r\n        if (phrase instanceof Array) {\r\n            this.privPhrases = this.privPhrases.concat(phrase);\r\n        } else {\r\n            this.privPhrases.push(phrase);\r\n        }\r\n    }\r\n\r\n    // Clears all phrases stored in the current object.\r\n    public clearPhrases(): void {\r\n        this.privPhrases = undefined;\r\n    }\r\n\r\n    // Adds one or more reference grammars to the current grammar.\r\n    public addReferenceGrammar(grammar: string | string[]): void {\r\n        if (!this.privGrammars) {\r\n            this.privGrammars = [];\r\n        }\r\n\r\n        if (grammar instanceof Array) {\r\n            this.privGrammars = this.privGrammars.concat(grammar);\r\n        } else {\r\n            this.privGrammars.push(grammar);\r\n        }\r\n    }\r\n\r\n    // clears all grammars stored on the recognizer.\r\n    public clearGrammars(): void {\r\n        this.privGrammars = undefined;\r\n    }\r\n\r\n    // Generates an object that represents the dynamic grammar used by the Speech Service.\r\n    // This is done by building an object with the correct layout based on the phrases and reference grammars added to this instance\r\n    // of a DynamicGrammarBuilder\r\n    public generateGrammarObject(): IDynamicGrammar {\r\n        if (this.privGrammars === undefined && this.privPhrases === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        const retObj: IDynamicGrammar = {};\r\n        retObj.ReferenceGrammars = this.privGrammars;\r\n\r\n        if (undefined !== this.privPhrases && 0 !== this.privPhrases.length) {\r\n            const retPhrases: IDynamicGrammarGeneric[] = [];\r\n\r\n            this.privPhrases.forEach((value: string): void => {\r\n                retPhrases.push({\r\n                    Text: value,\r\n                });\r\n            });\r\n\r\n            retObj.Groups = [{ Type: \"Generic\", Items: retPhrases }];\r\n        }\r\n\r\n        return retObj;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nexport enum AudioFormatTag {\r\n    PCM = 1,\r\n    MuLaw,\r\n    Siren,\r\n    MP3,\r\n    SILKSkype,\r\n    OGG_OPUS,\r\n    WEBM_OPUS,\r\n    ALaw,\r\n    FLAC,\r\n    OPUS,\r\n    AMR_WB,\r\n    G722,\r\n}\r\n\r\n/**\r\n * Represents audio stream format used for custom audio input configurations.\r\n * @class AudioStreamFormat\r\n */\r\nexport abstract class AudioStreamFormat {\r\n    /**\r\n     * Creates an audio stream format object representing the default audio stream\r\n     * format (16KHz 16bit mono PCM).\r\n     * @member AudioStreamFormat.getDefaultInputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {AudioStreamFormat} The audio stream format being created.\r\n     */\r\n    public static getDefaultInputFormat(): AudioStreamFormat {\r\n        return AudioStreamFormatImpl.getDefaultInputFormat();\r\n    }\r\n\r\n    /**\r\n     * Creates an audio stream format object with the specified format characteristics.\r\n     * @member AudioStreamFormat.getWaveFormat\r\n     * @function\r\n     * @public\r\n     * @param {number} samplesPerSecond - Sample rate, in samples per second (Hertz).\r\n     * @param {number} bitsPerSample - Bits per sample, typically 16.\r\n     * @param {number} channels - Number of channels in the waveform-audio data. Monaural data\r\n     * uses one channel and stereo data uses two channels.\r\n     * @param {AudioFormatTag} format - Audio format (PCM, alaw or mulaw).\r\n     * @returns {AudioStreamFormat} The audio stream format being created.\r\n     */\r\n    public static getWaveFormat(samplesPerSecond: number, bitsPerSample: number, channels: number, format: AudioFormatTag): AudioStreamFormat {\r\n        return new AudioStreamFormatImpl(samplesPerSecond, bitsPerSample, channels, format);\r\n    }\r\n\r\n    /**\r\n     * Creates an audio stream format object with the specified pcm waveformat characteristics.\r\n     * @member AudioStreamFormat.getWaveFormatPCM\r\n     * @function\r\n     * @public\r\n     * @param {number} samplesPerSecond - Sample rate, in samples per second (Hertz).\r\n     * @param {number} bitsPerSample - Bits per sample, typically 16.\r\n     * @param {number} channels - Number of channels in the waveform-audio data. Monaural data\r\n     * uses one channel and stereo data uses two channels.\r\n     * @returns {AudioStreamFormat} The audio stream format being created.\r\n     */\r\n    public static getWaveFormatPCM(samplesPerSecond: number, bitsPerSample: number, channels: number): AudioStreamFormat {\r\n        return new AudioStreamFormatImpl(samplesPerSecond, bitsPerSample, channels);\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member AudioStreamFormat.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * @private\r\n * @class AudioStreamFormatImpl\r\n */\r\nexport class AudioStreamFormatImpl extends AudioStreamFormat {\r\n    protected privHeader: ArrayBuffer;\r\n\r\n    /**\r\n     * Creates an instance with the given values.\r\n     * @constructor\r\n     * @param {number} samplesPerSec - Samples per second.\r\n     * @param {number} bitsPerSample - Bits per sample.\r\n     * @param {number} channels - Number of channels.\r\n     * @param {AudioFormatTag} format - Audio format (PCM, alaw or mulaw).\r\n     */\r\n    public constructor(samplesPerSec: number = 16000, bitsPerSample: number = 16, channels: number = 1, format: AudioFormatTag = AudioFormatTag.PCM) {\r\n        super();\r\n\r\n        let isWavFormat: boolean = true;\r\n        /* 1 for PCM; 6 for alaw; 7 for mulaw */\r\n        switch (format) {\r\n            case AudioFormatTag.PCM:\r\n                this.formatTag = 1;\r\n                break;\r\n            case AudioFormatTag.ALaw:\r\n                this.formatTag = 6;\r\n                break;\r\n            case AudioFormatTag.MuLaw:\r\n                this.formatTag = 7;\r\n                break;\r\n            default:\r\n                isWavFormat = false;\r\n        }\r\n        this.bitsPerSample = bitsPerSample;\r\n        this.samplesPerSec = samplesPerSec;\r\n        this.channels = channels;\r\n        this.avgBytesPerSec = this.samplesPerSec * this.channels * (this.bitsPerSample / 8);\r\n        this.blockAlign = this.channels * Math.max(this.bitsPerSample, 8);\r\n\r\n        if (isWavFormat) {\r\n            this.privHeader = new ArrayBuffer(44);\r\n\r\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\r\n            const view = new DataView(this.privHeader);\r\n\r\n            /* RIFF identifier */\r\n            this.setString(view, 0, \"RIFF\");\r\n            /* file length */\r\n            view.setUint32(4, 0, true);\r\n            /* RIFF type & Format */\r\n            this.setString(view, 8, \"WAVEfmt \");\r\n            /* format chunk length */\r\n            view.setUint32(16, 16, true);\r\n            /* audio format */\r\n            view.setUint16(20, this.formatTag, true);\r\n            /* channel count */\r\n            view.setUint16(22, this.channels, true);\r\n            /* sample rate */\r\n            view.setUint32(24, this.samplesPerSec, true);\r\n            /* byte rate (sample rate * block align) */\r\n            view.setUint32(28, this.avgBytesPerSec, true);\r\n            /* block align (channel count * bytes per sample) */\r\n            view.setUint16(32, this.channels * (this.bitsPerSample / 8), true);\r\n            /* bits per sample */\r\n            view.setUint16(34, this.bitsPerSample, true);\r\n            /* data chunk identifier */\r\n            this.setString(view, 36, \"data\");\r\n            /* data chunk length */\r\n            view.setUint32(40, 0, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the default input format.\r\n     * @member AudioStreamFormatImpl.getDefaultInputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {AudioStreamFormatImpl} The default input format.\r\n     */\r\n    public static getDefaultInputFormat(): AudioStreamFormatImpl {\r\n        return new AudioStreamFormatImpl();\r\n    }\r\n\r\n    /**\r\n     * Creates an audio context appropriate to current browser\r\n     * @member AudioStreamFormatImpl.getAudioContext\r\n     * @function\r\n     * @public\r\n     * @returns {AudioContext} An audio context instance\r\n     */\r\n    /* eslint-disable */\r\n    public static getAudioContext(sampleRate?: number): AudioContext {\r\n        // Workaround for Speech SDK bug in Safari.\r\n        const AudioContext = (window as any).AudioContext // our preferred impl\r\n            || (window as any).webkitAudioContext // fallback, mostly when on Safari\r\n            || false; // could not find.\r\n\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\r\n        if (!!AudioContext) {\r\n            if (sampleRate !== undefined && navigator.mediaDevices.getSupportedConstraints().sampleRate) {\r\n                return new AudioContext({ sampleRate });\r\n            } else {\r\n                return new AudioContext();\r\n            }\r\n        } else {\r\n            throw new Error(\"Browser does not support Web Audio API (AudioContext is not available).\");\r\n        }\r\n    }\r\n    /* eslint-enable */\r\n\r\n    /**\r\n     * Closes the configuration object.\r\n     * @member AudioStreamFormatImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * The format of the audio, valid values: 1 (PCM)\r\n     * @member AudioStreamFormatImpl.prototype.formatTag\r\n     * @function\r\n     * @public\r\n     */\r\n    public formatTag: number;\r\n\r\n    /**\r\n     * The number of channels, valid values: 1 (Mono).\r\n     * @member AudioStreamFormatImpl.prototype.channels\r\n     * @function\r\n     * @public\r\n     */\r\n    public channels: number;\r\n\r\n    /**\r\n     * The sample rate, valid values: 16000.\r\n     * @member AudioStreamFormatImpl.prototype.samplesPerSec\r\n     * @function\r\n     * @public\r\n     */\r\n    public samplesPerSec: number;\r\n\r\n    /**\r\n     * The bits per sample, valid values: 16\r\n     * @member AudioStreamFormatImpl.prototype.b\r\n     * @function\r\n     * @public\r\n     */\r\n    public bitsPerSample: number;\r\n\r\n    /**\r\n     * Average bytes per second, usually calculated as nSamplesPerSec * nChannels * ceil(wBitsPerSample, 8).\r\n     * @member AudioStreamFormatImpl.prototype.avgBytesPerSec\r\n     * @function\r\n     * @public\r\n     */\r\n    public avgBytesPerSec: number;\r\n\r\n    /**\r\n     * The size of a single frame, valid values: nChannels * ceil(wBitsPerSample, 8).\r\n     * @member AudioStreamFormatImpl.prototype.blockAlign\r\n     * @function\r\n     * @public\r\n     */\r\n    public blockAlign: number;\r\n\r\n    public get header(): ArrayBuffer {\r\n        return this.privHeader;\r\n    }\r\n\r\n    protected setString(view: DataView, offset: number, str: string): void {\r\n        for (let i = 0; i < str.length; i++) {\r\n            view.setUint8(offset + i, str.charCodeAt(i));\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IAudioSource,\r\n    IConnection,\r\n    MessageType\r\n} from \"../common/Exports.js\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    ConversationTranscriptionCanceledEventArgs,\r\n    MeetingTranscriptionCanceledEventArgs,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult,\r\n} from \"../sdk/Exports.js\";\r\nimport { ConversationInfo, MeetingInfo } from \"../sdk/Transcription/Exports.js\";\r\nimport { ConversationProperties } from \"../sdk/Transcription/IConversation.js\";\r\nimport { MeetingProperties } from \"../sdk/Transcription/IMeeting.js\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    ConversationServiceRecognizer,\r\n    TranscriberRecognizer\r\n} from \"./Exports.js\";\r\nimport { IAuthentication } from \"./IAuthentication.js\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory.js\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig.js\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal.js\";\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nexport class TranscriptionServiceRecognizer extends ConversationServiceRecognizer {\r\n\r\n    private privTranscriberRecognizer: TranscriberRecognizer;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        transcriber: TranscriberRecognizer) {\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, transcriber);\r\n        this.privTranscriberRecognizer = transcriber;\r\n        this.sendPrePayloadJSONOverride = (connection: IConnection): Promise<void> => this.sendTranscriptionStartJSON(connection);\r\n        if (this.privRecognizerConfig.parameters.getProperty(PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps) === \"true\") {\r\n            this.privSpeechContext.setWordLevelTimings();\r\n        }\r\n    }\r\n\r\n    public async sendSpeechEventAsync(info: ConversationInfo, command: string): Promise<void> {\r\n        if (!!this.privRequestSession.isRecognizing) {\r\n            const connection: IConnection = await this.fetchConnection();\r\n            await this.sendSpeechEvent(connection, this.createSpeechEventPayload(info, command));\r\n        }\r\n    }\r\n\r\n    public async sendMeetingSpeechEventAsync(info: MeetingInfo, command: string): Promise<void> {\r\n        if (!!this.privRequestSession.isRecognizing) {\r\n            const connection: IConnection = await this.fetchConnection();\r\n            await this.sendSpeechEvent(connection, this.createMeetingSpeechEventPayload(info, command));\r\n        }\r\n    }\r\n\r\n    protected processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n        return this.processSpeechMessages(connectionMessage);\r\n    }\r\n\r\n    protected handleRecognizedCallback(result: SpeechRecognitionResult, offset: number, sessionId: string): void {\r\n        try {\r\n            const event: SpeechRecognitionEventArgs = new SpeechRecognitionEventArgs(result, offset, sessionId);\r\n            this.privTranscriberRecognizer.recognized(this.privTranscriberRecognizer, event);\r\n            if (!!this.privSuccessCallback) {\r\n                try {\r\n                    this.privSuccessCallback(result);\r\n                } catch (e) {\r\n                    if (!!this.privErrorCallback) {\r\n                        this.privErrorCallback(e as string);\r\n                    }\r\n                }\r\n                // Only invoke the call back once.\r\n                // and if it's successful don't invoke the\r\n                // error after that.\r\n                this.privSuccessCallback = undefined;\r\n                this.privErrorCallback = undefined;\r\n            }\r\n        /* eslint-disable no-empty */\r\n        } catch (error) {\r\n            // Not going to let errors in the event handler\r\n            // trip things up.\r\n        }\r\n    }\r\n\r\n    protected handleRecognizingCallback(result: SpeechRecognitionResult, duration: number, sessionId: string): void {\r\n        try {\r\n            const ev = new SpeechRecognitionEventArgs(result, duration, sessionId);\r\n            this.privTranscriberRecognizer.recognizing(this.privTranscriberRecognizer, ev);\r\n            /* eslint-disable no-empty */\r\n        } catch (error) {\r\n            // Not going to let errors in the event handler\r\n            // trip things up.\r\n        }\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n        if (this.privTranscriberRecognizer.IsMeetingRecognizer()) {\r\n            if (!!this.privTranscriberRecognizer.canceled) {\r\n                const cancelEvent: MeetingTranscriptionCanceledEventArgs = new MeetingTranscriptionCanceledEventArgs(\r\n                    cancellationReason,\r\n                    error,\r\n                    errorCode,\r\n                    undefined,\r\n                    sessionId);\r\n                try {\r\n                    this.privTranscriberRecognizer.canceled(this.privTranscriberRecognizer, cancelEvent);\r\n                    /* eslint-disable no-empty */\r\n                } catch { }\r\n            }\r\n        } else {\r\n            if (!!this.privTranscriberRecognizer.canceled) {\r\n                const cancelEvent: ConversationTranscriptionCanceledEventArgs = new ConversationTranscriptionCanceledEventArgs(\r\n                    cancellationReason,\r\n                    error,\r\n                    errorCode,\r\n                    undefined,\r\n                    sessionId);\r\n                try {\r\n                    this.privTranscriberRecognizer.canceled(this.privTranscriberRecognizer, cancelEvent);\r\n                    /* eslint-disable no-empty */\r\n                } catch { }\r\n            }\r\n        }\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            const result: SpeechRecognitionResult = new SpeechRecognitionResult(\r\n                requestId,\r\n                ResultReason.Canceled,\r\n                undefined, // Text\r\n                undefined, // Duration\r\n                undefined, // Offset\r\n                undefined, // Language\r\n                undefined, // Language Detection Confidence\r\n                undefined, // Speaker Id\r\n                error,\r\n                undefined, // Json\r\n                properties);\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                this.privSuccessCallback = undefined;\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n        }\r\n    }\r\n\r\n    // Encapsulated for derived service recognizers that need to send additional JSON\r\n    protected async sendTranscriptionStartJSON(connection: IConnection): Promise<void> {\r\n        await this.sendSpeechContext(connection, true);\r\n        if (this.privTranscriberRecognizer.IsMeetingRecognizer()) {\r\n            const info: MeetingInfo = this.privTranscriberRecognizer.getMeetingInfo();\r\n            const payload: { [id: string]: any } = this.createMeetingSpeechEventPayload(info, \"start\");\r\n            await this.sendSpeechEvent(connection, payload);\r\n        } else {\r\n            const info: ConversationInfo = this.privTranscriberRecognizer.getConversationInfo();\r\n            const payload: { [id: string]: any } = this.createSpeechEventPayload(info, \"start\");\r\n            await this.sendSpeechEvent(connection, payload);\r\n        }\r\n        await this.sendWaveHeader(connection);\r\n        return;\r\n    }\r\n\r\n    protected sendSpeechEvent(connection: IConnection, payload: { [id: string]: any }): Promise<void> {\r\n        const speechEventJson = JSON.stringify(payload);\r\n\r\n        if (speechEventJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"speech.event\",\r\n                this.privRequestSession.requestId,\r\n                \"application/json\",\r\n                speechEventJson));\r\n        }\r\n        return;\r\n    }\r\n\r\n    private createSpeechEventPayload(info: ConversationInfo, command: string): { [id: string]: any } {\r\n        const eventDict: { id: string; name: string; meeting: ConversationProperties } = { id: \"meeting\", name: command, meeting: info.conversationProperties };\r\n        eventDict.meeting.id = info.id;\r\n        eventDict.meeting.attendees = info.participants;\r\n        return eventDict;\r\n    }\r\n\r\n    private createMeetingSpeechEventPayload(info: MeetingInfo, command: string): { [id: string]: any } {\r\n        const eventDict: { id: string; name: string; meeting: MeetingProperties } = { id: \"meeting\", name: command, meeting: info.meetingProperties };\r\n        eventDict.meeting.id = info.id;\r\n        eventDict.meeting.attendees = info.participants;\r\n        return eventDict;\r\n    }\r\n\r\n}\r\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    connectivity,\r\n    ISpeechConfigAudioDevice,\r\n    type\r\n} from \"../common.speech/Exports.js\";\r\nimport {\r\n    AudioSourceErrorEvent,\r\n    AudioSourceEvent,\r\n    AudioSourceInitializingEvent,\r\n    AudioSourceOffEvent,\r\n    AudioSourceReadyEvent,\r\n    AudioStreamNodeAttachedEvent,\r\n    AudioStreamNodeAttachingEvent,\r\n    AudioStreamNodeDetachedEvent,\r\n    AudioStreamNodeErrorEvent,\r\n    ChunkedArrayBufferStream,\r\n    createNoDashGuid,\r\n    Deferred,\r\n    Events,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IStringDictionary,\r\n    Stream,\r\n} from \"../common/Exports.js\";\r\nimport { IStreamChunk } from \"../common/Stream.js\";\r\nimport {\r\n    AudioStreamFormat,\r\n    AudioStreamFormatImpl,\r\n} from \"../sdk/Audio/AudioStreamFormat.js\";\r\nimport { IRecorder } from \"./IRecorder.js\";\r\n\r\n// Extending the default definition with browser specific definitions for backward compatibility\r\ninterface INavigator extends Navigator {\r\n    webkitGetUserMedia: (constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback | undefined, errorCallback: NavigatorUserMediaErrorCallback) => void;\r\n    mozGetUserMedia: (constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback | undefined, errorCallback: NavigatorUserMediaErrorCallback) => void;\r\n    msGetUserMedia: (constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback, errorCallback: NavigatorUserMediaErrorCallback) => void;\r\n}\r\n\r\nexport const AudioWorkletSourceURLPropertyName = \"MICROPHONE-WorkletSourceUrl\";\r\n\r\nexport class MicAudioSource implements IAudioSource {\r\n\r\n    private static readonly AUDIOFORMAT: AudioStreamFormatImpl = AudioStreamFormat.getDefaultInputFormat() as AudioStreamFormatImpl;\r\n\r\n    private privStreams: IStringDictionary<Stream<ArrayBuffer>> = {};\r\n\r\n    private privId: string;\r\n\r\n    private privEvents: EventSource<AudioSourceEvent>;\r\n\r\n    private privInitializeDeferral: Deferred<void>;\r\n\r\n    private privMediaStream: MediaStream;\r\n\r\n    private privContext: AudioContext;\r\n\r\n    private privMicrophoneLabel: string;\r\n\r\n    private privOutputChunkSize: number;\r\n\r\n    private privIsClosing: boolean;\r\n\r\n    public constructor(\r\n        private readonly privRecorder: IRecorder,\r\n        private readonly deviceId?: string,\r\n        audioSourceId?: string,\r\n        mediaStream?: MediaStream\r\n        ) {\r\n\r\n        this.privOutputChunkSize = MicAudioSource.AUDIOFORMAT.avgBytesPerSec / 10;\r\n        this.privId = audioSourceId ? audioSourceId : createNoDashGuid();\r\n        this.privEvents = new EventSource<AudioSourceEvent>();\r\n        this.privMediaStream = mediaStream || null;\r\n        this.privIsClosing = false;\r\n    }\r\n\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return Promise.resolve(MicAudioSource.AUDIOFORMAT);\r\n    }\r\n\r\n    public turnOn(): Promise<void> {\r\n        if (this.privInitializeDeferral) {\r\n            return this.privInitializeDeferral.promise;\r\n        }\r\n\r\n        this.privInitializeDeferral = new Deferred<void>();\r\n\r\n        try {\r\n            this.createAudioContext();\r\n        } catch (error) {\r\n            if (error instanceof Error) {\r\n                const typedError: Error = error;\r\n                this.privInitializeDeferral.reject(typedError.name + \": \" + typedError.message);\r\n            } else {\r\n                this.privInitializeDeferral.reject(error as string);\r\n            }\r\n            return this.privInitializeDeferral.promise;\r\n        }\r\n\r\n        const nav = window.navigator as INavigator;\r\n\r\n        let getUserMedia = (\r\n            // eslint-disable-next-line\r\n            nav.getUserMedia ||\r\n            nav.webkitGetUserMedia ||\r\n            nav.mozGetUserMedia ||\r\n            nav.msGetUserMedia\r\n        );\r\n\r\n        if (!!nav.mediaDevices) {\r\n            getUserMedia = (constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback, errorCallback: NavigatorUserMediaErrorCallback): void => {\r\n                nav.mediaDevices\r\n                    .getUserMedia(constraints)\r\n                    .then(successCallback)\r\n                    .catch(errorCallback);\r\n            };\r\n        }\r\n\r\n        if (!getUserMedia) {\r\n            const errorMsg = \"Browser does not support getUserMedia.\";\r\n            this.privInitializeDeferral.reject(errorMsg);\r\n            this.onEvent(new AudioSourceErrorEvent(errorMsg, \"\")); // mic initialized error - no streamid at this point\r\n        } else {\r\n            const next = (): void => {\r\n                this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\r\n                if (this.privMediaStream && this.privMediaStream.active) {\r\n                    this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n                    this.privInitializeDeferral.resolve();\r\n                } else {\r\n                    getUserMedia(\r\n                        { audio: this.deviceId ? { deviceId: this.deviceId } : true, video: false },\r\n                        (mediaStream: MediaStream): void => {\r\n                            this.privMediaStream = mediaStream;\r\n                            this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n                            this.privInitializeDeferral.resolve();\r\n                        }, (error: any): void => {\r\n                            const errorMsg = `Error occurred during microphone initialization: ${error as string}`;\r\n                            this.privInitializeDeferral.reject(errorMsg);\r\n                            this.onEvent(new AudioSourceErrorEvent(this.privId, errorMsg));\r\n                        });\r\n                }\r\n            };\r\n\r\n            if (this.privContext.state === \"suspended\") {\r\n                // NOTE: On iOS, the Web Audio API requires sounds to be triggered from an explicit user action.\r\n                // https://github.com/WebAudio/web-audio-api/issues/790\r\n                this.privContext.resume()\r\n                    .then(next)\r\n                    .catch((reason: any): void => {\r\n                        this.privInitializeDeferral.reject(`Failed to initialize audio context: ${reason as string}`);\r\n                    });\r\n            } else {\r\n                next();\r\n            }\r\n        }\r\n\r\n        return this.privInitializeDeferral.promise;\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public attach(audioNodeId: string): Promise<IAudioStreamNode> {\r\n        this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\r\n\r\n        return this.listen(audioNodeId).then<IAudioStreamNode>(\r\n            (stream: Stream<ArrayBuffer>): IAudioStreamNode => {\r\n                this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\r\n                return {\r\n                    detach: async (): Promise<void> => {\r\n                        stream.readEnded();\r\n                        delete this.privStreams[audioNodeId];\r\n                        this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n                        return this.turnOff();\r\n                    },\r\n                    id: (): string => audioNodeId,\r\n                    read: (): Promise<IStreamChunk<ArrayBuffer>> => stream.read(),\r\n                };\r\n            });\r\n    }\r\n\r\n    public detach(audioNodeId: string): void {\r\n        if (audioNodeId && this.privStreams[audioNodeId]) {\r\n            this.privStreams[audioNodeId].close();\r\n            delete this.privStreams[audioNodeId];\r\n            this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n        }\r\n    }\r\n\r\n    public async turnOff(): Promise<void> {\r\n        for (const streamId in this.privStreams) {\r\n            if (streamId) {\r\n                const stream = this.privStreams[streamId];\r\n                if (stream) {\r\n                    stream.close();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onEvent(new AudioSourceOffEvent(this.privId)); // no stream now\r\n        if (this.privInitializeDeferral) {\r\n            // Correctly handle when browser forces mic off before turnOn() completes\r\n            // eslint-disable-next-line @typescript-eslint/await-thenable\r\n            await this.privInitializeDeferral;\r\n            this.privInitializeDeferral = null;\r\n        }\r\n\r\n        await this.destroyAudioContext();\r\n\r\n        return;\r\n    }\r\n\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privEvents;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return this.getMicrophoneLabel().then((label: string): ISpeechConfigAudioDevice => (\r\n            {\r\n                bitspersample: MicAudioSource.AUDIOFORMAT.bitsPerSample,\r\n                channelcount: MicAudioSource.AUDIOFORMAT.channels,\r\n                connectivity: connectivity.Unknown,\r\n                manufacturer: \"Speech SDK\",\r\n                model: label,\r\n                samplerate: MicAudioSource.AUDIOFORMAT.samplesPerSec,\r\n                type: type.Microphones,\r\n            }\r\n        ));\r\n    }\r\n\r\n    public setProperty(name: string, value: string): void {\r\n        if (name === AudioWorkletSourceURLPropertyName) {\r\n            this.privRecorder.setWorkletUrl(value);\r\n        } else {\r\n            throw new Error(\"Property '\" + name + \"' is not supported on Microphone.\");\r\n        }\r\n    }\r\n\r\n    private getMicrophoneLabel(): Promise<string> {\r\n        const defaultMicrophoneName: string = \"microphone\";\r\n\r\n        // If we did this already, return the value.\r\n        if (this.privMicrophoneLabel !== undefined) {\r\n            return Promise.resolve(this.privMicrophoneLabel);\r\n        }\r\n\r\n        // If the stream isn't currently running, we can't query devices because security.\r\n        if (this.privMediaStream === undefined || !this.privMediaStream.active) {\r\n            return Promise.resolve(defaultMicrophoneName);\r\n        }\r\n\r\n        // Setup a default\r\n        this.privMicrophoneLabel = defaultMicrophoneName;\r\n\r\n        // Get the id of the device running the audio track.\r\n        const microphoneDeviceId: string = this.privMediaStream.getTracks()[0].getSettings().deviceId;\r\n\r\n        // If the browser doesn't support getting the device ID, set a default and return.\r\n        if (undefined === microphoneDeviceId) {\r\n            return Promise.resolve(this.privMicrophoneLabel);\r\n        }\r\n\r\n        const deferred: Deferred<string> = new Deferred<string>();\r\n\r\n        // Enumerate the media devices.\r\n        navigator.mediaDevices.enumerateDevices().then((devices: MediaDeviceInfo[]): void => {\r\n            for (const device of devices) {\r\n                if (device.deviceId === microphoneDeviceId) {\r\n                    // Found the device\r\n                    this.privMicrophoneLabel = device.label;\r\n                    break;\r\n                }\r\n            }\r\n            deferred.resolve(this.privMicrophoneLabel);\r\n        }, (): Deferred<string> => deferred.resolve(this.privMicrophoneLabel));\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    private async listen(audioNodeId: string): Promise<Stream<ArrayBuffer>> {\r\n        await this.turnOn();\r\n        const stream = new ChunkedArrayBufferStream(this.privOutputChunkSize, audioNodeId);\r\n        this.privStreams[audioNodeId] = stream;\r\n        try {\r\n            this.privRecorder.record(this.privContext, this.privMediaStream, stream);\r\n        } catch (error) {\r\n            this.onEvent(new AudioStreamNodeErrorEvent(this.privId, audioNodeId, error as string));\r\n            throw error;\r\n        }\r\n        const result: Stream<ArrayBuffer> = stream;\r\n        return result;\r\n    }\r\n\r\n    private onEvent(event: AudioSourceEvent): void {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private createAudioContext(): void {\r\n        if (!!this.privContext) {\r\n            return;\r\n        }\r\n\r\n        this.privContext = AudioStreamFormatImpl.getAudioContext(MicAudioSource.AUDIOFORMAT.samplesPerSec);\r\n    }\r\n\r\n    private async destroyAudioContext(): Promise<void> {\r\n        if (!this.privContext) {\r\n            return;\r\n        }\r\n\r\n        this.privRecorder.releaseMediaResources(this.privContext);\r\n\r\n        // This pattern brought to you by a bug in the TypeScript compiler where it\r\n        // confuses the (\"close\" in this.privContext) with this.privContext always being null as the alternate.\r\n        // https://github.com/Microsoft/TypeScript/issues/11498\r\n        let hasClose: boolean = false;\r\n        if (\"close\" in this.privContext) {\r\n            hasClose = true;\r\n        }\r\n\r\n        if (hasClose) {\r\n            if (!this.privIsClosing) {\r\n                // The audio context close may take enough time that the close is called twice\r\n                this.privIsClosing = true;\r\n                await this.privContext.close();\r\n                this.privContext = null;\r\n                this.privIsClosing = false;\r\n            }\r\n        } else if (null !== this.privContext && this.privContext.state === \"running\") {\r\n            // Suspend actually takes a callback, but analogous to the\r\n            // resume method, it'll be only fired if suspend is called\r\n            // in a direct response to a user action. The later is not always\r\n            // the case, as TurnOff is also called, when we receive an\r\n            // end-of-speech message from the service. So, doing a best effort\r\n            // fire-and-forget here.\r\n            await this.privContext.suspend();\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { DialogConnectionFactory } from \"../common.speech/DialogConnectorFactory.js\";\r\nimport {\r\n    DialogServiceAdapter,\r\n    IAgentConfig,\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig\r\n} from \"../common.speech/Exports.js\";\r\nimport {\r\n    Deferred,\r\n    marshalPromiseToCallbacks\r\n} from \"../common/Exports.js\";\r\nimport { ActivityReceivedEventArgs } from \"./ActivityReceivedEventArgs.js\";\r\nimport { AudioConfigImpl } from \"./Audio/AudioConfig.js\";\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport { DialogServiceConfig, DialogServiceConfigImpl } from \"./DialogServiceConfig.js\";\r\nimport {\r\n    AudioConfig,\r\n    PropertyCollection,\r\n    Recognizer,\r\n    SpeechRecognitionCanceledEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult\r\n} from \"./Exports.js\";\r\nimport { PropertyId } from \"./PropertyId.js\";\r\nimport { TurnStatusReceivedEventArgs } from \"./TurnStatusReceivedEventArgs.js\";\r\n\r\n/**\r\n * Dialog Service Connector\r\n * @class DialogServiceConnector\r\n */\r\nexport class DialogServiceConnector extends Recognizer {\r\n    private privIsDisposed: boolean;\r\n    private isTurnComplete: boolean;\r\n\r\n    /**\r\n     * Initializes an instance of the DialogServiceConnector.\r\n     * @constructor\r\n     * @param {DialogServiceConfig} dialogConfig - Set of properties to configure this recognizer.\r\n     * @param {AudioConfig} audioConfig - An optional audio config associated with the recognizer\r\n     */\r\n    public constructor(dialogConfig: DialogServiceConfig, audioConfig?: AudioConfig) {\r\n        const dialogServiceConfigImpl = dialogConfig as DialogServiceConfigImpl;\r\n        Contracts.throwIfNull(dialogConfig, \"dialogConfig\");\r\n\r\n        super(audioConfig, dialogServiceConfigImpl.properties, new DialogConnectionFactory());\r\n\r\n        this.isTurnComplete = true;\r\n        this.privIsDisposed = false;\r\n        this.privProperties = dialogServiceConfigImpl.properties.clone();\r\n\r\n        const agentConfig = this.buildAgentConfig();\r\n        this.privReco.agentConfig.set(agentConfig);\r\n    }\r\n\r\n    /**\r\n     * The event recognizing signals that an intermediate recognition result is received.\r\n     * @member DialogServiceConnector.prototype.recognizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognizing: (sender: DialogServiceConnector, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event recognized signals that a final recognition result is received.\r\n     * @member DialogServiceConfig.prototype.recognized\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognized: (sender: DialogServiceConnector, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during recognition.\r\n     * @member DialogServiceConnector.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: DialogServiceConnector, event: SpeechRecognitionCanceledEventArgs) => void;\r\n\r\n    /**\r\n     * The event activityReceived signals that an activity has been received.\r\n     * @member DialogServiceConnector.prototype.activityReceived\r\n     * @function\r\n     * @public\r\n     */\r\n    public activityReceived: (sender: DialogServiceConnector, event: ActivityReceivedEventArgs) => void;\r\n\r\n    /**\r\n     * The event turnStatusReceived signals that a turn status message has been received. These messages are\r\n     * associated with both an interaction and a conversation. They are used to notify the client in the event\r\n     * of an interaction failure with the dialog backend, e.g. in the event of a network issue, timeout, crash,\r\n     * or other problem.\r\n     * @member DialogServiceConnector.prototype.turnStatusReceived\r\n     * @function\r\n     * @public\r\n     */\r\n    public turnStatusReceived: (sender: DialogServiceConnector, event: TurnStatusReceivedEventArgs) => void;\r\n\r\n    /**\r\n     * Starts a connection to the service.\r\n     * Users can optionally call connect() to manually set up a connection in advance, before starting interactions.\r\n     *\r\n     * Note: On return, the connection might not be ready yet. Please subscribe to the Connected event to\r\n     * be notified when the connection is established.\r\n     * @member DialogServiceConnector.prototype.connect\r\n     * @function\r\n     * @public\r\n     */\r\n    public connect(cb?: () => void, err?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks(this.privReco.connect(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Closes the connection the service.\r\n     * Users can optionally call disconnect() to manually shutdown the connection of the associated DialogServiceConnector.\r\n     *\r\n     * If disconnect() is called during a recognition, recognition will fail and cancel with an error.\r\n     */\r\n    public disconnect(cb?: () => void, err?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks(this.privReco.disconnect(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member DialogServiceConnector.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Sets the authorization token used to communicate with the service.\r\n     * @member DialogServiceConnector.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this DialogServiceConnector.\r\n     * @member DialogServiceConnector.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this DialogServiceConnector.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /** Gets the template for the activity generated by service from speech.\r\n     * Properties from the template will be stamped on the generated activity.\r\n     * It can be empty\r\n     */\r\n    public get speechActivityTemplate(): string {\r\n        return this.properties.getProperty(PropertyId.Conversation_Speech_Activity_Template);\r\n    }\r\n\r\n    /** Sets the template for the activity generated by service from speech.\r\n     * Properties from the template will be stamped on the generated activity.\r\n     * It can be null or empty.\r\n     * Note: it has to be a valid Json object.\r\n     */\r\n    public set speechActivityTemplate(speechActivityTemplate: string) {\r\n        this.properties.setProperty(PropertyId.Conversation_Speech_Activity_Template, speechActivityTemplate);\r\n    }\r\n\r\n    /**\r\n     * Starts recognition and stops after the first utterance is recognized.\r\n     * @member DialogServiceConnector.prototype.listenOnceAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the result when the reco has completed.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public listenOnceAsync(cb?: (e: SpeechRecognitionResult) => void, err?: (e: string) => void): void {\r\n        if (this.isTurnComplete) {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            const callbackHolder = async (): Promise<SpeechRecognitionResult> => {\r\n                await this.privReco.connect();\r\n                await this.implRecognizerStop();\r\n                this.isTurnComplete = false;\r\n\r\n                const ret: Deferred<SpeechRecognitionResult> = new Deferred<SpeechRecognitionResult>();\r\n                await this.privReco.recognize(RecognitionMode.Conversation, ret.resolve, ret.reject);\r\n\r\n                const e: SpeechRecognitionResult = await ret.promise;\r\n                await this.implRecognizerStop();\r\n\r\n                return e;\r\n            };\r\n\r\n            const retPromise: Promise<SpeechRecognitionResult> = callbackHolder();\r\n\r\n            retPromise.catch((): void => {\r\n                // Destroy the recognizer.\r\n                // We've done all we can here.\r\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n                this.dispose(true).catch((): void => { });\r\n            });\r\n\r\n            marshalPromiseToCallbacks(retPromise.finally((): void => {\r\n                this.isTurnComplete = true;\r\n            }), cb, err);\r\n        }\r\n    }\r\n\r\n    public sendActivityAsync(activity: string, cb?: () => void, errCb?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks((this.privReco as DialogServiceAdapter).sendMessage(activity), cb, errCb);\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member DialogServiceConnector.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, err?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privIsDisposed);\r\n\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, err);\r\n    }\r\n\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privIsDisposed) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privIsDisposed = true;\r\n            await this.implRecognizerStop();\r\n            await super.dispose(disposing);\r\n        }\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.privProperties);\r\n    }\r\n\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n\r\n        const audioSource: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n\r\n        return new DialogServiceAdapter(authentication, connectionFactory, audioSource, recognizerConfig, this);\r\n    }\r\n\r\n    private buildAgentConfig(): IAgentConfig {\r\n        const communicationType = this.properties.getProperty(\"Conversation_Communication_Type\", \"Default\");\r\n\r\n        return {\r\n            botInfo: {\r\n                commType: communicationType,\r\n                commandsCulture: undefined,\r\n                connectionId: this.properties.getProperty(PropertyId.Conversation_Agent_Connection_Id),\r\n                conversationId: this.properties.getProperty(PropertyId.Conversation_Conversation_Id, undefined),\r\n                fromId: this.properties.getProperty(PropertyId.Conversation_From_Id, undefined),\r\n                ttsAudioFormat: this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)\r\n            },\r\n            version: 0.2\r\n        };\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"../../sdk/Contracts.js\";\r\nimport { IPrimaryLanguage, ITranslations } from \"../Exports.js\";\r\nimport { TranslationStatus } from \"../TranslationStatus.js\";\r\n\r\n// translation.hypothesis\r\nexport interface ITranslationHypothesis {\r\n    Duration: number;\r\n    Offset: number;\r\n    PrimaryLanguage?: IPrimaryLanguage;\r\n    Text: string;\r\n    Translation: ITranslations;\r\n}\r\n\r\nexport class TranslationHypothesis implements ITranslationHypothesis {\r\n    private privTranslationHypothesis: ITranslationHypothesis;\r\n\r\n    private constructor(hypothesis: ITranslationHypothesis, baseOffset: number) {\r\n        this.privTranslationHypothesis = hypothesis;\r\n        this.privTranslationHypothesis.Offset += baseOffset;\r\n        this.privTranslationHypothesis.Translation.TranslationStatus = this.mapTranslationStatus(this.privTranslationHypothesis.Translation.TranslationStatus);\r\n    }\r\n\r\n    public static fromJSON(json: string, baseOffset: number): TranslationHypothesis {\r\n        return new TranslationHypothesis(JSON.parse(json) as ITranslationHypothesis, baseOffset);\r\n    }\r\n\r\n    public static fromTranslationResponse(translationHypothesis: { SpeechHypothesis: ITranslationHypothesis }, baseOffset: number): TranslationHypothesis {\r\n        Contracts.throwIfNullOrUndefined(translationHypothesis, \"translationHypothesis\");\r\n        const hypothesis: ITranslationHypothesis = translationHypothesis.SpeechHypothesis;\r\n        translationHypothesis.SpeechHypothesis = undefined;\r\n        hypothesis.Translation = (translationHypothesis as unknown as ITranslations);\r\n        return new TranslationHypothesis(hypothesis, baseOffset);\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privTranslationHypothesis.Duration;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privTranslationHypothesis.Offset;\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this.privTranslationHypothesis.Text;\r\n    }\r\n\r\n    public get Translation(): ITranslations {\r\n        return this.privTranslationHypothesis.Translation;\r\n    }\r\n\r\n    public get Language(): string {\r\n        return this.privTranslationHypothesis.PrimaryLanguage?.Language;\r\n    }\r\n\r\n    public asJson(): string {\r\n        const jsonObj = { ...this.privTranslationHypothesis };\r\n        // Convert the enum value to its string representation for serialization purposes.\r\n\r\n        return jsonObj.Translation !== undefined ? JSON.stringify({\r\n            ...jsonObj,\r\n            TranslationStatus: TranslationStatus[jsonObj.Translation.TranslationStatus] as keyof typeof TranslationStatus\r\n        }) : JSON.stringify(jsonObj);\r\n    }\r\n\r\n    private mapTranslationStatus(status: any): TranslationStatus {\r\n        if (typeof status === \"string\") {\r\n            return TranslationStatus[status as keyof typeof TranslationStatus];\r\n        } else if (typeof status === \"number\") {\r\n            return status;\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n/**\r\n * Defines the payload for incoming translation messages\r\n */\r\nexport interface ITranslationResponsePayload {\r\n    lang: string;\r\n    translation: string;\r\n}\r\n\r\nexport interface ITranslationCommandMessage {\r\n    translations: ITranslationResponsePayload[];\r\n    id: string;\r\n    language: string;\r\n    nickname: string;\r\n    participantId: string;\r\n    roomid: string;\r\n    timestamp: string;\r\n    type: string;\r\n}\r\n\r\nexport interface ISpeechResponsePayload extends ITranslationCommandMessage {\r\n    recognition: string;\r\n    isFinal: boolean;\r\n}\r\n\r\nexport interface ITextResponsePayload extends ITranslationCommandMessage {\r\n    originalText: string;\r\n}\r\n\r\nconst parseSpeechResponse = (json: string): ISpeechResponsePayload => JSON.parse(json) as ISpeechResponsePayload;\r\nconst parseTextResponse = (json: string): ITextResponsePayload => JSON.parse(json) as ITextResponsePayload;\r\n\r\nexport class SpeechResponsePayload implements ISpeechResponsePayload {\r\n\r\n    private privSpeechResponse: ISpeechResponsePayload;\r\n\r\n    private constructor(json: string) {\r\n        this.privSpeechResponse = parseSpeechResponse(json);\r\n    }\r\n\r\n    public get recognition(): string {\r\n        return this.privSpeechResponse.recognition;\r\n    }\r\n\r\n    public get translations(): ITranslationResponsePayload[] {\r\n        return this.privSpeechResponse.translations;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privSpeechResponse.id;\r\n    }\r\n\r\n    public get language(): string {\r\n        return this.privSpeechResponse.language;\r\n    }\r\n\r\n    public get nickname(): string {\r\n        return this.privSpeechResponse.nickname;\r\n    }\r\n\r\n    public get participantId(): string {\r\n        return this.privSpeechResponse.participantId;\r\n    }\r\n\r\n    public get roomid(): string {\r\n        return this.privSpeechResponse.roomid;\r\n    }\r\n\r\n    public get timestamp(): string {\r\n        return this.privSpeechResponse.timestamp;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privSpeechResponse.type;\r\n    }\r\n\r\n    public get isFinal(): boolean {\r\n        return this.privSpeechResponse.type === \"final\";\r\n    }\r\n\r\n    public static fromJSON(json: string): SpeechResponsePayload {\r\n        return new SpeechResponsePayload(json);\r\n    }\r\n\r\n}\r\n\r\nexport class TextResponsePayload implements ITextResponsePayload {\r\n\r\n    private privTextResponse: ITextResponsePayload;\r\n\r\n    private constructor(json: string) {\r\n        this.privTextResponse = parseTextResponse(json);\r\n    }\r\n\r\n    public get originalText(): string {\r\n        return this.privTextResponse.originalText;\r\n    }\r\n\r\n    public get translations(): ITranslationResponsePayload[] {\r\n        return this.privTextResponse.translations;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privTextResponse.id;\r\n    }\r\n\r\n    public get language(): string {\r\n        return this.privTextResponse.language;\r\n    }\r\n\r\n    public get nickname(): string {\r\n        return this.privTextResponse.nickname;\r\n    }\r\n\r\n    public get participantId(): string {\r\n        return this.privTextResponse.participantId;\r\n    }\r\n\r\n    public get roomid(): string {\r\n        return this.privTextResponse.roomid;\r\n    }\r\n\r\n    public get timestamp(): string {\r\n        return this.privTextResponse.timestamp;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privTextResponse.type;\r\n    }\r\n\r\n    public static fromJSON(json: string): TextResponsePayload {\r\n        return new TextResponsePayload(json);\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { SessionEventArgs } from \"../Exports.js\";\r\nimport { ParticipantChangedReason } from \"./Exports.js\";\r\nimport { IParticipant } from \"./IParticipant.js\";\r\n\r\nexport class ConversationParticipantsChangedEventArgs extends SessionEventArgs {\r\n    private privReason: ParticipantChangedReason;\r\n    private privParticipant: IParticipant[];\r\n\r\n    public constructor(reason: ParticipantChangedReason, participants: IParticipant[], sessionId?: string) {\r\n        super(sessionId);\r\n        this.privReason = reason;\r\n        this.privParticipant = participants;\r\n    }\r\n\r\n    public get reason(): ParticipantChangedReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get participants(): IParticipant[] {\r\n        return this.privParticipant;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { PropertyCollection } from \"../PropertyCollection.js\";\r\nimport { ResultReason } from \"../ResultReason.js\";\r\nimport { TranslationRecognitionResult } from \"../TranslationRecognitionResult.js\";\r\nimport { Translations } from \"../Translations.js\";\r\n\r\nexport class ConversationTranslationResult extends TranslationRecognitionResult {\r\n    private privId: string;\r\n    private privOrigLang: string;\r\n\r\n    public constructor(participantId: string,\r\n                       translations: Translations,\r\n                       originalLanguage?: string,\r\n                       resultId?: string,\r\n                       reason?: ResultReason,\r\n                       text?: string,\r\n                       duration?: number,\r\n                       offset?: number,\r\n                       errorDetails?: string,\r\n                       json?: string,\r\n                       properties?: PropertyCollection) {\r\n        super(translations, resultId, reason, text, duration, offset, undefined, undefined, errorDetails, json, properties);\r\n        this.privId = participantId;\r\n        this.privOrigLang = originalLanguage;\r\n    }\r\n\r\n    /**\r\n     * The unique identifier for the participant this result is for.\r\n     */\r\n    public get participantId(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    /**\r\n     * The original language this result was in.\r\n     */\r\n    public get originalLang(): string {\r\n        return this.privOrigLang;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { VoiceProfileType } from \"./Exports.js\";\r\n\r\n/**\r\n * Defines Voice Profile class for Speaker Recognition\r\n * @class VoiceProfile\r\n */\r\nexport class VoiceProfile {\r\n    private privId: string;\r\n    private privProfileType: VoiceProfileType;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} profileId - profileId of this Voice Profile.\r\n     * @param {VoiceProfileType} profileType - profileType of this Voice Profile.\r\n     */\r\n    public constructor(profileId: string, profileType: VoiceProfileType) {\r\n        this.privId = profileId;\r\n        this.privProfileType = profileType;\r\n    }\r\n\r\n    /**\r\n     * profileId of this Voice Profile instance\r\n     * @member VoiceProfile.prototype.profileId\r\n     * @function\r\n     * @public\r\n     * @returns {string} profileId of this Voice Profile instance.\r\n     */\r\n    public get profileId(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    /**\r\n     * profileType of this Voice Profile instance\r\n     * @member VoiceProfile.prototype.profileType\r\n     * @function\r\n     * @public\r\n     * @returns {VoiceProfileType} profile type of this Voice Profile instance.\r\n     */\r\n    public get profileType(): VoiceProfileType {\r\n        return this.privProfileType;\r\n    }\r\n\r\n}\r\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection } from \"../sdk/Exports.js\";\r\nimport { Context } from \"./Exports.js\";\r\n\r\nexport class SpeakerRecognitionConfig {\r\n    private privParameters: PropertyCollection;\r\n    private privContext: Context;\r\n\r\n    public constructor(\r\n        context: Context,\r\n        parameters: PropertyCollection) {\r\n        this.privContext = context ? context : new Context(null);\r\n        this.privParameters = parameters;\r\n    }\r\n\r\n    public get parameters(): PropertyCollection {\r\n        return this.privParameters;\r\n    }\r\n\r\n    public get Context(): Context {\r\n        return this.privContext;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ArgumentNullError,\r\n    ConnectionClosedEvent,\r\n    ConnectionEvent,\r\n    ConnectionMessage,\r\n    ConnectionState,\r\n    createNoDashGuid,\r\n    EventSource,\r\n    IAudioDestination,\r\n    IConnection,\r\n    IDisposable,\r\n    MessageType,\r\n    ServiceEvent,\r\n} from \"../common/Exports.js\";\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat.js\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechSynthesisBookmarkEventArgs,\r\n    SpeechSynthesisResult,\r\n    SpeechSynthesisVisemeEventArgs,\r\n    SpeechSynthesisWordBoundaryEventArgs,\r\n    Synthesizer,\r\n} from \"../sdk/Exports.js\";\r\nimport {\r\n    AgentConfig,\r\n    CancellationErrorCodePropertyName,\r\n    ISynthesisConnectionFactory,\r\n    ISynthesisMetadata,\r\n    MetadataType,\r\n    SynthesisAudioMetadata,\r\n    SynthesisContext,\r\n    SynthesisTurn,\r\n    SynthesizerConfig\r\n} from \"./Exports.js\";\r\nimport { AuthInfo, IAuthentication } from \"./IAuthentication.js\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal.js\";\r\n\r\nexport abstract class SynthesisAdapterBase implements IDisposable {\r\n    protected privSynthesisTurn: SynthesisTurn;\r\n    protected privConnectionId: string;\r\n    protected privSynthesizerConfig: SynthesizerConfig;\r\n    protected privSynthesizer: Synthesizer;\r\n    protected privSuccessCallback: (e: SpeechSynthesisResult) => void;\r\n    protected privErrorCallback: (e: string) => void;\r\n\r\n    public get synthesisContext(): SynthesisContext {\r\n        return this.privSynthesisContext;\r\n    }\r\n\r\n    public get agentConfig(): AgentConfig {\r\n        return this.privAgentConfig;\r\n    }\r\n\r\n    public get connectionEvents(): EventSource<ConnectionEvent> {\r\n        return this.privConnectionEvents;\r\n    }\r\n\r\n    public get serviceEvents(): EventSource<ServiceEvent> {\r\n        return this.privServiceEvents;\r\n    }\r\n\r\n    protected speakOverride: (ssml: string, requestId: string, sc: (e: SpeechSynthesisResult) => void, ec: (e: string) => void) => void = undefined;\r\n\r\n    // Called when telemetry data is sent to the service.\r\n    // Used for testing Telemetry capture.\r\n    public static telemetryData: (json: string) => void;\r\n    public static telemetryDataEnabled: boolean = true;\r\n\r\n    public set activityTemplate(messagePayload: string) {\r\n        this.privActivityTemplate = messagePayload;\r\n    }\r\n    public get activityTemplate(): string {\r\n        return this.privActivityTemplate;\r\n    }\r\n\r\n    protected receiveMessageOverride: () => void = undefined;\r\n\r\n    protected connectImplOverride: (isUnAuthorized: boolean) => void = undefined;\r\n\r\n    protected configConnectionOverride: (connection: IConnection) => Promise<IConnection> = undefined;\r\n\r\n    public set audioOutputFormat(format: AudioOutputFormatImpl) {\r\n        this.privAudioOutputFormat = format;\r\n        this.privSynthesisTurn.audioOutputFormat = format;\r\n        if (this.privSessionAudioDestination !== undefined) {\r\n            this.privSessionAudioDestination.format = format;\r\n        }\r\n        if (this.synthesisContext !== undefined) {\r\n            this.synthesisContext.audioOutputFormat = format;\r\n        }\r\n    }\r\n    private privAuthentication: IAuthentication;\r\n    private privConnectionFactory: ISynthesisConnectionFactory;\r\n\r\n    // A promise for a configured connection.\r\n    // Do not consume directly, call fetchConnection instead.\r\n    private privConnectionConfigurationPromise: Promise<IConnection> = undefined;\r\n\r\n    // A promise for a connection, but one that has not had the speech context sent yet.\r\n    // Do not consume directly, call fetchConnection instead.\r\n    private privConnectionPromise: Promise<IConnection>;\r\n    private privAuthFetchEventId: string;\r\n    private privIsDisposed: boolean;\r\n    private privConnectionEvents: EventSource<ConnectionEvent>;\r\n    private privServiceEvents: EventSource<ServiceEvent>;\r\n    protected privSynthesisContext: SynthesisContext;\r\n    private privAgentConfig: AgentConfig;\r\n    private privActivityTemplate: string;\r\n    protected privAudioOutputFormat: AudioOutputFormatImpl;\r\n    private privSessionAudioDestination: IAudioDestination;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: ISynthesisConnectionFactory,\r\n        synthesizerConfig: SynthesizerConfig,\r\n        audioDestination: IAudioDestination) {\r\n\r\n        if (!authentication) {\r\n            throw new ArgumentNullError(\"authentication\");\r\n        }\r\n\r\n        if (!connectionFactory) {\r\n            throw new ArgumentNullError(\"connectionFactory\");\r\n        }\r\n\r\n        if (!synthesizerConfig) {\r\n            throw new ArgumentNullError(\"synthesizerConfig\");\r\n        }\r\n\r\n        this.privAuthentication = authentication;\r\n        this.privConnectionFactory = connectionFactory;\r\n        this.privSynthesizerConfig = synthesizerConfig;\r\n        this.privIsDisposed = false;\r\n        this.privSessionAudioDestination = audioDestination;\r\n        this.privSynthesisTurn = new SynthesisTurn();\r\n        this.privConnectionEvents = new EventSource<ConnectionEvent>();\r\n        this.privServiceEvents = new EventSource<ServiceEvent>();\r\n        this.privSynthesisContext = new SynthesisContext();\r\n        this.privAgentConfig = new AgentConfig();\r\n\r\n        this.connectionEvents.attach((connectionEvent: ConnectionEvent): void => {\r\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\r\n                const connectionClosedEvent = connectionEvent as ConnectionClosedEvent;\r\n                if (connectionClosedEvent.statusCode !== 1000) {\r\n                    this.cancelSynthesisLocal(CancellationReason.Error,\r\n                        connectionClosedEvent.statusCode === 1007 ? CancellationErrorCode.BadRequestParameters : CancellationErrorCode.ConnectionFailure,\r\n                        `${connectionClosedEvent.reason} websocket error code: ${connectionClosedEvent.statusCode}`);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public async dispose(reason?: string): Promise<void> {\r\n        this.privIsDisposed = true;\r\n        if (this.privSessionAudioDestination !== undefined) {\r\n            this.privSessionAudioDestination.close();\r\n        }\r\n        if (this.privConnectionConfigurationPromise !== undefined) {\r\n            const connection: IConnection = await this.privConnectionConfigurationPromise;\r\n            await connection.dispose(reason);\r\n        }\r\n    }\r\n\r\n    public async connect(): Promise<void> {\r\n        await this.connectImpl();\r\n    }\r\n\r\n    public async sendNetworkMessage(path: string, payload: string | ArrayBuffer): Promise<void> {\r\n        const type: MessageType = typeof payload === \"string\" ? MessageType.Text : MessageType.Binary;\r\n        const contentType: string = typeof payload === \"string\" ? \"application/json\" : \"\";\r\n\r\n        const connection: IConnection = await this.fetchConnection();\r\n        return connection.send(new SpeechConnectionMessage(type, path, this.privSynthesisTurn.requestId, contentType, payload));\r\n    }\r\n\r\n    public async Speak(\r\n        text: string,\r\n        isSSML: boolean,\r\n        requestId: string,\r\n        successCallback: (e: SpeechSynthesisResult) => void,\r\n        errorCallBack: (e: string) => void,\r\n        audioDestination: IAudioDestination,\r\n    ): Promise<void> {\r\n\r\n        let ssml: string;\r\n\r\n        if (isSSML) {\r\n            ssml = text;\r\n        } else {\r\n            ssml = this.privSynthesizer.buildSsml(text);\r\n        }\r\n\r\n        if (this.speakOverride !== undefined) {\r\n            return this.speakOverride(ssml, requestId, successCallback, errorCallBack);\r\n        }\r\n\r\n        this.privSuccessCallback = successCallback;\r\n        this.privErrorCallback = errorCallBack;\r\n\r\n        this.privSynthesisTurn.startNewSynthesis(requestId, text, isSSML, audioDestination);\r\n\r\n        try {\r\n            await this.connectImpl();\r\n            const connection: IConnection = await this.fetchConnection();\r\n            await this.sendSynthesisContext(connection);\r\n            await this.sendSsmlMessage(connection, ssml, requestId);\r\n            this.onSynthesisStarted(requestId);\r\n\r\n            void this.receiveMessage();\r\n        } catch (e) {\r\n            this.cancelSynthesisLocal(CancellationReason.Error, CancellationErrorCode.ConnectionFailure, e as string);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    public async stopSpeaking(): Promise<void> {\r\n        await this.connectImpl();\r\n        const connection: IConnection = await this.fetchConnection();\r\n\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"synthesis.control\",\r\n            this.privSynthesisTurn.requestId,\r\n            \"application/json\",\r\n            JSON.stringify({\r\n                action: \"stop\"\r\n            })\r\n        ));\r\n    }\r\n\r\n    // Cancels synthesis.\r\n    protected cancelSynthesis(\r\n        requestId: string,\r\n        _cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n        const result: SpeechSynthesisResult = new SpeechSynthesisResult(\r\n            requestId,\r\n            ResultReason.Canceled,\r\n            undefined,\r\n            error,\r\n            properties\r\n        );\r\n\r\n        this.onSynthesisCancelled(result);\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n        }\r\n    }\r\n\r\n    // Cancels synthesis.\r\n    protected cancelSynthesisLocal(\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        if (!!this.privSynthesisTurn.isSynthesizing) {\r\n            this.privSynthesisTurn.onStopSynthesizing();\r\n\r\n            this.cancelSynthesis(\r\n                this.privSynthesisTurn.requestId,\r\n                cancellationReason,\r\n                errorCode,\r\n                error);\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    protected processTypeSpecificMessages(_connectionMessage: SpeechConnectionMessage): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected async receiveMessage(): Promise<void> {\r\n        try {\r\n            const connection: IConnection = await this.fetchConnection();\r\n            const message: ConnectionMessage = await connection.read();\r\n\r\n            if (this.receiveMessageOverride !== undefined) {\r\n                return this.receiveMessageOverride();\r\n            }\r\n            if (this.privIsDisposed) {\r\n                // We're done.\r\n                return;\r\n            }\r\n\r\n            // indicates we are draining the queue and it came with no message;\r\n            if (!message) {\r\n                if (!this.privSynthesisTurn.isSynthesizing) {\r\n                    return;\r\n                } else {\r\n                    return this.receiveMessage();\r\n                }\r\n            }\r\n\r\n\r\n            const connectionMessage = SpeechConnectionMessage.fromConnectionMessage(message);\r\n\r\n            if (connectionMessage.requestId.toLowerCase() === this.privSynthesisTurn.requestId.toLowerCase()) {\r\n                switch (connectionMessage.path.toLowerCase()) {\r\n                    case \"turn.start\":\r\n                        this.privSynthesisTurn.onServiceTurnStartResponse(connectionMessage.textBody);\r\n                        break;\r\n                    case \"response\":\r\n                        this.privSynthesisTurn.onServiceResponseMessage(connectionMessage.textBody);\r\n                        break;\r\n                    case \"audio\":\r\n                        if (this.privSynthesisTurn.streamId.toLowerCase() === connectionMessage.streamId.toLowerCase()\r\n                            && !!connectionMessage.binaryBody) {\r\n                            this.privSynthesisTurn.onAudioChunkReceived(connectionMessage.binaryBody);\r\n                            this.onSynthesizing(connectionMessage.binaryBody);\r\n                            if (this.privSessionAudioDestination !== undefined) {\r\n                                this.privSessionAudioDestination.write(connectionMessage.binaryBody);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"audio.metadata\":\r\n                        const metadataList = SynthesisAudioMetadata.fromJSON(connectionMessage.textBody).Metadata;\r\n                        for (const metadata of metadataList) {\r\n                            switch (metadata.Type) {\r\n                                case MetadataType.WordBoundary:\r\n                                case MetadataType.SentenceBoundary:\r\n                                    this.privSynthesisTurn.onTextBoundaryEvent(metadata);\r\n                                    const wordBoundaryEventArgs: SpeechSynthesisWordBoundaryEventArgs = new SpeechSynthesisWordBoundaryEventArgs(\r\n                                        metadata.Data.Offset,\r\n                                        metadata.Data.Duration,\r\n                                        metadata.Data.text.Text,\r\n                                        metadata.Data.text.Length,\r\n                                        metadata.Type === MetadataType.WordBoundary\r\n                                            ? this.privSynthesisTurn.currentTextOffset : this.privSynthesisTurn.currentSentenceOffset,\r\n                                        metadata.Data.text.BoundaryType);\r\n                                    this.onWordBoundary(wordBoundaryEventArgs);\r\n                                    break;\r\n                                case MetadataType.Bookmark:\r\n                                    const bookmarkEventArgs: SpeechSynthesisBookmarkEventArgs = new SpeechSynthesisBookmarkEventArgs(\r\n                                        metadata.Data.Offset,\r\n                                        metadata.Data.Bookmark);\r\n                                    this.onBookmarkReached(bookmarkEventArgs);\r\n                                    break;\r\n                                case MetadataType.Viseme:\r\n                                    this.privSynthesisTurn.onVisemeMetadataReceived(metadata);\r\n                                    if (metadata.Data.IsLastAnimation) {\r\n                                        const visemeEventArgs: SpeechSynthesisVisemeEventArgs = new SpeechSynthesisVisemeEventArgs(\r\n                                            metadata.Data.Offset,\r\n                                            metadata.Data.VisemeId,\r\n                                            this.privSynthesisTurn.getAndClearVisemeAnimation());\r\n                                        this.onVisemeReceived(visemeEventArgs);\r\n                                    }\r\n                                    break;\r\n                                case MetadataType.AvatarSignal:\r\n                                    this.onAvatarEvent(metadata);\r\n                                    break;\r\n                                case MetadataType.SessionEnd:\r\n                                    this.privSynthesisTurn.onSessionEnd(metadata);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"turn.end\":\r\n                        this.privSynthesisTurn.onServiceTurnEndResponse();\r\n                        let result: SpeechSynthesisResult;\r\n                        try {\r\n                            result = await this.privSynthesisTurn.constructSynthesisResult();\r\n                            if (!!this.privSuccessCallback) {\r\n                                this.privSuccessCallback(result);\r\n                            }\r\n                        } catch (error) {\r\n                            if (!!this.privErrorCallback) {\r\n                                this.privErrorCallback(error as string);\r\n                            }\r\n                        }\r\n                        this.onSynthesisCompleted(result);\r\n                        break;\r\n\r\n                    default:\r\n                        if (!this.processTypeSpecificMessages(connectionMessage)) {\r\n                            // here are some messages that the derived class has not processed, dispatch them to connect class\r\n                            if (!!this.privServiceEvents) {\r\n                                this.serviceEvents.onEvent(new ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\r\n                            }\r\n                        }\r\n\r\n                }\r\n            }\r\n\r\n            return this.receiveMessage();\r\n\r\n        } catch (e) {\r\n            // TODO: What goes here?\r\n        }\r\n    }\r\n\r\n    protected sendSynthesisContext(connection: IConnection): Promise<void> {\r\n        this.setSynthesisContextSynthesisSection();\r\n        const synthesisContextJson = this.synthesisContext.toJSON();\r\n\r\n        if (synthesisContextJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"synthesis.context\",\r\n                this.privSynthesisTurn.requestId,\r\n                \"application/json\",\r\n                synthesisContextJson));\r\n        }\r\n        return;\r\n    }\r\n\r\n    protected abstract setSynthesisContextSynthesisSection(): void;\r\n\r\n    protected setSpeechConfigSynthesisSection(): void {\r\n        return;\r\n    }\r\n\r\n    protected connectImpl(isUnAuthorized: boolean = false): Promise<IConnection> {\r\n        if (this.privConnectionPromise != null) {\r\n            return this.privConnectionPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionPromise = null;\r\n                    return this.connectImpl();\r\n                }\r\n                return this.privConnectionPromise;\r\n            }, (): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionPromise = null;\r\n                return this.connectImpl();\r\n            });\r\n        }\r\n        this.privAuthFetchEventId = createNoDashGuid();\r\n        this.privConnectionId = createNoDashGuid();\r\n\r\n        this.privSynthesisTurn.onPreConnectionStart(this.privAuthFetchEventId);\r\n\r\n        const authPromise = isUnAuthorized ? this.privAuthentication.fetchOnExpiry(this.privAuthFetchEventId) : this.privAuthentication.fetch(this.privAuthFetchEventId);\r\n\r\n        this.privConnectionPromise = authPromise.then(async (result: AuthInfo): Promise<IConnection> => {\r\n            this.privSynthesisTurn.onAuthCompleted(false);\r\n\r\n            const connection: IConnection = this.privConnectionFactory.create(this.privSynthesizerConfig, result, this.privConnectionId);\r\n\r\n            // Attach to the underlying event. No need to hold onto the detach pointers as in the event the connection goes away,\r\n            // it'll stop sending events.\r\n            connection.events.attach((event: ConnectionEvent): void => {\r\n                this.connectionEvents.onEvent(event);\r\n            });\r\n            const response = await connection.open();\r\n            if (response.statusCode === 200) {\r\n                this.privSynthesisTurn.onConnectionEstablishCompleted(response.statusCode);\r\n                return Promise.resolve(connection);\r\n            } else if (response.statusCode === 403 && !isUnAuthorized) {\r\n                return this.connectImpl(true);\r\n            } else {\r\n                this.privSynthesisTurn.onConnectionEstablishCompleted(response.statusCode);\r\n                return Promise.reject(\r\n                    `Unable to contact server. StatusCode: ${response.statusCode},\r\n                    ${this.privSynthesizerConfig.parameters.getProperty(PropertyId.SpeechServiceConnection_Url)} Reason: ${response.reason}`);\r\n            }\r\n        }, (error: string): Promise<IConnection> => {\r\n            this.privSynthesisTurn.onAuthCompleted(true);\r\n            throw new Error(error);\r\n        });\r\n\r\n        // Attach an empty handler to allow the promise to run in the background while\r\n        // other startup events happen. It'll eventually be awaited on.\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        this.privConnectionPromise.catch((): void => { });\r\n\r\n        return this.privConnectionPromise;\r\n    }\r\n    protected sendSpeechServiceConfig(connection: IConnection, SpeechServiceConfigJson: string): Promise<void> {\r\n        if (SpeechServiceConfigJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"speech.config\",\r\n                this.privSynthesisTurn.requestId,\r\n                \"application/json\",\r\n                SpeechServiceConfigJson));\r\n        }\r\n    }\r\n\r\n    protected sendSsmlMessage(connection: IConnection, ssml: string, requestId: string): Promise<void> {\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"ssml\",\r\n            requestId,\r\n            \"application/ssml+xml\",\r\n            ssml));\r\n    }\r\n\r\n    private async fetchConnection(): Promise<IConnection> {\r\n        if (this.privConnectionConfigurationPromise !== undefined) {\r\n            return this.privConnectionConfigurationPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionConfigurationPromise = undefined;\r\n                    return this.fetchConnection();\r\n                }\r\n                return this.privConnectionConfigurationPromise;\r\n            }, (): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionConfigurationPromise = undefined;\r\n                return this.fetchConnection();\r\n            });\r\n        }\r\n        this.privConnectionConfigurationPromise = this.configureConnection();\r\n        return await this.privConnectionConfigurationPromise;\r\n    }\r\n\r\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\r\n    private async configureConnection(): Promise<IConnection> {\r\n        const connection: IConnection = await this.connectImpl();\r\n        if (this.configConnectionOverride !== undefined) {\r\n            return this.configConnectionOverride(connection);\r\n        }\r\n        this.setSpeechConfigSynthesisSection();\r\n        await this.sendSpeechServiceConfig(connection, this.privSynthesizerConfig.SpeechServiceConfig.serialize());\r\n        return connection;\r\n    }\r\n\r\n    protected onAvatarEvent(_metadata: ISynthesisMetadata): void {\r\n        return;\r\n    }\r\n\r\n    protected onSynthesisStarted(_requestId: string): void {\r\n        return;\r\n    }\r\n\r\n    protected onSynthesizing(_audio: ArrayBuffer): void {\r\n        return;\r\n    }\r\n\r\n    protected onSynthesisCancelled(_result: SpeechSynthesisResult): void {\r\n        return;\r\n    }\r\n\r\n    protected onSynthesisCompleted(_result: SpeechSynthesisResult): void {\r\n        return;\r\n    }\r\n\r\n    protected onWordBoundary(_wordBoundaryEventArgs: SpeechSynthesisWordBoundaryEventArgs): void {\r\n        return;\r\n    }\r\n\r\n    protected onVisemeReceived(_visemeEventArgs: SpeechSynthesisVisemeEventArgs): void {\r\n        return;\r\n    }\r\n\r\n    protected onBookmarkReached(_bookmarkEventArgs: SpeechSynthesisBookmarkEventArgs): void {\r\n        return;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SpeechSynthesisBoundaryType } from \"../../sdk/Exports.js\";\r\n\r\nexport enum MetadataType {\r\n    WordBoundary = \"WordBoundary\",\r\n    Bookmark = \"Bookmark\",\r\n    Viseme = \"Viseme\",\r\n    SentenceBoundary = \"SentenceBoundary\",\r\n    SessionEnd = \"SessionEnd\",\r\n    AvatarSignal = \"TalkingAvatarSignal\",\r\n}\r\n\r\nexport interface ISynthesisMetadata {\r\n    Type: MetadataType;\r\n    Data: {\r\n        Offset: number;\r\n        Duration: number;\r\n        text: {\r\n            Text: string;\r\n            Length: number;\r\n            BoundaryType: SpeechSynthesisBoundaryType;\r\n        };\r\n        Bookmark: string;\r\n        VisemeId: number;\r\n        AnimationChunk: string;\r\n        IsLastAnimation: boolean;\r\n        Name: string;\r\n    };\r\n}\r\n\r\n// audio.metadata\r\nexport interface ISynthesisAudioMetadata {\r\n    Metadata: ISynthesisMetadata[];\r\n}\r\n\r\nexport class SynthesisAudioMetadata implements ISynthesisAudioMetadata {\r\n    private privSynthesisAudioMetadata: ISynthesisAudioMetadata;\r\n\r\n    private constructor(json: string) {\r\n        this.privSynthesisAudioMetadata = JSON.parse(json) as ISynthesisAudioMetadata;\r\n    }\r\n\r\n    public static fromJSON(json: string): SynthesisAudioMetadata {\r\n        return new SynthesisAudioMetadata(json);\r\n    }\r\n\r\n    public get Metadata(): ISynthesisMetadata[] {\r\n        return this.privSynthesisAudioMetadata.Metadata;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports.js\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary\r\n} from \"../common/Exports.js\";\r\nimport {\r\n    PropertyId\r\n} from \"../sdk/Exports.js\";\r\nimport {\r\n    ServicePropertiesPropertyName\r\n} from \"../common.speech/Exports.js\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./ConnectionFactoryBase.js\";\r\nimport {\r\n    AuthInfo,\r\n    RecognizerConfig,\r\n    WebsocketMessageFormatter\r\n} from \"./Exports.js\";\r\nimport { HeaderNames } from \"./HeaderNames.js\";\r\nimport {\r\n    QueryParameterNames\r\n} from \"./QueryParameterNames.js\";\r\n\r\nexport class ConversationTranscriberConnectionFactory extends ConnectionFactoryBase {\r\n    private readonly universalUri: string = \"/speech/universal/v2\";\r\n\r\n    public create(\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, undefined);\r\n        const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n        const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".stt.speech\" + hostSuffix);\r\n        const queryParams: IStringDictionary<string> = {};\r\n        const endpointId: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_EndpointId, undefined);\r\n        const language: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\r\n\r\n        if (endpointId) {\r\n            if (!endpoint || endpoint.search(QueryParameterNames.CustomSpeechDeploymentId) === -1) {\r\n                queryParams[QueryParameterNames.CustomSpeechDeploymentId] = endpointId;\r\n            }\r\n        } else if (language) {\r\n            if (!endpoint || endpoint.search(QueryParameterNames.Language) === -1) {\r\n                queryParams[QueryParameterNames.Language] = language;\r\n            }\r\n        }\r\n\r\n        if (config.autoDetectSourceLanguages !== undefined) {\r\n            queryParams[QueryParameterNames.EnableLanguageId] = \"true\";\r\n        }\r\n\r\n        this.setV2UrlParams(config, queryParams, endpoint);\r\n\r\n        if (!endpoint) {\r\n            endpoint = `${host}${this.universalUri}`;\r\n        }\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n\r\n        const webSocketConnection = new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n\r\n        // Set the value of SpeechServiceConnection_Url to webSocketConnection.uri (and not to `endpoint`), since this value is the final\r\n        // URI that was used to make the connection (including query parameters).\r\n        const uri: string = webSocketConnection.uri;\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, uri);\r\n\r\n        return webSocketConnection;\r\n    }\r\n\r\n    protected setV2UrlParams(\r\n        config: RecognizerConfig,\r\n        queryParams: IStringDictionary<string>,\r\n        endpoint: string): void {\r\n\r\n        const propertyIdToParameterMap: Map<number, string> = new Map([\r\n            [PropertyId.Speech_SegmentationSilenceTimeoutMs, QueryParameterNames.SegmentationSilenceTimeoutMs],\r\n            [PropertyId.SpeechServiceConnection_EnableAudioLogging, QueryParameterNames.EnableAudioLogging],\r\n            [PropertyId.SpeechServiceConnection_EndSilenceTimeoutMs, QueryParameterNames.EndSilenceTimeoutMs],\r\n            [PropertyId.SpeechServiceConnection_InitialSilenceTimeoutMs, QueryParameterNames.InitialSilenceTimeoutMs],\r\n            [PropertyId.SpeechServiceResponse_PostProcessingOption, QueryParameterNames.Postprocessing],\r\n            [PropertyId.SpeechServiceResponse_ProfanityOption, QueryParameterNames.Profanity],\r\n            [PropertyId.SpeechServiceResponse_StablePartialResultThreshold, QueryParameterNames.StableIntermediateThreshold],\r\n        ]);\r\n\r\n        propertyIdToParameterMap.forEach((parameterName: string, propertyId: PropertyId): void => {\r\n            this.setUrlParameter(propertyId, parameterName, config, queryParams, endpoint);\r\n        });\r\n\r\n\r\n        const serviceProperties: IStringDictionary<string> = JSON.parse(config.parameters.getProperty(ServicePropertiesPropertyName, \"{}\")) as IStringDictionary<string>;\r\n\r\n        Object.keys(serviceProperties).forEach((value: string): void => {\r\n            queryParams[value] = serviceProperties[value];\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n/**\r\n * Defines the payload for incoming list of participants\r\n */\r\nexport interface IParticipantsListPayloadResponse {\r\n    roomid: string;\r\n    id: string;\r\n    command: string;\r\n    participants: IParticipantPayloadResponse[];\r\n    token: string;\r\n    translateTo: string[];\r\n    profanityFilter: string;\r\n    roomProfanityFilter: string;\r\n    roomLocked: boolean;\r\n    muteAll: boolean;\r\n    type: string;\r\n}\r\n\r\n/**\r\n * Defines the payload for incoming participant\r\n */\r\nexport interface IParticipantPayloadResponse {\r\n    nickname: string;\r\n    locale: string;\r\n    usetts: boolean;\r\n    ismuted: boolean;\r\n    ishost: boolean;\r\n    participantId: string;\r\n    avatar?: string;\r\n}\r\n\r\nconst parseListResponse = (json: string): IParticipantsListPayloadResponse => JSON.parse(json) as IParticipantsListPayloadResponse;\r\nconst parseParticipantResponse = (json: string): IParticipantPayloadResponse => JSON.parse(json) as IParticipantPayloadResponse;\r\n\r\nexport class ParticipantsListPayloadResponse implements IParticipantsListPayloadResponse {\r\n    private privParticipantsPayloadResponse: IParticipantsListPayloadResponse;\r\n\r\n    private constructor(json: string) {\r\n        this.privParticipantsPayloadResponse = parseListResponse(json);\r\n    }\r\n\r\n    public get roomid(): string {\r\n        return this.privParticipantsPayloadResponse.roomid;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privParticipantsPayloadResponse.id;\r\n    }\r\n\r\n    public get command(): string {\r\n        return this.privParticipantsPayloadResponse.command;\r\n    }\r\n\r\n    public get participants(): IParticipantPayloadResponse[] {\r\n        return this.privParticipantsPayloadResponse.participants;\r\n    }\r\n\r\n    public get token(): string {\r\n        return this.privParticipantsPayloadResponse.token;\r\n    }\r\n\r\n    public get translateTo(): string[] {\r\n        return this.privParticipantsPayloadResponse.translateTo;\r\n    }\r\n\r\n    public get profanityFilter(): string {\r\n        return this.privParticipantsPayloadResponse.profanityFilter;\r\n    }\r\n\r\n    public get roomProfanityFilter(): string {\r\n        return this.privParticipantsPayloadResponse.roomProfanityFilter;\r\n    }\r\n\r\n    public get roomLocked(): boolean {\r\n        return this.privParticipantsPayloadResponse.roomLocked;\r\n    }\r\n\r\n    public get muteAll(): boolean {\r\n        return this.privParticipantsPayloadResponse.muteAll;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privParticipantsPayloadResponse.type;\r\n    }\r\n\r\n    public static fromJSON(json: string): ParticipantsListPayloadResponse {\r\n        return new ParticipantsListPayloadResponse(json);\r\n    }\r\n\r\n}\r\n\r\nexport class ParticipantPayloadResponse implements IParticipantPayloadResponse {\r\n\r\n    private privParticipantPayloadResponse: IParticipantPayloadResponse;\r\n\r\n    private constructor(json: string) {\r\n        this.privParticipantPayloadResponse = parseParticipantResponse(json);\r\n    }\r\n\r\n    public get nickname(): string {\r\n        return this.privParticipantPayloadResponse.nickname;\r\n    }\r\n\r\n    public get locale(): string {\r\n        return this.privParticipantPayloadResponse.locale;\r\n    }\r\n\r\n    public get usetts(): boolean {\r\n        return this.privParticipantPayloadResponse.usetts;\r\n    }\r\n\r\n    public get ismuted(): boolean {\r\n        return this.privParticipantPayloadResponse.ismuted;\r\n    }\r\n\r\n    public get ishost(): boolean {\r\n        return this.privParticipantPayloadResponse.ishost;\r\n    }\r\n\r\n    public get participantId(): string {\r\n        return this.privParticipantPayloadResponse.participantId;\r\n    }\r\n\r\n    public get avatar(): string {\r\n        return this.privParticipantPayloadResponse.avatar;\r\n    }\r\n\r\n    public static fromJSON(json: string): ParticipantPayloadResponse {\r\n        return new ParticipantPayloadResponse(json);\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ConnectionEventArgs,\r\n    ConversationExpirationEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    SessionEventArgs,\r\n    } from \"../../sdk/Exports.js\";\r\n// import { ConversationClient } from \"./ConversationConnection\";\r\nimport {\r\n    ConversationReceivedTranslationEventArgs,\r\n    LockRoomEventArgs,\r\n    MuteAllEventArgs,\r\n    ParticipantAttributeEventArgs,\r\n    ParticipantEventArgs,\r\n    ParticipantsListEventArgs } from \"./ConversationTranslatorEventArgs.js\";\r\n\r\n/**\r\n * Internal conversation data\r\n */\r\nexport interface IInternalConversation {\r\n    // the token to use for connecting to the Speech Service\r\n    cognitiveSpeechAuthToken: string;\r\n    // the region to use for connecting to the Speech Service\r\n    cognitiveSpeechRegion: string;\r\n    // the unique id of the user who started or joined the Conversation\r\n    participantId: string;\r\n    // a descriptive name for the Conversation\r\n    name: string;\r\n    // a descriptive name for the Conversation\r\n    description: string;\r\n    // the speech model ID for custom speech\r\n    speechModel: string;\r\n    // represents the level of speech supported in the Conversation (0: everyone can speak, 2: only host can speak, 3: no-one can speak)\r\n    modalities: number;\r\n    // ?\r\n    isApproved: boolean;\r\n    // the mute flag has been set at conversation level and only the host can speak\r\n    isMuted: boolean;\r\n    // the 5 character conversation Id\r\n    roomId: string;\r\n    // the hex color string to represent a user. If there are many users this hex color may be reused (?).\r\n    avatar: string;\r\n    // the token to use when calling the websocket\r\n    token: string;\r\n    // used for tracking the session and help with troubleshooting problems in the logs\r\n    correlationId: string;\r\n    // extracted from the headers\r\n    requestId: string;\r\n    // set programmatically\r\n    isHost: boolean;\r\n}\r\n\r\n/**\r\n * The user who is participating in the conversation.\r\n */\r\nexport interface IInternalParticipant {\r\n    avatar?: string;\r\n    displayName?: string;\r\n    id?: string;\r\n    isHost?: boolean;\r\n    isMuted?: boolean;\r\n    isUsingTts?: boolean;\r\n    profanity?: boolean;\r\n    preferredLanguage?: string;\r\n    translateToLanguages?: string[];\r\n    voice?: string;\r\n}\r\n\r\n/** Users participating in the conversation */\r\nexport class InternalParticipants {\r\n\r\n    public constructor(public participants: IInternalParticipant[] = [], public meId?: string) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Add or update a participant\r\n     * @param value\r\n     */\r\n    public addOrUpdateParticipant(value: IInternalParticipant): IInternalParticipant {\r\n        if (value === undefined) {\r\n            return;\r\n        }\r\n\r\n        const exists: number = this.getParticipantIndex(value.id);\r\n        if (exists > -1) {\r\n            this.participants.splice(exists, 1, value);\r\n        } else {\r\n            this.participants.push(value);\r\n        }\r\n\r\n        // ensure it was added ok\r\n        return this.getParticipant(value.id);\r\n    }\r\n\r\n    /**\r\n     * Find the participant's position in the participants list.\r\n     * @param id\r\n     */\r\n    public getParticipantIndex(id: string): number {\r\n        return this.participants.findIndex((p: IInternalParticipant): boolean => p.id === id);\r\n    }\r\n\r\n    /**\r\n     * Find the participant by id.\r\n     * @param id\r\n     */\r\n    public getParticipant(id: string): IInternalParticipant {\r\n        return this.participants.find((p: IInternalParticipant): boolean => p.id === id);\r\n    }\r\n\r\n    /**\r\n     * Remove a participant from the participants list.\r\n     */\r\n    public deleteParticipant(id: string): void {\r\n        this.participants = this.participants.filter((p: IInternalParticipant): boolean => p.id !== id);\r\n    }\r\n\r\n    /**\r\n     * Helper to return the conversation host.\r\n     */\r\n    public get host(): IInternalParticipant {\r\n        return this.participants.find((p: IInternalParticipant): boolean => p.isHost === true );\r\n    }\r\n\r\n    /**\r\n     * Helper to return the current user.\r\n     */\r\n    public get me(): IInternalParticipant {\r\n        return this.getParticipant(this.meId);\r\n    }\r\n}\r\n\r\n/**\r\n * Recognizer for handling Conversation Translator websocket messages\r\n */\r\nexport interface ConversationRecognizer {\r\n    isDisposed(): boolean;\r\n    sendRequest: (command: string, cb?: () => void, err?: (e: string) => void) => void;\r\n    cancelSpeech?: () => Promise<void>;\r\n    close?: () => Promise<void>;\r\n    conversationExpiration?: (sender: ConversationRecognizer, event: ConversationExpirationEventArgs) => void;\r\n    connected?: (e: ConnectionEventArgs) => void;\r\n    disconnected?: (e: ConnectionEventArgs) => void;\r\n    canceled?: (sender: ConversationRecognizer, event: ConversationTranslationCanceledEventArgs) => void;\r\n    connectionOpened?: (sender: ConversationRecognizer, event: SessionEventArgs) => void;\r\n    connectionClosed?: (sender: ConversationRecognizer, event: SessionEventArgs) => void;\r\n    participantsListReceived?: (sender: ConversationRecognizer, event: ParticipantsListEventArgs) => void;\r\n    translationReceived?: (sender: ConversationRecognizer, event: ConversationReceivedTranslationEventArgs) => void;\r\n    lockRoomCommandReceived?: (sender: ConversationRecognizer, event: LockRoomEventArgs) => void;\r\n    muteAllCommandReceived?: (sender: ConversationRecognizer, event: MuteAllEventArgs) => void;\r\n    participantJoinCommandReceived?: (sender: ConversationRecognizer, event: ParticipantEventArgs) => void;\r\n    participantLeaveCommandReceived?: (sender: ConversationRecognizer, event: ParticipantEventArgs) => void;\r\n    participantUpdateCommandReceived?: (sender: ConversationRecognizer, event: ParticipantAttributeEventArgs) => void;\r\n    connect?: (token: string, cb?: () => void, err?: (e: string) => void) => void;\r\n}\r\n\r\n/**\r\n * Error message returned from the Conversation Translator websocket\r\n */\r\nexport interface IConversationResponseErrorMessage {\r\n    code: string;\r\n    message: string;\r\n}\r\n\r\n/**\r\n * Error returned from the Conversation Translator websocket\r\n */\r\nexport interface IConversationResponseError {\r\n    error: IConversationResponseErrorMessage;\r\n}\r\n\r\n/**\r\n * Base message command\r\n */\r\nexport interface IClientMessage {\r\n    type: any;\r\n}\r\n\r\n/**\r\n * Command message\r\n */\r\nexport interface ICommandMessage extends IClientMessage {\r\n    command?: string;\r\n}\r\n\r\n/**\r\n * Text message command\r\n */\r\nexport interface IInstantMessageCommand extends ICommandMessage {\r\n    roomId: string;\r\n    nickname?: string;\r\n    participantId: string;\r\n    text: string;\r\n}\r\n\r\n/**\r\n * Lock command\r\n */\r\nexport interface ILockConversationCommand extends ICommandMessage {\r\n    id?: string; // incoming ws\r\n    nickname?: string; // incoming ws\r\n    participantId: string; // host - incoming ws\r\n    roomid: string;\r\n    value: boolean;\r\n}\r\n\r\n/**\r\n * Mute all command\r\n */\r\nexport interface IMuteAllCommand extends ICommandMessage {\r\n    roomid: string;\r\n    nickname?: string;  // incoming ws\r\n    participantId: string; // host\r\n    value: boolean;\r\n    id?: string; // incoming ws\r\n}\r\n\r\n/**\r\n * Mute participant command\r\n */\r\nexport interface IMuteCommand extends ICommandMessage {\r\n    roomid: string;\r\n    nickname?: string;\r\n    participantId: string; // participant\r\n    value: boolean;\r\n    id?: string; // incoming ws\r\n}\r\n\r\n/**\r\n * Remove participant command\r\n */\r\nexport interface IEjectParticipantCommand extends ICommandMessage {\r\n    roomid: string;\r\n    participantId: string; // participant\r\n}\r\n\r\n/**\r\n * Change nickname command\r\n */\r\nexport interface IChangeNicknameCommand extends ICommandMessage {\r\n    roomid: string;\r\n    participantId: string;\r\n    nickname: string;\r\n    value: string;\r\n}\r\n\r\n/**\r\n * List of command message types\r\n */\r\nexport const ConversationTranslatorMessageTypes = {\r\n    command: \"command\",\r\n    final: \"final\",\r\n    info: \"info\",\r\n    instantMessage: \"instant_message\",\r\n    keepAlive: \"keep_alive\",\r\n    partial: \"partial\",\r\n    participantCommand: \"participant_command\",\r\n    translatedMessage: \"translated_message\"\r\n};\r\n\r\n/**\r\n * List of command types\r\n */\r\nexport const ConversationTranslatorCommandTypes = {\r\n    changeNickname: \"ChangeNickname\",\r\n    disconnectSession: \"DisconnectSession\",\r\n    ejectParticipant: \"EjectParticipant\",\r\n    instant_message: \"instant_message\",\r\n    joinSession: \"JoinSession\",\r\n    leaveSession: \"LeaveSession\",\r\n    participantList: \"ParticipantList\",\r\n    roomExpirationWarning: \"RoomExpirationWarning\",\r\n    setLockState: \"SetLockState\",\r\n    setMute: \"SetMute\",\r\n    setMuteAll: \"SetMuteAll\",\r\n    setProfanityFiltering: \"SetProfanityFiltering\",\r\n    setTranslateToLanguages: \"SetTranslateToLanguages\",\r\n    setUseTTS: \"SetUseTTS\"\r\n};\r\n\r\n/**\r\n * HTTP response helper\r\n */\r\nexport interface IResponse {\r\n    ok: boolean;\r\n    status: number;\r\n    statusText: string;\r\n    data: string;\r\n    json: <T>() => T;\r\n    headers: string;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport { AvatarVideoFormat } from \"./Exports.js\";\r\n\r\n/**\r\n * Defines the talking avatar configuration.\r\n * @class AvatarConfig\r\n * Added in version 1.33.0\r\n *\r\n * @experimental This feature is experimental and might change or have limited support.\r\n */\r\nexport class AvatarConfig {\r\n    private privCustomized: boolean = false;\r\n    private privUseBuiltInVoice: boolean = false;\r\n    private privBackgroundColor: string;\r\n    private privBackgroundImage: URL;\r\n    private privRemoteIceServers: RTCIceServer[];\r\n\r\n    /**\r\n     * Defines the avatar character.\r\n     */\r\n    public character: string;\r\n    /**\r\n     * Defines the avatar style.\r\n     */\r\n    public style: string;\r\n    /**\r\n     * Defines the talking avatar output video format.\r\n     */\r\n    public videoFormat: AvatarVideoFormat;\r\n\r\n    /**\r\n     * Indicates if the talking avatar is customized.\r\n     */\r\n    public get customized(): boolean {\r\n        return this.privCustomized;\r\n    }\r\n\r\n    /**\r\n     * Sets if the talking avatar is customized.\r\n     */\r\n    public set customized(value: boolean) {\r\n        this.privCustomized = value;\r\n    }\r\n\r\n    /**\r\n     * Indicates whether to use built-in voice for custom avatar.\r\n     */\r\n    public get useBuiltInVoice(): boolean {\r\n        return this.privUseBuiltInVoice;\r\n    }\r\n\r\n    /**\r\n     * Sets whether to use built-in voice for custom avatar.\r\n     */\r\n    public set useBuiltInVoice(value: boolean) {\r\n        this.privUseBuiltInVoice = value;\r\n    }\r\n\r\n    /**\r\n     * Gets the background color.\r\n     */\r\n    public get backgroundColor(): string {\r\n        return this.privBackgroundColor;\r\n    }\r\n\r\n    /**\r\n     * Sets the background color.\r\n     */\r\n    public set backgroundColor(value: string) {\r\n        this.privBackgroundColor = value;\r\n    }\r\n\r\n    /**\r\n     * Gets the background image.\r\n     */\r\n    public get backgroundImage(): URL {\r\n        return this.privBackgroundImage;\r\n    }\r\n\r\n    /**\r\n     * Sets the background image.\r\n     * @param {URL} value - The background image.\r\n     */\r\n    public set backgroundImage(value: URL) {\r\n        this.privBackgroundImage = value;\r\n    }\r\n\r\n    /**\r\n     * Gets the remote ICE servers.\r\n     * @remarks This method is designed to be used internally in the SDK.\r\n     * @returns {RTCIceServer[]} The remote ICE servers.\r\n     */\r\n    public get remoteIceServers(): RTCIceServer[] {\r\n        return this.privRemoteIceServers;\r\n    }\r\n\r\n    /**\r\n     * Sets the remote ICE servers.\r\n     * @remarks Normally, the ICE servers are gathered from the PeerConnection,\r\n     * set this property to override the ICE servers. E.g., the ICE servers are\r\n     * different in client and server side.\r\n     * @param {RTCIceServer[]} value - The remote ICE servers.\r\n     */\r\n    public set remoteIceServers(value: RTCIceServer[]) {\r\n        this.privRemoteIceServers = value;\r\n    }\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} character - The avatar character.\r\n     * @param {string} style - The avatar style.\r\n     * @param {AvatarVideoFormat} videoFormat - The talking avatar output video format.\r\n     */\r\n    public constructor(character: string, style: string, videoFormat: AvatarVideoFormat) {\r\n        Contracts.throwIfNullOrWhitespace(character, \"character\");\r\n        this.character = character;\r\n        this.style = style;\r\n        if (videoFormat === undefined) {\r\n            videoFormat = new AvatarVideoFormat();\r\n        }\r\n        this.videoFormat = videoFormat;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeakerRecognitionConnectionFactory,\r\n    SpeakerServiceRecognizer,\r\n    SpeechServiceConfig\r\n} from \"../common.speech/Exports.js\";\r\nimport { SpeakerRecognitionModel } from \"./SpeakerRecognitionModel.js\";\r\nimport { AudioConfig, AudioConfigImpl } from \"./Audio/AudioConfig.js\";\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport {\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    SpeakerIdentificationModel,\r\n    SpeakerRecognitionResult,\r\n    SpeakerVerificationModel,\r\n} from \"./Exports.js\";\r\nimport { SpeechConfig, SpeechConfigImpl } from \"./SpeechConfig.js\";\r\n\r\n/**\r\n * Defines SpeakerRecognizer class for Speaker Recognition\r\n * Handles operations from user for Voice Profile operations (e.g. createProfile, deleteProfile)\r\n * @class SpeakerRecognizer\r\n */\r\nexport class SpeakerRecognizer extends Recognizer {\r\n    protected privProperties: PropertyCollection;\r\n    private privDisposedSpeakerRecognizer: boolean;\r\n    private privAudioConfigImpl: AudioConfigImpl;\r\n    /**\r\n     * Initializes an instance of the SpeakerRecognizer.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - The set of configuration properties.\r\n     * @param {AudioConfig} audioConfig - An optional audio input config associated with the recognizer\r\n     */\r\n    public constructor(speechConfig: SpeechConfig, audioConfig: AudioConfig) {\r\n        Contracts.throwIfNullOrUndefined(speechConfig, \"speechConfig\");\r\n        const configImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNullOrUndefined(configImpl, \"speechConfig\");\r\n\r\n        super(audioConfig, configImpl.properties, new SpeakerRecognitionConnectionFactory());\r\n        this.privAudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        Contracts.throwIfNull(this.privAudioConfigImpl, \"audioConfig\");\r\n\r\n        this.privDisposedSpeakerRecognizer = false;\r\n        this.privProperties = configImpl.properties;\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member SpeakerRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member SpeakerRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this SpeakerRecognizer.\r\n     * @member SpeakerRecognizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeakerRecognizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Get recognition result for model using given audio\r\n     * @member SpeakerRecognizer.prototype.recognizeOnceAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {SpeakerIdentificationModel | SpeakerVerificationModel} model Model containing Voice Profiles to be identified\r\n     * @param cb - Callback invoked once result is returned.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public async recognizeOnceAsync(model: SpeakerIdentificationModel | SpeakerVerificationModel): Promise<SpeakerRecognitionResult> {\r\n        Contracts.throwIfDisposed(this.privDisposedSpeakerRecognizer);\r\n\r\n        return this.recognizeSpeakerOnceAsyncImpl(model);\r\n    }\r\n\r\n    /**\r\n     * Included for compatibility\r\n     * @member SpeakerRecognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     * @async\r\n     */\r\n    public async close(): Promise<void> {\r\n        Contracts.throwIfDisposed(this.privDisposedSpeakerRecognizer);\r\n        await this.dispose(true);\r\n    }\r\n\r\n    protected async recognizeSpeakerOnceAsyncImpl(model: SpeakerRecognitionModel): Promise<SpeakerRecognitionResult> {\r\n        Contracts.throwIfDisposed(this.privDisposedSpeakerRecognizer);\r\n\r\n        await this.implRecognizerStop();\r\n        const result: SpeakerRecognitionResult = await this.privReco.recognizeSpeaker(model);\r\n        await this.implRecognizerStop();\r\n\r\n        return result;\r\n    }\r\n\r\n    protected async implRecognizerStop(): Promise<void> {\r\n        if (this.privReco) {\r\n            await this.privReco.stopRecognizing();\r\n        }\r\n        return;\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.privProperties);\r\n    }\r\n\r\n    protected createServiceRecognizer(authentication: IAuthentication, connectionFactory: IConnectionFactory, audioConfig: AudioConfig, recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n        const audioImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        return new SpeakerServiceRecognizer(authentication, connectionFactory, audioImpl, recognizerConfig, this);\r\n    }\r\n\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedSpeakerRecognizer) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privDisposedSpeakerRecognizer = true;\r\n            await super.dispose(disposing);\r\n        }\r\n    }\r\n}\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.slice(14, 15), 16);\n}\n\nvar _default = version;\nexports.default = _default;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines contents of speech synthesis bookmark event.\r\n * @class SpeechSynthesisBookmarkEventArgs\r\n * Added in version 1.16.0\r\n */\r\nexport class SpeechSynthesisBookmarkEventArgs {\r\n    private privAudioOffset: number;\r\n    private privText: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} audioOffset - The audio offset.\r\n     * @param {string} text - The bookmark text.\r\n     */\r\n    public constructor(audioOffset: number, text: string) {\r\n        this.privAudioOffset = audioOffset;\r\n        this.privText = text;\r\n    }\r\n\r\n    /**\r\n     * Specifies the audio offset.\r\n     * @member SpeechSynthesisBookmarkEventArgs.prototype.audioOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the audio offset.\r\n     */\r\n    public get audioOffset(): number {\r\n        return this.privAudioOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the bookmark.\r\n     * @member SpeechSynthesisBookmarkEventArgs.prototype.text\r\n     * @function\r\n     * @public\r\n     * @returns {string} the bookmark text.\r\n     */\r\n    public get text(): string {\r\n        return this.privText;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SessionEventArgs, TranslationSynthesisResult } from \"./Exports.js\";\r\n\r\n/**\r\n * Translation Synthesis event arguments\r\n * @class TranslationSynthesisEventArgs\r\n */\r\nexport class TranslationSynthesisEventArgs extends SessionEventArgs {\r\n    private privResult: TranslationSynthesisResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {TranslationSynthesisResult} result - The translation synthesis result.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: TranslationSynthesisResult, sessionId?: string) {\r\n        super(sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the translation synthesis result.\r\n     * @member TranslationSynthesisEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {TranslationSynthesisResult} Specifies the translation synthesis result.\r\n     */\r\n    public get result(): TranslationSynthesisResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationEventArgsBase,\r\n} from \"./CancellationEventArgsBase.js\";\r\n\r\nexport class SpeechRecognitionCanceledEventArgs extends CancellationEventArgsBase {\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat.js\";\r\nimport { PropertyId, SpeechSynthesizer } from \"../sdk/Exports.js\";\r\n\r\n/**\r\n * Represents the JSON used in the synthesis.context message sent to the speech service.\r\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\r\n */\r\nexport class SynthesisContext {\r\n    private privContext: { [section: string]: any } = {};\r\n    private privAudioOutputFormat: AudioOutputFormatImpl;\r\n\r\n    /**\r\n     * Adds a section to the synthesis.context object.\r\n     * @param sectionName Name of the section to add.\r\n     * @param value JSON serializable object that represents the value.\r\n     */\r\n    public setSection(sectionName: string, value: string | object): void {\r\n        this.privContext[sectionName] = value;\r\n    }\r\n\r\n    /**\r\n     * Sets the audio output format for synthesis context generation.\r\n     * @param format {AudioOutputFormatImpl} the output format\r\n     */\r\n    public set audioOutputFormat(format: AudioOutputFormatImpl) {\r\n        this.privAudioOutputFormat = format;\r\n    }\r\n\r\n    public toJSON(): string {\r\n        return JSON.stringify(this.privContext);\r\n    }\r\n\r\n    public setSynthesisSection(speechSynthesizer: SpeechSynthesizer): void {\r\n        const synthesisSection: ISynthesisSection = this.buildSynthesisContext(speechSynthesizer);\r\n        this.setSection(\"synthesis\", synthesisSection);\r\n    }\r\n\r\n    private buildSynthesisContext(speechSynthesizer: SpeechSynthesizer): ISynthesisSection {\r\n        return {\r\n            audio: {\r\n                metadataOptions: {\r\n                    bookmarkEnabled: (!!speechSynthesizer?.bookmarkReached),\r\n                    punctuationBoundaryEnabled: speechSynthesizer?.properties.getProperty(\r\n                        PropertyId.SpeechServiceResponse_RequestPunctuationBoundary, (!!speechSynthesizer?.wordBoundary)),\r\n                    sentenceBoundaryEnabled: speechSynthesizer?.properties.getProperty(\r\n                        PropertyId.SpeechServiceResponse_RequestSentenceBoundary, false),\r\n                    sessionEndEnabled: true,\r\n                    visemeEnabled: (!!speechSynthesizer?.visemeReceived),\r\n                    wordBoundaryEnabled: speechSynthesizer?.properties.getProperty(\r\n                        PropertyId.SpeechServiceResponse_RequestWordBoundary, (!!speechSynthesizer?.wordBoundary)),\r\n                },\r\n                outputFormat: this.privAudioOutputFormat.requestAudioFormatString,\r\n            },\r\n            language: {\r\n                autoDetection: speechSynthesizer?.autoDetectSourceLanguage\r\n            }\r\n        } as ISynthesisSection;\r\n    }\r\n}\r\n\r\ninterface ISynthesisSection {\r\n    audio: {\r\n        outputFormat: string;\r\n        metadataOptions: {\r\n            bookmarkEnabled: boolean;\r\n            wordBoundaryEnabled: string;\r\n            punctuationBoundaryEnabled: string;\r\n            visemeEnabled: boolean;\r\n            sentenceBoundaryEnabled: string;\r\n            sessionEndEnabled: boolean;\r\n        };\r\n    };\r\n    language: {\r\n        autoDetection: boolean;\r\n    };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\n// The config is serialized and sent as the Speech.Config\r\nexport class SpeechServiceConfig {\r\n    private context: Context;\r\n    private recognition: string;\r\n\r\n    public constructor(context: Context) {\r\n        this.context = context;\r\n    }\r\n\r\n    public serialize(): string {\r\n        return JSON.stringify(this, (key: any, value: { [k: string]: any }): any => {\r\n            if (value && typeof value === \"object\" && !Array.isArray(value)) {\r\n                const replacement: { [k: string ]: any } = {};\r\n                for (const k in value) {\r\n                    if (Object.hasOwnProperty.call(value, k)) {\r\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n                        replacement[k && k.charAt(0).toLowerCase() + k.substring(1)] = value[k];\r\n                    }\r\n                }\r\n                return replacement;\r\n            }\r\n            return value;\r\n        });\r\n    }\r\n\r\n    public get Context(): Context {\r\n        return this.context;\r\n    }\r\n\r\n    public get Recognition(): string {\r\n        return this.recognition;\r\n    }\r\n\r\n    public set Recognition(value: string) {\r\n        this.recognition = value.toLowerCase();\r\n    }\r\n}\r\n\r\nexport class Context {\r\n    public system: System;\r\n    public os: OS;\r\n    public audio: ISpeechConfigAudio;\r\n    public synthesis: {\r\n        video: ISynthesisSectionVideo;\r\n    };\r\n\r\n    public constructor(os: OS) {\r\n        this.system = new System();\r\n        this.os = os;\r\n    }\r\n}\r\n\r\nexport class System {\r\n    public name: string;\r\n    public version: string;\r\n    public build: string;\r\n    public lang: string;\r\n\r\n    public constructor() {\r\n        // Note: below will be patched for official builds.\r\n        const SPEECHSDK_CLIENTSDK_VERSION = \"1.43.1\";\r\n\r\n        this.name = \"SpeechSDK\";\r\n        this.version = SPEECHSDK_CLIENTSDK_VERSION;\r\n        this.build = \"JavaScript\";\r\n        this.lang = \"JavaScript\";\r\n    }\r\n}\r\n\r\nexport class OS {\r\n    public platform: string;\r\n    public name: string;\r\n    public version: string;\r\n\r\n    public constructor(platform: string, name: string, version: string) {\r\n        this.platform = platform;\r\n        this.name = name;\r\n        this.version = version;\r\n    }\r\n}\r\n\r\nexport class Device {\r\n    public manufacturer: string;\r\n    public model: string;\r\n    public version: string;\r\n\r\n    public constructor(manufacturer: string, model: string, version: string) {\r\n        this.manufacturer = manufacturer;\r\n        this.model = model;\r\n        this.version = version;\r\n    }\r\n}\r\n\r\nexport interface ISpeechConfigAudio {\r\n    source?: ISpeechConfigAudioDevice;\r\n    playback?: ISpeechConfigAudioDevice;\r\n}\r\n\r\nexport interface ISpeechConfigAudioDevice {\r\n    manufacturer: string;\r\n    model: string;\r\n    connectivity: connectivity;\r\n    type: type;\r\n    samplerate: number;\r\n    bitspersample: number;\r\n    channelcount: number;\r\n}\r\n\r\nexport enum connectivity {\r\n    Bluetooth = \"Bluetooth\",\r\n    Wired = \"Wired\",\r\n    WiFi = \"WiFi\",\r\n    Cellular = \"Cellular\",\r\n    InBuilt = \"InBuilt\",\r\n    Unknown = \"Unknown\",\r\n}\r\n\r\nexport enum type {\r\n    Phone = \"Phone\",\r\n    Speaker = \"Speaker\",\r\n    Car = \"Car\",\r\n    Headset = \"Headset\",\r\n    Thermostat = \"Thermostat\",\r\n    Microphones = \"Microphones\",\r\n    Deskphone = \"Deskphone\",\r\n    RemoteControl = \"RemoteControl\",\r\n    Unknown = \"Unknown\",\r\n    File = \"File\",\r\n    Stream = \"Stream\",\r\n}\r\n\r\nexport interface ICoordinate {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\n// For avatar synthesis\r\nexport interface ISynthesisSectionVideo {\r\n    protocol: {\r\n        name: string;\r\n        webrtcConfig: {\r\n            clientDescription: string;\r\n            iceServers: {\r\n                urls: string[];\r\n                username: string;\r\n                credential: string;\r\n            }[];\r\n        };\r\n    };\r\n    format: {\r\n        bitrate: number;\r\n        codec: string;\r\n        crop: {\r\n            topLeft: ICoordinate;\r\n            bottomRight: ICoordinate;\r\n        };\r\n        resolution: {\r\n            width: number;\r\n            height: number;\r\n        };\r\n    };\r\n    talkingAvatar: {\r\n        character: string;\r\n        customized: boolean;\r\n        useBuiltInVoice: boolean;\r\n        style: string;\r\n        background: {\r\n            color: string;\r\n        };\r\n    };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\n/* eslint-disable max-classes-per-file */\r\nimport { PropertyCollection } from \"../Exports.js\";\r\n\r\n/**\r\n * Represents a user in a conversation.\r\n * Added in version 1.4.0\r\n */\r\nexport interface IUser {\r\n    /** Gets the user's ID */\r\n    readonly userId: string;\r\n}\r\n\r\nexport class User implements IUser {\r\n    private privUserId: string;\r\n\r\n    public constructor(userId: string) {\r\n        this.privUserId = userId;\r\n    }\r\n\r\n    public get userId(): string {\r\n        return this.privUserId;\r\n    }\r\n}\r\n\r\nexport interface VoiceSignature {\r\n    Version: number;\r\n    Tag: string;\r\n    Data: string;\r\n}\r\n\r\nexport interface TranscriptionParticipant {\r\n    /** The unique identifier for the participant. */\r\n    readonly id: string;\r\n    /** The participant's preferred spoken language. */\r\n    readonly preferredLanguage: string;\r\n    /** The participant's voice signature */\r\n    readonly voice: string;\r\n}\r\n\r\n/**\r\n * Represents a participant in a conversation.\r\n * Added in version 1.4.0\r\n */\r\nexport interface IParticipant extends TranscriptionParticipant {\r\n    /** Gets the colour of the user's avatar as an HTML hex string (e.g. FF0000 for red). */\r\n    readonly avatar: string;\r\n    /**\r\n     * The participant's display name. Please note that there may be more than one participant\r\n     * with the same name. You can use <see cref=\"Id\"/> property to tell them apart.\r\n     */\r\n    readonly displayName: string;\r\n    /** Gets whether or not this participant is the host. */\r\n    readonly isHost: boolean;\r\n    /** Gets whether or not this participant is muted. */\r\n    readonly isMuted: boolean;\r\n    /** Gets whether or not the participant is using Text To Speech (TTS). */\r\n    readonly isUsingTts: boolean;\r\n    /** Contains properties of the participant. */\r\n    readonly properties: PropertyCollection;\r\n}\r\n\r\nexport class Participant implements IParticipant {\r\n    private privAvatar: string;\r\n    private privDisplayName: string;\r\n    private privId: string;\r\n    private privIsHost: boolean;\r\n    private privIsMuted: boolean;\r\n    private privIsUsingTts: boolean;\r\n    private privPreferredLanguage: string;\r\n    private privVoice: string;\r\n    private privProperties: PropertyCollection;\r\n\r\n    public constructor(id: string, avatar: string, displayName: string, isHost: boolean, isMuted: boolean, isUsingTts: boolean, preferredLanguage: string, voice?: string) {\r\n        this.privId = id;\r\n        this.privAvatar = avatar;\r\n        this.privDisplayName = displayName;\r\n        this.privIsHost = isHost;\r\n        this.privIsMuted = isMuted;\r\n        this.privIsUsingTts = isUsingTts;\r\n        this.privPreferredLanguage = preferredLanguage;\r\n        this.privVoice = voice;\r\n        this.privProperties = new PropertyCollection();\r\n    }\r\n\r\n    public get avatar(): string {\r\n        return this.privAvatar;\r\n    }\r\n\r\n    public get displayName(): string {\r\n        return this.privDisplayName;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public get preferredLanguage(): string {\r\n        return this.privPreferredLanguage;\r\n    }\r\n\r\n    public get isHost(): boolean {\r\n        return this.privIsHost;\r\n    }\r\n\r\n    public get isMuted(): boolean {\r\n        return this.privIsMuted;\r\n    }\r\n\r\n    public get isUsingTts(): boolean {\r\n        return this.privIsUsingTts;\r\n    }\r\n\r\n    public get voice(): string {\r\n        return this.privVoice;\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public static From(id: string, language: string, voice: string): IParticipant {\r\n        return new Participant(id, \"\", id, false, false, false, language, voice);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"../../common/Error.js\";\r\nimport { AudioStreamFormat } from \"../Exports.js\";\r\nimport { AudioStreamFormatImpl } from \"./AudioStreamFormat.js\";\r\n\r\ntype AudioDataTypedArray = Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array;\r\n/**\r\n * Base audio player class\r\n * TODO: Plays only PCM for now.\r\n * @class\r\n */\r\nexport class BaseAudioPlayer {\r\n\r\n    private audioContext: AudioContext = null;\r\n    private gainNode: GainNode = null;\r\n    private audioFormat: AudioStreamFormatImpl;\r\n    private autoUpdateBufferTimer: any = 0;\r\n    private samples: Float32Array;\r\n    private startTime: number;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {AudioStreamFormat} audioFormat audio stream format recognized by the player.\r\n     */\r\n    public constructor(audioFormat?: AudioStreamFormat) {\r\n        if (audioFormat === undefined) {\r\n            audioFormat = AudioStreamFormat.getDefaultInputFormat();\r\n        }\r\n        this.init(audioFormat);\r\n    }\r\n\r\n    /**\r\n     * play Audio sample\r\n     * @param newAudioData audio data to be played.\r\n     */\r\n    public playAudioSample(newAudioData: ArrayBuffer, cb?: () => void, err?: (error: string) => void): void {\r\n        try {\r\n            this.ensureInitializedContext();\r\n            const audioData = this.formatAudioData(newAudioData);\r\n            const newSamplesData = new Float32Array(this.samples.length + audioData.length);\r\n            newSamplesData.set(this.samples, 0);\r\n            newSamplesData.set(audioData, this.samples.length);\r\n            this.samples = newSamplesData;\r\n            if (!!cb) {\r\n                cb();\r\n            }\r\n        } catch (e) {\r\n            if (!!err) {\r\n                err(e as string);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * stops audio and clears the buffers\r\n     */\r\n    public stopAudio(cb?: () => void, err?: (error: string) => void): void {\r\n        if (this.audioContext !== null) {\r\n            this.samples = new Float32Array();\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n            clearInterval(this.autoUpdateBufferTimer);\r\n            this.audioContext.close().then((): void => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string): void => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n            this.audioContext = null;\r\n        }\r\n    }\r\n\r\n    private init(audioFormat: AudioStreamFormat): void {\r\n        this.audioFormat = audioFormat as AudioStreamFormatImpl;\r\n        this.samples = new Float32Array();\r\n    }\r\n\r\n    private ensureInitializedContext(): void {\r\n        if (this.audioContext === null) {\r\n            this.createAudioContext();\r\n            const timerPeriod = 200;\r\n            this.autoUpdateBufferTimer = setInterval((): void => {\r\n                this.updateAudioBuffer();\r\n            }, timerPeriod);\r\n        }\r\n    }\r\n\r\n    private createAudioContext(): void {\r\n        // new ((window as any).AudioContext || (window as any).webkitAudioContext)();\r\n        this.audioContext = AudioStreamFormatImpl.getAudioContext();\r\n\r\n        // TODO: Various examples shows this gain node, it does not seem to be needed unless we plan\r\n        // to control the volume, not likely\r\n        this.gainNode = this.audioContext.createGain();\r\n        this.gainNode.gain.value = 1;\r\n        this.gainNode.connect(this.audioContext.destination);\r\n        this.startTime = this.audioContext.currentTime;\r\n    }\r\n\r\n    private formatAudioData(audioData: ArrayBuffer): Float32Array {\r\n        switch (this.audioFormat.bitsPerSample) {\r\n            case 8:\r\n                return this.formatArrayBuffer(new Int8Array(audioData), 128);\r\n            case 16:\r\n                return this.formatArrayBuffer(new Int16Array(audioData), 32768);\r\n            case 32:\r\n                return this.formatArrayBuffer(new Int32Array(audioData), 2147483648);\r\n            default:\r\n                throw new InvalidOperationError(\"Only WAVE_FORMAT_PCM (8/16/32 bps) format supported at this time\");\r\n        }\r\n    }\r\n\r\n    private formatArrayBuffer(audioData: AudioDataTypedArray, maxValue: number): Float32Array {\r\n        const float32Data = new Float32Array(audioData.length);\r\n        for (let i = 0; i < audioData.length; i++) {\r\n            float32Data[i] = audioData[i] / maxValue;\r\n        }\r\n        return float32Data;\r\n    }\r\n\r\n    private updateAudioBuffer(): void {\r\n        if (this.samples.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const channelCount = this.audioFormat.channels;\r\n        const bufferSource = this.audioContext.createBufferSource();\r\n        const frameCount = this.samples.length / channelCount;\r\n        const audioBuffer = this.audioContext.createBuffer(channelCount, frameCount, this.audioFormat.samplesPerSec);\r\n\r\n        // TODO: Should we do the conversion in the pushAudioSample instead?\r\n        for (let channel = 0; channel < channelCount; channel++) {\r\n            // Fill in individual channel data\r\n            let channelOffset = channel;\r\n            const audioData = audioBuffer.getChannelData(channel);\r\n            for (let i = 0; i < this.samples.length; i++, channelOffset += channelCount) {\r\n                audioData[i] = this.samples[channelOffset];\r\n            }\r\n        }\r\n\r\n        if (this.startTime < this.audioContext.currentTime) {\r\n            this.startTime = this.audioContext.currentTime;\r\n        }\r\n\r\n        bufferSource.buffer = audioBuffer;\r\n        bufferSource.connect(this.gainNode);\r\n        bufferSource.start(this.startTime);\r\n\r\n        // Make sure we play the next sample after the current one.\r\n        this.startTime += audioBuffer.duration;\r\n\r\n        // Clear the samples for the next pushed data.\r\n        this.samples = new Float32Array();\r\n    }\r\n\r\n    private async playAudio(audioData: ArrayBuffer): Promise<void> {\r\n        if (this.audioContext === null) {\r\n            this.createAudioContext();\r\n        }\r\n        const source: AudioBufferSourceNode = this.audioContext.createBufferSource();\r\n        const destination: AudioDestinationNode = this.audioContext.destination;\r\n        await this.audioContext.decodeAudioData(audioData, (newBuffer: AudioBuffer): void => {\r\n            source.buffer = newBuffer;\r\n            source.connect(destination);\r\n            source.start(0);\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ConnectionMessage,\r\n    Deferred,\r\n    IWebsocketMessageFormatter,\r\n    MessageType,\r\n    RawWebsocketMessage,\r\n} from \"../../common/Exports.js\";\r\nimport { ConversationConnectionMessage } from \"./ConversationConnectionMessage.js\";\r\n\r\n/**\r\n * Based off WebsocketMessageFormatter. The messages for Conversation Translator have some variations from the Speech messages.\r\n */\r\nexport class ConversationWebsocketMessageFormatter implements IWebsocketMessageFormatter {\r\n\r\n    /**\r\n     * Format incoming messages: text (speech partial/final, IM) or binary (tts)\r\n     */\r\n    public toConnectionMessage(message: RawWebsocketMessage): Promise<ConversationConnectionMessage> {\r\n        const deferral = new Deferred<ConversationConnectionMessage>();\r\n\r\n        try {\r\n            if (message.messageType === MessageType.Text) {\r\n                const incomingMessage: ConversationConnectionMessage = new ConversationConnectionMessage(message.messageType, message.textContent, {}, message.id);\r\n                deferral.resolve(incomingMessage);\r\n            } else if (message.messageType === MessageType.Binary) {\r\n                deferral.resolve(new ConversationConnectionMessage(message.messageType, message.binaryContent, undefined, message.id));\r\n            }\r\n        } catch (e) {\r\n            deferral.reject(`Error formatting the message. Error: ${e as string}`);\r\n        }\r\n\r\n        return deferral.promise;\r\n    }\r\n\r\n    /**\r\n     * Format outgoing messages: text (commands or IM)\r\n     */\r\n    public fromConnectionMessage(message: ConnectionMessage): Promise<RawWebsocketMessage> {\r\n\r\n        const deferral = new Deferred<RawWebsocketMessage>();\r\n\r\n        try {\r\n            if (message.messageType === MessageType.Text) {\r\n                const payload = `${message.textBody ? message.textBody : \"\"}`;\r\n                deferral.resolve(new RawWebsocketMessage(MessageType.Text, payload, message.id));\r\n            }\r\n        } catch (e) {\r\n            deferral.reject(`Error formatting the message. ${e as string}`);\r\n        }\r\n\r\n        return deferral.promise;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports.js\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary\r\n} from \"../common/Exports.js\";\r\nimport {\r\n    PropertyId\r\n} from \"../sdk/Exports.js\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./ConnectionFactoryBase.js\";\r\nimport {\r\n    AuthInfo,\r\n    RecognizerConfig,\r\n    WebsocketMessageFormatter,\r\n} from \"./Exports.js\";\r\nimport { HeaderNames } from \"./HeaderNames.js\";\r\n\r\nexport class IntentConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    public create(\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint);\r\n        if (!endpoint) {\r\n            const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_IntentRegion);\r\n            const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n            const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".sr.speech\" + hostSuffix);\r\n            endpoint = host + \"/speech/recognition/interactive/cognitiveservices/v1\";\r\n        }\r\n\r\n        const queryParams: IStringDictionary<string> = {\r\n            format: \"simple\",\r\n            language: config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage),\r\n        };\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpoint);\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n\r\n    private getSpeechRegionFromIntentRegion(intentRegion: string): string {\r\n        switch (intentRegion) {\r\n            case \"West US\":\r\n            case \"US West\":\r\n            case \"westus\":\r\n                return \"uswest\";\r\n            case \"West US 2\":\r\n            case \"US West 2\":\r\n            case \"westus2\":\r\n                return \"uswest2\";\r\n            case \"South Central US\":\r\n            case \"US South Central\":\r\n            case \"southcentralus\":\r\n                return \"ussouthcentral\";\r\n            case \"West Central US\":\r\n            case \"US West Central\":\r\n            case \"westcentralus\":\r\n                return \"uswestcentral\";\r\n            case \"East US\":\r\n            case \"US East\":\r\n            case \"eastus\":\r\n                return \"useast\";\r\n            case \"East US 2\":\r\n            case \"US East 2\":\r\n            case \"eastus2\":\r\n                return \"useast2\";\r\n            case \"West Europe\":\r\n            case \"Europe West\":\r\n            case \"westeurope\":\r\n                return \"europewest\";\r\n            case \"North Europe\":\r\n            case \"Europe North\":\r\n            case \"northeurope\":\r\n                return \"europenorth\";\r\n            case \"Brazil South\":\r\n            case \"South Brazil\":\r\n            case \"southbrazil\":\r\n                return \"brazilsouth\";\r\n            case \"Australia East\":\r\n            case \"East Australia\":\r\n            case \"eastaustralia\":\r\n                return \"australiaeast\";\r\n            case \"Southeast Asia\":\r\n            case \"Asia Southeast\":\r\n            case \"southeastasia\":\r\n                return \"asiasoutheast\";\r\n            case \"East Asia\":\r\n            case \"Asia East\":\r\n            case \"eastasia\":\r\n                return \"asiaeast\";\r\n            default:\r\n                return intentRegion;\r\n        }\r\n    }\r\n}\r\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport {\r\n    ServiceRecognizerBase,\r\n    SynthesisAdapterBase,\r\n} from \"../common.speech/Exports.js\";\r\nimport {\r\n    ConnectionEvent,\r\n    ConnectionMessageReceivedEvent,\r\n    ConnectionMessageSentEvent,\r\n    IDetachable,\r\n    marshalPromiseToCallbacks,\r\n    ServiceEvent,\r\n} from \"../common/Exports.js\";\r\nimport {\r\n    ConnectionMessageImpl\r\n} from \"./ConnectionMessage.js\";\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport {\r\n    ConnectionEventArgs,\r\n    ConnectionMessageEventArgs,\r\n    ConversationTranscriber,\r\n    Recognizer,\r\n    ServiceEventArgs,\r\n    SpeechSynthesizer,\r\n} from \"./Exports.js\";\r\n\r\n/**\r\n * Connection is a proxy class for managing connection to the speech service of the specified Recognizer.\r\n * By default, a Recognizer autonomously manages connection to service when needed.\r\n * The Connection class provides additional methods for users to explicitly open or close a connection and\r\n * to subscribe to connection status changes.\r\n * The use of Connection is optional, and mainly for scenarios where fine tuning of application\r\n * behavior based on connection status is needed. Users can optionally call Open() to manually set up a connection\r\n * in advance before starting recognition on the Recognizer associated with this Connection.\r\n * If the Recognizer needs to connect or disconnect to service, it will\r\n * setup or shutdown the connection independently. In this case the Connection will be notified by change of connection\r\n * status via Connected/Disconnected events.\r\n * Added in version 1.2.1.\r\n */\r\nexport class Connection {\r\n    private privInternalData: ServiceRecognizerBase | SynthesisAdapterBase;\r\n    private privEventListener: IDetachable;\r\n    private privServiceEventListener: IDetachable;\r\n\r\n    /**\r\n     * Gets the Connection instance from the specified recognizer.\r\n     * @param recognizer The recognizer associated with the connection.\r\n     * @return The Connection instance of the recognizer.\r\n     */\r\n    public static fromRecognizer(recognizer: Recognizer | ConversationTranscriber): Connection {\r\n        const recoBase = recognizer.internalData as ServiceRecognizerBase;\r\n        const ret: Connection = new Connection();\r\n\r\n        ret.privInternalData = recoBase;\r\n        ret.setupEvents();\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Gets the Connection instance from the specified synthesizer.\r\n     * @param synthesizer The synthesizer associated with the connection.\r\n     * @return The Connection instance of the synthesizer.\r\n     */\r\n    public static fromSynthesizer(synthesizer: SpeechSynthesizer): Connection {\r\n        const synthBase: SynthesisAdapterBase = synthesizer.internalData as SynthesisAdapterBase;\r\n\r\n        const ret: Connection = new Connection();\r\n\r\n        ret.privInternalData = synthBase;\r\n        ret.setupEvents();\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * Starts to set up connection to the service.\r\n     * Users can optionally call openConnection() to manually set up a connection in advance before starting recognition on the\r\n     * Recognizer associated with this Connection. After starting recognition, calling Open() will have no effect\r\n     *\r\n     * Note: On return, the connection might not be ready yet. Please subscribe to the Connected event to\r\n     * be notified when the connection is established.\r\n     */\r\n    public openConnection(cb?: () => void, err?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks(this.privInternalData.connect(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Closes the connection the service.\r\n     * Users can optionally call closeConnection() to manually shutdown the connection of the associated Recognizer.\r\n     *\r\n     * If closeConnection() is called during recognition, recognition will fail and cancel with an error.\r\n     */\r\n    public closeConnection(cb?: () => void, err?: (error: string) => void): void {\r\n        if (this.privInternalData instanceof SynthesisAdapterBase) {\r\n            throw new Error(\"Disconnecting a synthesizer's connection is currently not supported\");\r\n        } else {\r\n            marshalPromiseToCallbacks(this.privInternalData.disconnect(), cb, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Appends a parameter in a message to service.\r\n     * Added in version 1.12.1.\r\n     * @param path The path of the network message.\r\n     * @param propertyName Name of the property\r\n     * @param propertyValue Value of the property. This is a json string.\r\n     */\r\n    public setMessageProperty(path: string, propertyName: string, propertyValue: string | object): void {\r\n        Contracts.throwIfNullOrWhitespace(propertyName, \"propertyName\");\r\n\r\n        if (this.privInternalData instanceof ServiceRecognizerBase) {\r\n            if (path.toLowerCase() !== \"speech.context\") {\r\n                throw new Error(\"Only speech.context message property sets are currently supported for recognizer\");\r\n            } else {\r\n                this.privInternalData.speechContext.setSection(propertyName, propertyValue);\r\n            }\r\n        } else if (this.privInternalData instanceof SynthesisAdapterBase) {\r\n            if (path.toLowerCase() !== \"synthesis.context\") {\r\n                throw new Error(\"Only synthesis.context message property sets are currently supported for synthesizer\");\r\n            } else {\r\n                this.privInternalData.synthesisContext.setSection(propertyName, propertyValue);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends a message to the speech service.\r\n     * Added in version 1.13.0.\r\n     * @param path The WebSocket path of the message\r\n     * @param payload The payload of the message. This is a json string or a ArrayBuffer.\r\n     * @param success A callback to indicate success.\r\n     * @param error A callback to indicate an error.\r\n     */\r\n    public sendMessageAsync(path: string, payload: string | ArrayBuffer, success?: () => void, error?: (error: string) => void): void {\r\n        marshalPromiseToCallbacks(this.privInternalData.sendNetworkMessage(path, payload), success, error);\r\n    }\r\n\r\n    /**\r\n     * Any message from service that is not being processed by any other top level recognizers.\r\n     *\r\n     * Will be removed in 2.0.\r\n     */\r\n    public receivedServiceMessage: (args: ServiceEventArgs) => void;\r\n\r\n    /**\r\n     * Any message received from the Speech Service.\r\n     */\r\n    public messageReceived: (args: ConnectionMessageEventArgs) => void;\r\n\r\n    /**\r\n     * Any message sent to the Speech Service.\r\n     */\r\n    public messageSent: (args: ConnectionMessageEventArgs) => void;\r\n\r\n    /**\r\n     * The Connected event to indicate that the recognizer is connected to service.\r\n     */\r\n    public connected: (args: ConnectionEventArgs) => void;\r\n\r\n    /**\r\n     * The Disconnected event to indicate that the recognizer is disconnected from service.\r\n     */\r\n    public disconnected: (args: ConnectionEventArgs) => void;\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     */\r\n    public close(): void {\r\n        /* eslint-disable no-empty */\r\n    }\r\n\r\n    private setupEvents(): void {\r\n        this.privEventListener = this.privInternalData.connectionEvents.attach((connectionEvent: ConnectionEvent): void => {\r\n            if (connectionEvent.name === \"ConnectionEstablishedEvent\") {\r\n                if (!!this.connected) {\r\n                    this.connected(new ConnectionEventArgs(connectionEvent.connectionId));\r\n                }\r\n            } else if (connectionEvent.name === \"ConnectionClosedEvent\") {\r\n                if (!!this.disconnected) {\r\n                    this.disconnected(new ConnectionEventArgs(connectionEvent.connectionId));\r\n                }\r\n            } else if (connectionEvent.name === \"ConnectionMessageSentEvent\") {\r\n                if (!!this.messageSent) {\r\n                    this.messageSent(new ConnectionMessageEventArgs(new ConnectionMessageImpl((connectionEvent as ConnectionMessageSentEvent).message)));\r\n                }\r\n            } else if (connectionEvent.name === \"ConnectionMessageReceivedEvent\") {\r\n                if (!!this.messageReceived) {\r\n                    this.messageReceived(new ConnectionMessageEventArgs(new ConnectionMessageImpl((connectionEvent as ConnectionMessageReceivedEvent).message)));\r\n                }\r\n            }\r\n        });\r\n\r\n        this.privServiceEventListener = this.privInternalData.serviceEvents.attach((e: ServiceEvent): void => {\r\n            if (!!this.receivedServiceMessage) {\r\n                this.receivedServiceMessage(new ServiceEventArgs(e.jsonString, e.name));\r\n            }\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport {\r\n    AudioSourceErrorEvent,\r\n    AudioStreamNodeAttachedEvent,\r\n    AudioStreamNodeAttachingEvent,\r\n    AudioStreamNodeDetachedEvent,\r\n    AudioStreamNodeErrorEvent,\r\n    ConnectionEstablishedEvent,\r\n    ConnectionEstablishErrorEvent,\r\n    ConnectionMessageReceivedEvent,\r\n    ConnectionStartEvent,\r\n    IEventListener,\r\n    IStringDictionary,\r\n    PlatformEvent,\r\n} from \"../common/Exports.js\";\r\nimport { ConnectingToServiceEvent, RecognitionTriggeredEvent } from \"./RecognitionEvents.js\";\r\n\r\nexport interface ITelemetry {\r\n    Metrics: IMetric[];\r\n    ReceivedMessages: IStringDictionary<string[]>;\r\n}\r\n\r\nexport interface IMetric {\r\n    End?: string;\r\n    Error?: string;\r\n    Id?: string;\r\n    Name?: string;\r\n    Start?: string;\r\n    PhraseLatencyMs?: number[];\r\n    FirstHypothesisLatencyMs?: number[];\r\n}\r\n\r\nexport class ServiceTelemetryListener implements IEventListener<PlatformEvent> {\r\n    private privIsDisposed: boolean = false;\r\n\r\n    private privRequestId: string;\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n\r\n    private privListeningTriggerMetric: IMetric = null;\r\n    private privMicMetric: IMetric = null;\r\n    private privConnectionEstablishMetric: IMetric = null;\r\n\r\n    private privMicStartTime: string;\r\n\r\n    private privConnectionId: string;\r\n    private privConnectionStartTime: string;\r\n\r\n    private privReceivedMessages: IStringDictionary<string[]>;\r\n    private privPhraseLatencies: number[];\r\n    private privHypothesisLatencies: number[];\r\n\r\n    public constructor(requestId: string, audioSourceId: string, audioNodeId: string) {\r\n        this.privRequestId = requestId;\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n\r\n        this.privReceivedMessages = {};\r\n        this.privPhraseLatencies = [];\r\n        this.privHypothesisLatencies = [];\r\n    }\r\n\r\n    public phraseReceived(audioReceivedTime: number): void {\r\n        if (audioReceivedTime > 0) { // 0 indicates the time is unknown. Drop it.\r\n            this.privPhraseLatencies.push(Date.now() - audioReceivedTime);\r\n        }\r\n    }\r\n\r\n    public hypothesisReceived(audioReceivedTime: number): void {\r\n        if (audioReceivedTime > 0) { // 0 indicates the time is unknown. Drop it.\r\n            this.privHypothesisLatencies.push(Date.now() - audioReceivedTime);\r\n        }\r\n    }\r\n\r\n    public onEvent(e: PlatformEvent): void {\r\n        if (this.privIsDisposed) {\r\n            return;\r\n        }\r\n\r\n        if (e instanceof RecognitionTriggeredEvent && e.requestId === this.privRequestId) {\r\n            this.privListeningTriggerMetric = {\r\n                End: e.eventTime,\r\n                Name: \"ListeningTrigger\",\r\n                Start: e.eventTime,\r\n            };\r\n        }\r\n\r\n        if (e instanceof AudioStreamNodeAttachingEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\r\n            this.privMicStartTime = e.eventTime;\r\n        }\r\n\r\n        if (e instanceof AudioStreamNodeAttachedEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\r\n            this.privMicStartTime = e.eventTime;\r\n        }\r\n\r\n        if (e instanceof AudioSourceErrorEvent && e.audioSourceId === this.privAudioSourceId) {\r\n            if (!this.privMicMetric) {\r\n                this.privMicMetric = {\r\n                    End: e.eventTime,\r\n                    Error: e.error,\r\n                    Name: \"Microphone\",\r\n                    Start: this.privMicStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof AudioStreamNodeErrorEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\r\n            if (!this.privMicMetric) {\r\n                this.privMicMetric = {\r\n                    End: e.eventTime,\r\n                    Error: e.error,\r\n                    Name: \"Microphone\",\r\n                    Start: this.privMicStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof AudioStreamNodeDetachedEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId) {\r\n            if (!this.privMicMetric) {\r\n                this.privMicMetric = {\r\n                    End: e.eventTime,\r\n                    Name: \"Microphone\",\r\n                    Start: this.privMicStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof ConnectingToServiceEvent && e.requestId === this.privRequestId) {\r\n            this.privConnectionId = e.sessionId;\r\n        }\r\n\r\n        if (e instanceof ConnectionStartEvent && e.connectionId === this.privConnectionId) {\r\n            this.privConnectionStartTime = e.eventTime;\r\n        }\r\n\r\n        if (e instanceof ConnectionEstablishedEvent && e.connectionId === this.privConnectionId) {\r\n            if (!this.privConnectionEstablishMetric) {\r\n                this.privConnectionEstablishMetric = {\r\n                    End: e.eventTime,\r\n                    Id: this.privConnectionId,\r\n                    Name: \"Connection\",\r\n                    Start: this.privConnectionStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof ConnectionEstablishErrorEvent && e.connectionId === this.privConnectionId) {\r\n            if (!this.privConnectionEstablishMetric) {\r\n                this.privConnectionEstablishMetric = {\r\n                    End: e.eventTime,\r\n                    Error: this.getConnectionError(e.statusCode),\r\n                    Id: this.privConnectionId,\r\n                    Name: \"Connection\",\r\n                    Start: this.privConnectionStartTime,\r\n                };\r\n            }\r\n        }\r\n\r\n        if (e instanceof ConnectionMessageReceivedEvent && e.connectionId === this.privConnectionId) {\r\n            if (e.message && e.message.headers && e.message.headers.path) {\r\n                if (!this.privReceivedMessages[e.message.headers.path]) {\r\n                    this.privReceivedMessages[e.message.headers.path] = new Array<string>();\r\n                }\r\n                const maxMessagesToSend = 50;\r\n                if (this.privReceivedMessages[e.message.headers.path].length < maxMessagesToSend) {\r\n                    this.privReceivedMessages[e.message.headers.path].push(e.networkReceivedTime);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public getTelemetry(): string {\r\n        const metrics = new Array<IMetric>();\r\n\r\n        if (this.privListeningTriggerMetric) {\r\n            metrics.push(this.privListeningTriggerMetric);\r\n        }\r\n\r\n        if (this.privMicMetric) {\r\n            metrics.push(this.privMicMetric);\r\n        }\r\n\r\n        if (this.privConnectionEstablishMetric) {\r\n            metrics.push(this.privConnectionEstablishMetric);\r\n        }\r\n\r\n        if (this.privPhraseLatencies.length > 0) {\r\n            metrics.push({\r\n                PhraseLatencyMs: this.privPhraseLatencies,\r\n            });\r\n        }\r\n\r\n        if (this.privHypothesisLatencies.length > 0) {\r\n            metrics.push({\r\n                FirstHypothesisLatencyMs: this.privHypothesisLatencies,\r\n            });\r\n        }\r\n\r\n        const telemetry: ITelemetry = {\r\n            Metrics: metrics,\r\n            ReceivedMessages: this.privReceivedMessages,\r\n        };\r\n\r\n        const json = JSON.stringify(telemetry);\r\n\r\n        // We dont want to send the same telemetry again. So clean those out.\r\n        this.privReceivedMessages = {};\r\n        this.privListeningTriggerMetric = null;\r\n        this.privMicMetric = null;\r\n        this.privConnectionEstablishMetric = null;\r\n        this.privPhraseLatencies = [];\r\n        this.privHypothesisLatencies = [];\r\n        return json;\r\n    }\r\n\r\n    // Determines if there are any telemetry events to send to the service.\r\n    public get hasTelemetry(): boolean {\r\n        return (Object.keys(this.privReceivedMessages).length !== 0 ||\r\n            this.privListeningTriggerMetric !== null ||\r\n            this.privMicMetric !== null ||\r\n            this.privConnectionEstablishMetric !== null ||\r\n            this.privPhraseLatencies.length !== 0 ||\r\n            this.privHypothesisLatencies.length !== 0);\r\n    }\r\n\r\n    public dispose(): void {\r\n        this.privIsDisposed = true;\r\n    }\r\n\r\n    private getConnectionError(statusCode: number): string {\r\n        /*\r\n        -- Websocket status codes --\r\n        NormalClosure = 1000,\r\n        EndpointUnavailable = 1001,\r\n        ProtocolError = 1002,\r\n        InvalidMessageType = 1003,\r\n        Empty = 1005,\r\n        InvalidPayloadData = 1007,\r\n        PolicyViolation = 1008,\r\n        MessageTooBig = 1009,\r\n        MandatoryExtension = 1010,\r\n        InternalServerError = 1011\r\n        */\r\n\r\n        switch (statusCode) {\r\n            case 400:\r\n            case 1002:\r\n            case 1003:\r\n            case 1005:\r\n            case 1007:\r\n            case 1008:\r\n            case 1009: return \"BadRequest\";\r\n            case 401: return \"Unauthorized\";\r\n            case 403: return \"Forbidden\";\r\n            case 503:\r\n            case 1001: return \"ServerUnavailable\";\r\n            case 500:\r\n            case 1011: return \"ServerError\";\r\n            case 408:\r\n            case 504: return \"Timeout\";\r\n            default: return \"statuscode:\" + statusCode.toString();\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport class ConnectionOpenResponse {\r\n    private privStatusCode: number;\r\n    private privReason: string;\r\n\r\n    public constructor(statusCode: number, reason: string) {\r\n        this.privStatusCode = statusCode;\r\n        this.privReason = reason;\r\n    }\r\n\r\n    public get statusCode(): number {\r\n        return this.privStatusCode;\r\n    }\r\n\r\n    public get reason(): string {\r\n        return this.privReason;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// Node.JS specific web socket / browser support.\r\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\nimport * as http from \"http\";\r\nimport * as net from \"net\";\r\nimport * as tls from \"tls\";\r\nimport Agent from \"agent-base\";\r\nimport HttpsProxyAgent from \"https-proxy-agent\";\r\n\r\nimport ws from \"ws\";\r\nimport { HeaderNames } from \"../common.speech/HeaderNames.js\";\r\nimport {\r\n    ArgumentNullError,\r\n    BackgroundEvent,\r\n    ConnectionClosedEvent,\r\n    ConnectionErrorEvent,\r\n    ConnectionEstablishedEvent,\r\n    ConnectionEvent,\r\n    ConnectionMessage,\r\n    ConnectionMessageReceivedEvent,\r\n    ConnectionMessageSentEvent,\r\n    ConnectionOpenResponse,\r\n    ConnectionStartEvent,\r\n    ConnectionState,\r\n    Deferred,\r\n    Events,\r\n    EventSource,\r\n    IWebsocketMessageFormatter,\r\n    MessageType,\r\n    Queue,\r\n    RawWebsocketMessage,\r\n} from \"../common/Exports.js\";\r\nimport { ProxyInfo } from \"./ProxyInfo.js\";\r\n\r\ninterface ISendItem {\r\n    Message: ConnectionMessage;\r\n    RawWebsocketMessage: RawWebsocketMessage;\r\n    sendStatusDeferral: Deferred<void>;\r\n}\r\n\r\nexport class WebsocketMessageAdapter {\r\n    private privConnectionState: ConnectionState;\r\n    private privMessageFormatter: IWebsocketMessageFormatter;\r\n    private privWebsocketClient: WebSocket | ws;\r\n\r\n    private privSendMessageQueue: Queue<ISendItem>;\r\n    private privReceivingMessageQueue: Queue<ConnectionMessage>;\r\n    private privConnectionEstablishDeferral: Deferred<ConnectionOpenResponse>;\r\n    private privCertificateValidatedDeferral: Deferred<void>;\r\n    private privDisconnectDeferral: Deferred<void>;\r\n    private privConnectionEvents: EventSource<ConnectionEvent>;\r\n    private privConnectionId: string;\r\n    private privUri: string;\r\n    private proxyInfo: ProxyInfo;\r\n    private privHeaders: { [key: string]: string };\r\n    private privLastErrorReceived: string;\r\n    private privEnableCompression: boolean;\r\n\r\n    public static forceNpmWebSocket: boolean = false;\r\n\r\n    public constructor(\r\n        uri: string,\r\n        connectionId: string,\r\n        messageFormatter: IWebsocketMessageFormatter,\r\n        proxyInfo: ProxyInfo,\r\n        headers: { [key: string]: string },\r\n        enableCompression: boolean) {\r\n\r\n        if (!uri) {\r\n            throw new ArgumentNullError(\"uri\");\r\n        }\r\n\r\n        if (!messageFormatter) {\r\n            throw new ArgumentNullError(\"messageFormatter\");\r\n        }\r\n\r\n        this.proxyInfo = proxyInfo;\r\n        this.privConnectionEvents = new EventSource<ConnectionEvent>();\r\n        this.privConnectionId = connectionId;\r\n        this.privMessageFormatter = messageFormatter;\r\n        this.privConnectionState = ConnectionState.None;\r\n        this.privUri = uri;\r\n        this.privHeaders = headers;\r\n        this.privEnableCompression = enableCompression;\r\n\r\n        // Add the connection ID to the headers\r\n        this.privHeaders[HeaderNames.ConnectionId] = this.privConnectionId;\r\n\r\n        this.privLastErrorReceived = \"\";\r\n    }\r\n\r\n    public get state(): ConnectionState {\r\n        return this.privConnectionState;\r\n    }\r\n\r\n    public open(): Promise<ConnectionOpenResponse> {\r\n        if (this.privConnectionState === ConnectionState.Disconnected) {\r\n            return Promise.reject<ConnectionOpenResponse>(`Cannot open a connection that is in ${this.privConnectionState} state`);\r\n        }\r\n\r\n        if (this.privConnectionEstablishDeferral) {\r\n            return this.privConnectionEstablishDeferral.promise;\r\n        }\r\n\r\n        this.privConnectionEstablishDeferral = new Deferred<ConnectionOpenResponse>();\r\n        this.privCertificateValidatedDeferral = new Deferred<void>();\r\n\r\n        this.privConnectionState = ConnectionState.Connecting;\r\n\r\n        try {\r\n\r\n            if (typeof WebSocket !== \"undefined\" && !WebsocketMessageAdapter.forceNpmWebSocket) {\r\n                // Browser handles cert checks.\r\n                this.privCertificateValidatedDeferral.resolve();\r\n\r\n                this.privWebsocketClient = new WebSocket(this.privUri);\r\n            } else {\r\n                const options: ws.ClientOptions = { headers: this.privHeaders, perMessageDeflate: this.privEnableCompression };\r\n                // The ocsp library will handle validation for us and fail the connection if needed.\r\n                this.privCertificateValidatedDeferral.resolve();\r\n\r\n                options.agent = this.getAgent();\r\n                // Workaround for https://github.com/microsoft/cognitive-services-speech-sdk-js/issues/465\r\n                // Which is root caused by https://github.com/TooTallNate/node-agent-base/issues/61\r\n                const uri = new URL(this.privUri);\r\n                let protocol: string = uri.protocol;\r\n\r\n                if (protocol?.toLocaleLowerCase() === \"wss:\") {\r\n                    protocol = \"https:\";\r\n                } else if (protocol?.toLocaleLowerCase() === \"ws:\") {\r\n                    protocol = \"http:\";\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n                (options.agent as any).protocol = protocol;\r\n                this.privWebsocketClient = new ws(this.privUri, options);\r\n            }\r\n\r\n            this.privWebsocketClient.binaryType = \"arraybuffer\";\r\n            this.privReceivingMessageQueue = new Queue<ConnectionMessage>();\r\n            this.privDisconnectDeferral = new Deferred<void>();\r\n            this.privSendMessageQueue = new Queue<ISendItem>();\r\n            this.processSendQueue().catch((reason: string): void => {\r\n                Events.instance.onEvent(new BackgroundEvent(reason));\r\n            });\r\n        } catch (error) {\r\n            this.privConnectionEstablishDeferral.resolve(new ConnectionOpenResponse(500, error as string));\r\n            return this.privConnectionEstablishDeferral.promise;\r\n        }\r\n\r\n        this.onEvent(new ConnectionStartEvent(this.privConnectionId, this.privUri));\r\n\r\n        this.privWebsocketClient.onopen = (): void => {\r\n            this.privCertificateValidatedDeferral.promise.then((): void => {\r\n                this.privConnectionState = ConnectionState.Connected;\r\n                this.onEvent(new ConnectionEstablishedEvent(this.privConnectionId));\r\n                this.privConnectionEstablishDeferral.resolve(new ConnectionOpenResponse(200, \"\"));\r\n            }, (error: string): void => {\r\n                this.privConnectionEstablishDeferral.reject(error);\r\n            });\r\n        };\r\n\r\n        this.privWebsocketClient.onerror = (e: { error: any; message: string; type: string; target: WebSocket | ws }): void => {\r\n            this.onEvent(new ConnectionErrorEvent(this.privConnectionId, e.message, e.type));\r\n            this.privLastErrorReceived = e.message;\r\n        };\r\n\r\n        this.privWebsocketClient.onclose = (e: { wasClean: boolean; code: number; reason: string; target: WebSocket | ws }): void => {\r\n            if (this.privConnectionState === ConnectionState.Connecting) {\r\n                this.privConnectionState = ConnectionState.Disconnected;\r\n                // this.onEvent(new ConnectionEstablishErrorEvent(this.connectionId, e.code, e.reason));\r\n                this.privConnectionEstablishDeferral.resolve(new ConnectionOpenResponse(e.code, e.reason + \" \" + this.privLastErrorReceived));\r\n            } else {\r\n                this.privConnectionState = ConnectionState.Disconnected;\r\n                this.privWebsocketClient = null;\r\n                this.onEvent(new ConnectionClosedEvent(this.privConnectionId, e.code, e.reason));\r\n            }\r\n\r\n            this.onClose(e.code, e.reason).catch((reason: string): void => {\r\n                Events.instance.onEvent(new BackgroundEvent(reason));\r\n            });\r\n        };\r\n\r\n        this.privWebsocketClient.onmessage = (e: { data: ws.Data; type: string; target: WebSocket | ws }): void => {\r\n            const networkReceivedTime = new Date().toISOString();\r\n            if (this.privConnectionState === ConnectionState.Connected) {\r\n                const deferred = new Deferred<ConnectionMessage>();\r\n                // let id = ++this.idCounter;\r\n                this.privReceivingMessageQueue.enqueueFromPromise(deferred.promise);\r\n                if (e.data instanceof ArrayBuffer) {\r\n                    const rawMessage = new RawWebsocketMessage(MessageType.Binary, e.data);\r\n                    this.privMessageFormatter\r\n                        .toConnectionMessage(rawMessage)\r\n                        .then((connectionMessage: ConnectionMessage): void => {\r\n                            this.onEvent(new ConnectionMessageReceivedEvent(this.privConnectionId, networkReceivedTime, connectionMessage));\r\n                            deferred.resolve(connectionMessage);\r\n                        }, (error: string): void => {\r\n                            // TODO: Events for these ?\r\n                            deferred.reject(`Invalid binary message format. Error: ${error}`);\r\n                        });\r\n                } else {\r\n                    const rawMessage = new RawWebsocketMessage(MessageType.Text, e.data);\r\n                    this.privMessageFormatter\r\n                        .toConnectionMessage(rawMessage)\r\n                        .then((connectionMessage: ConnectionMessage): void => {\r\n                            this.onEvent(new ConnectionMessageReceivedEvent(this.privConnectionId, networkReceivedTime, connectionMessage));\r\n                            deferred.resolve(connectionMessage);\r\n                        }, (error: string): void => {\r\n                            // TODO: Events for these ?\r\n                            deferred.reject(`Invalid text message format. Error: ${error}`);\r\n                        });\r\n                }\r\n            }\r\n        };\r\n\r\n        return this.privConnectionEstablishDeferral.promise;\r\n    }\r\n\r\n    public send(message: ConnectionMessage): Promise<void> {\r\n        if (this.privConnectionState !== ConnectionState.Connected) {\r\n            return Promise.reject(`Cannot send on connection that is in ${ConnectionState[this.privConnectionState]} state`);\r\n        }\r\n\r\n        const messageSendStatusDeferral = new Deferred<void>();\r\n        const messageSendDeferral = new Deferred<ISendItem>();\r\n\r\n        this.privSendMessageQueue.enqueueFromPromise(messageSendDeferral.promise);\r\n\r\n        this.privMessageFormatter\r\n            .fromConnectionMessage(message)\r\n            .then((rawMessage: RawWebsocketMessage): void => {\r\n                messageSendDeferral.resolve({\r\n                    Message: message,\r\n                    RawWebsocketMessage: rawMessage,\r\n                    sendStatusDeferral: messageSendStatusDeferral,\r\n                });\r\n            }, (error: string): void => {\r\n                messageSendDeferral.reject(`Error formatting the message. ${error}`);\r\n            });\r\n\r\n        return messageSendStatusDeferral.promise;\r\n    }\r\n\r\n    public read(): Promise<ConnectionMessage> {\r\n        if (this.privConnectionState !== ConnectionState.Connected) {\r\n            return Promise.reject<ConnectionMessage>(`Cannot read on connection that is in ${this.privConnectionState} state`);\r\n        }\r\n\r\n        return this.privReceivingMessageQueue.dequeue();\r\n    }\r\n\r\n    public close(reason?: string): Promise<void> {\r\n        if (this.privWebsocketClient) {\r\n            if (this.privConnectionState !== ConnectionState.Disconnected) {\r\n                this.privWebsocketClient.close(1000, reason ? reason : \"Normal closure by client\");\r\n            }\r\n        } else {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return this.privDisconnectDeferral.promise;\r\n    }\r\n\r\n    public get events(): EventSource<ConnectionEvent> {\r\n        return this.privConnectionEvents;\r\n    }\r\n\r\n    private sendRawMessage(sendItem: ISendItem): Promise<void> {\r\n        try {\r\n            // indicates we are draining the queue and it came with no message;\r\n            if (!sendItem) {\r\n                return Promise.resolve();\r\n            }\r\n\r\n            this.onEvent(new ConnectionMessageSentEvent(this.privConnectionId, new Date().toISOString(), sendItem.Message));\r\n\r\n            // add a check for the ws readystate in order to stop the red console error 'WebSocket is already in CLOSING or CLOSED state' appearing\r\n            if (this.isWebsocketOpen) {\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n                this.privWebsocketClient.send(sendItem.RawWebsocketMessage.payload);\r\n            } else {\r\n                return Promise.reject(\"websocket send error: Websocket not ready \" + this.privConnectionId + \" \" + sendItem.Message.id + \" \" + new Error().stack);\r\n            }\r\n            return Promise.resolve();\r\n\r\n        } catch (e) {\r\n            return Promise.reject(`websocket send error: ${e as string}`);\r\n        }\r\n    }\r\n\r\n    private async onClose(code: number, reason: string): Promise<void> {\r\n        const closeReason = `Connection closed. ${code}: ${reason}`;\r\n        this.privConnectionState = ConnectionState.Disconnected;\r\n        this.privDisconnectDeferral.resolve();\r\n        await this.privReceivingMessageQueue.drainAndDispose((): void => {\r\n            // TODO: Events for these ?\r\n            // Logger.instance.onEvent(new LoggingEvent(LogType.Warning, null, `Failed to process received message. Reason: ${closeReason}, Message: ${JSON.stringify(pendingReceiveItem)}`));\r\n        }, closeReason);\r\n\r\n        await this.privSendMessageQueue.drainAndDispose((pendingSendItem: ISendItem): void => {\r\n            pendingSendItem.sendStatusDeferral.reject(closeReason);\r\n        }, closeReason);\r\n    }\r\n\r\n    private async processSendQueue(): Promise<void> {\r\n        while (true) {\r\n            const itemToSend: Promise<ISendItem> = this.privSendMessageQueue.dequeue();\r\n            const sendItem: ISendItem = await itemToSend;\r\n            // indicates we are draining the queue and it came with no message;\r\n            if (!sendItem) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                await this.sendRawMessage(sendItem);\r\n                sendItem.sendStatusDeferral.resolve();\r\n            } catch (sendError) {\r\n                sendItem.sendStatusDeferral.reject(sendError as string);\r\n            }\r\n        }\r\n    }\r\n\r\n    private onEvent(event: ConnectionEvent): void {\r\n        this.privConnectionEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    private getAgent(): http.Agent {\r\n        // eslint-disable-next-line @typescript-eslint/unbound-method\r\n        const agent: { proxyInfo: ProxyInfo } = new Agent.Agent(this.createConnection) as unknown as { proxyInfo: ProxyInfo } ;\r\n\r\n        if (this.proxyInfo !== undefined &&\r\n            this.proxyInfo.HostName !== undefined &&\r\n            this.proxyInfo.Port > 0) {\r\n            agent.proxyInfo = this.proxyInfo;\r\n        }\r\n\r\n        return agent as unknown as http.Agent;\r\n    }\r\n\r\n    private static GetProxyAgent(proxyInfo: ProxyInfo): HttpsProxyAgent {\r\n        const httpProxyOptions: HttpsProxyAgent.HttpsProxyAgentOptions = {\r\n            host: proxyInfo.HostName,\r\n            port: proxyInfo.Port,\r\n        };\r\n\r\n        if (!!proxyInfo.UserName) {\r\n            httpProxyOptions.headers = {\r\n                \"Proxy-Authentication\": \"Basic \" + new Buffer(`${proxyInfo.UserName}:${(proxyInfo.Password === undefined) ? \"\" : proxyInfo.Password}`).toString(\"base64\"),\r\n            };\r\n        } else {\r\n            httpProxyOptions.headers = {};\r\n        }\r\n\r\n        httpProxyOptions.headers.requestOCSP = \"true\";\r\n\r\n        const httpProxyAgent: HttpsProxyAgent = new HttpsProxyAgent(httpProxyOptions);\r\n        return httpProxyAgent;\r\n    }\r\n\r\n    private createConnection(request: Agent.ClientRequest, options: Agent.RequestOptions): Promise<net.Socket> {\r\n        let socketPromise: Promise<net.Socket>;\r\n\r\n        options = {\r\n            ...options,\r\n            ...{\r\n                requestOCSP: true,\r\n                servername: options.host\r\n            }\r\n        };\r\n\r\n        if (!!this.proxyInfo) {\r\n            const httpProxyAgent: HttpsProxyAgent = WebsocketMessageAdapter.GetProxyAgent(this.proxyInfo);\r\n            const baseAgent: Agent.Agent = httpProxyAgent as unknown as Agent.Agent;\r\n\r\n            socketPromise = new Promise<net.Socket>((resolve: (value: net.Socket) => void, reject: (error: string | Error) => void): void => {\r\n                baseAgent.callback(request, options, (error: Error, socket: net.Socket): void => {\r\n                    if (!!error) {\r\n                        reject(error);\r\n                    } else {\r\n                        resolve(socket);\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            if (!!options.secureEndpoint) {\r\n                socketPromise = Promise.resolve(tls.connect(options));\r\n            } else {\r\n                socketPromise = Promise.resolve(net.connect(options));\r\n            }\r\n        }\r\n\r\n        return socketPromise;\r\n    }\r\n\r\n    private get isWebsocketOpen(): boolean {\r\n        return this.privWebsocketClient && this.privWebsocketClient.readyState === this.privWebsocketClient.OPEN;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport {\r\n    ConversationConnectionConfig,\r\n    ConversationManager,\r\n    ConversationReceivedTranslationEventArgs,\r\n    ConversationRecognizer,\r\n    ConversationTranslatorCommandTypes,\r\n    ConversationTranslatorMessageTypes,\r\n    IInternalConversation,\r\n    IInternalParticipant,\r\n    InternalParticipants,\r\n    MuteAllEventArgs,\r\n    ParticipantAttributeEventArgs,\r\n    ParticipantEventArgs,\r\n    ParticipantsListEventArgs,\r\n    TranscriberRecognizer\r\n} from \"../../common.speech/Exports.js\";\r\nimport {\r\n    IDisposable,\r\n    IErrorMessages,\r\n    marshalPromiseToCallbacks\r\n} from \"../../common/Exports.js\";\r\nimport { Contracts } from \"../Contracts.js\";\r\nimport {\r\n    ConnectionEventArgs,\r\n    ConversationExpirationEventArgs,\r\n    ConversationParticipantsChangedEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    ConversationTranslationEventArgs,\r\n    ConversationTranslator,\r\n    Participant,\r\n    ParticipantChangedReason,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    SpeechTranslationConfig,\r\n} from \"../Exports.js\";\r\nimport { SpeechTranslationConfigImpl } from \"../SpeechTranslationConfig.js\";\r\nimport { Callback, MeetingInfo, MeetingProperties, IMeeting } from \"./IMeeting.js\";\r\nimport { IParticipant, IUser, TranscriptionParticipant } from \"./IParticipant.js\";\r\n\r\nexport abstract class Meeting implements IMeeting {\r\n\r\n    protected constructor() {\r\n        return;\r\n    }\r\n\r\n    public abstract get authorizationToken(): string;\r\n\r\n    public abstract get config(): SpeechTranslationConfig;\r\n\r\n    public abstract get meetingId(): string;\r\n    public abstract get meetingInfo(): MeetingInfo;\r\n    public abstract get properties(): PropertyCollection;\r\n    public abstract get speechRecognitionLanguage(): string;\r\n    public abstract get participants(): Participant[];\r\n    public abstract set authorizationToken(value: string);\r\n    public abstract get isConnected(): boolean;\r\n\r\n    /**\r\n     * Create a meeting\r\n     * @param speechConfig\r\n     * @param meetingId\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public static createMeetingAsync(speechConfig: SpeechTranslationConfig, meetingId: string, arg3?: Callback, arg4?: Callback): Meeting {\r\n        Contracts.throwIfNullOrUndefined(speechConfig, ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"config\"));\r\n        Contracts.throwIfNullOrUndefined(speechConfig.region, ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Region\"));\r\n        Contracts.throwIfNull(meetingId, \"meetingId\");\r\n        if (meetingId.length === 0) {\r\n            throw new Error(\"meetingId cannot be empty\");\r\n        }\r\n        if (!speechConfig.subscriptionKey && !speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceAuthorization_Token])) {\r\n            Contracts.throwIfNullOrUndefined(speechConfig.subscriptionKey, ConversationConnectionConfig.restErrors.invalidArgs.replace(\"{arg}\", \"SpeechServiceConnection_Key\"));\r\n        }\r\n        const meetingImpl = new MeetingImpl(speechConfig, meetingId);\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        marshalPromiseToCallbacks((async (): Promise<void> => {})(), arg3, arg4);\r\n        return meetingImpl;\r\n    }\r\n\r\n    /** Start a meeting. */\r\n    public abstract startMeetingAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** Delete a meeting. After this no one will be able to join the meeting. */\r\n    public abstract deleteMeetingAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** End a meeting. */\r\n    public abstract endMeetingAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** Lock a meeting. This will prevent new participants from joining. */\r\n    public abstract lockMeetingAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** Add Participant to Meeting. */\r\n    public abstract addParticipantAsync(participant: IParticipant, cb?: Callback, err?: Callback): void;\r\n\r\n    /**\r\n     * Mute all other participants in the Meeting. After this no other participants will\r\n     * have their speech recognitions broadcast, nor be able to send text messages.\r\n     */\r\n    public abstract muteAllParticipantsAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /**\r\n     * Mute a participant.\r\n     * @param userId A user identifier\r\n     */\r\n    public abstract muteParticipantAsync(userId: string, cb?: Callback, err?: Callback): void;\r\n\r\n    /**\r\n     * Remove a participant from a meeting using the user id, Participant or User object\r\n     * @param userId A user identifier\r\n     */\r\n    public abstract removeParticipantAsync(userId: string | IParticipant | IUser, cb?: Callback, err?: Callback): void;\r\n\r\n    /** Unlocks a meeting. */\r\n    public abstract unlockMeetingAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /** Unmute all other participants in the meeting. */\r\n    public abstract unmuteAllParticipantsAsync(cb?: Callback, err?: Callback): void;\r\n\r\n    /**\r\n     * Unmute a participant.\r\n     * @param userId A user identifier\r\n     */\r\n    public abstract unmuteParticipantAsync(userId: string, cb?: Callback, err?: Callback): void;\r\n}\r\n\r\nexport class MeetingImpl extends Meeting implements IDisposable {\r\n\r\n    private privConfig: SpeechTranslationConfig;\r\n    private privProperties: PropertyCollection;\r\n    private privLanguage: string;\r\n    private privToken: string;\r\n    private privIsDisposed: boolean;\r\n    private privRoom: IInternalConversation;\r\n    private privManager: ConversationManager;\r\n    private privConversationRecognizer: ConversationRecognizer;\r\n    private privIsConnected: boolean;\r\n    private privParticipants: InternalParticipants;\r\n    private privIsReady: boolean;\r\n    private privConversationTranslator: ConversationTranslator;\r\n    private privTranscriberRecognizer: TranscriberRecognizer;\r\n    private privErrors: IErrorMessages = ConversationConnectionConfig.restErrors;\r\n    private privConversationId: string;\r\n    private readonly privTextMessageMaxLength: number;\r\n\r\n    /**\r\n     * Create a Meeting impl\r\n     * @param speechConfig\r\n     * @param {string} id - optional conversationId\r\n     */\r\n    public constructor(speechConfig: SpeechTranslationConfig, id: string) {\r\n        super();\r\n        this.privIsConnected = false;\r\n        this.privIsDisposed = false;\r\n        this.privConversationId = \"\";\r\n        this.privProperties = new PropertyCollection();\r\n        this.privManager = new ConversationManager();\r\n\r\n        // check the speech language\r\n        const language: string = speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n        if (!language) {\r\n            speechConfig.setProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage], ConversationConnectionConfig.defaultLanguageCode);\r\n        }\r\n        this.privLanguage = speechConfig.getProperty(PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n        this.privConversationId = id;\r\n\r\n        // save the speech config for future usage\r\n        this.privConfig = speechConfig;\r\n\r\n        // save the config properties\r\n        const configImpl = speechConfig as SpeechTranslationConfigImpl;\r\n        Contracts.throwIfNull(configImpl, \"speechConfig\");\r\n        this.privProperties = configImpl.properties.clone();\r\n        this.privIsConnected = false;\r\n        this.privParticipants = new InternalParticipants();\r\n        this.privIsReady = false;\r\n        this.privTextMessageMaxLength = 1000;\r\n    }\r\n\r\n    // get the internal data about a conversation\r\n    public get room(): IInternalConversation {\r\n        return this.privRoom;\r\n    }\r\n\r\n    // get the wrapper for connecting to the websockets\r\n    public get connection(): ConversationRecognizer {\r\n        return this.privConversationRecognizer; // this.privConnection;\r\n    }\r\n\r\n    // get the config\r\n    public get config(): SpeechTranslationConfig {\r\n        return this.privConfig;\r\n    }\r\n\r\n    // get the meeting Id\r\n    public get meetingId(): string {\r\n        return this.privRoom ? this.privRoom.roomId : this.privConversationId;\r\n    }\r\n\r\n    // get the properties\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    // get the speech language\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privLanguage;\r\n    }\r\n\r\n    public get isMutedByHost(): boolean {\r\n        return this.privParticipants.me?.isHost ? false : this.privParticipants.me?.isMuted;\r\n    }\r\n\r\n    public get isConnected(): boolean {\r\n        return this.privIsConnected && this.privIsReady;\r\n    }\r\n\r\n    public get participants(): Participant[] {\r\n        return this.toParticipants(true);\r\n    }\r\n\r\n    public get me(): Participant {\r\n        return this.toParticipant(this.privParticipants.me);\r\n    }\r\n\r\n    public get host(): Participant {\r\n        return this.toParticipant(this.privParticipants.host);\r\n    }\r\n\r\n    public get transcriberRecognizer(): TranscriberRecognizer {\r\n        return this.privTranscriberRecognizer;\r\n    }\r\n\r\n    public get meetingInfo(): MeetingInfo {\r\n        const convId: string = this.meetingId;\r\n        const p: TranscriptionParticipant[] = this.participants.map((part: Participant): TranscriptionParticipant => (\r\n            {\r\n                id: part.id,\r\n                preferredLanguage: part.preferredLanguage,\r\n                voice: part.voice\r\n            }\r\n        ));\r\n        const props: MeetingProperties = {};\r\n        for (const key of ConversationConnectionConfig.transcriptionEventKeys) {\r\n            const val: string = this.properties.getProperty(key, \"\");\r\n            if (val !== \"\") {\r\n                props[key] = val;\r\n            }\r\n        }\r\n        const info: MeetingInfo = { id: convId, participants: p, meetingProperties: props };\r\n        return info;\r\n    }\r\n\r\n    private get canSend(): boolean {\r\n        return this.privIsConnected && !this.privParticipants.me?.isMuted;\r\n    }\r\n\r\n    private get canSendAsHost(): boolean {\r\n        return this.privIsConnected && this.privParticipants.me?.isHost;\r\n    }\r\n\r\n    // get / set the speech auth token\r\n    // eslint-disable-next-line @typescript-eslint/member-ordering\r\n    public get authorizationToken(): string {\r\n        return this.privToken;\r\n    }\r\n\r\n    public set authorizationToken(value: string) {\r\n        Contracts.throwIfNullOrWhitespace(value, \"authorizationToken\");\r\n        this.privToken = value;\r\n    }\r\n\r\n    /**\r\n     * Create a new meeting as Host\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public createMeetingAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            if (!!this.privConversationRecognizer) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\r\n            }\r\n            this.privManager.createOrJoin(this.privProperties, undefined,\r\n                ((room: IInternalConversation): void => {\r\n                    if (!room) {\r\n                        this.handleError(new Error(this.privErrors.permissionDeniedConnect), err);\r\n                    }\r\n                    this.privRoom = room;\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                ((error: any): void => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Starts a new meeting as host.\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public startMeetingAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            // check if there is already a recognizer\r\n            if (!!this.privConversationRecognizer) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedStart), err);\r\n            }\r\n            // check if there is conversation data available\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedConnect);\r\n            // connect to the conversation websocket\r\n            this.privParticipants.meId = this.privRoom.participantId;\r\n\r\n            // Because ConversationTranslator manually sets up and manages the connection, Conversation\r\n            // has to forward serviceRecognizer connection events that usually get passed automatically\r\n            this.privConversationRecognizer.connected = this.onConnected;\r\n            this.privConversationRecognizer.disconnected = this.onDisconnected;\r\n            this.privConversationRecognizer.canceled = this.onCanceled;\r\n\r\n            this.privConversationRecognizer.participantUpdateCommandReceived = this.onParticipantUpdateCommandReceived;\r\n            this.privConversationRecognizer.lockRoomCommandReceived = this.onLockRoomCommandReceived;\r\n            this.privConversationRecognizer.muteAllCommandReceived = this.onMuteAllCommandReceived;\r\n            this.privConversationRecognizer.participantJoinCommandReceived = this.onParticipantJoinCommandReceived;\r\n            this.privConversationRecognizer.participantLeaveCommandReceived = this.onParticipantLeaveCommandReceived;\r\n            this.privConversationRecognizer.translationReceived = this.onTranslationReceived;\r\n            this.privConversationRecognizer.participantsListReceived = this.onParticipantsListReceived;\r\n            this.privConversationRecognizer.conversationExpiration = this.onConversationExpiration;\r\n\r\n            this.privConversationRecognizer.connect(this.privRoom.token,\r\n                ((): void => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                ((error: any): void => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Join a meeting as a participant.\r\n     * @param { IParticipant } participant - participant to add\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public addParticipantAsync(participant: IParticipant, cb?: Callback, err?: Callback): void {\r\n        Contracts.throwIfNullOrUndefined(participant, \"Participant\");\r\n        marshalPromiseToCallbacks(this.addParticipantImplAsync(participant), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Join a meeting as a participant.\r\n     * @param meeting\r\n     * @param nickname\r\n     * @param lang\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public joinMeetingAsync(meetingId: string, nickname: string, lang: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            // TODO\r\n            // if (!!this.privConversationRecognizer) {\r\n            //     throw new Error(this.privErrors.permissionDeniedStart);\r\n            // }\r\n            Contracts.throwIfNullOrWhitespace(meetingId, this.privErrors.invalidArgs.replace(\"{arg}\", \"conversationId\"));\r\n            Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\r\n            Contracts.throwIfNullOrWhitespace(lang, this.privErrors.invalidArgs.replace(\"{arg}\", \"language\"));\r\n            // join the conversation\r\n            this.privManager.createOrJoin(this.privProperties, meetingId,\r\n                ((room: IInternalConversation): void => {\r\n                    Contracts.throwIfNullOrUndefined(room, this.privErrors.permissionDeniedConnect);\r\n                    this.privRoom = room;\r\n                    this.privConfig.authorizationToken = room.cognitiveSpeechAuthToken;\r\n                    // join callback\r\n                    if (!!cb) {\r\n                        cb(room.cognitiveSpeechAuthToken);\r\n                    }\r\n                }),\r\n                ((error: any): void => {\r\n                    this.handleError(error, err);\r\n                }));\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Deletes a meeting\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public deleteMeetingAsync(cb?: Callback, err?: Callback): void {\r\n        marshalPromiseToCallbacks(this.deleteMeetingImplAsync(), cb, err);\r\n    }\r\n\r\n    public async deleteMeetingImplAsync(): Promise<void> {\r\n            Contracts.throwIfNullOrUndefined(this.privProperties, this.privErrors.permissionDeniedConnect);\r\n            Contracts.throwIfNullOrWhitespace(this.privRoom.token, this.privErrors.permissionDeniedConnect);\r\n            await this.privManager.leave(this.privProperties, this.privRoom.token);\r\n\r\n            this.dispose();\r\n    }\r\n\r\n    /**\r\n     * Issues a request to close the client websockets\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public endMeetingAsync(cb?: Callback, err?: Callback): void {\r\n        marshalPromiseToCallbacks(this.endMeetingImplAsync(), cb, err);\r\n    }\r\n\r\n    public endMeetingImplAsync(): Promise<void> {\r\n        return this.close(true);\r\n    }\r\n\r\n    /**\r\n     * Issues a request to lock the conversation\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public lockMeetingAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSendAsHost) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"lock\")), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getLockCommand(true),\r\n                    ((): void => {\r\n                        this.handleCallback(cb, err);\r\n                    }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to mute the meeting\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public muteAllParticipantsAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrUndefined(this.privConversationRecognizer, this.privErrors.permissionDeniedSend);\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            // check the user's permissions\r\n            if (!this.canSendAsHost) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"mute\")), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getMuteAllCommand(true),\r\n                    ((): void => {\r\n                        this.handleCallback(cb, err);\r\n                    }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to mute a participant in the meeting\r\n     * @param userId\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public muteParticipantAsync(userId: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            // check the connection is open (host + participant can perform the mute command)\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            // if not host, check the participant is not muting another participant\r\n            if (!this.me.isHost && this.me.id !== userId) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\r\n            }\r\n            // check the user exists\r\n            const exists: number = this.privParticipants.getParticipantIndex(userId);\r\n            if (exists === -1) {\r\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getMuteCommand(userId, true), ((): void => {\r\n                        this.handleCallback(cb, err);\r\n                    }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to remove a participant from the conversation\r\n     * @param userId\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public removeParticipantAsync(userId: string | IParticipant | IUser, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            if (!!this.privTranscriberRecognizer && userId.hasOwnProperty(\"id\")) {\r\n                // Assume this is a transcription participant\r\n                marshalPromiseToCallbacks(this.removeParticipantImplAsync(userId as IParticipant), cb, err);\r\n            } else {\r\n                Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n                Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n                if (!this.canSendAsHost) {\r\n                    this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"remove\")), err);\r\n                }\r\n                let participantId = \"\";\r\n                if (typeof userId === \"string\") {\r\n                    participantId = userId;\r\n                } else if (userId.hasOwnProperty(\"id\")) {\r\n                    const participant: IParticipant = userId as IParticipant;\r\n                    participantId = participant.id;\r\n                } else if (userId.hasOwnProperty(\"userId\")) {\r\n                    const user: IUser = userId as IUser;\r\n                    participantId = user.userId;\r\n                }\r\n                Contracts.throwIfNullOrWhitespace(participantId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\r\n                // check the participant exists\r\n                const index: number = this.participants.findIndex((p: Participant): boolean => p.id === participantId);\r\n                if (index === -1) {\r\n                    this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\r\n                }\r\n                if (!!this.privConversationRecognizer) {\r\n                    this.privConversationRecognizer.sendRequest(this.getEjectCommand(participantId), ((): void => {\r\n                        this.handleCallback(cb, err);\r\n                    }),\r\n                        ((error: any): void => {\r\n                            this.handleError(error, err);\r\n                        }));\r\n                }\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to unlock the meeting\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public unlockMeetingAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSendAsHost) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unlock\")), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getLockCommand(false), ((): void => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n                }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to unmute all participants in the meeting\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public unmuteAllParticipantsAsync(cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSendAsHost) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedConversation.replace(\"{command}\", \"unmute all\")), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getMuteAllCommand(false), ((): void => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Issues a request to unmute a participant in the meeting\r\n     * @param userId\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public unmuteParticipantAsync(userId: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrWhitespace(userId, this.privErrors.invalidArgs.replace(\"{arg}\", \"userId\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            // check the connection is open (host + participant can perform the mute command)\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            // if not host, check the participant is not muting another participant\r\n            if (!this.me.isHost && this.me.id !== userId) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedParticipant.replace(\"{command}\", \"mute\")), err);\r\n            }\r\n            // check the user exists\r\n            const exists: number = this.privParticipants.getParticipantIndex(userId);\r\n            if (exists === -1) {\r\n                this.handleError(new Error(this.privErrors.invalidParticipantRequest), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getMuteCommand(userId, false), ((): void => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send a text message\r\n     * @param message\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public sendTextMessageAsync(message: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrWhitespace(message, this.privErrors.invalidArgs.replace(\"{arg}\", \"message\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            // TODO: is a max length check required?\r\n            if (message.length > this.privTextMessageMaxLength) {\r\n                this.handleError(new Error(this.privErrors.invalidArgs.replace(\"{arg}\", \"message length\")), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getMessageCommand(message), ((): void => {\r\n                    this.handleCallback(cb, err);\r\n                }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set translated to languages\r\n     * @param {string[]} languages - languages to translate to\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public setTranslatedLanguagesAsync(languages: string[], cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfArrayEmptyOrWhitespace(languages, this.privErrors.invalidArgs.replace(\"{arg}\", \"languages\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getSetTranslateToLanguagesCommand(languages),\r\n                    ((): void => {\r\n                        this.handleCallback(cb, err);\r\n                    }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Change nickname\r\n     * @param {string} nickname - new nickname for the room\r\n     * @param cb\r\n     * @param err\r\n     */\r\n    public changeNicknameAsync(nickname: string, cb?: Callback, err?: Callback): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfDisposed(this.privConversationRecognizer.isDisposed());\r\n            Contracts.throwIfNullOrWhitespace(nickname, this.privErrors.invalidArgs.replace(\"{arg}\", \"nickname\"));\r\n            Contracts.throwIfNullOrUndefined(this.privRoom, this.privErrors.permissionDeniedSend);\r\n            if (!this.canSend) {\r\n                this.handleError(new Error(this.privErrors.permissionDeniedSend), err);\r\n            }\r\n            if (!!this.privConversationRecognizer) {\r\n                this.privConversationRecognizer.sendRequest(this.getChangeNicknameCommand(nickname),\r\n                    ((): void => {\r\n                        this.handleCallback(cb, err);\r\n                    }),\r\n                    ((error: any): void => {\r\n                        this.handleError(error, err);\r\n                    }));\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error, err);\r\n        }\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public dispose(): void {\r\n        if (this.isDisposed) {\r\n            return;\r\n        }\r\n        this.privIsDisposed = true;\r\n        if (!!this.config) {\r\n            this.config.close();\r\n        }\r\n        this.privConfig = undefined;\r\n        this.privLanguage = undefined;\r\n        this.privProperties = undefined;\r\n        this.privRoom = undefined;\r\n        this.privToken = undefined;\r\n        this.privManager = undefined;\r\n        this.privIsConnected = false;\r\n        this.privIsReady = false;\r\n        this.privParticipants = undefined;\r\n    }\r\n\r\n    public async connectTranscriberRecognizer(recognizer: TranscriberRecognizer): Promise<void> {\r\n        if (!!this.privTranscriberRecognizer) {\r\n            await this.privTranscriberRecognizer.close();\r\n        }\r\n        await recognizer.enforceAudioGating();\r\n        this.privTranscriberRecognizer = recognizer;\r\n        this.privTranscriberRecognizer.meeting = this;\r\n    }\r\n\r\n    public getKeepAlive(): string {\r\n        const nickname: string = (!!this.me) ? this.me.displayName : \"default_nickname\";\r\n        return JSON.stringify({\r\n            id: \"0\",\r\n            nickname,\r\n            participantId: this.privRoom.participantId,\r\n            roomId: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.keepAlive\r\n        });\r\n    }\r\n\r\n    /** websocket callbacks */\r\n    /* eslint-disable @typescript-eslint/typedef */\r\n    private onConnected = (e: ConnectionEventArgs): void => {\r\n        this.privIsConnected = true;\r\n        try {\r\n            if (!!this.privConversationTranslator?.sessionStarted) {\r\n                this.privConversationTranslator.sessionStarted(this.privConversationTranslator, e);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onDisconnected = (e: ConnectionEventArgs): void => {\r\n        try {\r\n            if (!!this.privConversationTranslator?.sessionStopped) {\r\n                this.privConversationTranslator.sessionStopped(this.privConversationTranslator, e);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        } finally {\r\n            void this.close(false);\r\n        }\r\n    };\r\n\r\n    private onCanceled = (r: ConversationRecognizer, e: ConversationTranslationCanceledEventArgs): void => {\r\n        try {\r\n            if (!!this.privConversationTranslator?.canceled) {\r\n                this.privConversationTranslator.canceled(this.privConversationTranslator, e);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onParticipantUpdateCommandReceived = (r: ConversationRecognizer, e: ParticipantAttributeEventArgs): void => {\r\n        try {\r\n            const updatedParticipant: IInternalParticipant = this.privParticipants.getParticipant(e.id);\r\n            if (updatedParticipant !== undefined) {\r\n\r\n                switch (e.key) {\r\n                    case ConversationTranslatorCommandTypes.changeNickname:\r\n                        updatedParticipant.displayName = e.value as string;\r\n                        break;\r\n                    case ConversationTranslatorCommandTypes.setUseTTS:\r\n                        updatedParticipant.isUsingTts = e.value as boolean;\r\n                        break;\r\n                    case ConversationTranslatorCommandTypes.setProfanityFiltering:\r\n                        updatedParticipant.profanity = e.value as boolean;\r\n                        break;\r\n                    case ConversationTranslatorCommandTypes.setMute:\r\n                        updatedParticipant.isMuted = e.value as boolean;\r\n                        break;\r\n                    case ConversationTranslatorCommandTypes.setTranslateToLanguages:\r\n                        updatedParticipant.translateToLanguages = e.value as string[];\r\n                        break;\r\n                }\r\n                this.privParticipants.addOrUpdateParticipant(updatedParticipant);\r\n\r\n                if (!!this.privConversationTranslator) {\r\n                    this.privConversationTranslator.participantsChanged(\r\n                        this.privConversationTranslator,\r\n                        new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.Updated,\r\n                            [this.toParticipant(updatedParticipant)], e.sessionId));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onLockRoomCommandReceived = (): void => {\r\n        // TODO\r\n    };\r\n\r\n    private onMuteAllCommandReceived = (r: ConversationRecognizer, e: MuteAllEventArgs): void => {\r\n        try {\r\n            this.privParticipants.participants.forEach((p: IInternalParticipant): boolean => p.isMuted = (p.isHost ? false : e.isMuted));\r\n            if (!!this.privConversationTranslator) {\r\n                this.privConversationTranslator.participantsChanged(\r\n                    this.privConversationTranslator,\r\n                    new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.Updated,\r\n                        this.toParticipants(false), e.sessionId));\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onParticipantJoinCommandReceived = (r: ConversationRecognizer, e: ParticipantEventArgs): void => {\r\n        try {\r\n            const newParticipant: IInternalParticipant = this.privParticipants.addOrUpdateParticipant(e.participant);\r\n            if (newParticipant !== undefined) {\r\n                if (!!this.privConversationTranslator) {\r\n                    this.privConversationTranslator.participantsChanged(\r\n                        this.privConversationTranslator,\r\n                        new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.JoinedConversation,\r\n                            [this.toParticipant(newParticipant)], e.sessionId));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onParticipantLeaveCommandReceived = (r: ConversationRecognizer, e: ParticipantEventArgs): void => {\r\n        try {\r\n            const ejectedParticipant: IInternalParticipant = this.privParticipants.getParticipant(e.participant.id);\r\n            if (ejectedParticipant !== undefined) {\r\n                // remove the participant from the internal participants list\r\n                this.privParticipants.deleteParticipant(e.participant.id);\r\n                if (!!this.privConversationTranslator) {\r\n                    // notify subscribers that the participant has left the conversation\r\n                    this.privConversationTranslator.participantsChanged(\r\n                        this.privConversationTranslator,\r\n                        new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.LeftConversation,\r\n                            [this.toParticipant(ejectedParticipant)], e.sessionId));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onTranslationReceived = (r: ConversationRecognizer, e: ConversationReceivedTranslationEventArgs): void => {\r\n        try {\r\n            switch (e.command) {\r\n                case ConversationTranslatorMessageTypes.final:\r\n                    if (!!this.privConversationTranslator) {\r\n                        this.privConversationTranslator.transcribed(\r\n                            this.privConversationTranslator,\r\n                            new ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\r\n                    }\r\n                    break;\r\n                case ConversationTranslatorMessageTypes.partial:\r\n                    if (!!this.privConversationTranslator) {\r\n                        this.privConversationTranslator.transcribing(\r\n                            this.privConversationTranslator,\r\n                            new ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\r\n                    }\r\n                    break;\r\n                case ConversationTranslatorMessageTypes.instantMessage:\r\n                    if (!!this.privConversationTranslator) {\r\n                        this.privConversationTranslator.textMessageReceived(\r\n                            this.privConversationTranslator,\r\n                            new ConversationTranslationEventArgs(e.payload, undefined, e.sessionId));\r\n                    }\r\n                    break;\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onParticipantsListReceived = (r: ConversationRecognizer, e: ParticipantsListEventArgs): void => {\r\n        try {\r\n            // check if the session token needs to be updated\r\n            if (e.sessionToken !== undefined && e.sessionToken !== null) {\r\n                this.privRoom.token = e.sessionToken;\r\n            }\r\n            // save the participants\r\n            this.privParticipants.participants = [...e.participants];\r\n            // enable the conversation\r\n            if (this.privParticipants.me !== undefined) {\r\n                this.privIsReady = true;\r\n            }\r\n            if (!!this.privConversationTranslator) {\r\n                this.privConversationTranslator.participantsChanged(\r\n                    this.privConversationTranslator,\r\n                    new ConversationParticipantsChangedEventArgs(ParticipantChangedReason.JoinedConversation, this.toParticipants(true), e.sessionId));\r\n            }\r\n            // if this is the host, update the nickname if needed\r\n            if (this.me.isHost) {\r\n                const nickname: string = this.privConversationTranslator?.properties.getProperty(PropertyId.ConversationTranslator_Name);\r\n                if (nickname !== undefined && nickname.length > 0 && nickname !== this.me.displayName) {\r\n                    // issue a change nickname request\r\n                    this.changeNicknameAsync(nickname);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    private onConversationExpiration = (r: ConversationRecognizer, e: ConversationExpirationEventArgs): void => {\r\n        try {\r\n            if (!!this.privConversationTranslator) {\r\n                this.privConversationTranslator.conversationExpiration(this.privConversationTranslator, e);\r\n            }\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n    /* eslint-enable @typescript-eslint/typedef */\r\n\r\n    private addParticipantImplAsync(participant: IParticipant): Promise<void> {\r\n        const newParticipant: IInternalParticipant = this.privParticipants.addOrUpdateParticipant(participant);\r\n        if (newParticipant !== undefined) {\r\n            if (!!this.privTranscriberRecognizer) {\r\n                const meetingInfo = this.meetingInfo;\r\n                meetingInfo.participants = [participant];\r\n                return this.privTranscriberRecognizer.pushMeetingEvent(meetingInfo, \"join\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private removeParticipantImplAsync(participant: IParticipant): Promise<void> {\r\n        this.privParticipants.deleteParticipant(participant.id);\r\n        const meetingInfo = this.meetingInfo;\r\n        meetingInfo.participants = [participant];\r\n        return this.privTranscriberRecognizer.pushMeetingEvent(meetingInfo, \"leave\");\r\n    }\r\n\r\n    private async close(dispose: boolean): Promise<void> {\r\n        try {\r\n            this.privIsConnected = false;\r\n            await this.privConversationRecognizer?.close();\r\n            this.privConversationRecognizer = undefined;\r\n            if (!!this.privConversationTranslator) {\r\n                this.privConversationTranslator.dispose();\r\n            }\r\n        } catch (e) {\r\n            // ignore error\r\n            throw e;\r\n        }\r\n        if (dispose) {\r\n            this.dispose();\r\n        }\r\n    }\r\n\r\n    /** Helpers */\r\n    private handleCallback(cb: () => void, err: (message: string) => void): void {\r\n        if (!!cb) {\r\n            try {\r\n                cb();\r\n            } catch (e) {\r\n                if (!!err) {\r\n                    err(e as string);\r\n                }\r\n            }\r\n            cb = undefined;\r\n        }\r\n    }\r\n\r\n    private handleError(error: any, err: (message: string) => void): void {\r\n        if (!!err) {\r\n            if (error instanceof Error) {\r\n                const typedError: Error = error;\r\n                err(typedError.name + \": \" + typedError.message);\r\n\r\n            } else {\r\n                err(error as string);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Participant Helpers */\r\n    private toParticipants(includeHost: boolean): Participant[] {\r\n\r\n        const participants: Participant[] = this.privParticipants.participants.map((p: IInternalParticipant): Participant => ( this.toParticipant(p) ) );\r\n        if (!includeHost) {\r\n            return participants.filter((p: Participant): boolean => p.isHost === false);\r\n        } else {\r\n            return participants;\r\n        }\r\n    }\r\n\r\n    private toParticipant(p: IInternalParticipant): Participant {\r\n        return new Participant(p.id, p.avatar, p.displayName, p.isHost, p.isMuted, p.isUsingTts, p.preferredLanguage, p.voice);\r\n    }\r\n\r\n    private getMuteAllCommand(isMuted: boolean): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingd\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.setMuteAll,\r\n            participantId: this.privRoom.participantId, // the id of the host\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: isMuted\r\n        });\r\n    }\r\n\r\n    private getMuteCommand(participantId: string, isMuted: boolean): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"conversationId\");\r\n        Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.setMute,\r\n            // eslint-disable-next-line object-shorthand\r\n            participantId: participantId,\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: isMuted\r\n        });\r\n    }\r\n\r\n    private getLockCommand(isLocked: boolean): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingId\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.setLockState,\r\n            participantId: this.privRoom.participantId,\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: isLocked\r\n        });\r\n    }\r\n\r\n    private getEjectCommand(participantId: string): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingId\");\r\n        Contracts.throwIfNullOrWhitespace(participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.ejectParticipant,\r\n            // eslint-disable-next-line object-shorthand\r\n            participantId: participantId,\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n        });\r\n    }\r\n\r\n    private getSetTranslateToLanguagesCommand(languages: string[]): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingId\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.setTranslateToLanguages,\r\n            participantId: this.privRoom.participantId, // the id of the host\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: languages\r\n        });\r\n    }\r\n\r\n    private getChangeNicknameCommand(nickname: string): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingId\");\r\n        Contracts.throwIfNullOrWhitespace(nickname, \"nickname\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n\r\n        return JSON.stringify({\r\n            command: ConversationTranslatorCommandTypes.changeNickname,\r\n            nickname,\r\n            participantId: this.privRoom.participantId, // the id of the host\r\n            roomid: this.privRoom.roomId,\r\n            type: ConversationTranslatorMessageTypes.participantCommand,\r\n            value: nickname\r\n        });\r\n    }\r\n\r\n    private getMessageCommand(message: string): string {\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.roomId, \"meetingId\");\r\n        Contracts.throwIfNullOrWhitespace(this.privRoom.participantId, \"participantId\");\r\n        Contracts.throwIfNullOrWhitespace(message, \"message\");\r\n\r\n        return JSON.stringify({\r\n            participantId: this.privRoom.participantId,\r\n            roomId: this.privRoom.roomId,\r\n            text: message,\r\n            type: ConversationTranslatorMessageTypes.instantMessage\r\n        });\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IAudioSource } from \"../common/Exports.js\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    OutputFormat,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechRecognitionCanceledEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult,\r\n    SpeechRecognizer,\r\n} from \"../sdk/Exports.js\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    DetailedSpeechPhrase,\r\n    EnumTranslation,\r\n    OutputFormatPropertyName,\r\n    RecognitionStatus,\r\n    ServiceRecognizerBase,\r\n    SimpleSpeechPhrase,\r\n    SpeechHypothesis,\r\n} from \"./Exports.js\";\r\nimport { IAuthentication } from \"./IAuthentication.js\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory.js\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig.js\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal.js\";\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nexport class SpeechServiceRecognizer extends ServiceRecognizerBase {\r\n\r\n    private privSpeechRecognizer: SpeechRecognizer;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        speechRecognizer: SpeechRecognizer) {\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, speechRecognizer);\r\n        this.privSpeechRecognizer = speechRecognizer;\r\n\r\n    }\r\n\r\n    protected async processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        let result: SpeechRecognitionResult;\r\n\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n\r\n        let processed: boolean = false;\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"speech.hypothesis\":\r\n            case \"speech.fragment\":\r\n                const hypothesis: SpeechHypothesis = SpeechHypothesis.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\r\n                resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, hypothesis.asJson());\r\n\r\n                result = new SpeechRecognitionResult(\r\n                    this.privRequestSession.requestId,\r\n                    ResultReason.RecognizingSpeech,\r\n                    hypothesis.Text,\r\n                    hypothesis.Duration,\r\n                    hypothesis.Offset,\r\n                    hypothesis.Language,\r\n                    hypothesis.LanguageDetectionConfidence,\r\n                    undefined, // Speaker Id\r\n                    undefined,\r\n                    hypothesis.asJson(),\r\n                    resultProps);\r\n\r\n                this.privRequestSession.onHypothesis(hypothesis.Offset);\r\n\r\n                const ev = new SpeechRecognitionEventArgs(result, hypothesis.Offset, this.privRequestSession.sessionId);\r\n\r\n                if (!!this.privSpeechRecognizer.recognizing) {\r\n                    try {\r\n                        this.privSpeechRecognizer.recognizing(this.privSpeechRecognizer, ev);\r\n                        /* eslint-disable no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.phrase\":\r\n                const simple: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\r\n                resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, simple.asJson());\r\n\r\n                const resultReason: ResultReason = EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus, this.privExpectContentAssessmentResponse);\r\n\r\n                this.privRequestSession.onPhraseRecognized(simple.Offset + simple.Duration);\r\n\r\n                if (ResultReason.Canceled === resultReason) {\r\n                    const cancelReason: CancellationReason = EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\r\n                    const cancellationErrorCode: CancellationErrorCode = EnumTranslation.implTranslateCancelErrorCode(simple.RecognitionStatus);\r\n\r\n                    await this.cancelRecognitionLocal(\r\n                        cancelReason,\r\n                        cancellationErrorCode,\r\n                        EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\r\n\r\n                } else {\r\n                    // Like the native SDK's, don't event / return an EndOfDictation message.\r\n                    if (simple.RecognitionStatus === RecognitionStatus.EndOfDictation) {\r\n                        break;\r\n                    }\r\n\r\n                    if (this.privRecognizerConfig.parameters.getProperty(OutputFormatPropertyName) === OutputFormat[OutputFormat.Simple]) {\r\n                        result = new SpeechRecognitionResult(\r\n                            this.privRequestSession.requestId,\r\n                            resultReason,\r\n                            simple.DisplayText,\r\n                            simple.Duration,\r\n                            simple.Offset,\r\n                            simple.Language,\r\n                            simple.LanguageDetectionConfidence,\r\n                            undefined, // Speaker Id\r\n                            undefined,\r\n                            simple.asJson(),\r\n                            resultProps);\r\n                    } else {\r\n                        const detailed: DetailedSpeechPhrase = DetailedSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\r\n                        resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, detailed.asJson());\r\n\r\n                        result = new SpeechRecognitionResult(\r\n                            this.privRequestSession.requestId,\r\n                            resultReason,\r\n                            detailed.RecognitionStatus === RecognitionStatus.Success ? detailed.NBest[0].Display : \"\",\r\n                            detailed.Duration,\r\n                            detailed.Offset,\r\n                            detailed.Language,\r\n                            detailed.LanguageDetectionConfidence,\r\n                            undefined, // Speaker Id\r\n                            undefined,\r\n                            detailed.asJson(),\r\n                            resultProps);\r\n                    }\r\n\r\n                    const event: SpeechRecognitionEventArgs = new SpeechRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\r\n\r\n                    if (!!this.privSpeechRecognizer.recognized) {\r\n                        try {\r\n                            this.privSpeechRecognizer.recognized(this.privSpeechRecognizer, event);\r\n                            /* eslint-disable no-empty */\r\n                        } catch (error) {\r\n                            // Not going to let errors in the event handler\r\n                            // trip things up.\r\n                        }\r\n                    }\r\n\r\n\r\n                    if (!!this.privSuccessCallback) {\r\n                        try {\r\n                            this.privSuccessCallback(result);\r\n                        } catch (e) {\r\n                            if (!!this.privErrorCallback) {\r\n                                this.privErrorCallback(e as string);\r\n                            }\r\n                        }\r\n                        // Only invoke the call back once.\r\n                        // and if it's successful don't invoke the\r\n                        // error after that.\r\n                        this.privSuccessCallback = undefined;\r\n                        this.privErrorCallback = undefined;\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return processed;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n        if (!!this.privSpeechRecognizer.canceled) {\r\n            const cancelEvent: SpeechRecognitionCanceledEventArgs = new SpeechRecognitionCanceledEventArgs(\r\n                cancellationReason,\r\n                error,\r\n                errorCode,\r\n                undefined,\r\n                sessionId);\r\n            try {\r\n                this.privSpeechRecognizer.canceled(this.privSpeechRecognizer, cancelEvent);\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            const result: SpeechRecognitionResult = new SpeechRecognitionResult(\r\n                requestId,\r\n                ResultReason.Canceled,\r\n                undefined, // Text\r\n                undefined, // Duration\r\n                undefined, // Offset\r\n                undefined, // Language\r\n                undefined, // Language Detection Confidence\r\n                undefined, // Speaker Id\r\n                error,\r\n                undefined, // Json\r\n                properties);\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                this.privSuccessCallback = undefined;\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n        }\r\n    }\r\n}\r\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// response\r\n\r\nexport interface IActivityPayloadResponse {\r\n    conversationId: string;\r\n    messageDataStreamType: number;\r\n    messagePayload: string | object;\r\n    version: number;\r\n}\r\n\r\nexport class ActivityPayloadResponse implements IActivityPayloadResponse {\r\n    private privActivityResponse: IActivityPayloadResponse;\r\n\r\n    private constructor(json: string) {\r\n        this.privActivityResponse = JSON.parse(json) as IActivityPayloadResponse;\r\n    }\r\n\r\n    public static fromJSON(json: string): ActivityPayloadResponse {\r\n        return new ActivityPayloadResponse(json);\r\n    }\r\n\r\n    public get conversationId(): string {\r\n        return this.privActivityResponse.conversationId;\r\n    }\r\n\r\n    public get messageDataStreamType(): number {\r\n        return this.privActivityResponse.messageDataStreamType;\r\n    }\r\n\r\n    public get messagePayload(): string | object {\r\n        return this.privActivityResponse.messagePayload;\r\n    }\r\n\r\n    public get version(): number {\r\n        return this.privActivityResponse.version;\r\n    }\r\n}\r\n\r\nexport enum MessageDataStreamType {\r\n    None = 0,\r\n    TextToSpeechAudio = 1,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ReplayableAudioNode\r\n} from \"../common.browser/Exports.js\";\r\nimport { SendingAgentContextMessageEvent } from \"../common/DialogEvents.js\";\r\nimport {\r\n    BackgroundEvent,\r\n    ConnectionEvent,\r\n    ConnectionMessage,\r\n    createGuid,\r\n    createNoDashGuid,\r\n    Deferred,\r\n    DialogEvent,\r\n    Events,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IConnection,\r\n    MessageType,\r\n    ServiceEvent,\r\n} from \"../common/Exports.js\";\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat.js\";\r\nimport { PullAudioOutputStreamImpl } from \"../sdk/Audio/AudioOutputStream.js\";\r\nimport { AudioStreamFormatImpl } from \"../sdk/Audio/AudioStreamFormat.js\";\r\nimport {\r\n    ActivityReceivedEventArgs,\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    DialogServiceConfig,\r\n    DialogServiceConnector,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    RecognitionEventArgs,\r\n    ResultReason,\r\n    SessionEventArgs,\r\n    SpeechRecognitionCanceledEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult,\r\n    TurnStatusReceivedEventArgs,\r\n} from \"../sdk/Exports.js\";\r\nimport { DialogServiceTurnStateManager } from \"./DialogServiceTurnStateManager.js\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    EnumTranslation,\r\n    ISpeechConfigAudioDevice,\r\n    RecognitionStatus,\r\n    ServiceRecognizerBase,\r\n    SimpleSpeechPhrase,\r\n    SpeechDetected,\r\n    SpeechHypothesis,\r\n    SpeechKeyword,\r\n} from \"./Exports.js\";\r\nimport { IAuthentication } from \"./IAuthentication.js\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory.js\";\r\nimport { RecognitionMode, RecognizerConfig } from \"./RecognizerConfig.js\";\r\nimport { ActivityPayloadResponse } from \"./ServiceMessages/ActivityResponsePayload.js\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal.js\";\r\n\r\nexport class DialogServiceAdapter extends ServiceRecognizerBase {\r\n    private privDialogServiceConnector: DialogServiceConnector;\r\n\r\n    private privDialogAudioSource: IAudioSource;\r\n\r\n    private privConnectionLoop: Promise<void>;\r\n    private terminateMessageLoop: boolean;\r\n    private agentConfigSent: boolean;\r\n    private privLastResult: SpeechRecognitionResult;\r\n    private privEvents: EventSource<DialogEvent>;\r\n\r\n    // Turns are of two kinds:\r\n    // 1: SR turns, end when the SR result is returned and then turn end.\r\n    // 2: Service turns where an activity is sent by the service along with the audio.\r\n    private privTurnStateManager: DialogServiceTurnStateManager;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        dialogServiceConnector: DialogServiceConnector) {\r\n\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, dialogServiceConnector);\r\n\r\n        this.privEvents = new EventSource<DialogEvent>();\r\n        this.privDialogServiceConnector = dialogServiceConnector;\r\n        this.receiveMessageOverride = (): Promise<void> => this.receiveDialogMessageOverride();\r\n        this.privTurnStateManager = new DialogServiceTurnStateManager();\r\n        this.recognizeOverride =\r\n            (recoMode: RecognitionMode, successCallback: (e: SpeechRecognitionResult) => void, errorCallback: (e: string) => void): Promise<void> =>\r\n                this.listenOnce(recoMode, successCallback, errorCallback);\r\n        this.postConnectImplOverride = (connection: Promise<IConnection>): Promise<IConnection> => this.dialogConnectImpl(connection);\r\n        this.configConnectionOverride = (connection: IConnection): Promise<IConnection> => this.configConnection(connection);\r\n        this.disconnectOverride = (): Promise<void> => this.privDisconnect();\r\n        this.privDialogAudioSource = audioSource;\r\n\r\n        this.agentConfigSent = false;\r\n        this.privLastResult = null;\r\n        this.connectionEvents.attach((connectionEvent: ConnectionEvent): void => {\r\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\r\n                this.terminateMessageLoop = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    public async sendMessage(message: string): Promise<void> {\r\n        const interactionGuid: string = createGuid();\r\n        const requestId: string = createNoDashGuid();\r\n\r\n        const agentMessage: any = {\r\n            context: {\r\n                interactionId: interactionGuid\r\n            },\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n            messagePayload: JSON.parse(message),\r\n            version: 0.5\r\n        };\r\n\r\n        const agentMessageJson = JSON.stringify(agentMessage);\r\n        const connection: IConnection = await this.fetchConnection();\r\n        await connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"agent\",\r\n            requestId,\r\n            \"application/json\",\r\n            agentMessageJson));\r\n\r\n    }\r\n\r\n    protected async privDisconnect(): Promise<void> {\r\n        await this.cancelRecognition(this.privRequestSession.sessionId,\r\n            this.privRequestSession.requestId,\r\n            CancellationReason.Error,\r\n            CancellationErrorCode.NoError,\r\n            \"Disconnecting\");\r\n\r\n        this.terminateMessageLoop = true;\r\n        this.agentConfigSent = false;\r\n        return;\r\n    }\r\n\r\n    protected processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        if (connectionMessage.messageType === MessageType.Text) {\r\n            resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        }\r\n\r\n        let result: SpeechRecognitionResult;\r\n        let processed: boolean;\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"speech.phrase\":\r\n                const speechPhrase: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\r\n\r\n                this.privRequestSession.onPhraseRecognized(speechPhrase.Offset + speechPhrase.Duration);\r\n\r\n                if (speechPhrase.RecognitionStatus !== RecognitionStatus.TooManyRequests && speechPhrase.RecognitionStatus !== RecognitionStatus.Error) {\r\n                    const args: SpeechRecognitionEventArgs = this.fireEventForResult(speechPhrase, resultProps);\r\n                    this.privLastResult = args.result;\r\n\r\n                    if (!!this.privDialogServiceConnector.recognized) {\r\n                        try {\r\n                            this.privDialogServiceConnector.recognized(this.privDialogServiceConnector, args);\r\n                            /* eslint-disable no-empty */\r\n                        } catch (error) {\r\n                            // Not going to let errors in the event handler\r\n                            // trip things up.\r\n                        }\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.hypothesis\":\r\n                const hypothesis: SpeechHypothesis = SpeechHypothesis.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\r\n\r\n                result = new SpeechRecognitionResult(\r\n                    this.privRequestSession.requestId,\r\n                    ResultReason.RecognizingSpeech,\r\n                    hypothesis.Text,\r\n                    hypothesis.Duration,\r\n                    hypothesis.Offset,\r\n                    hypothesis.Language,\r\n                    hypothesis.LanguageDetectionConfidence,\r\n                    undefined,\r\n                    undefined,\r\n                    hypothesis.asJson(),\r\n                    resultProps);\r\n\r\n                this.privRequestSession.onHypothesis(hypothesis.Offset);\r\n\r\n                const ev = new SpeechRecognitionEventArgs(result, hypothesis.Offset, this.privRequestSession.sessionId);\r\n\r\n                if (!!this.privDialogServiceConnector.recognizing) {\r\n                    try {\r\n                        this.privDialogServiceConnector.recognizing(this.privDialogServiceConnector, ev);\r\n                        /* eslint-disable no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.keyword\":\r\n                const keyword: SpeechKeyword = SpeechKeyword.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\r\n\r\n                result = new SpeechRecognitionResult(\r\n                    this.privRequestSession.requestId,\r\n                    keyword.Status === \"Accepted\" ? ResultReason.RecognizedKeyword : ResultReason.NoMatch,\r\n                    keyword.Text,\r\n                    keyword.Duration,\r\n                    keyword.Offset,\r\n                    undefined,\r\n                    undefined,\r\n                    undefined,\r\n                    undefined,\r\n                    keyword.asJson(),\r\n                    resultProps);\r\n\r\n                if (keyword.Status !== \"Accepted\") {\r\n                    this.privLastResult = result;\r\n                }\r\n\r\n                const event = new SpeechRecognitionEventArgs(result, result.duration, result.resultId);\r\n\r\n                if (!!this.privDialogServiceConnector.recognized) {\r\n                    try {\r\n                        this.privDialogServiceConnector.recognized(this.privDialogServiceConnector, event);\r\n                        /* eslint-disable no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"audio\":\r\n                {\r\n                    const audioRequestId = connectionMessage.requestId.toUpperCase();\r\n                    const turn = this.privTurnStateManager.GetTurn(audioRequestId);\r\n                    try {\r\n                        // Empty binary message signals end of stream.\r\n                        if (!connectionMessage.binaryBody) {\r\n                            turn.endAudioStream();\r\n                        } else {\r\n                            turn.audioStream.write(connectionMessage.binaryBody);\r\n                        }\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n\r\n            case \"response\":\r\n                {\r\n                    this.handleResponseMessage(connectionMessage);\r\n                }\r\n                processed = true;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        const defferal = new Deferred<boolean>();\r\n        defferal.resolve(processed);\r\n        return defferal.promise;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected async cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): Promise<void> {\r\n\r\n        this.terminateMessageLoop = true;\r\n\r\n        if (!!this.privRequestSession.isRecognizing) {\r\n            await this.privRequestSession.onStopRecognizing();\r\n        }\r\n\r\n        if (!!this.privDialogServiceConnector.canceled) {\r\n            const properties: PropertyCollection = new PropertyCollection();\r\n            properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n            const cancelEvent: SpeechRecognitionCanceledEventArgs = new SpeechRecognitionCanceledEventArgs(\r\n                cancellationReason,\r\n                error,\r\n                errorCode,\r\n                undefined,\r\n                sessionId);\r\n\r\n            try {\r\n                this.privDialogServiceConnector.canceled(this.privDialogServiceConnector, cancelEvent);\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n\r\n            if (!!this.privSuccessCallback) {\r\n                const result: SpeechRecognitionResult = new SpeechRecognitionResult(\r\n                    undefined, // ResultId\r\n                    ResultReason.Canceled,\r\n                    undefined, // Text\r\n                    undefined, // Duration\r\n                    undefined, // Offset\r\n                    undefined, // Language\r\n                    undefined, // Language Detection Confidence\r\n                    undefined, // Speaker Id\r\n                    error,\r\n                    undefined, // Json\r\n                    properties);\r\n                try {\r\n                    this.privSuccessCallback(result);\r\n                    this.privSuccessCallback = undefined;\r\n                    /* eslint-disable no-empty */\r\n                } catch { }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected async listenOnce(\r\n        recoMode: RecognitionMode,\r\n        successCallback: (e: SpeechRecognitionResult) => void,\r\n        errorCallback: (e: string) => void\r\n    ): Promise<void> {\r\n        this.privRecognizerConfig.recognitionMode = recoMode;\r\n\r\n        this.privSuccessCallback = successCallback;\r\n        this.privErrorCallback = errorCallback;\r\n\r\n        this.privRequestSession.startNewRecognition();\r\n        this.privRequestSession.listenForServiceTelemetry(this.privDialogAudioSource.events);\r\n\r\n        this.privRecognizerConfig.parameters.setProperty(PropertyId.Speech_SessionId, this.privRequestSession.sessionId);\r\n\r\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\r\n        const conPromise: Promise<IConnection> = this.connectImpl();\r\n\r\n        const preAudioPromise: Promise<void> = this.sendPreAudioMessages();\r\n\r\n        const node: IAudioStreamNode = await this.privDialogAudioSource.attach(this.privRequestSession.audioNodeId);\r\n        const format: AudioStreamFormatImpl = await this.privDialogAudioSource.format;\r\n        const deviceInfo: ISpeechConfigAudioDevice = await this.privDialogAudioSource.deviceInfo;\r\n\r\n        const audioNode = new ReplayableAudioNode(node, format.avgBytesPerSec);\r\n        await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\r\n\r\n        this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\r\n\r\n        try {\r\n            await conPromise;\r\n            await preAudioPromise;\r\n        } catch (error) {\r\n            await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.ConnectionFailure, error as string);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        const sessionStartEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n\r\n        if (!!this.privRecognizer.sessionStarted) {\r\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\r\n        }\r\n\r\n        const audioSendPromise = this.sendAudio(audioNode);\r\n\r\n        // /* eslint-disable no-empty */\r\n        audioSendPromise.then((): void => { /* add? return true;*/ }, async (error: string): Promise<void> => {\r\n            await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.RuntimeError, error);\r\n        });\r\n    }\r\n\r\n    // Establishes a websocket connection to the end point.\r\n    private dialogConnectImpl(connection: Promise<IConnection>): Promise<IConnection> {\r\n        this.privConnectionLoop = this.startMessageLoop();\r\n        return connection;\r\n    }\r\n\r\n    private receiveDialogMessageOverride(): Promise<void> {\r\n\r\n        // we won't rely on the cascading promises of the connection since we want to continually be available to receive messages\r\n        const communicationCustodian: Deferred<void> = new Deferred<void>();\r\n\r\n        const loop = async (): Promise<void> => {\r\n            try {\r\n                const isDisposed: boolean = this.isDisposed();\r\n                const terminateMessageLoop = (!this.isDisposed() && this.terminateMessageLoop);\r\n                if (isDisposed || terminateMessageLoop) {\r\n                    // We're done.\r\n                    communicationCustodian.resolve(undefined);\r\n                    return;\r\n                }\r\n\r\n                const connection: IConnection = await this.fetchConnection();\r\n                const message: ConnectionMessage = await connection.read();\r\n\r\n                if (!message) {\r\n                    return loop();\r\n                }\r\n\r\n                const connectionMessage = SpeechConnectionMessage.fromConnectionMessage(message);\r\n\r\n                switch (connectionMessage.path.toLowerCase()) {\r\n                    case \"turn.start\":\r\n                        {\r\n                            const turnRequestId = connectionMessage.requestId.toUpperCase();\r\n                            const audioSessionReqId = this.privRequestSession.requestId.toUpperCase();\r\n\r\n                            // turn started by the service\r\n                            if (turnRequestId !== audioSessionReqId) {\r\n                                this.privTurnStateManager.StartTurn(turnRequestId);\r\n                            } else {\r\n                                this.privRequestSession.onServiceTurnStartResponse();\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    case \"speech.startdetected\":\r\n                        const speechStartDetected: SpeechDetected = SpeechDetected.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\r\n\r\n                        const speechStartEventArgs = new RecognitionEventArgs(speechStartDetected.Offset, this.privRequestSession.sessionId);\r\n\r\n                        if (!!this.privRecognizer.speechStartDetected) {\r\n                            this.privRecognizer.speechStartDetected(this.privRecognizer, speechStartEventArgs);\r\n                        }\r\n\r\n                        break;\r\n\r\n                    case \"speech.enddetected\":\r\n\r\n                        let json: string;\r\n\r\n                        if (connectionMessage.textBody.length > 0) {\r\n                            json = connectionMessage.textBody;\r\n                        } else {\r\n                            // If the request was empty, the JSON returned is empty.\r\n                            json = \"{ Offset: 0 }\";\r\n                        }\r\n\r\n                        const speechStopDetected: SpeechDetected = SpeechDetected.fromJSON(json, this.privRequestSession.currentTurnAudioOffset);\r\n\r\n                        this.privRequestSession.onServiceRecognized(speechStopDetected.Offset);\r\n\r\n                        const speechStopEventArgs = new RecognitionEventArgs(speechStopDetected.Offset, this.privRequestSession.sessionId);\r\n\r\n                        if (!!this.privRecognizer.speechEndDetected) {\r\n                            this.privRecognizer.speechEndDetected(this.privRecognizer, speechStopEventArgs);\r\n                        }\r\n                        break;\r\n\r\n                    case \"turn.end\":\r\n                        {\r\n                            const turnEndRequestId = connectionMessage.requestId.toUpperCase();\r\n\r\n                            const audioSessionReqId = this.privRequestSession.requestId.toUpperCase();\r\n\r\n                            // turn started by the service\r\n                            if (turnEndRequestId !== audioSessionReqId) {\r\n                                this.privTurnStateManager.CompleteTurn(turnEndRequestId);\r\n                            } else {\r\n                                // Audio session turn\r\n\r\n                                const sessionStopEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n                                await this.privRequestSession.onServiceTurnEndResponse(false);\r\n\r\n                                if (!this.privRecognizerConfig.isContinuousRecognition || this.privRequestSession.isSpeechEnded || !this.privRequestSession.isRecognizing) {\r\n                                    if (!!this.privRecognizer.sessionStopped) {\r\n                                        this.privRecognizer.sessionStopped(this.privRecognizer, sessionStopEventArgs);\r\n                                    }\r\n                                }\r\n\r\n                                // report result to promise.\r\n                                if (!!this.privSuccessCallback && this.privLastResult) {\r\n                                    try {\r\n                                        this.privSuccessCallback(this.privLastResult);\r\n                                        this.privLastResult = null;\r\n                                    } catch (e) {\r\n                                        if (!!this.privErrorCallback) {\r\n                                            this.privErrorCallback(e as string);\r\n                                        }\r\n                                    }\r\n                                    // Only invoke the call back once.\r\n                                    // and if it's successful don't invoke the\r\n                                    // error after that.\r\n                                    this.privSuccessCallback = undefined;\r\n                                    this.privErrorCallback = undefined;\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n                        try {\r\n                            const processed = await this.processTypeSpecificMessages(connectionMessage);\r\n                            if (!processed) {\r\n                                if (!!this.serviceEvents) {\r\n                                    this.serviceEvents.onEvent(new ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\r\n                                }\r\n                            }\r\n                        } catch (e) {\r\n                            //\r\n                        }\r\n                }\r\n                const ret: Promise<void> = loop();\r\n\r\n                return ret;\r\n            } catch (error) {\r\n                this.terminateMessageLoop = true;\r\n                communicationCustodian.resolve();\r\n            }\r\n        };\r\n\r\n        loop().catch((reason: string): void => {\r\n            Events.instance.onEvent(new BackgroundEvent(reason));\r\n        });\r\n\r\n        return communicationCustodian.promise;\r\n    }\r\n\r\n    private async startMessageLoop(): Promise<void> {\r\n\r\n        this.terminateMessageLoop = false;\r\n\r\n        try {\r\n            await this.receiveDialogMessageOverride();\r\n        } catch (error) {\r\n            await this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.RuntimeError, error as string);\r\n        }\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\r\n    private async configConnection(connection: IConnection): Promise<IConnection> {\r\n        if (this.terminateMessageLoop) {\r\n            this.terminateMessageLoop = false;\r\n            return Promise.reject(\"Connection to service terminated.\");\r\n        }\r\n\r\n        await this.sendSpeechServiceConfig(connection, this.privRequestSession, this.privRecognizerConfig.SpeechServiceConfig.serialize());\r\n        await this.sendAgentConfig(connection);\r\n        return connection;\r\n    }\r\n\r\n    private async sendPreAudioMessages(): Promise<void> {\r\n        const connection: IConnection = await this.fetchConnection();\r\n        this.addKeywordContextData();\r\n        await this.sendSpeechContext(connection, true);\r\n        await this.sendAgentContext(connection);\r\n        await this.sendWaveHeader(connection);\r\n    }\r\n\r\n    private sendAgentConfig(connection: IConnection): Promise<void> {\r\n        if (this.agentConfig && !this.agentConfigSent) {\r\n\r\n            if (this.privRecognizerConfig\r\n                .parameters\r\n                .getProperty(PropertyId.Conversation_DialogType) === DialogServiceConfig.DialogTypes.CustomCommands) {\r\n                const config = this.agentConfig.get();\r\n                config.botInfo.commandsCulture = this.privRecognizerConfig.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, \"en-us\");\r\n                this.agentConfig.set(config);\r\n            }\r\n            this.onEvent(new SendingAgentContextMessageEvent(this.agentConfig));\r\n\r\n            const agentConfigJson = this.agentConfig.toJsonString();\r\n\r\n            // guard against sending this multiple times on one connection\r\n            this.agentConfigSent = true;\r\n\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"agent.config\",\r\n                this.privRequestSession.requestId,\r\n                \"application/json\",\r\n                agentConfigJson));\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    private sendAgentContext(connection: IConnection): Promise<void> {\r\n        const guid: string = createGuid();\r\n\r\n        const speechActivityTemplate = this.privDialogServiceConnector.properties.getProperty(PropertyId.Conversation_Speech_Activity_Template);\r\n\r\n        const agentContext: any = {\r\n            channelData: \"\",\r\n            context: {\r\n                interactionId: guid\r\n            },\r\n            messagePayload: typeof speechActivityTemplate === undefined ? undefined : speechActivityTemplate,\r\n            version: 0.5\r\n        };\r\n\r\n        const agentContextJson = JSON.stringify(agentContext);\r\n\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"speech.agent.context\",\r\n            this.privRequestSession.requestId,\r\n            \"application/json\",\r\n            agentContextJson));\r\n    }\r\n\r\n    private fireEventForResult(serviceResult: SimpleSpeechPhrase, properties: PropertyCollection): SpeechRecognitionEventArgs {\r\n        const resultReason: ResultReason = EnumTranslation.implTranslateRecognitionResult(serviceResult.RecognitionStatus);\r\n\r\n        const result = new SpeechRecognitionResult(\r\n            this.privRequestSession.requestId,\r\n            resultReason,\r\n            serviceResult.DisplayText,\r\n            serviceResult.Duration,\r\n            serviceResult.Offset,\r\n            serviceResult.Language,\r\n            serviceResult.LanguageDetectionConfidence,\r\n            undefined,\r\n            undefined,\r\n            serviceResult.asJson(),\r\n            properties);\r\n\r\n        const ev = new SpeechRecognitionEventArgs(result, serviceResult.Offset, this.privRequestSession.sessionId);\r\n        return ev;\r\n    }\r\n\r\n    private handleResponseMessage(responseMessage: SpeechConnectionMessage): void {\r\n        // \"response\" messages can contain either \"message\" (activity) or \"MessageStatus\" data. Fire the appropriate\r\n        // event according to the message type that's specified.\r\n        const responsePayload: { messageType: string } = JSON.parse(responseMessage.textBody) as { messageType: string };\r\n        switch (responsePayload.messageType.toLowerCase()) {\r\n            case \"message\":\r\n                const responseRequestId = responseMessage.requestId.toUpperCase();\r\n                const activityPayload: ActivityPayloadResponse = ActivityPayloadResponse.fromJSON(responseMessage.textBody);\r\n                const turn = this.privTurnStateManager.GetTurn(responseRequestId);\r\n\r\n                // update the conversation Id\r\n                if (activityPayload.conversationId) {\r\n                    const updateAgentConfig = this.agentConfig.get();\r\n                    updateAgentConfig.botInfo.conversationId = activityPayload.conversationId;\r\n                    this.agentConfig.set(updateAgentConfig);\r\n                }\r\n\r\n                const pullAudioOutputStream: PullAudioOutputStreamImpl = turn.processActivityPayload(\r\n                    activityPayload,\r\n                    AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(this.privDialogServiceConnector.properties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined)));\r\n                const activity = new ActivityReceivedEventArgs(activityPayload.messagePayload, pullAudioOutputStream);\r\n                if (!!this.privDialogServiceConnector.activityReceived) {\r\n                    try {\r\n                        this.privDialogServiceConnector.activityReceived(this.privDialogServiceConnector, activity);\r\n                        /* eslint-disable-next-line no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case \"messagestatus\":\r\n                if (!!this.privDialogServiceConnector.turnStatusReceived) {\r\n                    try {\r\n                        this.privDialogServiceConnector.turnStatusReceived(\r\n                            this.privDialogServiceConnector,\r\n                            new TurnStatusReceivedEventArgs(responseMessage.textBody));\r\n                        /* eslint-disable-next-line no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                break;\r\n\r\n            default:\r\n                Events.instance.onEvent(\r\n                    new BackgroundEvent(`Unexpected response of type ${responsePayload.messageType}. Ignoring.`));\r\n                break;\r\n        }\r\n    }\r\n\r\n    private onEvent(event: DialogEvent): void {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private addKeywordContextData(): void {\r\n        const keywordPropertyValue: string = this.privRecognizerConfig.parameters.getProperty(\"SPEECH-KeywordsToDetect\");\r\n        if (keywordPropertyValue === undefined) {\r\n            return;\r\n        }\r\n\r\n        const keywordOffsetPropertyValue: string = this.privRecognizerConfig.parameters\r\n            .getProperty(\"SPEECH-KeywordsToDetect-Offsets\");\r\n        const keywordDurationPropertyValue: string = this.privRecognizerConfig.parameters\r\n            .getProperty(\"SPEECH-KeywordsToDetect-Durations\");\r\n\r\n        const keywords = keywordPropertyValue.split(\";\");\r\n        const keywordOffsets = keywordOffsetPropertyValue === undefined ? [] : keywordOffsetPropertyValue.split(\";\");\r\n        const keywordDurations = keywordDurationPropertyValue === undefined ? [] : keywordDurationPropertyValue.split(\";\");\r\n\r\n        const keywordDefinitionArray = [];\r\n        for (let i = 0; i < keywords.length; i++) {\r\n            const definition: { [section: string]: any } = {};\r\n            definition.text = keywords[i];\r\n            if (i < keywordOffsets.length) {\r\n                definition.offset = Number(keywordOffsets[i]);\r\n            }\r\n            if (i < keywordDurations.length) {\r\n                definition.duration = Number(keywordDurations[i]);\r\n            }\r\n            keywordDefinitionArray.push(definition);\r\n        }\r\n\r\n        this.speechContext.setSection(\"invocationSource\", \"VoiceActivationWithKeyword\");\r\n        this.speechContext.setSection(\"keywordDetection\", [{\r\n            clientDetectedKeywords: keywordDefinitionArray,\r\n            onReject: { action: \"EndOfTurn\" },\r\n            type: \"startTrigger\"\r\n        }]);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines translation status.\r\n * @class TranslationStatus\r\n */\r\nexport enum TranslationStatus {\r\n    /**\r\n     * @member TranslationStatus.Success\r\n     */\r\n    Success = 0,\r\n\r\n    /**\r\n     * @member TranslationStatus.Error\r\n     */\r\n    Error,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    OutputFormatPropertyName,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechConnectionFactory,\r\n    SpeechServiceConfig,\r\n    SpeechServiceRecognizer,\r\n} from \"../common.speech/Exports.js\";\r\nimport { marshalPromiseToCallbacks } from \"../common/Exports.js\";\r\nimport { AudioConfigImpl } from \"./Audio/AudioConfig.js\";\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport {\r\n    AudioConfig,\r\n    AutoDetectSourceLanguageConfig,\r\n    KeywordRecognitionModel,\r\n    OutputFormat,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    SpeechRecognitionCanceledEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechRecognitionResult,\r\n} from \"./Exports.js\";\r\nimport { SpeechConfig, SpeechConfigImpl } from \"./SpeechConfig.js\";\r\n\r\n/**\r\n * Performs speech recognition from microphone, file, or other audio input streams, and gets transcribed text as result.\r\n * @class SpeechRecognizer\r\n */\r\nexport class SpeechRecognizer extends Recognizer {\r\n    private privDisposedRecognizer: boolean;\r\n\r\n    /**\r\n     * SpeechRecognizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\r\n     */\r\n    public constructor(speechConfig: SpeechConfig, audioConfig?: AudioConfig) {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\r\n\r\n        Contracts.throwIfNullOrWhitespace(\r\n            speechConfigImpl.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage),\r\n            PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n\r\n        super(audioConfig, speechConfigImpl.properties, new SpeechConnectionFactory());\r\n        this.privDisposedRecognizer = false;\r\n    }\r\n\r\n    /**\r\n     * SpeechRecognizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\r\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the recognizer\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\r\n     */\r\n    public static FromConfig(speechConfig: SpeechConfig, autoDetectSourceLanguageConfig: AutoDetectSourceLanguageConfig, audioConfig?: AudioConfig): SpeechRecognizer {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\r\n        const recognizer = new SpeechRecognizer(speechConfig, audioConfig);\r\n        return recognizer;\r\n    }\r\n\r\n    /**\r\n     * The event recognizing signals that an intermediate recognition result is received.\r\n     * @member SpeechRecognizer.prototype.recognizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognizing: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event recognized signals that a final recognition result is received.\r\n     * @member SpeechRecognizer.prototype.recognized\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognized: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during recognition.\r\n     * @member SpeechRecognizer.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: Recognizer, event: SpeechRecognitionCanceledEventArgs) => void;\r\n\r\n    /**\r\n     * Gets the endpoint id of a customized speech model that is used for speech recognition.\r\n     * @member SpeechRecognizer.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     * @returns {string} the endpoint id of a customized speech model that is used for speech recognition.\r\n     */\r\n    public get endpointId(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_EndpointId, \"00000000-0000-0000-0000-000000000000\");\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member SpeechRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member SpeechRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * Gets the spoken language of recognition.\r\n     * @member SpeechRecognizer.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} The spoken language of recognition.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    /**\r\n     * Gets the output format of recognition.\r\n     * @member SpeechRecognizer.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {OutputFormat} The output format of recognition.\r\n     */\r\n    public get outputFormat(): OutputFormat {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        if (this.properties.getProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Simple]) === OutputFormat[OutputFormat.Simple]) {\r\n            return OutputFormat.Simple;\r\n        } else {\r\n            return OutputFormat.Detailed;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this SpeechRecognizer.\r\n     * @member SpeechRecognizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechRecognizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition, and stops after the first utterance is recognized.\r\n     * The task returns the recognition text as result.\r\n     * Note: RecognizeOnceAsync() returns when the first utterance has been recognized,\r\n     * so it is suitable only for single shot recognition\r\n     * like command or query. For long-running recognition, use StartContinuousRecognitionAsync() instead.\r\n     * @member SpeechRecognizer.prototype.recognizeOnceAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the SpeechRecognitionResult.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public recognizeOnceAsync(cb?: (e: SpeechRecognitionResult) => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.recognizeOnceAsyncImpl(RecognitionMode.Interactive), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition, until stopContinuousRecognitionAsync() is called.\r\n     * User must subscribe to events to receive recognition results.\r\n     * @member SpeechRecognizer.prototype.startContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Stops continuous speech recognition.\r\n     * @member SpeechRecognizer.prototype.stopContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition with keyword spotting, until\r\n     * stopKeywordRecognitionAsync() is called.\r\n     * User must subscribe to events to receive recognition results.\r\n     * Note: Key word spotting functionality is only available on the\r\n     * Speech Devices SDK. This functionality is currently not included in the SDK itself.\r\n     * @member SpeechRecognizer.prototype.startKeywordRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param {KeywordRecognitionModel} model The keyword recognition model that\r\n     * specifies the keyword to be recognized.\r\n     * @param cb - Callback invoked once the recognition has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startKeywordRecognitionAsync(model: KeywordRecognitionModel, cb?: () => void, err?: (e: string) => void): void {\r\n        Contracts.throwIfNull(model, \"model\");\r\n\r\n        if (!!err) {\r\n            err(\"Not yet implemented.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stops continuous speech recognition.\r\n     * Note: Key word spotting functionality is only available on the\r\n     * Speech Devices SDK. This functionality is currently not included in the SDK itself.\r\n     * @member SpeechRecognizer.prototype.stopKeywordRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopKeywordRecognitionAsync(cb?: () => void): void {\r\n        if (!!cb) {\r\n            cb();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member SpeechRecognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    /**\r\n     * Disposes any resources held by the object.\r\n     * @member SpeechRecognizer.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - true if disposing the object.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedRecognizer) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privDisposedRecognizer = true;\r\n            await this.implRecognizerStop();\r\n        }\r\n\r\n        await super.dispose(disposing);\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.privProperties);\r\n    }\r\n\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n        const configImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        return new SpeechServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nexport { Conversation, ConversationImpl } from \"./Conversation.js\";\r\nexport { ConversationInfo } from \"./IConversation.js\";\r\nexport { ConversationCommon } from \"./ConversationCommon.js\";\r\nexport { ConversationExpirationEventArgs } from \"./ConversationExpirationEventArgs.js\";\r\nexport { ConversationParticipantsChangedEventArgs } from \"./ConversationParticipantsChangedEventArgs.js\";\r\nexport { ConversationTranslationCanceledEventArgs } from \"./ConversationTranslationCanceledEventArgs.js\";\r\nexport { ConversationTranslationEventArgs } from \"./ConversationTranslationEventArgs.js\";\r\nexport { ConversationTranslationResult } from \"./ConversationTranslationResult.js\";\r\nexport { ConversationTranslator } from \"./ConversationTranslator.js\";\r\nexport { ConversationTranscriber } from \"./ConversationTranscriber.js\";\r\nexport { IParticipant, Participant, User, VoiceSignature } from \"./IParticipant.js\";\r\nexport { ParticipantChangedReason } from \"./ParticipantChangedReason.js\";\r\nexport { ConversationHandler, ConversationTranscriptionHandler, IConversationTranslator } from \"./ConversationHandler.js\";\r\nexport { Meeting, MeetingImpl } from \"./Meeting.js\";\r\nexport { MeetingInfo } from \"./IMeeting.js\";\r\nexport { MeetingTranscriptionCanceledEventArgs } from \"./MeetingTranscriptionCanceledEventArgs.js\";\r\nexport { MeetingTranscriber } from \"./MeetingTranscriber.js\";\r\nexport { MeetingHandler, MeetingTranscriptionHandler } from \"./MeetingHandler.js\";\r\nexport { ConversationTranscriptionResult } from \"./ConversationTranscriptionResult.js\";\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    OutputFormatPropertyName,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    // SpeechConnectionFactory,\r\n    ConversationTranscriberConnectionFactory,\r\n    SpeechServiceConfig,\r\n    ConversationTranscriptionServiceRecognizer,\r\n} from \"../../common.speech/Exports.js\";\r\nimport { marshalPromiseToCallbacks } from \"../../common/Exports.js\";\r\nimport { AudioConfigImpl } from \"../Audio/AudioConfig.js\";\r\nimport { Contracts } from \"../Contracts.js\";\r\nimport {\r\n    AudioConfig,\r\n    AutoDetectSourceLanguageConfig,\r\n    ConversationTranscriptionEventArgs,\r\n    ConversationTranscriptionCanceledEventArgs,\r\n    OutputFormat,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n} from \"../Exports.js\";\r\nimport { SpeechConfig, SpeechConfigImpl } from \"../SpeechConfig.js\";\r\n\r\n/**\r\n * Performs speech recognition with speaker separation from microphone, file, or other audio input streams, and gets transcribed text as result.\r\n * @class ConversationTranscriber\r\n */\r\nexport class ConversationTranscriber extends Recognizer {\r\n    private privDisposedRecognizer: boolean;\r\n\r\n    /**\r\n     * ConversationTranscriber constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\r\n     */\r\n    public constructor(speechConfig: SpeechConfig, audioConfig?: AudioConfig) {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\r\n\r\n        Contracts.throwIfNullOrWhitespace(\r\n            speechConfigImpl.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage),\r\n            PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n\r\n        super(audioConfig, speechConfigImpl.properties, new ConversationTranscriberConnectionFactory());\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, \"2\");\r\n        this.privDisposedRecognizer = false;\r\n    }\r\n\r\n    /**\r\n     * ConversationTranscriber constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this recognizer\r\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the recognizer\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the recognizer\r\n     */\r\n    public static FromConfig(speechConfig: SpeechConfig, autoDetectSourceLanguageConfig: AutoDetectSourceLanguageConfig, audioConfig?: AudioConfig): ConversationTranscriber {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\r\n        const recognizer = new ConversationTranscriber(speechConfig, audioConfig);\r\n        return recognizer;\r\n    }\r\n\r\n    /**\r\n     * The event transcribing signals that an intermediate transcription result is received.\r\n     * @member ConversationTranscriber.prototype.transcribing\r\n     * @function\r\n     * @public\r\n     */\r\n    public transcribing: (sender: Recognizer, event: ConversationTranscriptionEventArgs) => void;\r\n\r\n    /**\r\n     * The event transcriber signals that a final recognition result is received.\r\n     * @member ConversationTranscriber.prototype.transcribed\r\n     * @function\r\n     * @public\r\n     */\r\n    public transcribed: (sender: Recognizer, event: ConversationTranscriptionEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during transcription.\r\n     * @member ConversationTranscriber.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: Recognizer, event: ConversationTranscriptionCanceledEventArgs) => void;\r\n\r\n    /**\r\n     * Gets the endpoint id of a customized speech model that is used for transcription.\r\n     * @member ConversationTranscriber.prototype.endpointId\r\n     * @function\r\n     * @public\r\n     * @returns {string} the endpoint id of a customized speech model that is used for speech recognition.\r\n     */\r\n    public get endpointId(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_EndpointId, \"00000000-0000-0000-0000-000000000000\");\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member ConversationTranscriber.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member ConversationTranscriber.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * Gets the spoken language of transcription.\r\n     * @member ConversationTranscriber.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} The spoken language of transcription.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    /**\r\n     * Gets the output format of transcription.\r\n     * @member ConversationTranscriber.prototype.outputFormat\r\n     * @function\r\n     * @public\r\n     * @returns {OutputFormat} The output format of transcription.\r\n     */\r\n    public get outputFormat(): OutputFormat {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        if (this.properties.getProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Simple]) === OutputFormat[OutputFormat.Simple]) {\r\n            return OutputFormat.Simple;\r\n        } else {\r\n            return OutputFormat.Detailed;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this conversation transcriber.\r\n     * @member ConversationTranscriber.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechRecognizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Starts conversation transcription, until stopTranscribingAsync() is called.\r\n     * User must subscribe to events to receive transcription results.\r\n     * @member ConversationTranscriber.prototype.startTranscribingAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the transcription has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startTranscribingAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Stops conversation transcription.\r\n     * @member ConversationTranscriber.prototype.stopTranscribingAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the transcription has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopTranscribingAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member ConversationTranscriber.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    /**\r\n     * Disposes any resources held by the object.\r\n     * @member SpeechRecognizer.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - true if disposing the object.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedRecognizer) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privDisposedRecognizer = true;\r\n            await this.implRecognizerStop();\r\n        }\r\n\r\n        await super.dispose(disposing);\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.privProperties);\r\n    }\r\n\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n        const configImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        recognizerConfig.isSpeakerDiarizationEnabled = true;\r\n        return new ConversationTranscriptionServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Represents the JSON used in the agent.config message sent to the speech service.\r\n */\r\nexport class AgentConfig {\r\n    private iPrivConfig: IAgentConfig;\r\n\r\n    public toJsonString(): string {\r\n        return JSON.stringify(this.iPrivConfig);\r\n    }\r\n\r\n    public get(): IAgentConfig {\r\n        return this.iPrivConfig;\r\n    }\r\n\r\n    /**\r\n     * Setter for the agent.config object.\r\n     * @param value a JSON serializable object.\r\n     */\r\n    public set(value: IAgentConfig): void {\r\n        this.iPrivConfig = value;\r\n    }\r\n}\r\n\r\nexport interface IAgentConfig {\r\n    botInfo: {\r\n        commType: string;\r\n        connectionId: string;\r\n        conversationId: string;\r\n        fromId: string;\r\n        commandsCulture: string;\r\n        ttsAudioFormat: string;\r\n    };\r\n    version: number;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat.js\";\r\nimport { AudioOutputStream, PullAudioOutputStreamImpl } from \"../sdk/Audio/AudioOutputStream.js\";\r\nimport { DialogServiceTurnStateManager } from \"./DialogServiceTurnStateManager.js\";\r\nimport { ActivityPayloadResponse, MessageDataStreamType } from \"./ServiceMessages/ActivityResponsePayload.js\";\r\n\r\nexport class DialogServiceTurnState {\r\n    private privRequestId: string;\r\n    private privIsCompleted: boolean;\r\n    private privAudioStream: PullAudioOutputStreamImpl;\r\n    private privTimeoutToken: any;\r\n    private privTurnManager: DialogServiceTurnStateManager;\r\n\r\n    public constructor(manager: DialogServiceTurnStateManager, requestId: string) {\r\n        this.privRequestId = requestId;\r\n        this.privIsCompleted = false;\r\n        this.privAudioStream = null;\r\n        this.privTurnManager = manager;\r\n        this.resetTurnEndTimeout();\r\n    }\r\n\r\n    public get audioStream(): PullAudioOutputStreamImpl {\r\n        // Called when is needed to stream.\r\n        this.resetTurnEndTimeout();\r\n        return this.privAudioStream;\r\n    }\r\n\r\n    public processActivityPayload(payload: ActivityPayloadResponse, audioFormat?: AudioOutputFormatImpl): PullAudioOutputStreamImpl {\r\n        if (payload.messageDataStreamType === MessageDataStreamType.TextToSpeechAudio) {\r\n            this.privAudioStream = AudioOutputStream.createPullStream() as PullAudioOutputStreamImpl;\r\n            this.privAudioStream.format = (audioFormat !== undefined) ? audioFormat : AudioOutputFormatImpl.getDefaultOutputFormat();\r\n        }\r\n        return this.privAudioStream;\r\n    }\r\n\r\n    public endAudioStream(): void {\r\n        if (this.privAudioStream !== null && !this.privAudioStream.isClosed) {\r\n            this.privAudioStream.close();\r\n        }\r\n    }\r\n\r\n    public complete(): void {\r\n        if (this.privTimeoutToken !== undefined) {\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n            clearTimeout(this.privTimeoutToken);\r\n        }\r\n        this.endAudioStream();\r\n    }\r\n\r\n    private resetTurnEndTimeout(): void {\r\n        if (this.privTimeoutToken !== undefined) {\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n            clearTimeout(this.privTimeoutToken);\r\n        }\r\n        this.privTimeoutToken = setTimeout((): void => {\r\n            this.privTurnManager.CompleteTurn(this.privRequestId);\r\n            return;\r\n        }, 2000);\r\n    }\r\n}\r\n","'use strict'\nconst encodings = new Set(['json', 'buffer', 'string'])\n\nmodule.exports = mkrequest => (...args) => {\n  const statusCodes = new Set()\n  let method\n  let encoding\n  let headers\n  let baseurl = ''\n\n  args.forEach(arg => {\n    if (typeof arg === 'string') {\n      if (arg.toUpperCase() === arg) {\n        if (method) {\n          const msg = `Can't set method to ${arg}, already set to ${method}.`\n          throw new Error(msg)\n        } else {\n          method = arg\n        }\n      } else if (arg.startsWith('http:') || arg.startsWith('https:')) {\n        baseurl = arg\n      } else {\n        if (encodings.has(arg)) {\n          encoding = arg\n        } else {\n          throw new Error(`Unknown encoding, ${arg}`)\n        }\n      }\n    } else if (typeof arg === 'number') {\n      statusCodes.add(arg)\n    } else if (typeof arg === 'object') {\n      if (Array.isArray(arg) || arg instanceof Set) {\n        arg.forEach(code => statusCodes.add(code))\n      } else {\n        if (headers) {\n          throw new Error('Cannot set headers twice.')\n        }\n        headers = arg\n      }\n    } else {\n      throw new Error(`Unknown type: ${typeof arg}`)\n    }\n  })\n\n  if (!method) method = 'GET'\n  if (statusCodes.size === 0) {\n    statusCodes.add(200)\n  }\n\n  return mkrequest(statusCodes, method, encoding, headers, baseurl)\n}\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport { SessionEventArgs } from \"./Exports.js\";\r\n\r\n/**\r\n * Defines payload for connection events like Connected/Disconnected.\r\n * Added in version 1.2.0\r\n */\r\nexport class ConnectionEventArgs extends SessionEventArgs {\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SpeechSynthesisConnectionFactory } from \"../common.speech/SpeechSynthesisConnectionFactory.js\";\r\nimport { SynthesisRestAdapter } from \"../common.speech/SynthesisRestAdapter.js\";\r\nimport { SynthesizerConfig } from \"../common.speech/SynthesizerConfig.js\";\r\nimport {\r\n    AvatarSynthesisAdapter,\r\n    IAuthentication,\r\n    ISynthesisConnectionFactory,\r\n    SpeechServiceConfig,\r\n    SynthesisAdapterBase\r\n} from \"../common.speech/Exports.js\";\r\nimport { createNoDashGuid, Deferred, Events, EventType, PlatformEvent } from \"../common/Exports.js\";\r\nimport { AudioOutputFormatImpl } from \"./Audio/AudioOutputFormat.js\";\r\nimport {\r\n    AvatarConfig,\r\n    AvatarEventArgs,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SpeechConfig,\r\n    SpeechSynthesisOutputFormat,\r\n    SpeechSynthesisResult,\r\n    SynthesisResult,\r\n    Synthesizer\r\n} from \"./Exports.js\";\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport { SynthesisRequest } from \"./Synthesizer.js\";\r\n\r\n/**\r\n * Defines the avatar synthesizer.\r\n * @class AvatarSynthesizer\r\n * Added in version 1.33.0\r\n *\r\n * @experimental This feature is experimental and might change or have limited support.\r\n */\r\nexport class AvatarSynthesizer extends Synthesizer {\r\n    protected privProperties: PropertyCollection;\r\n    private privAvatarConfig: AvatarConfig;\r\n    private privIceServers: RTCIceServer[];\r\n    /**\r\n     * Defines event handler for avatar events.\r\n     * @member AvatarSynthesizer.prototype.avatarEventReceived\r\n     * @function\r\n     * @public\r\n     */\r\n    public avatarEventReceived: (sender: AvatarSynthesizer, event: AvatarEventArgs) => void;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - The speech config.\r\n     * @param {AvatarConfig} avatarConfig - The talking avatar config.\r\n     */\r\n    public constructor(speechConfig: SpeechConfig, avatarConfig: AvatarConfig) {\r\n        super(speechConfig);\r\n\r\n        Contracts.throwIfNullOrUndefined(avatarConfig, \"avatarConfig\");\r\n\r\n        this.privConnectionFactory = new SpeechSynthesisConnectionFactory();\r\n        this.privAvatarConfig = avatarConfig;\r\n        this.implCommonSynthesizeSetup();\r\n    }\r\n\r\n    protected implCommonSynthesizeSetup(): void {\r\n        super.implCommonSynthesizeSetup();\r\n\r\n        // The service checks the audio format setting while it ignores it in avatar synthesis.\r\n        this.privAdapter.audioOutputFormat = AudioOutputFormatImpl.fromSpeechSynthesisOutputFormat(\r\n            SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Starts the talking avatar session and establishes the WebRTC connection.\r\n     * @member AvatarSynthesizer.prototype.startAvatarAsync\r\n     * @function\r\n     * @public\r\n     * @param {AvatarWebRTCConnectionInfo} peerConnection - The peer connection.\r\n     * @returns {Promise<SynthesisResult>} The promise of the connection result.\r\n     */\r\n    public async startAvatarAsync(peerConnection: RTCPeerConnection): Promise<SynthesisResult> {\r\n        Contracts.throwIfNullOrUndefined(peerConnection, \"peerConnection\");\r\n        this.privIceServers = peerConnection.getConfiguration().iceServers;\r\n        Contracts.throwIfNullOrUndefined(this.privIceServers, \"Ice servers must be set.\");\r\n        const iceGatheringDone = new Deferred<void>();\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event\r\n        peerConnection.onicegatheringstatechange = (): void => {\r\n            Events.instance.onEvent(new PlatformEvent(\"peer connection: ice gathering state: \" + peerConnection.iceGatheringState, EventType.Debug));\r\n            if (peerConnection.iceGatheringState === \"complete\") {\r\n                Events.instance.onEvent(new PlatformEvent(\"peer connection: ice gathering complete.\", EventType.Info));\r\n                iceGatheringDone.resolve();\r\n            }\r\n        };\r\n        peerConnection.onicecandidate = (event: RTCPeerConnectionIceEvent): void => {\r\n            if (event.candidate) {\r\n                Events.instance.onEvent(new PlatformEvent(\"peer connection: ice candidate: \" + event.candidate.candidate, EventType.Debug));\r\n            } else {\r\n                Events.instance.onEvent(new PlatformEvent(\"peer connection: ice candidate: complete\", EventType.Debug));\r\n                iceGatheringDone.resolve();\r\n            }\r\n        };\r\n        // Set a timeout for ice gathering, currently 2 seconds.\r\n        setTimeout((): void => {\r\n            if (peerConnection.iceGatheringState !== \"complete\") {\r\n                Events.instance.onEvent(new PlatformEvent(\"peer connection: ice gathering timeout.\", EventType.Warning));\r\n                iceGatheringDone.resolve();\r\n            }\r\n        }, 2000);\r\n        const sdp: RTCSessionDescriptionInit = await peerConnection.createOffer();\r\n        await peerConnection.setLocalDescription(sdp);\r\n        await iceGatheringDone.promise;\r\n        Events.instance.onEvent(new PlatformEvent(\"peer connection: got local SDP.\", EventType.Info));\r\n        this.privProperties.setProperty(PropertyId.TalkingAvatarService_WebRTC_SDP, JSON.stringify(peerConnection.localDescription));\r\n\r\n        const result: SpeechSynthesisResult = await this.speak(\"\", false);\r\n        if (result.reason !== ResultReason.SynthesizingAudioCompleted) {\r\n            return new SynthesisResult(\r\n                result.resultId,\r\n                result.reason,\r\n                result.errorDetails,\r\n                result.properties,\r\n            );\r\n        }\r\n        const sdpAnswerString: string = atob(result.properties.getProperty(PropertyId.TalkingAvatarService_WebRTC_SDP));\r\n        const sdpAnswer: RTCSessionDescription = new RTCSessionDescription(\r\n            JSON.parse(sdpAnswerString) as RTCSessionDescriptionInit,\r\n        );\r\n        await peerConnection.setRemoteDescription(sdpAnswer);\r\n        return new SynthesisResult(\r\n            result.resultId,\r\n            result.reason,\r\n            undefined,\r\n            result.properties,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Speaks plain text asynchronously. The rendered audio and video will be sent via the WebRTC connection.\r\n     * @member AvatarSynthesizer.prototype.speakTextAsync\r\n     * @function\r\n     * @public\r\n     * @param {string} text - The plain text to speak.\r\n     * @returns {Promise<SynthesisResult>} The promise of the synthesis result.\r\n     */\r\n    public async speakTextAsync(text: string): Promise<SynthesisResult> {\r\n        const r = await this.speak(text, false);\r\n        return new SynthesisResult(\r\n            r.resultId,\r\n            r.reason,\r\n            r.errorDetails,\r\n            r.properties,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Speaks SSML asynchronously. The rendered audio and video will be sent via the WebRTC connection.\r\n     * @member AvatarSynthesizer.prototype.speakSsmlAsync\r\n     * @function\r\n     * @public\r\n     * @param {string} ssml - The SSML text to speak.\r\n     * @returns {Promise<SynthesisResult>} The promise of the synthesis result.\r\n     */\r\n    public async speakSsmlAsync(ssml: string): Promise<SynthesisResult> {\r\n        const r = await this.speak(ssml, true);\r\n        return new SynthesisResult(\r\n            r.resultId,\r\n            r.reason,\r\n            r.errorDetails,\r\n            r.properties,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Speaks text asynchronously. The avatar will switch to idle state.\r\n     * @member AvatarSynthesizer.prototype.stopSpeakingAsync\r\n     * @function\r\n     * @public\r\n     * @returns {Promise<void>} The promise of the void result.\r\n     */\r\n    public async stopSpeakingAsync(): Promise<void> {\r\n        while (this.synthesisRequestQueue.length() > 0) {\r\n            const request = await this.synthesisRequestQueue.dequeue();\r\n            request.err(\"Synthesis is canceled by user.\");\r\n        }\r\n        return this.privAdapter.stopSpeaking();\r\n    }\r\n\r\n    /**\r\n     * Stops the talking avatar session and closes the WebRTC connection.\r\n     * For now, this is the same as close().\r\n     * You need to create a new AvatarSynthesizer instance to start a new session.\r\n     * @member AvatarSynthesizer.prototype.stopAvatarAsync\r\n     * @function\r\n     * @public\r\n     * @returns {Promise<void>} The promise of the void result.\r\n     */\r\n    public async stopAvatarAsync(): Promise<void> {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n        return this.dispose(true);\r\n    }\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member AvatarSynthesizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public async close(): Promise<void> {\r\n        if (this.privDisposed) {\r\n            return;\r\n        }\r\n\r\n        return this.dispose(true);\r\n    }\r\n\r\n    /**\r\n     * Gets the ICE servers. Internal use only.\r\n     */\r\n    public get iceServers(): RTCIceServer[] {\r\n        return this.privIceServers;\r\n    }\r\n\r\n    // Creates the synthesis adapter\r\n    protected createSynthesisAdapter(\r\n        authentication: IAuthentication,\r\n        connectionFactory: ISynthesisConnectionFactory,\r\n        synthesizerConfig: SynthesizerConfig): SynthesisAdapterBase {\r\n        return new AvatarSynthesisAdapter(\r\n            authentication,\r\n            connectionFactory,\r\n            synthesizerConfig,\r\n            this,\r\n            this.privAvatarConfig);\r\n    }\r\n\r\n    protected createRestSynthesisAdapter(\r\n        _authentication: IAuthentication,\r\n        _synthesizerConfig: SynthesizerConfig): SynthesisRestAdapter {\r\n        return undefined;\r\n    }\r\n\r\n    protected createSynthesizerConfig(speechConfig: SpeechServiceConfig): SynthesizerConfig {\r\n        const config = super.createSynthesizerConfig(speechConfig);\r\n        config.avatarEnabled = true;\r\n        return config;\r\n    }\r\n\r\n    protected async speak(text: string, isSSML: boolean): Promise<SpeechSynthesisResult> {\r\n        const requestId = createNoDashGuid();\r\n        const deferredResult = new Deferred<SpeechSynthesisResult>();\r\n        this.synthesisRequestQueue.enqueue(new SynthesisRequest(requestId, text, isSSML,\r\n            (e: SpeechSynthesisResult): void => {\r\n                deferredResult.resolve(e);\r\n                this.privSynthesizing = false;\r\n                void this.adapterSpeak();\r\n            },\r\n            (e: string): void => {\r\n                deferredResult.reject(e);\r\n                this.privSynthesizing = false;\r\n            }));\r\n        void this.adapterSpeak();\r\n        return deferredResult.promise;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    RestConfigBase,\r\n    WebsocketConnection,\r\n} from \"../../common.browser/Exports.js\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary,\r\n} from \"../../common/Exports.js\";\r\nimport { StringUtils } from \"../../common/StringUtils.js\";\r\nimport { Contracts } from \"../../sdk/Contracts.js\";\r\nimport {\r\n    PropertyId\r\n} from \"../../sdk/Exports.js\";\r\nimport {\r\n    ConversationImpl\r\n} from \"../../sdk/Transcription/Conversation.js\";\r\nimport { HeaderNames } from \"../HeaderNames.js\";\r\nimport { QueryParameterNames } from \"../QueryParameterNames.js\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./../ConnectionFactoryBase.js\";\r\nimport {\r\n    AuthInfo,\r\n    RecognizerConfig,\r\n    TranscriberConnectionFactory,\r\n    TranslationConnectionFactory,\r\n    WebsocketMessageFormatter,\r\n} from \"./../Exports.js\";\r\n\r\n/**\r\n * Connection factory for the conversation translator. Handles connecting to the regular translator endpoint,\r\n * as well as the virtual microphone array transcription endpoint\r\n */\r\nexport class ConversationTranslatorConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    private static readonly CTS_VIRT_MIC_PATH: string = \"/speech/recognition/dynamicaudio\";\r\n\r\n    private privConvGetter: () => ConversationImpl;\r\n\r\n    public constructor(convGetter: () => ConversationImpl) {\r\n        super();\r\n\r\n        Contracts.throwIfNullOrUndefined(convGetter, \"convGetter\");\r\n        this.privConvGetter = convGetter;\r\n    }\r\n\r\n    public create(config: RecognizerConfig, authInfo: AuthInfo, connectionId?: string): IConnection {\r\n        const isVirtMicArrayEndpoint = config.parameters.getProperty(\"ConversationTranslator_MultiChannelAudio\", \"\").toUpperCase() === \"TRUE\";\r\n\r\n        const convInfo = this.privConvGetter().room;\r\n        const region = convInfo.cognitiveSpeechRegion || config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, \"\");\r\n\r\n        const replacementValues: IStringDictionary<string> = {\r\n            hostSuffix: ConnectionFactoryBase.getHostSuffix(region),\r\n            path: ConversationTranslatorConnectionFactory.CTS_VIRT_MIC_PATH,\r\n            region: encodeURIComponent(region)\r\n        };\r\n        replacementValues[QueryParameterNames.Language] = encodeURIComponent(config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, \"\"));\r\n        replacementValues[QueryParameterNames.CtsMeetingId] = encodeURIComponent(convInfo.roomId);\r\n        replacementValues[QueryParameterNames.CtsDeviceId] = encodeURIComponent(convInfo.participantId);\r\n        replacementValues[QueryParameterNames.CtsIsParticipant] = convInfo.isHost ? \"\" : (\"&\" + QueryParameterNames.CtsIsParticipant);\r\n\r\n        let endpointUrl: string = \"\";\r\n        const queryParams: IStringDictionary<string> = {};\r\n        const headers: IStringDictionary<string> = {};\r\n\r\n        if (isVirtMicArrayEndpoint) {\r\n            // connecting to the conversation transcription virtual microphone array endpoint\r\n            endpointUrl = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint);\r\n            if (!endpointUrl) {\r\n                const hostName = config.parameters.getProperty(\r\n                    PropertyId.SpeechServiceConnection_Host,\r\n                    \"transcribe.{region}.cts.speech{hostSuffix}\");\r\n\r\n                endpointUrl = \"wss://\" + hostName + \"{path}\";\r\n            }\r\n\r\n            // because the region can change during a session, we support being passed a format string which we can then\r\n            // replace with the correct information.\r\n            endpointUrl = StringUtils.formatString(endpointUrl, replacementValues);\r\n\r\n            const parsedUrl = new URL(endpointUrl);\r\n            parsedUrl.searchParams.forEach((val: string, key: string): void => {\r\n                queryParams[key] = val;\r\n            });\r\n\r\n            const connFactory = new TranscriberConnectionFactory();\r\n            connFactory.setQueryParams(queryParams, config, endpointUrl);\r\n\r\n            // Some query parameters are required for the CTS endpoint, let's explicity set them here\r\n            queryParams[QueryParameterNames.CtsMeetingId] = replacementValues[QueryParameterNames.CtsMeetingId];\r\n            queryParams[QueryParameterNames.CtsDeviceId] = replacementValues[QueryParameterNames.CtsDeviceId];\r\n            if (!convInfo.isHost) {\r\n                queryParams[QueryParameterNames.CtsIsParticipant] = \"\"; // this doesn't have a value so set to an empty string\r\n            }\r\n\r\n            if (!(QueryParameterNames.Format in queryParams)) {\r\n                queryParams[QueryParameterNames.Format] = \"simple\";\r\n            }\r\n\r\n            parsedUrl.searchParams.forEach((val: string, key: string): void => {\r\n                parsedUrl.searchParams.set(key, queryParams[key]);\r\n                delete queryParams[key];\r\n            });\r\n\r\n            endpointUrl = parsedUrl.toString();\r\n\r\n        } else {\r\n            // connecting to regular translation endpoint\r\n            const connFactory = new TranslationConnectionFactory();\r\n\r\n            endpointUrl = connFactory.getEndpointUrl(config, true);\r\n            endpointUrl = StringUtils.formatString(endpointUrl, replacementValues);\r\n\r\n            connFactory.setQueryParams(queryParams, config, endpointUrl);\r\n        }\r\n\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n        headers[RestConfigBase.configParams.token] = convInfo.token;\r\n        if (!!authInfo.token) {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n\r\n        const enableCompression = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"\").toUpperCase() === \"TRUE\";\r\n        return new WebsocketConnection(endpointUrl, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport { EventType, PlatformEvent } from \"./PlatformEvent.js\";\r\n\r\nexport class OCSPEvent extends PlatformEvent {\r\n    private privSignature: string;\r\n\r\n    public constructor(eventName: string, eventType: EventType, signature: string) {\r\n        super(eventName, eventType);\r\n\r\n        this.privSignature = signature;\r\n    }\r\n}\r\n\r\nexport class OCSPMemoryCacheHitEvent extends OCSPEvent {\r\n    public constructor(signature: string) {\r\n        super(\"OCSPMemoryCacheHitEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPCacheMissEvent extends OCSPEvent {\r\n    public constructor(signature: string) {\r\n        super(\"OCSPCacheMissEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPDiskCacheHitEvent extends OCSPEvent {\r\n    public constructor(signature: string) {\r\n        super(\"OCSPDiskCacheHitEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPCacheUpdateNeededEvent extends OCSPEvent {\r\n    public constructor(signature: string) {\r\n        super(\"OCSPCacheUpdateNeededEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPMemoryCacheStoreEvent extends OCSPEvent {\r\n    public constructor(signature: string) {\r\n        super(\"OCSPMemoryCacheStoreEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPDiskCacheStoreEvent extends OCSPEvent {\r\n    public constructor(signature: string) {\r\n        super(\"OCSPDiskCacheStoreEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPCacheUpdateCompleteEvent extends OCSPEvent {\r\n    public constructor(signature: string) {\r\n        super(\"OCSPCacheUpdateCompleteEvent\", EventType.Debug, signature);\r\n    }\r\n}\r\n\r\nexport class OCSPStapleReceivedEvent extends OCSPEvent {\r\n    public constructor() {\r\n        super(\"OCSPStapleReceivedEvent\", EventType.Debug, \"\");\r\n    }\r\n}\r\n\r\nexport class OCSPWSUpgradeStartedEvent extends OCSPEvent {\r\n    public constructor(serialNumber: string) {\r\n        super(\"OCSPWSUpgradeStartedEvent\", EventType.Debug, serialNumber);\r\n    }\r\n}\r\n\r\nexport class OCSPCacheEntryExpiredEvent extends OCSPEvent {\r\n    private privExpireTime: number;\r\n\r\n    public constructor(serialNumber: string, expireTime: number) {\r\n        super(\"OCSPCacheEntryExpiredEvent\", EventType.Debug, serialNumber);\r\n        this.privExpireTime = expireTime;\r\n    }\r\n}\r\n\r\nexport class OCSPCacheEntryNeedsRefreshEvent extends OCSPEvent {\r\n    private privExpireTime: number;\r\n    private privStartTime: number;\r\n\r\n    public constructor(serialNumber: string, startTime: number, expireTime: number) {\r\n        super(\"OCSPCacheEntryNeedsRefreshEvent\", EventType.Debug, serialNumber);\r\n        this.privExpireTime = expireTime;\r\n        this.privStartTime = startTime;\r\n    }\r\n}\r\n\r\nexport class OCSPCacheHitEvent extends OCSPEvent {\r\n    private privExpireTime: number;\r\n    private privStartTime: number;\r\n    private privExpireTimeString: string;\r\n    private privStartTimeString: string;\r\n\r\n    public constructor(serialNumber: string, startTime: number, expireTime: number) {\r\n        super(\"OCSPCacheHitEvent\", EventType.Debug, serialNumber);\r\n        this.privExpireTime = expireTime;\r\n        this.privExpireTimeString = new Date(expireTime).toLocaleDateString();\r\n        this.privStartTime = startTime;\r\n        this.privStartTimeString = new Date(startTime).toLocaleTimeString();\r\n    }\r\n}\r\n\r\nexport class OCSPVerificationFailedEvent extends OCSPEvent {\r\n    private privError: string;\r\n\r\n    public constructor(serialNumber: string, error: string) {\r\n        super(\"OCSPVerificationFailedEvent\", EventType.Debug, serialNumber);\r\n        this.privError = error;\r\n    }\r\n}\r\n\r\nexport class OCSPCacheFetchErrorEvent extends OCSPEvent {\r\n    private privError: string;\r\n\r\n    public constructor(serialNumber: string, error: string) {\r\n        super(\"OCSPCacheFetchErrorEvent\", EventType.Debug, serialNumber);\r\n        this.privError = error;\r\n    }\r\n}\r\n\r\nexport class OCSPResponseRetrievedEvent extends OCSPEvent {\r\n    public constructor(serialNumber: string) {\r\n        super(\"OCSPResponseRetrievedEvent\", EventType.Debug, serialNumber);\r\n    }\r\n}\r\n\r\nexport class OCSPCacheUpdateErrorEvent extends OCSPEvent {\r\n    private privError: string;\r\n\r\n    public constructor(serialNumber: string, error: string) {\r\n        super(\"OCSPCacheUpdateErrorEvent\", EventType.Debug, serialNumber);\r\n        this.privError = error;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport { SpeakerRecognitionModel } from \"./SpeakerRecognitionModel.js\";\r\nimport {\r\n    VoiceProfile,\r\n    VoiceProfileType,\r\n} from \"./Exports.js\";\r\n\r\n/**\r\n * Defines SpeakerIdentificationModel class for Speaker Recognition\r\n * Model contains a set of profiles against which to identify speaker(s)\r\n * @class SpeakerIdentificationModel\r\n */\r\nexport class SpeakerIdentificationModel implements SpeakerRecognitionModel {\r\n    private privVoiceProfiles: VoiceProfile[] = [];\r\n    private privProfileIds: string[] = [];\r\n\r\n    private constructor(profiles: VoiceProfile[]) {\r\n        Contracts.throwIfNullOrUndefined(profiles, \"VoiceProfiles\");\r\n        if (profiles.length === 0) {\r\n            throw new Error(\"Empty Voice Profiles array\");\r\n        }\r\n        for (const profile of profiles) {\r\n            if (profile.profileType !== VoiceProfileType.TextIndependentIdentification) {\r\n                throw new Error(\"Identification model can only be created from Identification profile: \" + profile.profileId);\r\n            }\r\n            this.privVoiceProfiles.push(profile);\r\n            this.privProfileIds.push(profile.profileId);\r\n        }\r\n    }\r\n    public static fromProfiles(profiles: VoiceProfile[]): SpeakerIdentificationModel {\r\n        return new SpeakerIdentificationModel(profiles);\r\n    }\r\n\r\n    public get voiceProfileIds(): string {\r\n        return this.privProfileIds.join(\",\");\r\n    }\r\n\r\n    public get profileIds(): string[] {\r\n        return this.privProfileIds;\r\n    }\r\n\r\n    public get scenario(): string {\r\n        return \"TextIndependentIdentification\";\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyId } from \"./Exports.js\";\r\n\r\n/**\r\n * Represents collection of properties and their values.\r\n * @class PropertyCollection\r\n */\r\nexport class PropertyCollection {\r\n    private privKeys: string[] = [] as string[];\r\n    private privValues: string[] = [] as string[];\r\n\r\n    /**\r\n     * Returns the property value in type String.\r\n     * Currently only String, int and bool are allowed.\r\n     * If the name is not available, the specified defaultValue is returned.\r\n     * @member PropertyCollection.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} key - The parameter name.\r\n     * @param {string | number | boolean} def - The default value which is returned if the parameter\r\n     * is not available in the collection.\r\n     * @returns {string} value of the parameter.\r\n     */\r\n    public getProperty(key: PropertyId | string, def?: string | number | boolean): string {\r\n        let keyToUse: string;\r\n\r\n        if (typeof key === \"string\") {\r\n            keyToUse = key;\r\n        } else {\r\n            keyToUse = PropertyId[key];\r\n        }\r\n\r\n        for (let n = 0; n < this.privKeys.length; n++) {\r\n            if (this.privKeys[n] === keyToUse) {\r\n                return this.privValues[n];\r\n            }\r\n        }\r\n\r\n        if (def === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        return String(def);\r\n    }\r\n\r\n    /**\r\n     * Sets the String value of the parameter specified by name.\r\n     * @member PropertyCollection.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} key - The parameter name.\r\n     * @param {string} value - The value of the parameter.\r\n     */\r\n    public setProperty(key: string | PropertyId, value: string): void {\r\n        let keyToUse: string;\r\n\r\n        if (typeof key === \"string\") {\r\n            keyToUse = key;\r\n        } else {\r\n            keyToUse = PropertyId[key];\r\n        }\r\n\r\n        for (let n = 0; n < this.privKeys.length; n++) {\r\n            if (this.privKeys[n] === keyToUse) {\r\n                this.privValues[n] = value;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.privKeys.push(keyToUse);\r\n        this.privValues.push(value);\r\n    }\r\n\r\n    /**\r\n     * Clones the collection.\r\n     * @member PropertyCollection.prototype.clone\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} A copy of the collection.\r\n     */\r\n    public clone(): PropertyCollection {\r\n        const clonedMap = new PropertyCollection();\r\n\r\n        for (let n = 0; n < this.privKeys.length; n++) {\r\n            clonedMap.privKeys.push(this.privKeys[n]);\r\n            clonedMap.privValues.push(this.privValues[n]);\r\n        }\r\n\r\n        return clonedMap;\r\n    }\r\n\r\n    /**\r\n     * Merges this set of properties into another, no overwrites.\r\n     * @member PropertyCollection.prototype.mergeTo\r\n     * @function\r\n     * @public\r\n     * @param {PropertyCollection}  destinationCollection - The collection to merge into.\r\n     */\r\n    public mergeTo(destinationCollection: PropertyCollection): void {\r\n        this.privKeys.forEach((key: string | PropertyId): void => {\r\n            if (destinationCollection.getProperty(key, undefined) === undefined) {\r\n                const value = this.getProperty(key);\r\n                destinationCollection.setProperty(key, value);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get the keys in Property Collection.\r\n     * @member PropertyCollection.prototype.keys\r\n     * @function\r\n     * @public\r\n     * @returns {string []} Keys in the collection.\r\n     */\r\n    public get keys(): string[] {\r\n        return this.privKeys;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ConnectionMessage, IStringDictionary, MessageType } from \"../../common/Exports.js\";\r\n\r\nexport class ConversationConnectionMessage extends ConnectionMessage {\r\n    private privConversationMessageType: string;\r\n\r\n    public constructor(\r\n        messageType: MessageType,\r\n        body: any,\r\n        headers?: IStringDictionary<string>,\r\n        id?: string) {\r\n            super(messageType, body, headers, id);\r\n            const json: { type: string } = JSON.parse(this.textBody) as { type: string };\r\n            if (json.type !== undefined) {\r\n                this.privConversationMessageType = json.type;\r\n            }\r\n    }\r\n\r\n    public get conversationMessageType(): string {\r\n        return this.privConversationMessageType;\r\n    }\r\n}\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport {\r\n    connectivity,\r\n    ISpeechConfigAudioDevice,\r\n    type,\r\n} from \"../../common.speech/Exports.js\";\r\nimport {\r\n    AudioSourceEvent,\r\n    AudioSourceInitializingEvent,\r\n    AudioSourceReadyEvent,\r\n    AudioStreamNodeAttachedEvent,\r\n    AudioStreamNodeAttachingEvent,\r\n    AudioStreamNodeDetachedEvent,\r\n    ChunkedArrayBufferStream,\r\n    Events,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IStreamChunk,\r\n    Stream,\r\n} from \"../../common/Exports.js\";\r\nimport { createNoDashGuid } from \"../../common/Guid.js\";\r\nimport { AudioStreamFormat, PullAudioInputStreamCallback } from \"../Exports.js\";\r\nimport { AudioStreamFormatImpl } from \"./AudioStreamFormat.js\";\r\n\r\n/**\r\n * Represents audio input stream used for custom audio input configurations.\r\n * @class AudioInputStream\r\n */\r\nexport abstract class AudioInputStream {\r\n\r\n    /**\r\n     * Creates and initializes an instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\r\n     * @member AudioInputStream.createPushStream\r\n     * @function\r\n     * @public\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\r\n     * written to the push audio stream's write() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     * @returns {PushAudioInputStream} The audio input stream being created.\r\n     */\r\n    public static createPushStream(format?: AudioStreamFormat): PushAudioInputStream {\r\n        return PushAudioInputStream.create(format);\r\n    }\r\n\r\n    /**\r\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for read()\r\n     * and close() methods.\r\n     * @member AudioInputStream.createPullStream\r\n     * @function\r\n     * @public\r\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object, derived from\r\n     * PullAudioInputStreamCallback\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be returned from\r\n     * the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     * @returns {PullAudioInputStream} The audio input stream being created.\r\n     */\r\n    public static createPullStream(callback: PullAudioInputStreamCallback, format?: AudioStreamFormat): PullAudioInputStream {\r\n        return PullAudioInputStream.create(callback, format);\r\n        // throw new Error(\"Oops\");\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member AudioInputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * Represents memory backed push audio input stream used for custom audio input configurations.\r\n * @class PushAudioInputStream\r\n */\r\nexport abstract class PushAudioInputStream extends AudioInputStream {\r\n\r\n    /**\r\n     * Creates a memory backed PushAudioInputStream with the specified audio format.\r\n     * @member PushAudioInputStream.create\r\n     * @function\r\n     * @public\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be written to the\r\n     * push audio stream's write() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     * @returns {PushAudioInputStream} The push audio input stream being created.\r\n     */\r\n    public static create(format?: AudioStreamFormat): PushAudioInputStream {\r\n        return new PushAudioInputStreamImpl(format);\r\n    }\r\n\r\n    /**\r\n     * Writes the audio data specified by making an internal copy of the data.\r\n     * @member PushAudioInputStream.prototype.write\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\r\n     */\r\n    public abstract write(dataBuffer: ArrayBuffer): void;\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PushAudioInputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * Represents memory backed push audio input stream used for custom audio input configurations.\r\n * @private\r\n * @class PushAudioInputStreamImpl\r\n */\r\nexport class PushAudioInputStreamImpl extends PushAudioInputStream implements IAudioSource {\r\n\r\n    private privFormat: AudioStreamFormatImpl;\r\n    private privId: string;\r\n    private privEvents: EventSource<AudioSourceEvent>;\r\n    private privStream: Stream<ArrayBuffer>;\r\n\r\n    /**\r\n     * Creates and initalizes an instance with the given values.\r\n     * @constructor\r\n     * @param {AudioStreamFormat} format - The audio stream format.\r\n     */\r\n    public constructor(format?: AudioStreamFormat) {\r\n        super();\r\n        if (format === undefined) {\r\n            this.privFormat = AudioStreamFormatImpl.getDefaultInputFormat();\r\n        } else {\r\n            this.privFormat = format as AudioStreamFormatImpl;\r\n        }\r\n        this.privEvents = new EventSource<AudioSourceEvent>();\r\n        this.privId = createNoDashGuid();\r\n        this.privStream = new ChunkedArrayBufferStream(this.privFormat.avgBytesPerSec / 10);\r\n    }\r\n\r\n    /**\r\n     * Format information for the audio\r\n     */\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return Promise.resolve(this.privFormat);\r\n    }\r\n\r\n    /**\r\n     * Writes the audio data specified by making an internal copy of the data.\r\n     * @member PushAudioInputStreamImpl.prototype.write\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\r\n     */\r\n    public write(dataBuffer: ArrayBuffer): void {\r\n        this.privStream.writeStreamChunk({\r\n            buffer: dataBuffer,\r\n            isEnd: false,\r\n            timeReceived: Date.now()\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PushAudioInputStreamImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        this.privStream.close();\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public turnOn(): Promise<void> {\r\n        this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\r\n        this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n        return;\r\n    }\r\n\r\n    public async attach(audioNodeId: string): Promise<IAudioStreamNode> {\r\n        this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\r\n\r\n        await this.turnOn();\r\n        const stream = this.privStream;\r\n        this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\r\n        return {\r\n            detach: async (): Promise<void> => {\r\n                this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n                return this.turnOff();\r\n            },\r\n            id: (): string => audioNodeId,\r\n            read: (): Promise<IStreamChunk<ArrayBuffer>> => stream.read(),\r\n        };\r\n    }\r\n\r\n    public detach(audioNodeId: string): void {\r\n        this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n    }\r\n\r\n    public turnOff(): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privEvents;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return Promise.resolve({\r\n            bitspersample: this.privFormat.bitsPerSample,\r\n            channelcount: this.privFormat.channels,\r\n            connectivity: connectivity.Unknown,\r\n            manufacturer: \"Speech SDK\",\r\n            model: \"PushStream\",\r\n            samplerate: this.privFormat.samplesPerSec,\r\n            type: type.Stream,\r\n        });\r\n    }\r\n\r\n    private onEvent(event: AudioSourceEvent): void {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n\r\n    private toBuffer(arrayBuffer: ArrayBuffer): Buffer {\r\n        const buf: Buffer = Buffer.alloc(arrayBuffer.byteLength);\r\n        const view: Uint8Array = new Uint8Array(arrayBuffer);\r\n        for (let i = 0; i < buf.length; ++i) {\r\n            buf[i] = view[i];\r\n        }\r\n        return buf;\r\n    }\r\n}\r\n\r\n/*\r\n * Represents audio input stream used for custom audio input configurations.\r\n * @class PullAudioInputStream\r\n */\r\nexport abstract class PullAudioInputStream extends AudioInputStream {\r\n    /**\r\n     * Creates and initializes and instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() {\r\n super();\r\n}\r\n\r\n    /**\r\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for\r\n     * read() and close() methods, using the default format (16 kHz 16bit mono PCM).\r\n     * @member PullAudioInputStream.create\r\n     * @function\r\n     * @public\r\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object,\r\n     * derived from PullAudioInputStreamCustomCallback\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\r\n     * returned from the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     * @returns {PullAudioInputStream} The push audio input stream being created.\r\n     */\r\n    public static create(callback: PullAudioInputStreamCallback, format?: AudioStreamFormat): PullAudioInputStream {\r\n        return new PullAudioInputStreamImpl(callback, format as AudioStreamFormatImpl);\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member PullAudioInputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n\r\n}\r\n\r\n/**\r\n * Represents audio input stream used for custom audio input configurations.\r\n * @private\r\n * @class PullAudioInputStreamImpl\r\n */\r\nexport class PullAudioInputStreamImpl extends PullAudioInputStream implements IAudioSource {\r\n\r\n    private privCallback: PullAudioInputStreamCallback;\r\n    private privFormat: AudioStreamFormatImpl;\r\n    private privId: string;\r\n    private privEvents: EventSource<AudioSourceEvent>;\r\n    private privIsClosed: boolean;\r\n    private privBufferSize: number;\r\n\r\n    /**\r\n     * Creates a PullAudioInputStream that delegates to the specified callback interface for\r\n     * read() and close() methods, using the default format (16 kHz 16bit mono PCM).\r\n     * @constructor\r\n     * @param {PullAudioInputStreamCallback} callback - The custom audio input object,\r\n     * derived from PullAudioInputStreamCustomCallback\r\n     * @param {AudioStreamFormat} format - The audio data format in which audio will be\r\n     * returned from the callback's read() method (Required if format is not 16 kHz 16bit mono PCM).\r\n     */\r\n    public constructor(callback: PullAudioInputStreamCallback, format?: AudioStreamFormatImpl) {\r\n        super();\r\n        if (undefined === format) {\r\n            this.privFormat = AudioStreamFormat.getDefaultInputFormat() as AudioStreamFormatImpl;\r\n        } else {\r\n            this.privFormat = format;\r\n        }\r\n        this.privEvents = new EventSource<AudioSourceEvent>();\r\n        this.privId = createNoDashGuid();\r\n        this.privCallback = callback;\r\n        this.privIsClosed = false;\r\n        this.privBufferSize = this.privFormat.avgBytesPerSec / 10;\r\n    }\r\n\r\n    /**\r\n     * Format information for the audio\r\n     */\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return Promise.resolve(this.privFormat);\r\n    }\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PullAudioInputStreamImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        this.privIsClosed = true;\r\n        this.privCallback.close();\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public turnOn(): Promise<void> {\r\n        this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\r\n        this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n        return;\r\n    }\r\n\r\n    public async attach(audioNodeId: string): Promise<IAudioStreamNode> {\r\n        this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\r\n\r\n        await this.turnOn();\r\n        this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\r\n        return {\r\n            detach: (): Promise<void> => {\r\n                this.privCallback.close();\r\n                this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n                return this.turnOff();\r\n            },\r\n            id: (): string => audioNodeId,\r\n            read: (): Promise<IStreamChunk<ArrayBuffer>> => {\r\n                let totalBytes: number = 0;\r\n                let transmitBuff: ArrayBuffer;\r\n                // Until we have the minimum number of bytes to send in a transmission, keep asking for more.\r\n                while (totalBytes < this.privBufferSize) {\r\n                    // Sizing the read buffer to the delta between the perfect size and what's left means we won't ever get too much\r\n                    // data back.\r\n                    const readBuff: ArrayBuffer = new ArrayBuffer(this.privBufferSize - totalBytes);\r\n                    const pulledBytes: number = this.privCallback.read(readBuff);\r\n                    // If there is no return buffer yet defined, set the return buffer to the that was just populated.\r\n                    // This was, if we have enough data there's no copy penalty, but if we don't we have a buffer that's the\r\n                    // preferred size allocated.\r\n                    if (undefined === transmitBuff) {\r\n                        transmitBuff = readBuff;\r\n                    } else {\r\n                        // Not the first bite at the apple, so fill the return buffer with the data we got back.\r\n                        const intView: Int8Array = new Int8Array(transmitBuff);\r\n                        intView.set(new Int8Array(readBuff), totalBytes);\r\n                    }\r\n                    // If there are no bytes to read, just break out and be done.\r\n                    if (0 === pulledBytes) {\r\n                        break;\r\n                    }\r\n                    totalBytes += pulledBytes;\r\n                }\r\n                return Promise.resolve<IStreamChunk<ArrayBuffer>>({\r\n                    buffer: transmitBuff.slice(0, totalBytes),\r\n                    isEnd: this.privIsClosed || totalBytes === 0,\r\n                    timeReceived: Date.now(),\r\n                });\r\n            },\r\n        };\r\n    }\r\n\r\n    public detach(audioNodeId: string): void {\r\n        this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n    }\r\n\r\n    public turnOff(): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privEvents;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return Promise.resolve({\r\n            bitspersample: this.privFormat.bitsPerSample,\r\n            channelcount: this.privFormat.channels,\r\n            connectivity: connectivity.Unknown,\r\n            manufacturer: \"Speech SDK\",\r\n            model: \"PullStream\",\r\n            samplerate: this.privFormat.samplesPerSec,\r\n            type: type.Stream,\r\n        });\r\n    }\r\n\r\n    private onEvent(event: AudioSourceEvent): void {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ResultReason,\r\n    PropertyCollection,\r\n    SynthesisResult\r\n} from \"./Exports.js\";\r\n\r\n/**\r\n * Defines the avatar WebRTC connection result.\r\n * @class AvatarWebRTCConnectionResult\r\n * Added in version 1.33.0\r\n *\r\n * @experimental This feature is experimental and might change in the future.\r\n */\r\nexport class AvatarWebRTCConnectionResult extends SynthesisResult {\r\n    private readonly privSDPAnswer: RTCSessionDescriptionInit;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {RTCSessionDescriptionInit} SDPAnswer - The SDP answer of WebRTC connection.\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    public constructor(SDPAnswer?: RTCSessionDescriptionInit, resultId?: string, reason?: ResultReason, errorDetails?: string, properties?: PropertyCollection) {\r\n        super(resultId, reason, errorDetails, properties);\r\n        this.privSDPAnswer = SDPAnswer;\r\n    }\r\n\r\n    /**\r\n     * Specifies SDP (Session Description Protocol) answer of WebRTC connection.\r\n     * @member AvatarWebRTCConnectionResult.prototype.SDPAnswer\r\n     * @function\r\n     * @public\r\n     * @returns {RTCSessionDescriptionInit} Specifies the SDP answer of WebRTC connection.\r\n     */\r\n    public get SDPAnswer(): RTCSessionDescriptionInit {\r\n        return this.privSDPAnswer;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionStatus } from \"../Exports.js\";\r\n\r\n// speech.phrase\r\nexport interface ISimpleSpeechPhrase {\r\n    RecognitionStatus: RecognitionStatus;\r\n    DisplayText: string;\r\n    Offset?: number;\r\n    Duration?: number;\r\n    PrimaryLanguage?: IPrimaryLanguage;\r\n    SpeakerId?: string;\r\n    [key: string]: any;\r\n}\r\n\r\nexport interface IPrimaryLanguage {\r\n    Language: string;\r\n    Confidence: string;\r\n}\r\n\r\nexport class SimpleSpeechPhrase implements ISimpleSpeechPhrase {\r\n    private privSimpleSpeechPhrase: ISimpleSpeechPhrase;\r\n\r\n    private constructor(json: string, baseOffset: number = 0) {\r\n        this.privSimpleSpeechPhrase = JSON.parse(json) as ISimpleSpeechPhrase;\r\n        this.privSimpleSpeechPhrase.RecognitionStatus = this.mapRecognitionStatus(this.privSimpleSpeechPhrase.RecognitionStatus); // RecognitionStatus[this.privSimpleSpeechPhrase.RecognitionStatus as unknown as keyof typeof RecognitionStatus];\r\n        this.updateOffset(baseOffset);\r\n    }\r\n\r\n    public static fromJSON(json: string, baseOffset: number): SimpleSpeechPhrase {\r\n        return new SimpleSpeechPhrase(json, baseOffset);\r\n    }\r\n\r\n    private updateOffset(baseOffset: number): void {\r\n        this.privSimpleSpeechPhrase.Offset += baseOffset;\r\n    }\r\n\r\n    public asJson(): string {\r\n        const jsonObj = { ...this.privSimpleSpeechPhrase };\r\n        // Convert the enum value to its string representation for serialization purposes.\r\n        return JSON.stringify({\r\n            ...jsonObj,\r\n            RecognitionStatus: RecognitionStatus[jsonObj.RecognitionStatus] as keyof typeof RecognitionStatus\r\n        });\r\n    }\r\n\r\n    public get RecognitionStatus(): RecognitionStatus {\r\n        return this.privSimpleSpeechPhrase.RecognitionStatus;\r\n    }\r\n\r\n    public get DisplayText(): string {\r\n        return this.privSimpleSpeechPhrase.DisplayText;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSimpleSpeechPhrase.Offset;\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privSimpleSpeechPhrase.Duration;\r\n    }\r\n\r\n    public get Language(): string {\r\n        return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Language;\r\n    }\r\n\r\n    public get LanguageDetectionConfidence(): string {\r\n        return this.privSimpleSpeechPhrase.PrimaryLanguage === undefined ? undefined : this.privSimpleSpeechPhrase.PrimaryLanguage.Confidence;\r\n    }\r\n\r\n    public get SpeakerId(): string {\r\n        return this.privSimpleSpeechPhrase.SpeakerId;\r\n    }\r\n\r\n    private mapRecognitionStatus(status: any): RecognitionStatus {\r\n        if (typeof status === \"string\") {\r\n            return RecognitionStatus[status as keyof typeof RecognitionStatus];\r\n        } else if (typeof status === \"number\") {\r\n            return status;\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionEventArgs, TranslationRecognitionResult } from \"./Exports.js\";\r\n\r\n/**\r\n * Translation text result event arguments.\r\n * @class TranslationRecognitionEventArgs\r\n */\r\nexport class TranslationRecognitionEventArgs extends RecognitionEventArgs {\r\n    private privResult: TranslationRecognitionResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {TranslationRecognitionResult} result - The translation recognition result.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: TranslationRecognitionResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the recognition result.\r\n     * @member TranslationRecognitionEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {TranslationRecognitionResult} the recognition result.\r\n     */\r\n    public get result(): TranslationRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n","//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport {\r\n    ConnectionMessage\r\n} from \"./Exports.js\";\r\n\r\nexport class ConnectionMessageEventArgs {\r\n\r\n    private privConnectionMessage: ConnectionMessage;\r\n\r\n    public constructor(message: ConnectionMessage) {\r\n        this.privConnectionMessage = message;\r\n    }\r\n\r\n    /**\r\n     * Gets the <see cref=\"ConnectionMessage\"/> associated with this <see cref=\"ConnectionMessageEventArgs\"/>.\r\n     */\r\n    public get message(): ConnectionMessage {\r\n        return this.privConnectionMessage;\r\n    }\r\n\r\n    /**\r\n     * Returns a string that represents the connection message event.\r\n     */\r\n    public toString(): string {\r\n        return \"Message: \" + this.privConnectionMessage.toString();\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport {\r\n    SpeechRecognitionResult,\r\n    ConversationTranscriptionResult\r\n} from \"./Exports.js\";\r\n\r\n/**\r\n * Output format\r\n * @class AutoDetectSourceLanguageResult\r\n */\r\nexport class AutoDetectSourceLanguageResult {\r\n\r\n    private privLanguage: string;\r\n    private privLanguageDetectionConfidence: string;\r\n\r\n    private constructor(language: string, languageDetectionConfidence: string) {\r\n        Contracts.throwIfNullOrUndefined(language, \"language\");\r\n        Contracts.throwIfNullOrUndefined(languageDetectionConfidence, \"languageDetectionConfidence\");\r\n        this.privLanguage = language;\r\n        this.privLanguageDetectionConfidence = languageDetectionConfidence;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of AutoDetectSourceLanguageResult object from a SpeechRecognitionResult instance.\r\n     * @member AutoDetectSourceLanguageResult.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {SpeechRecognitionResult} result - The recognition result.\r\n     * @returns {AutoDetectSourceLanguageResult} AutoDetectSourceLanguageResult object being created.\r\n     */\r\n    public static fromResult(result: SpeechRecognitionResult): AutoDetectSourceLanguageResult {\r\n        return new AutoDetectSourceLanguageResult(result.language, result.languageDetectionConfidence);\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of AutoDetectSourceLanguageResult object from a ConversationTranscriptionResult instance.\r\n     * @member AutoDetectSourceLanguageResult.fromConversationTranscriptionResult\r\n     * @function\r\n     * @public\r\n     * @param {ConversationTranscriptionResult} result - The transcription result.\r\n     * @returns {AutoDetectSourceLanguageResult} AutoDetectSourceLanguageResult object being created.\r\n     */\r\n        public static fromConversationTranscriptionResult(result: ConversationTranscriptionResult): AutoDetectSourceLanguageResult {\r\n            return new AutoDetectSourceLanguageResult(result.language, result.languageDetectionConfidence);\r\n        }\r\n\r\n    public get language(): string {\r\n        return this.privLanguage;\r\n    }\r\n\r\n    public get languageDetectionConfidence(): string {\r\n        return this.privLanguageDetectionConfidence;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionStatus, SimpleSpeechPhrase } from \"../../src/common.speech/Exports.js\";\r\nimport { IntentRecognitionResult, NoMatchReason, SpeechRecognitionResult, TranslationRecognitionResult } from \"./Exports.js\";\r\n\r\n/**\r\n * Contains detailed information for NoMatch recognition results.\r\n * @class NoMatchDetails\r\n */\r\nexport class NoMatchDetails {\r\n    private privReason: NoMatchReason;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {NoMatchReason} reason - The no-match reason.\r\n     */\r\n    private constructor(reason: NoMatchReason) {\r\n        this.privReason = reason;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of NoMatchDetails object for the NoMatch SpeechRecognitionResults.\r\n     * @member NoMatchDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult}\r\n     * result - The recognition result that was not recognized.\r\n     * @returns {NoMatchDetails} The no match details object being created.\r\n     */\r\n    public static fromResult(result: SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult): NoMatchDetails {\r\n        const simpleSpeech: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(result.json, 0); // Offset fixups are already done.\r\n\r\n        let reason: NoMatchReason = NoMatchReason.NotRecognized;\r\n\r\n        switch (simpleSpeech.RecognitionStatus) {\r\n            case RecognitionStatus.BabbleTimeout:\r\n                reason = NoMatchReason.InitialBabbleTimeout;\r\n                break;\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n                reason = NoMatchReason.InitialSilenceTimeout;\r\n                break;\r\n            default:\r\n                reason = NoMatchReason.NotRecognized;\r\n                break;\r\n        }\r\n        return new NoMatchDetails(reason);\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member NoMatchDetails.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {NoMatchReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): NoMatchReason {\r\n        return this.privReason;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport { PropertyCollection, PropertyId } from \"../sdk/Exports.js\";\r\nimport { Context, SpeechServiceConfig } from \"./Exports.js\";\r\n\r\nexport enum RecognitionMode {\r\n    Interactive,\r\n    Conversation,\r\n    Dictation,\r\n}\r\n\r\nexport enum SpeechResultFormat {\r\n    Simple,\r\n    Detailed,\r\n}\r\n\r\nexport class RecognizerConfig {\r\n    private privRecognitionMode: RecognitionMode;\r\n    private privLanguageIdMode: string;\r\n    private privSpeechServiceConfig: SpeechServiceConfig;\r\n    private privRecognitionActivityTimeout: number;\r\n    private privParameters: PropertyCollection;\r\n    private privMaxRetryCount: number;\r\n    private privEnableSpeakerId: boolean;\r\n\r\n    public constructor(\r\n        speechServiceConfig: SpeechServiceConfig,\r\n        parameters: PropertyCollection) {\r\n        this.privSpeechServiceConfig = speechServiceConfig ? speechServiceConfig : new SpeechServiceConfig(new Context(null));\r\n        this.privParameters = parameters;\r\n        this.privMaxRetryCount = parseInt(parameters.getProperty(\"SPEECH-Error-MaxRetryCount\", \"4\"), 10);\r\n        this.privLanguageIdMode = parameters.getProperty(PropertyId.SpeechServiceConnection_LanguageIdMode, undefined);\r\n        this.privEnableSpeakerId = false;\r\n    }\r\n\r\n    public get parameters(): PropertyCollection {\r\n        return this.privParameters;\r\n    }\r\n\r\n    public get recognitionMode(): RecognitionMode {\r\n        return this.privRecognitionMode;\r\n    }\r\n\r\n    public set recognitionMode(value: RecognitionMode) {\r\n        this.privRecognitionMode = value;\r\n        this.privRecognitionActivityTimeout = value === RecognitionMode.Interactive ? 8000 : 25000;\r\n        this.privSpeechServiceConfig.Recognition = RecognitionMode[value];\r\n    }\r\n\r\n    public get SpeechServiceConfig(): SpeechServiceConfig {\r\n        return this.privSpeechServiceConfig;\r\n    }\r\n\r\n    public get recognitionActivityTimeout(): number {\r\n        return this.privRecognitionActivityTimeout;\r\n    }\r\n\r\n    public get isContinuousRecognition(): boolean {\r\n        return this.privRecognitionMode !== RecognitionMode.Interactive;\r\n    }\r\n\r\n    public get languageIdMode(): string {\r\n        return this.privLanguageIdMode;\r\n    }\r\n\r\n    public get autoDetectSourceLanguages(): string {\r\n        return this.parameters.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, undefined);\r\n    }\r\n\r\n    public get recognitionEndpointVersion(): string {\r\n        return this.parameters.getProperty(PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, undefined);\r\n    }\r\n\r\n    public get sourceLanguageModels(): { language: string; endpoint: string }[] {\r\n        const models: { language: string; endpoint: string }[] = [];\r\n        let modelsExist: boolean = false;\r\n        if (this.autoDetectSourceLanguages !== undefined) {\r\n            for (const language of this.autoDetectSourceLanguages.split(\",\")) {\r\n                const customProperty = language + PropertyId.SpeechServiceConnection_EndpointId.toString();\r\n                const modelId: string = this.parameters.getProperty(customProperty, undefined);\r\n                if (modelId !== undefined) {\r\n                    models.push( { language, endpoint: modelId });\r\n                    modelsExist = true;\r\n                } else {\r\n                    models.push( { language, endpoint: \"\" } );\r\n                }\r\n            }\r\n        }\r\n        return modelsExist ? models : undefined;\r\n    }\r\n\r\n    public get maxRetryCount(): number {\r\n        return this.privMaxRetryCount;\r\n    }\r\n\r\n    public get isSpeakerDiarizationEnabled(): boolean {\r\n        return this.privEnableSpeakerId;\r\n    }\r\n\r\n    public set isSpeakerDiarizationEnabled(value: boolean) {\r\n        this.privEnableSpeakerId = value;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport { DialogServiceConfig, DialogServiceConfigImpl } from \"./DialogServiceConfig.js\";\r\nimport { PropertyId } from \"./Exports.js\";\r\n\r\n/**\r\n * Class that defines configurations for the dialog service connector object for using a Bot Framework backend.\r\n * @class BotFrameworkConfig\r\n */\r\nexport class BotFrameworkConfig extends DialogServiceConfigImpl {\r\n\r\n    /**\r\n     * Creates an instance of BotFrameworkConfig.\r\n     */\r\n    public constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Creates a bot framework configuration instance with the provided subscription information.\r\n     * @member BotFrameworkConfig.fromSubscription\r\n     * @function\r\n     * @public\r\n     * @param subscription Subscription key associated with the bot\r\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @param botId Optional. Identifier for using a specific bot within an Azure resource group. Equivalent to the\r\n     * resource name.\r\n     * @returns {BotFrameworkConfig} A new bot framework configuration instance.\r\n     */\r\n    public static fromSubscription(subscription: string, region: string, botId?: string): BotFrameworkConfig {\r\n        Contracts.throwIfNullOrWhitespace(subscription, \"subscription\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const botFrameworkConfig: BotFrameworkConfig = new DialogServiceConfigImpl();\r\n        botFrameworkConfig.setProperty(\r\n            PropertyId.Conversation_DialogType,\r\n            DialogServiceConfig.DialogTypes.BotFramework);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Key, subscription);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n\r\n        if (botId) {\r\n            botFrameworkConfig.setProperty(PropertyId.Conversation_ApplicationId, botId);\r\n        }\r\n\r\n        return botFrameworkConfig;\r\n    }\r\n\r\n    /**\r\n     * Creates a bot framework configuration instance for the specified authorization token and region.\r\n     * Note: The caller must ensure that an authorization token is valid. Before an authorization token expires, the\r\n     * caller must refresh it by setting the authorizationToken property on the corresponding\r\n     * DialogServiceConnector instance created with this config. The contents of configuration objects are copied\r\n     * when connectors are created, so setting authorizationToken on a DialogServiceConnector will not update the\r\n     * original configuration's authorization token. Create a new configuration instance or set the\r\n     * SpeechServiceAuthorization_Token property to update an existing instance if it will be used to create\r\n     * further DialogServiceConnectors.\r\n     * @member BotFrameworkConfig.fromAuthorizationToken\r\n     * @function\r\n     * @public\r\n     * @param authorizationToken The authorization token associated with the bot\r\n     * @param region The region name (see the <a href=\"https://aka.ms/csspeech/region\">region page</a>).\r\n     * @param botId Optional. Identifier for using a specific bot within an Azure resource group. Equivalent to the\r\n     * resource name.\r\n     * @returns {BotFrameworkConfig} A new bot framework configuration instance.\r\n     */\r\n    public static fromAuthorizationToken(\r\n        authorizationToken: string, region: string, botId?: string\r\n    ): BotFrameworkConfig {\r\n        Contracts.throwIfNullOrWhitespace(authorizationToken, \"authorizationToken\");\r\n        Contracts.throwIfNullOrWhitespace(region, \"region\");\r\n\r\n        const botFrameworkConfig: BotFrameworkConfig = new DialogServiceConfigImpl();\r\n        botFrameworkConfig.setProperty(\r\n            PropertyId.Conversation_DialogType,\r\n            DialogServiceConfig.DialogTypes.BotFramework);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceAuthorization_Token, authorizationToken);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Region, region);\r\n\r\n        if (botId) {\r\n            botFrameworkConfig.setProperty(PropertyId.Conversation_ApplicationId, botId);\r\n        }\r\n\r\n        return botFrameworkConfig;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of a BotFrameworkConfig.\r\n     * This method is intended only for users who use a non-default service host. The standard resource path will be\r\n     * assumed. For services with a non-standard resource path or no path at all, use fromEndpoint instead.\r\n     * Note: Query parameters are not allowed in the host URI and must be set by other APIs.\r\n     * Note: To use an authorization token with fromHost, use fromHost(URL) and then set the AuthorizationToken\r\n     * property on the created BotFrameworkConfig instance.\r\n     * Note: Added in version 1.15.0.\r\n     * @member BotFrameworkConfig.fromHost\r\n     * @function\r\n     * @public\r\n     * @param {URL | string} host - If a URL is provided, the fully-qualified host with protocol (e.g.\r\n     * wss://your.host.com:1234) will be used. If a string is provided, it will be embedded in\r\n     * wss://{host}.convai.speech.azure.us.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization\r\n     * token must be set.\r\n     * @param botId Optional. Identifier for using a specific bot within an Azure resource group. Equivalent to the\r\n     * resource name.\r\n     * @returns {BotFrameworkConfig} A new bot framework configuration instance.\r\n     */\r\n    public static fromHost(\r\n        host: URL | string,\r\n        subscriptionKey?: string,\r\n        botId?: string): BotFrameworkConfig {\r\n\r\n        void botId;\r\n        Contracts.throwIfNullOrUndefined(host, \"host\");\r\n        const resolvedHost: URL = host instanceof URL ? host : new URL(`wss://${host}.convai.speech.azure.us`);\r\n        Contracts.throwIfNullOrUndefined(resolvedHost, \"resolvedHost\");\r\n\r\n        const botFrameworkConfig: BotFrameworkConfig = new DialogServiceConfigImpl();\r\n        botFrameworkConfig.setProperty(\r\n            PropertyId.Conversation_DialogType,\r\n            DialogServiceConfig.DialogTypes.BotFramework);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Host, resolvedHost.toString());\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n\r\n        return botFrameworkConfig;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of a BotFrameworkConfig.\r\n     * This method is intended only for users who use a non-standard service endpoint or parameters.\r\n     * Note: The query parameters specified in the endpoint URL are not changed, even if they are set by any other APIs.\r\n     * Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the\r\n     * fromEndpoint method, and then set authorizationToken=\"token\" on the created BotFrameworkConfig instance to\r\n     * use the authorization token.\r\n     * Note: Added in version 1.15.0.\r\n     * @member BotFrameworkConfig.fromEndpoint\r\n     * @function\r\n     * @public\r\n     * @param {URL} endpoint - The service endpoint to connect to.\r\n     * @param {string} subscriptionKey - The subscription key. If a subscription key is not specified, an authorization\r\n     * token must be set.\r\n     * @returns {BotFrameworkConfig} - A new bot framework configuration instance using the provided endpoint.\r\n     */\r\n    public static fromEndpoint(endpoint: URL, subscriptionKey?: string): BotFrameworkConfig {\r\n        Contracts.throwIfNull(endpoint, \"endpoint\");\r\n\r\n        const botFrameworkConfig: BotFrameworkConfig = new DialogServiceConfigImpl();\r\n        botFrameworkConfig.setProperty(\r\n            PropertyId.Conversation_DialogType,\r\n            DialogServiceConfig.DialogTypes.BotFramework);\r\n        botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Endpoint, endpoint.toString());\r\n\r\n        if (undefined !== subscriptionKey) {\r\n            botFrameworkConfig.setProperty(PropertyId.SpeechServiceConnection_Key, subscriptionKey);\r\n        }\r\n\r\n        return botFrameworkConfig;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport enum AvatarEventTypes {\r\n    SwitchedToSpeaking = \"SwitchedToSpeaking\",\r\n    SwitchedToIdle = \"SwitchedToIdle\",\r\n    SessionClosed = \"SessionClosed\",\r\n}\r\n\r\n/**\r\n * Defines content for talking avatar events.\r\n * @class AvatarEventArgs\r\n * Added in version 1.33.0\r\n *\r\n * @experimental This feature is experimental and might change or have limited support.\r\n */\r\nexport class AvatarEventArgs {\r\n    private privType: AvatarEventTypes;\r\n    private privOffset: number;\r\n    private privDescription: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} audioOffset - The audio offset.\r\n     * @param {string} description - The description of the event.\r\n     */\r\n    public constructor(audioOffset: number, description: string) {\r\n        this.privOffset = audioOffset;\r\n        this.privDescription = description;\r\n    }\r\n\r\n    /**\r\n     * The type of the event.\r\n     * @public\r\n     * @returns {AvatarEventTypes} The type of the event.\r\n     */\r\n    public get type(): AvatarEventTypes {\r\n        return this.privType;\r\n    }\r\n\r\n    /**\r\n     * The time offset associated with this event.\r\n     * @public\r\n     * @returns {number} The time offset associated with this event.\r\n     */\r\n    public get offset(): number {\r\n        return this.privOffset;\r\n    }\r\n\r\n    /**\r\n     * The description of the event.\r\n     * @public\r\n     * @returns {string} The description of the event.\r\n     */\r\n    public get description(): string {\r\n        return this.privDescription;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IPrimaryLanguage } from \"./SimpleSpeechPhrase.js\";\r\n\r\n// speech.hypothesis\r\nexport interface ISpeechHypothesis {\r\n    Text: string;\r\n    Offset: number;\r\n    Duration: number;\r\n    PrimaryLanguage?: IPrimaryLanguage;\r\n    SpeakerId?: string;\r\n    [key: string]: any;\r\n}\r\n\r\nexport class SpeechHypothesis implements ISpeechHypothesis {\r\n    private privSpeechHypothesis: ISpeechHypothesis;\r\n\r\n    private constructor(json: string, baseOffset: number) {\r\n        this.privSpeechHypothesis = JSON.parse(json) as ISpeechHypothesis;\r\n        this.updateOffset(baseOffset);\r\n    }\r\n\r\n    public static fromJSON(json: string, baseOffset: number): SpeechHypothesis {\r\n        return new SpeechHypothesis(json, baseOffset);\r\n    }\r\n\r\n    private updateOffset(baseOffset: number): void {\r\n        this.privSpeechHypothesis.Offset += baseOffset;\r\n    }\r\n\r\n    public asJson(): string {\r\n        return JSON.stringify(this.privSpeechHypothesis);\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this.privSpeechHypothesis.Text;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSpeechHypothesis.Offset;\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privSpeechHypothesis.Duration;\r\n    }\r\n\r\n    public get Language(): string {\r\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Language;\r\n    }\r\n\r\n    public get LanguageDetectionConfidence(): string {\r\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Confidence;\r\n    }\r\n\r\n    public get SpeakerId(): string {\r\n        return this.privSpeechHypothesis.SpeakerId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// speech.endDetected\r\nexport interface ISpeechDetected {\r\n    Offset: number;\r\n}\r\n\r\nexport class SpeechDetected implements ISpeechDetected {\r\n    private privSpeechStartDetected: ISpeechDetected;\r\n\r\n    private constructor(json: string, baseOffset: number) {\r\n        this.privSpeechStartDetected = JSON.parse(json) as ISpeechDetected;\r\n        this.privSpeechStartDetected.Offset += baseOffset;\r\n    }\r\n\r\n    public static fromJSON(json: string, baseOffset: number): SpeechDetected {\r\n        return new SpeechDetected(json, baseOffset);\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSpeechStartDetected.Offset;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the possible reasons a recognition result might not be recognized.\r\n * @class NoMatchReason\r\n */\r\nexport enum NoMatchReason {\r\n\r\n    /**\r\n     * Indicates that speech was detected, but not recognized.\r\n     * @member NoMatchReason.NotRecognized\r\n     */\r\n    NotRecognized,\r\n\r\n    /**\r\n     * Indicates that the start of the audio stream contained only silence,\r\n     * and the service timed out waiting for speech.\r\n     * @member NoMatchReason.InitialSilenceTimeout\r\n     */\r\n    InitialSilenceTimeout,\r\n\r\n    /**\r\n     * Indicates that the start of the audio stream contained only noise,\r\n     * and the service timed out waiting for speech.\r\n     * @member NoMatchReason.InitialBabbleTimeout\r\n     */\r\n    InitialBabbleTimeout,\r\n}\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.URL = exports.DNS = void 0;\nexports.default = v35;\n\nvar _stringify = require(\"./stringify.js\");\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.unsafeStringify)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport { PathLike } from \"fs\";\r\nimport {\r\n    FileAudioSource,\r\n    MicAudioSource,\r\n    PcmRecorder,\r\n} from \"../../common.browser/Exports.js\";\r\nimport { ISpeechConfigAudioDevice } from \"../../common.speech/Exports.js\";\r\nimport {\r\n    AudioSourceEvent,\r\n    EventSource,\r\n    IAudioDestination,\r\n    IAudioSource,\r\n    IAudioStreamNode\r\n} from \"../../common/Exports.js\";\r\nimport { Contracts } from \"../Contracts.js\";\r\nimport {\r\n    AudioInputStream,\r\n    AudioOutputStream,\r\n    AudioStreamFormat,\r\n    IPlayer,\r\n    PullAudioInputStreamCallback,\r\n    PullAudioOutputStream,\r\n    PushAudioOutputStream,\r\n    PushAudioOutputStreamCallback,\r\n    SpeakerAudioDestination\r\n} from \"../Exports.js\";\r\nimport { AudioFileWriter } from \"./AudioFileWriter.js\";\r\nimport { PullAudioInputStreamImpl, PushAudioInputStreamImpl } from \"./AudioInputStream.js\";\r\nimport { PullAudioOutputStreamImpl, PushAudioOutputStreamImpl } from \"./AudioOutputStream.js\";\r\nimport { AudioStreamFormatImpl } from \"./AudioStreamFormat.js\";\r\n\r\n/**\r\n * Represents audio input configuration used for specifying what type of input to use (microphone, file, stream).\r\n * @class AudioConfig\r\n * Updated in version 1.11.0\r\n */\r\nexport abstract class AudioConfig {\r\n    /**\r\n     * Creates an AudioConfig object representing the default microphone on the system.\r\n     * @member AudioConfig.fromDefaultMicrophoneInput\r\n     * @function\r\n     * @public\r\n     * @returns {AudioConfig} The audio input configuration being created.\r\n     */\r\n    public static fromDefaultMicrophoneInput(): AudioConfig {\r\n        const pcmRecorder = new PcmRecorder(true);\r\n        return new AudioConfigImpl(new MicAudioSource(pcmRecorder));\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing a microphone with the specified device ID.\r\n     * @member AudioConfig.fromMicrophoneInput\r\n     * @function\r\n     * @public\r\n     * @param {string | undefined} deviceId - Specifies the device ID of the microphone to be used.\r\n     * Default microphone is used the value is omitted.\r\n     * @returns {AudioConfig} The audio input configuration being created.\r\n     */\r\n    public static fromMicrophoneInput(deviceId?: string): AudioConfig {\r\n        const pcmRecorder = new PcmRecorder(true);\r\n        return new AudioConfigImpl(new MicAudioSource(pcmRecorder, deviceId));\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing the specified file.\r\n     * @member AudioConfig.fromWavFileInput\r\n     * @function\r\n     * @public\r\n     * @param {File} fileName - Specifies the audio input file. Currently, only WAV / PCM is supported.\r\n     * @returns {AudioConfig} The audio input configuration being created.\r\n     */\r\n    public static fromWavFileInput(file: File | Buffer, name: string = \"unnamedBuffer.wav\"): AudioConfig {\r\n        return new AudioConfigImpl(new FileAudioSource(file, name));\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing the specified stream.\r\n     * @member AudioConfig.fromStreamInput\r\n     * @function\r\n     * @public\r\n     * @param {AudioInputStream | PullAudioInputStreamCallback | MediaStream} audioStream - Specifies the custom audio input\r\n     * stream. Currently, only WAV / PCM is supported.\r\n     * @returns {AudioConfig} The audio input configuration being created.\r\n     */\r\n    public static fromStreamInput(audioStream: AudioInputStream | PullAudioInputStreamCallback\r\n        | MediaStream): AudioConfig {\r\n        if (audioStream instanceof PullAudioInputStreamCallback) {\r\n            return new AudioConfigImpl(new PullAudioInputStreamImpl(audioStream));\r\n        }\r\n\r\n        if (audioStream instanceof AudioInputStream) {\r\n            return new AudioConfigImpl(audioStream as PushAudioInputStreamImpl);\r\n        }\r\n        if (typeof MediaStream !== \"undefined\" && audioStream instanceof MediaStream) {\r\n            const pcmRecorder = new PcmRecorder(false);\r\n            return new AudioConfigImpl(new MicAudioSource(pcmRecorder, null, null, audioStream));\r\n        }\r\n\r\n        throw new Error(\"Not Supported Type\");\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing the default speaker.\r\n     * @member AudioConfig.fromDefaultSpeakerOutput\r\n     * @function\r\n     * @public\r\n     * @returns {AudioConfig} The audio output configuration being created.\r\n     * Added in version 1.11.0\r\n     */\r\n    public static fromDefaultSpeakerOutput(): AudioConfig {\r\n        return new AudioOutputConfigImpl(new SpeakerAudioDestination());\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing the custom IPlayer object.\r\n     * You can use the IPlayer object to control pause, resume, etc.\r\n     * @member AudioConfig.fromSpeakerOutput\r\n     * @function\r\n     * @public\r\n     * @param {IPlayer} player - the IPlayer object for playback.\r\n     * @returns {AudioConfig} The audio output configuration being created.\r\n     * Added in version 1.12.0\r\n     */\r\n    public static fromSpeakerOutput(player?: IPlayer): AudioConfig {\r\n        if (player === undefined) {\r\n            return AudioConfig.fromDefaultSpeakerOutput();\r\n        }\r\n        if (player instanceof SpeakerAudioDestination) {\r\n            return new AudioOutputConfigImpl(player);\r\n        }\r\n\r\n        throw new Error(\"Not Supported Type\");\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing a specified output audio file\r\n     * @member AudioConfig.fromAudioFileOutput\r\n     * @function\r\n     * @public\r\n     * @param {PathLike} filename - the filename of the output audio file\r\n     * @returns {AudioConfig} The audio output configuration being created.\r\n     * Added in version 1.11.0\r\n     */\r\n    public static fromAudioFileOutput(filename: PathLike): AudioConfig {\r\n        return new AudioOutputConfigImpl(new AudioFileWriter(filename));\r\n    }\r\n\r\n    /**\r\n     * Creates an AudioConfig object representing a specified audio output stream\r\n     * @member AudioConfig.fromStreamOutput\r\n     * @function\r\n     * @public\r\n     * @param {AudioOutputStream | PushAudioOutputStreamCallback} audioStream - Specifies the custom audio output\r\n     * stream.\r\n     * @returns {AudioConfig} The audio output configuration being created.\r\n     * Added in version 1.11.0\r\n     */\r\n    public static fromStreamOutput(audioStream: AudioOutputStream | PushAudioOutputStreamCallback): AudioConfig {\r\n        if (audioStream instanceof PushAudioOutputStreamCallback) {\r\n            return new AudioOutputConfigImpl(new PushAudioOutputStreamImpl(audioStream));\r\n        }\r\n\r\n        if (audioStream instanceof PushAudioOutputStream) {\r\n            return new AudioOutputConfigImpl(audioStream as PushAudioOutputStreamImpl);\r\n        }\r\n\r\n        if (audioStream instanceof PullAudioOutputStream) {\r\n            return new AudioOutputConfigImpl(audioStream as PullAudioOutputStreamImpl);\r\n        }\r\n\r\n        throw new Error(\"Not Supported Type\");\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member AudioConfig.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n\r\n    /**\r\n     * Sets an arbitrary property.\r\n     * @member SpeechConfig.prototype.setProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to set.\r\n     * @param {string} value - The new value of the property.\r\n     */\r\n    public abstract setProperty(name: string, value: string): void;\r\n\r\n    /**\r\n     * Returns the current value of an arbitrary property.\r\n     * @member SpeechConfig.prototype.getProperty\r\n     * @function\r\n     * @public\r\n     * @param {string} name - The name of the property to query.\r\n     * @param {string} def - The value to return in case the property is not known.\r\n     * @returns {string} The current value, or provided default, of the given property.\r\n     */\r\n    public abstract getProperty(name: string, def?: string): string;\r\n\r\n}\r\n\r\n/**\r\n * Represents audio input stream used for custom audio input configurations.\r\n * @private\r\n * @class AudioConfigImpl\r\n */\r\nexport class AudioConfigImpl extends AudioConfig implements IAudioSource {\r\n    private privSource: IAudioSource;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {IAudioSource} source - An audio source.\r\n     */\r\n    public constructor(source: IAudioSource) {\r\n        super();\r\n        this.privSource = source;\r\n    }\r\n\r\n    /**\r\n     * Format information for the audio\r\n     */\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return this.privSource.format;\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, err?: (error: string) => void): void {\r\n        this.privSource.turnOff().then((): void => {\r\n            if (!!cb) {\r\n                cb();\r\n            }\r\n        }, (error: string): void => {\r\n            if (!!err) {\r\n                err(error);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.id\r\n     * @function\r\n     * @public\r\n     */\r\n    public id(): string {\r\n        return this.privSource.id();\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.turnOn\r\n     * @function\r\n     * @public\r\n     * @returns {Promise<void>} A promise.\r\n     */\r\n    public turnOn(): Promise<void> {\r\n        return this.privSource.turnOn();\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.attach\r\n     * @function\r\n     * @public\r\n     * @param {string} audioNodeId - The audio node id.\r\n     * @returns {Promise<IAudioStreamNode>} A promise.\r\n     */\r\n    public attach(audioNodeId: string): Promise<IAudioStreamNode> {\r\n        return this.privSource.attach(audioNodeId);\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.detach\r\n     * @function\r\n     * @public\r\n     * @param {string} audioNodeId - The audio node id.\r\n     */\r\n    public detach(audioNodeId: string): void {\r\n        return this.privSource.detach(audioNodeId);\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.turnOff\r\n     * @function\r\n     * @public\r\n     * @returns {Promise<void>} A promise.\r\n     */\r\n    public turnOff(): Promise<void> {\r\n        return this.privSource.turnOff();\r\n    }\r\n\r\n    /**\r\n     * @member AudioConfigImpl.prototype.events\r\n     * @function\r\n     * @public\r\n     * @returns {EventSource<AudioSourceEvent>} An event source for audio events.\r\n     */\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privSource.events;\r\n    }\r\n\r\n    public setProperty(name: string, value: string): void {\r\n        Contracts.throwIfNull(value, \"value\");\r\n\r\n        if (undefined !== this.privSource.setProperty) {\r\n            this.privSource.setProperty(name, value);\r\n        } else {\r\n            throw new Error(\"This AudioConfig instance does not support setting properties.\");\r\n        }\r\n\r\n    }\r\n\r\n    public getProperty(name: string, def?: string): string {\r\n        if (undefined !== this.privSource.getProperty) {\r\n            return this.privSource.getProperty(name, def);\r\n        } else {\r\n            throw new Error(\"This AudioConfig instance does not support getting properties.\");\r\n        }\r\n\r\n        return def;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return this.privSource.deviceInfo;\r\n    }\r\n}\r\n\r\nexport class AudioOutputConfigImpl extends AudioConfig implements IAudioDestination {\r\n    private privDestination: IAudioDestination;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {IAudioDestination} destination - An audio destination.\r\n     */\r\n    public constructor(destination: IAudioDestination) {\r\n        super();\r\n        this.privDestination = destination;\r\n    }\r\n\r\n    public set format(format: AudioStreamFormat) {\r\n        this.privDestination.format = format;\r\n    }\r\n\r\n    public write(buffer: ArrayBuffer): void {\r\n        this.privDestination.write(buffer);\r\n    }\r\n\r\n    public close(): void {\r\n        this.privDestination.close();\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privDestination.id();\r\n    }\r\n\r\n    public setProperty(): void {\r\n        throw new Error(\"This AudioConfig instance does not support setting properties.\");\r\n    }\r\n\r\n    public getProperty(): string {\r\n        throw new Error(\"This AudioConfig instance does not support getting properties.\");\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationEventArgsBase,\r\n} from \"./CancellationEventArgsBase.js\";\r\n\r\n/**\r\n * Defines content of a MeetingTranscriptionCanceledEvent.\r\n * @class MeetingTranscriptionCanceledEventArgs\r\n */\r\nexport class MeetingTranscriptionCanceledEventArgs extends CancellationEventArgsBase {\r\n}\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = require(\"./stringify.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.unsafeStringify)(b);\n}\n\nvar _default = v1;\nexports.default = _default;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\nimport { CancellationErrorCodePropertyName } from \"../common.speech/Exports.js\";\r\nimport {\r\n    CancellationDetailsBase,\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    ResultReason\r\n} from \"./Exports.js\";\r\n\r\nexport interface EnrollmentResultDetails {\r\n    profileId: string;\r\n    enrollmentsCount: number;\r\n    enrollmentsLength: number;\r\n    enrollmentsSpeechLength: number;\r\n    remainingEnrollmentsCount: number;\r\n    remainingEnrollmentsSpeechLength: number;\r\n    audioLength: number;\r\n    audioSpeechLength: number;\r\n    enrollmentStatus: string;\r\n}\r\n\r\nexport interface EnrollmentResultJSON {\r\n    profileId: string;\r\n    enrollmentsCount: number;\r\n    enrollmentsLength: string;\r\n    enrollmentsSpeechLength: string;\r\n    remainingEnrollmentsCount: number;\r\n    remainingEnrollmentsSpeechLength: string;\r\n    audioLength: string;\r\n    audioSpeechLength: string;\r\n    enrollmentStatus: string;\r\n    remainingEnrollments?: number;\r\n    identificationProfileId?: string;\r\n    verificationProfileId?: string;\r\n}\r\n\r\n/**\r\n * Output format\r\n * @class VoiceProfileEnrollmentResult\r\n */\r\nexport class VoiceProfileEnrollmentResult {\r\n    private privReason: ResultReason;\r\n    private privDetails: EnrollmentResultDetails;\r\n    private privProperties: PropertyCollection;\r\n    private privErrorDetails: string;\r\n\r\n    public constructor(reason: ResultReason, json: string, statusText: string) {\r\n        this.privReason = reason;\r\n        this.privProperties = new PropertyCollection();\r\n        if (this.privReason !== ResultReason.Canceled) {\r\n            if (!!json) {\r\n                this.privDetails = JSON.parse(json) as EnrollmentResultDetails;\r\n                if (this.privDetails.enrollmentStatus.toLowerCase() === \"enrolling\") {\r\n                    this.privReason = ResultReason.EnrollingVoiceProfile;\r\n                }\r\n            }\r\n        } else {\r\n            this.privErrorDetails = statusText;\r\n            this.privProperties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.ServiceError]);\r\n        }\r\n    }\r\n\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get enrollmentsCount(): number {\r\n        return this.privDetails.enrollmentsCount;\r\n    }\r\n\r\n    public get enrollmentsLength(): number {\r\n        return this.privDetails.enrollmentsLength;\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get enrollmentResultDetails(): EnrollmentResultDetails {\r\n        return this.privDetails;\r\n    }\r\n\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    public static FromIdentificationProfileList(json: { value: EnrollmentResultJSON[] }): VoiceProfileEnrollmentResult[] {\r\n        const results: VoiceProfileEnrollmentResult[] = [];\r\n        for (const item of json.value) {\r\n            const reason: ResultReason = item.enrollmentStatus.toLowerCase() === \"enrolling\" ?\r\n                ResultReason.EnrollingVoiceProfile : item.enrollmentStatus.toLowerCase() === \"enrolled\" ?\r\n                ResultReason.EnrolledVoiceProfile : ResultReason.Canceled;\r\n            const result = new VoiceProfileEnrollmentResult(reason, null, null);\r\n            result.privDetails = this.getIdentificationDetails(item) as EnrollmentResultDetails;\r\n            results.push(result);\r\n        }\r\n        return results;\r\n    }\r\n\r\n    public static FromVerificationProfileList(json: { value: EnrollmentResultJSON[] }): VoiceProfileEnrollmentResult[] {\r\n        const results: VoiceProfileEnrollmentResult[] = [];\r\n        for (const item of json.value) {\r\n            const reason: ResultReason = item.enrollmentStatus.toLowerCase() === \"enrolling\" ?\r\n                ResultReason.EnrollingVoiceProfile : item.enrollmentStatus.toLowerCase() === \"enrolled\" ?\r\n                ResultReason.EnrolledVoiceProfile : ResultReason.Canceled;\r\n            const result = new VoiceProfileEnrollmentResult(reason, null, null);\r\n            result.privDetails = this.getVerificationDetails(item) as EnrollmentResultDetails;\r\n            results.push(result);\r\n        }\r\n        return results;\r\n    }\r\n\r\n    private static getIdentificationDetails(json: EnrollmentResultJSON): unknown {\r\n        return {\r\n            audioLength: json.audioLength ? parseFloat(json.audioLength) : 0,\r\n            audioSpeechLength: json.audioSpeechLength ? parseFloat(json.audioSpeechLength) : 0,\r\n            enrollmentStatus: json.enrollmentStatus,\r\n            enrollmentsCount: json.enrollmentsCount || 0,\r\n            enrollmentsLength: json.enrollmentsLength ? parseFloat(json.enrollmentsLength) : 0,\r\n            enrollmentsSpeechLength: json.enrollmentsSpeechLength ? parseFloat(json.enrollmentsSpeechLength) : 0,\r\n            profileId: json.profileId || json.identificationProfileId,\r\n            remainingEnrollmentsSpeechLength: json.remainingEnrollmentsSpeechLength ? parseFloat(json.remainingEnrollmentsSpeechLength) : 0\r\n        };\r\n    }\r\n\r\n    private static getVerificationDetails(json: EnrollmentResultJSON): unknown {\r\n        return {\r\n            audioLength: json.audioLength ? parseFloat(json.audioLength) : 0,\r\n            audioSpeechLength: json.audioSpeechLength ? parseFloat(json.audioSpeechLength) : 0,\r\n            enrollmentStatus: json.enrollmentStatus,\r\n            enrollmentsCount: json.enrollmentsCount,\r\n            enrollmentsLength: json.enrollmentsLength ? parseFloat(json.enrollmentsLength) : 0,\r\n            enrollmentsSpeechLength: json.enrollmentsSpeechLength ? parseFloat(json.enrollmentsSpeechLength) : 0,\r\n            profileId: json.profileId || json.verificationProfileId,\r\n            remainingEnrollmentsCount: json.remainingEnrollments || json.remainingEnrollmentsCount,\r\n            remainingEnrollmentsSpeechLength: json.remainingEnrollmentsSpeechLength ? parseFloat(json.remainingEnrollmentsSpeechLength) : 0\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * @class VoiceProfileEnrollmentCancellationDetails\r\n */\r\nexport class VoiceProfileEnrollmentCancellationDetails extends CancellationDetailsBase {\r\n\r\n    private constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        super(reason, errorDetails, errorCode);\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of VoiceProfileEnrollmentCancellationDetails object for the canceled VoiceProfileEnrollmentResult.\r\n     * @member VoiceProfileEnrollmentCancellationDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {VoiceProfileEnrollmentResult} result - The result that was canceled.\r\n     * @returns {VoiceProfileEnrollmentCancellationDetails} The cancellation details object being created.\r\n     */\r\n    public static fromResult(result: VoiceProfileEnrollmentResult): VoiceProfileEnrollmentCancellationDetails {\r\n        const reason = CancellationReason.Error;\r\n        let errorCode: CancellationErrorCode = CancellationErrorCode.NoError;\r\n\r\n        if (!!result.properties) {\r\n            errorCode = (CancellationErrorCode as any)[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError])]; //eslint-disable-line\r\n        }\r\n\r\n        return new VoiceProfileEnrollmentCancellationDetails(reason, result.errorDetails, errorCode);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    DynamicGrammarBuilder,\r\n    ServiceRecognizerBase,\r\n} from \"../common.speech/Exports.js\";\r\nimport {\r\n    ConversationTranscriber,\r\n    MeetingTranscriber,\r\n    Recognizer\r\n} from \"./Exports.js\";\r\n\r\n/**\r\n * Allows additions of new phrases to improve speech recognition.\r\n *\r\n * Phrases added to the recognizer are effective at the start of the next recognition, or the next time the SpeechSDK must reconnect\r\n * to the speech service.\r\n */\r\nexport class PhraseListGrammar {\r\n    private privGrammerBuilder: DynamicGrammarBuilder;\r\n\r\n    private constructor(recogBase: ServiceRecognizerBase) {\r\n        this.privGrammerBuilder = recogBase.dynamicGrammar;\r\n    }\r\n\r\n    /**\r\n     * Creates a PhraseListGrammar from a given speech recognizer. Will accept any recognizer that derives from @class Recognizer.\r\n     * @param recognizer The recognizer to add phrase lists to.\r\n     */\r\n    public static fromRecognizer(recognizer: Recognizer | ConversationTranscriber | MeetingTranscriber): PhraseListGrammar {\r\n        const recoBase = recognizer.internalData as ServiceRecognizerBase;\r\n        return new PhraseListGrammar(recoBase);\r\n    }\r\n\r\n    /**\r\n     * Adds a single phrase to the current recognizer.\r\n     * @param phrase Phrase to add.\r\n     */\r\n    public addPhrase(phrase: string): void {\r\n        this.privGrammerBuilder.addPhrase(phrase);\r\n    }\r\n\r\n    /**\r\n     * Adds multiple phrases to the current recognizer.\r\n     * @param phrases Array of phrases to add.\r\n     */\r\n    public addPhrases(phrases: string[]): void {\r\n        this.privGrammerBuilder.addPhrase(phrases);\r\n    }\r\n\r\n    /**\r\n     * Clears all phrases added to the current recognizer.\r\n     */\r\n    public clear(): void {\r\n        this.privGrammerBuilder.clearPhrases();\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n /**\r\n  * An abstract base class that defines callback methods (read() and close()) for\r\n  * custom audio input streams).\r\n  * @class PullAudioInputStreamCallback\r\n  */\r\nexport abstract class PullAudioInputStreamCallback {\r\n\r\n    /**\r\n     * Reads data from audio input stream into the data buffer. The maximal number of bytes\r\n     * to be read is determined by the size of dataBuffer.\r\n     * @member PullAudioInputStreamCallback.prototype.read\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The byte array to store the read data.\r\n     * @returns {number} the number of bytes have been read.\r\n     */\r\n    public abstract read(dataBuffer: ArrayBuffer): number;\r\n\r\n    /**\r\n     * Closes the audio input stream.\r\n     * @member PullAudioInputStreamCallback.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ProxyInfo, WebsocketConnection } from \"../../common.browser/Exports.js\";\r\nimport { createGuid, IConnection, IStringDictionary } from \"../../common/Exports.js\";\r\nimport { Contracts } from \"../../sdk/Contracts.js\";\r\nimport { PropertyId } from \"../../sdk/Exports.js\";\r\nimport { ConnectionFactoryBase } from \"../ConnectionFactoryBase.js\";\r\nimport { AuthInfo, RecognizerConfig } from \"../Exports.js\";\r\nimport { ConversationConnectionConfig } from \"./ConversationConnectionConfig.js\";\r\nimport { ConversationWebsocketMessageFormatter } from \"./ConversationWebsocketMessageFormatter.js\";\r\n\r\n/**\r\n * Create a connection to the Conversation Translator websocket for sending instant messages and commands, and for receiving translated messages.\r\n * The conversation must already have been started or joined.\r\n */\r\nexport class ConversationConnectionFactory extends ConnectionFactoryBase  {\r\n\r\n    public create(config: RecognizerConfig, authInfo: AuthInfo, connectionId?: string): IConnection {\r\n\r\n        const endpointHost: string = config.parameters.getProperty(PropertyId.ConversationTranslator_Host, ConversationConnectionConfig.host);\r\n        const correlationId: string = config.parameters.getProperty(PropertyId.ConversationTranslator_CorrelationId, createGuid());\r\n\r\n        const endpoint: string = `wss://${endpointHost}${ConversationConnectionConfig.webSocketPath}`;\r\n        const token: string = config.parameters.getProperty(PropertyId.ConversationTranslator_Token, undefined);\r\n        Contracts.throwIfNullOrUndefined(token, \"token\");\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n        queryParams[ConversationConnectionConfig.configParams.apiVersion] = ConversationConnectionConfig.apiVersion;\r\n        queryParams[ConversationConnectionConfig.configParams.token] = token;\r\n        queryParams[ConversationConnectionConfig.configParams.correlationId] = correlationId;\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, {}, new ConversationWebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\nimport { marshalPromiseToCallbacks } from \"../../common/Exports.js\";\r\nimport { AudioConfigImpl } from \"../../sdk/Audio/AudioConfig.js\";\r\nimport { AudioStreamFormatImpl } from \"../../sdk/Audio/AudioStreamFormat.js\";\r\nimport { Contracts } from \"../../sdk/Contracts.js\";\r\nimport {\r\n    AudioConfig,\r\n    CancellationEventArgs,\r\n    Conversation,\r\n    ConversationInfo,\r\n    Meeting,\r\n    MeetingInfo,\r\n    MeetingTranscriber,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    SessionEventArgs,\r\n    SpeechRecognitionEventArgs,\r\n    SpeechTranslationConfig,\r\n    SpeechTranslationConfigImpl,\r\n} from \"../../sdk/Exports.js\";\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig,\r\n    TranscriberConnectionFactory,\r\n    TranscriptionServiceRecognizer,\r\n} from \"../Exports.js\";\r\n\r\nexport class TranscriberRecognizer extends Recognizer {\r\n\r\n    public recognizing: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    public recognized: (sender: Recognizer, event: SpeechRecognitionEventArgs) => void;\r\n\r\n    public canceled: (sender: Recognizer, event: CancellationEventArgs) => void;\r\n\r\n    private privDisposedRecognizer: boolean;\r\n    private privConversation: Conversation;\r\n    private privMeeting: Meeting;\r\n    private isMeetingRecognizer: boolean;\r\n\r\n    /**\r\n     * TranscriberRecognizer constructor.\r\n     * @constructor\r\n     * @param {SpeechTranslationConfig} speechTranslationConfig - Non-audio configuration associated with the recognizer\r\n     * @param {AudioConfig} audioConfig - An audio configuration associated with the recognizer\r\n     */\r\n    public constructor(speechTranslationConfig: SpeechTranslationConfig, audioConfig: AudioConfig) {\r\n        const speechTranslationConfigImpl: SpeechTranslationConfigImpl = speechTranslationConfig as SpeechTranslationConfigImpl;\r\n        Contracts.throwIfNull(speechTranslationConfigImpl, \"speechTranslationConfig\");\r\n\r\n        const audioConfigImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        Contracts.throwIfNull(audioConfigImpl, \"audioConfigImpl\");\r\n\r\n        Contracts.throwIfNullOrWhitespace(\r\n            speechTranslationConfigImpl.speechRecognitionLanguage,\r\n            PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n\r\n        super(audioConfig, speechTranslationConfigImpl.properties, new TranscriberConnectionFactory());\r\n        this.privDisposedRecognizer = false;\r\n        this.isMeetingRecognizer = false;\r\n    }\r\n\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    public set conversation(c: Conversation) {\r\n        Contracts.throwIfNullOrUndefined(c, \"Conversation\");\r\n        this.isMeetingRecognizer = false;\r\n        this.privConversation = c;\r\n    }\r\n\r\n    public getConversationInfo(): ConversationInfo {\r\n        Contracts.throwIfNullOrUndefined(this.privConversation, \"Conversation\");\r\n        return this.privConversation.conversationInfo;\r\n    }\r\n\r\n    public set meeting(m: Meeting) {\r\n        Contracts.throwIfNullOrUndefined(m, \"Meeting\");\r\n        this.isMeetingRecognizer = true;\r\n        this.privMeeting = m;\r\n    }\r\n\r\n    public getMeetingInfo(): MeetingInfo {\r\n        Contracts.throwIfNullOrUndefined(this.privMeeting, \"Meeting\");\r\n        return this.privMeeting.meetingInfo;\r\n    }\r\n\r\n    public IsMeetingRecognizer(): boolean {\r\n        return this.isMeetingRecognizer;\r\n    }\r\n\r\n    public startContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    public stopContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\r\n    }\r\n\r\n    public async close(): Promise<void> {\r\n        if (!this.privDisposedRecognizer) {\r\n            await this.dispose(true);\r\n        }\r\n    }\r\n\r\n    // Push async join/leave conversation message via serviceRecognizer\r\n    public async pushConversationEvent(conversationInfo: ConversationInfo, command: string): Promise<void> {\r\n        const reco = (this.privReco) as TranscriptionServiceRecognizer;\r\n        Contracts.throwIfNullOrUndefined(reco, \"serviceRecognizer\");\r\n        await reco.sendSpeechEventAsync(conversationInfo, command);\r\n    }\r\n\r\n    // Push async join/leave meeting message via serviceRecognizer\r\n    public async pushMeetingEvent(meetingInfo: MeetingInfo, command: string): Promise<void> {\r\n        const reco = (this.privReco) as TranscriptionServiceRecognizer;\r\n        Contracts.throwIfNullOrUndefined(reco, \"serviceRecognizer\");\r\n        await reco.sendMeetingSpeechEventAsync(meetingInfo, command);\r\n    }\r\n\r\n    public async enforceAudioGating(): Promise<void> {\r\n        const audioConfigImpl = this.audioConfig as AudioConfigImpl;\r\n        const format: AudioStreamFormatImpl = await audioConfigImpl.format;\r\n        const channels = format.channels;\r\n        if (channels === 1) {\r\n            if (this.properties.getProperty(\"f0f5debc-f8c9-4892-ac4b-90a7ab359fd2\", \"false\").toLowerCase() !== \"true\") {\r\n                throw new Error(\"Single channel audio configuration for MeetingTranscriber is currently under private preview, please contact diarizationrequest@microsoft.com for more details\");\r\n            }\r\n        } else if (channels !== 8) {\r\n            throw new Error(`Unsupported audio configuration: Detected ${channels}-channel audio`);\r\n        }\r\n        return;\r\n    }\r\n\r\n    public connectMeetingCallbacks(transcriber: MeetingTranscriber): void {\r\n        this.isMeetingRecognizer = true;\r\n        this.canceled = (s: any, e: CancellationEventArgs): void => {\r\n            if (!!transcriber.canceled) {\r\n                transcriber.canceled(transcriber, e);\r\n            }\r\n        };\r\n        this.recognizing = (s: any, e: SpeechRecognitionEventArgs): void => {\r\n            if (!!transcriber.transcribing) {\r\n                transcriber.transcribing(transcriber, e);\r\n            }\r\n        };\r\n        this.recognized = (s: any, e: SpeechRecognitionEventArgs): void => {\r\n            if (!!transcriber.transcribed) {\r\n                transcriber.transcribed(transcriber, e);\r\n            }\r\n        };\r\n        this.sessionStarted = (s: any, e: SessionEventArgs): void => {\r\n            if (!!transcriber.sessionStarted) {\r\n                transcriber.sessionStarted(transcriber, e);\r\n            }\r\n        };\r\n        this.sessionStopped = (s: any, e: SessionEventArgs): void => {\r\n            if (!!transcriber.sessionStopped) {\r\n                transcriber.sessionStopped(transcriber, e);\r\n            }\r\n        };\r\n    }\r\n\r\n    public disconnectCallbacks(): void {\r\n        this.canceled = undefined;\r\n        this.recognizing = undefined;\r\n        this.recognized = undefined;\r\n        this.sessionStarted = undefined;\r\n        this.sessionStopped = undefined;\r\n    }\r\n\r\n    /**\r\n     * Disposes any resources held by the object.\r\n     * @member ConversationTranscriber.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - true if disposing the object.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedRecognizer) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privDisposedRecognizer = true;\r\n            await this.implRecognizerStop();\r\n        }\r\n\r\n        await super.dispose(disposing);\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(\r\n            speechConfig,\r\n            this.properties);\r\n    }\r\n\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n        const configImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        return new TranscriptionServiceRecognizer(authentication, connectionFactory, configImpl, recognizerConfig, this);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Deferred } from \"./Promise.js\";\r\n\r\n/**\r\n * The error that is thrown when an argument passed in is null.\r\n *\r\n * @export\r\n * @class DefferalMap\r\n */\r\n\r\nexport class DeferralMap {\r\n    private privMap: { [id: string]: Deferred<any> } = {};\r\n\r\n    public add<T>(id: string, deferral: Deferred<T>): void {\r\n        this.privMap[id] = deferral;\r\n    }\r\n\r\n    public getId(id: string): Deferred<any> {\r\n        return this.privMap[id];\r\n    }\r\n\r\n    public complete<T>(id: string, result: T): void {\r\n        try {\r\n            this.privMap[id].resolve(result);\r\n        } catch (error) {\r\n            this.privMap[id].reject(error as string);\r\n        } finally {\r\n            this.privMap[id] = undefined;\r\n         }\r\n    }\r\n}\r\n","'use strict'\n/* global fetch, btoa, Headers */\nconst core = require('./core')\n\nclass StatusError extends Error {\n  constructor (res, ...params) {\n    super(...params)\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, StatusError)\n    }\n\n    this.name = 'StatusError'\n    this.message = res.statusMessage\n    this.statusCode = res.status\n    this.res = res\n    this.json = res.json.bind(res)\n    this.text = res.text.bind(res)\n    this.arrayBuffer = res.arrayBuffer.bind(res)\n    let buffer\n    const get = () => {\n      if (!buffer) buffer = this.arrayBuffer()\n      return buffer\n    }\n    Object.defineProperty(this, 'responseBody', { get })\n    // match Node.js headers object\n    this.headers = {}\n    for (const [key, value] of res.headers.entries()) {\n      this.headers[key.toLowerCase()] = value\n    }\n  }\n}\n\nconst mkrequest = (statusCodes, method, encoding, headers, baseurl) => async (_url, body, _headers = {}) => {\n  _url = baseurl + (_url || '')\n  let parsed = new URL(_url)\n\n  if (!headers) headers = {}\n  if (parsed.username) {\n    headers.Authorization = 'Basic ' + btoa(parsed.username + ':' + parsed.password)\n    parsed = new URL(parsed.protocol + '//' + parsed.host + parsed.pathname + parsed.search)\n  }\n  if (parsed.protocol !== 'https:' && parsed.protocol !== 'http:') {\n    throw new Error(`Unknown protocol, ${parsed.protocol}`)\n  }\n\n  if (body) {\n    if (body instanceof ArrayBuffer ||\n      ArrayBuffer.isView(body) ||\n      typeof body === 'string'\n    ) {\n      // noop\n    } else if (typeof body === 'object') {\n      body = JSON.stringify(body)\n      headers['Content-Type'] = 'application/json'\n    } else {\n      throw new Error('Unknown body type.')\n    }\n  }\n\n  _headers = new Headers({ ...(headers || {}), ..._headers })\n\n  const resp = await fetch(parsed, { method, headers: _headers, body })\n  resp.statusCode = resp.status\n\n  if (!statusCodes.has(resp.status)) {\n    throw new StatusError(resp)\n  }\n\n  if (encoding === 'json') return resp.json()\n  else if (encoding === 'buffer') return resp.arrayBuffer()\n  else if (encoding === 'string') return resp.text()\n  else return resp\n}\n\nmodule.exports = core(mkrequest)\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport class QueryParameterNames {\r\n    public static BotId: string = \"botid\";\r\n    public static CustomSpeechDeploymentId: string = \"cid\";\r\n    public static CustomVoiceDeploymentId: string = \"deploymentId\";\r\n    public static EnableAudioLogging: string = \"storeAudio\";\r\n    public static EnableLanguageId: string = \"lidEnabled\";\r\n    public static EnableWordLevelTimestamps: string = \"wordLevelTimestamps\";\r\n    public static EndSilenceTimeoutMs: string = \"endSilenceTimeoutMs\";\r\n    public static SegmentationSilenceTimeoutMs: string = \"segmentationSilenceTimeoutMs\";\r\n    public static SegmentationMaximumTimeMs: string = \"segmentationMaximumTimeMs\";\r\n    public static SegmentationStrategy: string = \"segmentationStrategy\";\r\n    public static Format: string = \"format\";\r\n    public static InitialSilenceTimeoutMs: string = \"initialSilenceTimeoutMs\";\r\n    public static Language: string = \"language\";\r\n    public static Profanity: string = \"profanity\";\r\n    public static RequestBotStatusMessages: string = \"enableBotMessageStatus\";\r\n    public static StableIntermediateThreshold: string = \"stableIntermediateThreshold\";\r\n    public static StableTranslation: string = \"stableTranslation\";\r\n    public static TestHooks: string = \"testhooks\";\r\n    public static Postprocessing: string = \"postprocessing\";\r\n    public static CtsMeetingId: string = \"meetingId\";\r\n    public static CtsDeviceId: string = \"deviceId\";\r\n    public static CtsIsParticipant: string = \"isParticipant\";\r\n    public static EnableAvatar: string = \"enableTalkingAvatar\";\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { MessageType } from \"./ConnectionMessage.js\";\r\nimport { ArgumentNullError, InvalidOperationError } from \"./Error.js\";\r\nimport { createNoDashGuid } from \"./Guid.js\";\r\n\r\nexport class RawWebsocketMessage {\r\n    private privMessageType: MessageType;\r\n    private privPayload: any = null;\r\n    private privId: string;\r\n\r\n    public constructor(messageType: MessageType, payload: any, id?: string) {\r\n        if (!payload) {\r\n            throw new ArgumentNullError(\"payload\");\r\n        }\r\n\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n        if (messageType === MessageType.Binary && Object.getPrototypeOf(payload).constructor.name !== \"ArrayBuffer\") {\r\n            throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\r\n        }\r\n\r\n        if (messageType === MessageType.Text && !(typeof (payload) === \"string\")) {\r\n            throw new InvalidOperationError(\"Payload must be a string\");\r\n        }\r\n\r\n        this.privMessageType = messageType;\r\n        this.privPayload = payload;\r\n        this.privId = id ? id : createNoDashGuid();\r\n    }\r\n\r\n    public get messageType(): MessageType {\r\n        return this.privMessageType;\r\n    }\r\n\r\n    public get payload(): any {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return this.privPayload;\r\n    }\r\n\r\n    public get textContent(): string {\r\n        if (this.privMessageType === MessageType.Binary) {\r\n            throw new InvalidOperationError(\"Not supported for binary message\");\r\n        }\r\n\r\n        return this.privPayload as string;\r\n    }\r\n\r\n    public get binaryContent(): ArrayBuffer {\r\n        if (this.privMessageType === MessageType.Text) {\r\n            throw new InvalidOperationError(\"Not supported for text message\");\r\n        }\r\n\r\n        return this.privPayload as ArrayBuffer;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport {\r\n    ResultReason,\r\n    VoiceProfileResult\r\n} from \"./Exports.js\";\r\n\r\n/**\r\n * Output format\r\n * @class VoiceProfilePhraseResult\r\n */\r\nexport class VoiceProfilePhraseResult extends VoiceProfileResult {\r\n    private privPhrases: string[] = [];\r\n    private privType: string;\r\n\r\n    public constructor(reason: ResultReason, statusText: string, type: string, phraseArray: string[]) {\r\n        super(reason, statusText);\r\n        Contracts.throwIfNullOrUndefined(phraseArray, \"phrase array\");\r\n        this.privType = type;\r\n        if (!!phraseArray && !!phraseArray[0]) {\r\n            this.privPhrases = phraseArray;\r\n        }\r\n    }\r\n\r\n    public get phrases(): string[] {\r\n        return this.privPhrases;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privType;\r\n    }\r\n}\r\n","export { CommandResponsePayload } from \"./CommandResponsePayload.js\";\r\nexport { IParticipantsListPayloadResponse, IParticipantPayloadResponse, ParticipantsListPayloadResponse, ParticipantPayloadResponse } from \"./ParticipantResponsePayload.js\";\r\nexport { ITranslationResponsePayload, SpeechResponsePayload, TextResponsePayload } from \"./TranslationResponsePayload.js\";\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport interface IAuthentication {\r\n    fetch(authFetchEventId: string): Promise<AuthInfo>;\r\n    fetchOnExpiry(authFetchEventId: string): Promise<AuthInfo>;\r\n}\r\n\r\nexport class AuthInfo {\r\n    private privHeaderName: string;\r\n    private privToken: string;\r\n\r\n    public constructor(headerName: string, token: string) {\r\n        this.privHeaderName = headerName;\r\n        this.privToken = token;\r\n    }\r\n\r\n    public get headerName(): string {\r\n        return this.privHeaderName;\r\n    }\r\n\r\n    public get token(): string {\r\n        return this.privToken;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IStringDictionary } from \"./IDictionary.js\";\r\n\r\n/**\r\n * String helper functions\r\n */\r\nexport class StringUtils {\r\n\r\n    /**\r\n     * Formats a string by replacing the named {keys} in the string with the values contained in the replacement dictionary.\r\n     * @param format The format string that contains the parts to replace surrounded by {}. For example: \"wss://{region}.cts.speech.microsoft.com\".\r\n     * If your string needs to contain a { or } you can use the {{ and }} escape sequences respectively.\r\n     * @param replacements The dictionary of replacements. If a replacement is not found, it is replaced with an empty string\r\n     * @returns The formatted string. If you pass in a null or undefined format string, an empty string will be returned\r\n     */\r\n    public static formatString(format: string, replacements: IStringDictionary<string>): string {\r\n        if (!format) {\r\n            return \"\";\r\n        }\r\n\r\n        if (!replacements) {\r\n            return format;\r\n        }\r\n\r\n        let formatted: string = \"\";\r\n        let key: string = \"\";\r\n\r\n        const appendToFormatted = (str: string): void => {\r\n            formatted += str;\r\n        };\r\n        const appendToKey = (str: string): void => {\r\n            key += str;\r\n        };\r\n        let appendFunc: (str: string) => void = appendToFormatted;\r\n\r\n        for (let i = 0; i < format.length; i++) {\r\n            const c: string = format[i];\r\n            const next: string = i + 1 < format.length ? format[i + 1] : \"\";\r\n\r\n            switch (c) {\r\n                case \"{\":\r\n                    if (next === \"{\") {\r\n                        appendFunc(\"{\");\r\n                        i++;\r\n                    } else {\r\n                        appendFunc = appendToKey;\r\n                    }\r\n                    break;\r\n\r\n                case \"}\":\r\n                    if (next === \"}\") {\r\n                        appendFunc(\"}\");\r\n                        i++;\r\n                    } else {\r\n                        if (replacements.hasOwnProperty(key)) {\r\n                            formatted += replacements[key];\r\n                        }\r\n\r\n                        appendFunc = appendToFormatted;\r\n                        key = \"\";\r\n                    }\r\n                    break;\r\n\r\n                default:\r\n                    appendFunc(c);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return formatted;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"../common/Error.js\";\r\nimport { DialogServiceTurnState } from \"./DialogServiceTurnState.js\";\r\n\r\nexport class DialogServiceTurnStateManager {\r\n    private privTurnMap: Map<string, DialogServiceTurnState>;\r\n\r\n    public constructor() {\r\n        this.privTurnMap = new Map<string, DialogServiceTurnState>();\r\n        return;\r\n    }\r\n\r\n    public StartTurn(id: string): DialogServiceTurnState {\r\n        if (this.privTurnMap.has(id)) {\r\n            throw new InvalidOperationError(\"Service error: There is already a turn with id:\" + id);\r\n        }\r\n        const turnState: DialogServiceTurnState = new DialogServiceTurnState(this, id);\r\n        this.privTurnMap.set(id, turnState);\r\n        return this.privTurnMap.get(id);\r\n    }\r\n\r\n    public GetTurn(id: string): DialogServiceTurnState {\r\n        return this.privTurnMap.get(id);\r\n    }\r\n\r\n    public CompleteTurn(id: string): DialogServiceTurnState {\r\n        if (!this.privTurnMap.has(id)) {\r\n            throw new InvalidOperationError(\"Service error: Received turn end for an unknown turn id:\" + id);\r\n        }\r\n        const turnState = this.privTurnMap.get(id);\r\n        turnState.complete();\r\n        this.privTurnMap.delete(id);\r\n        return turnState;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ArgumentNullError } from \"../common/Exports.js\";\r\nimport { AuthInfo, IAuthentication } from \"./IAuthentication.js\";\r\nimport { HeaderNames } from \"./HeaderNames.js\";\r\n\r\nexport class CognitiveTokenAuthentication implements IAuthentication {\r\n    private static privTokenPrefix: string = \"Bearer \";\r\n    private privFetchCallback: (authFetchEventId: string) => Promise<string>;\r\n    private privFetchOnExpiryCallback: (authFetchEventId: string) => Promise<string>;\r\n\r\n    public constructor(fetchCallback: (authFetchEventId: string) => Promise<string>, fetchOnExpiryCallback: (authFetchEventId: string) => Promise<string>) {\r\n        if (!fetchCallback) {\r\n            throw new ArgumentNullError(\"fetchCallback\");\r\n        }\r\n\r\n        if (!fetchOnExpiryCallback) {\r\n            throw new ArgumentNullError(\"fetchOnExpiryCallback\");\r\n        }\r\n\r\n        this.privFetchCallback = fetchCallback;\r\n        this.privFetchOnExpiryCallback = fetchOnExpiryCallback;\r\n    }\r\n\r\n    public fetch(authFetchEventId: string): Promise<AuthInfo> {\r\n        return this.privFetchCallback(authFetchEventId).then((token: string): AuthInfo => new AuthInfo(HeaderNames.Authorization, token === undefined ? undefined : CognitiveTokenAuthentication.privTokenPrefix + token));\r\n    }\r\n\r\n    public fetchOnExpiry(authFetchEventId: string): Promise<AuthInfo> {\r\n        return this.privFetchOnExpiryCallback(authFetchEventId).then((token: string): AuthInfo => new AuthInfo(HeaderNames.Authorization, token === undefined ? undefined : CognitiveTokenAuthentication.privTokenPrefix + token));\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason } from \"./Exports.js\";\r\n\r\n/**\r\n * Defines result of speech recognition.\r\n * @class RecognitionResult\r\n */\r\nexport class RecognitionResult {\r\n    private privResultId: string;\r\n    private privReason: ResultReason;\r\n    private privText: string;\r\n    private privDuration: number;\r\n    private privOffset: number;\r\n    private privLanguage: string;\r\n    private privLanguageDetectionConfidence: string;\r\n    private privErrorDetails: string;\r\n    private privJson: string;\r\n    private privProperties: PropertyCollection;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {string} text - The recognized text.\r\n     * @param {number} duration - The duration.\r\n     * @param {number} offset - The offset into the stream.\r\n     * @param {string} language - Primary Language detected, if provided.\r\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {string} json - Additional Json, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    public constructor(resultId?: string, reason?: ResultReason, text?: string, duration?: number,\r\n                offset?: number, language?: string, languageDetectionConfidence?: string, errorDetails?: string, json?: string, properties?: PropertyCollection) {\r\n        this.privResultId = resultId;\r\n        this.privReason = reason;\r\n        this.privText = text;\r\n        this.privDuration = duration;\r\n        this.privOffset = offset;\r\n        this.privLanguage = language;\r\n        this.privLanguageDetectionConfidence = languageDetectionConfidence;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privJson = json;\r\n        this.privProperties = properties;\r\n    }\r\n\r\n    /**\r\n     * Specifies the result identifier.\r\n     * @member RecognitionResult.prototype.resultId\r\n     * @function\r\n     * @public\r\n     * @returns {string} Specifies the result identifier.\r\n     */\r\n    public get resultId(): string {\r\n        return this.privResultId;\r\n    }\r\n\r\n    /**\r\n     * Specifies status of the result.\r\n     * @member RecognitionResult.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {ResultReason} Specifies status of the result.\r\n     */\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * Presents the recognized text in the result.\r\n     * @member RecognitionResult.prototype.text\r\n     * @function\r\n     * @public\r\n     * @returns {string} Presents the recognized text in the result.\r\n     */\r\n    public get text(): string {\r\n        return this.privText;\r\n    }\r\n\r\n    /**\r\n     * Duration of recognized speech in 100 nano second increments.\r\n     * @member RecognitionResult.prototype.duration\r\n     * @function\r\n     * @public\r\n     * @returns {number} Duration of recognized speech in 100 nano second increments.\r\n     */\r\n    public get duration(): number {\r\n        return this.privDuration;\r\n    }\r\n\r\n    /**\r\n     * Offset of recognized speech in 100 nano second increments.\r\n     * @member RecognitionResult.prototype.offset\r\n     * @function\r\n     * @public\r\n     * @returns {number} Offset of recognized speech in 100 nano second increments.\r\n     */\r\n    public get offset(): number {\r\n        return this.privOffset;\r\n    }\r\n\r\n    /**\r\n     * Primary Language detected.\r\n     * @member RecognitionResult.prototype.language\r\n     * @function\r\n     * @public\r\n     * @returns {string} language detected.\r\n     */\r\n    public get language(): string {\r\n        return this.privLanguage;\r\n    }\r\n\r\n    /**\r\n     * Primary Language detection confidence (Unknown, Low, Medium, High).\r\n     * @member RecognitionResult.prototype.languageDetectionConfidence\r\n     * @function\r\n     * @public\r\n     * @returns {string} detection confidence strength.\r\n     */\r\n    public get languageDetectionConfidence(): string {\r\n        return this.privLanguageDetectionConfidence;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful recognition, provides details of the occurred error.\r\n     * @member RecognitionResult.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} a brief description of an error.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    /**\r\n     * A string containing Json serialized recognition result as it was received from the service.\r\n     * @member RecognitionResult.prototype.json\r\n     * @function\r\n     * @private\r\n     * @returns {string} Json serialized representation of the result.\r\n     */\r\n    public get json(): string {\r\n        return this.privJson;\r\n    }\r\n\r\n    /**\r\n     * The set of properties exposed in the result.\r\n     * @member RecognitionResult.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The set of properties exposed in the result.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection } from \"./Exports.js\";\r\n\r\n/**\r\n * Represents collection of parameters and their values.\r\n * @class Translations\r\n */\r\nexport class Translations {\r\n    // Use an PropertyCollection internally, just wrapping it to hide the | enum syntax it has.\r\n    private privMap: PropertyCollection = new PropertyCollection();\r\n\r\n    /**\r\n     * Get the languages in the object in a String array.\r\n     * @member Translations.prototype.languages\r\n     * @function\r\n     * @public\r\n     * @returns {string[]} languages in translations object.\r\n     */\r\n    public get languages(): string[] {\r\n        return this.privMap.keys;\r\n    }\r\n\r\n    /**\r\n     * Returns the parameter value in type String. The parameter must have the same type as String.\r\n     * Currently only String, int and bool are allowed.\r\n     * If the name is not available, the specified defaultValue is returned.\r\n     * @member Translations.prototype.get\r\n     * @function\r\n     * @public\r\n     * @param {string} key - The parameter name.\r\n     * @param {string} def - The default value which is returned if the parameter is not available in the collection.\r\n     * @returns {string} value of the parameter.\r\n     */\r\n    public get(key: string, def?: string): string {\r\n        return this.privMap.getProperty(key, def);\r\n    }\r\n\r\n    /**\r\n     * Sets the String value of the parameter specified by name.\r\n     * @member Translations.prototype.set\r\n     * @function\r\n     * @public\r\n     * @param {string} key - The parameter name.\r\n     * @param {string} value - The value of the parameter.\r\n     */\r\n    public set(key: string, value: string): void {\r\n        this.privMap.setProperty(key, value);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ReplayableAudioNode } from \"../common.browser/Exports.js\";\r\nimport {\r\n    Deferred,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IConnection,\r\n    MessageType,\r\n} from \"../common/Exports.js\";\r\nimport { AudioStreamFormatImpl } from \"../sdk/Audio/AudioStreamFormat.js\";\r\nimport { SpeakerRecognitionModel } from \"../sdk/SpeakerRecognitionModel.js\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    SpeakerRecognitionResult,\r\n    SpeakerRecognizer,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SessionEventArgs,\r\n} from \"../sdk/Exports.js\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    ISpeechConfigAudioDevice,\r\n    SpeakerResponse,\r\n    ServiceRecognizerBase,\r\n} from \"./Exports.js\";\r\nimport { IAuthentication } from \"./IAuthentication.js\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory.js\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig.js\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal.js\";\r\n\r\ninterface SpeakerContext {\r\n    scenario: string;\r\n    profileIds: string[];\r\n    features: {\r\n        interimResult: string;\r\n        progressiveDetection: string;\r\n    };\r\n}\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nexport class SpeakerServiceRecognizer extends ServiceRecognizerBase {\r\n    private privSpeakerRecognizer: SpeakerRecognizer;\r\n    private privSpeakerAudioSource: IAudioSource;\r\n    private privResultDeferral: Deferred<SpeakerRecognitionResult>;\r\n    private privSpeakerModel: SpeakerRecognitionModel;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        recognizer: SpeakerRecognizer) {\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\r\n        this.privSpeakerRecognizer = recognizer;\r\n        this.privSpeakerAudioSource = audioSource;\r\n        this.recognizeSpeaker = (model: SpeakerRecognitionModel): Promise<SpeakerRecognitionResult> => this.recognizeSpeakerOnce(model);\r\n        this.sendPrePayloadJSONOverride = (): Promise<void> => this.noOp();\r\n    }\r\n\r\n    protected processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        let processed: boolean = false;\r\n\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        if (connectionMessage.messageType === MessageType.Text) {\r\n            resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        }\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"speaker.response\":\r\n                const response: SpeakerResponse = JSON.parse(connectionMessage.textBody) as SpeakerResponse;\r\n                let result: SpeakerRecognitionResult;\r\n                if (response.status.statusCode.toLowerCase() !== \"success\") {\r\n                    result = new SpeakerRecognitionResult(\r\n                        response,\r\n                        ResultReason.Canceled,\r\n                        CancellationErrorCode.ServiceError,\r\n                        response.status.reason\r\n                        );\r\n                } else {\r\n                    result = new SpeakerRecognitionResult(\r\n                        response,\r\n                        ResultReason.RecognizedSpeaker,\r\n                        );\r\n                }\r\n                if (!!this.privResultDeferral) {\r\n                    this.privResultDeferral.resolve(result);\r\n                }\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        const defferal = new Deferred<boolean>();\r\n        defferal.resolve(processed);\r\n        return defferal.promise;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n        if (!!this.privResultDeferral) {\r\n            const result: SpeakerRecognitionResult = new SpeakerRecognitionResult(\r\n                {\r\n                    scenario: this.privSpeakerModel.scenario,\r\n                    status: { statusCode: error, reason: error }\r\n                },\r\n                ResultReason.Canceled,\r\n                errorCode,\r\n                error\r\n                );\r\n            try {\r\n                this.privResultDeferral.resolve(result);\r\n            } catch (error) {\r\n                this.privResultDeferral.reject(error as string);\r\n            }\r\n        }\r\n    }\r\n\r\n    public async recognizeSpeakerOnce(model: SpeakerRecognitionModel): Promise<SpeakerRecognitionResult> {\r\n        this.privSpeakerModel = model;\r\n        this.voiceProfileType = model.scenario;\r\n        if (!this.privResultDeferral) {\r\n            this.privResultDeferral = new Deferred<SpeakerRecognitionResult>();\r\n        }\r\n        this.privRequestSession.startNewRecognition();\r\n        this.privRequestSession.listenForServiceTelemetry(this.privSpeakerAudioSource.events);\r\n\r\n        this.privRecognizerConfig.parameters.setProperty(PropertyId.Speech_SessionId, this.privRequestSession.sessionId);\r\n\r\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\r\n        const conPromise: Promise<IConnection> = this.connectImpl();\r\n\r\n        const preAudioPromise: Promise<void> = this.sendPreAudioMessages(this.extractSpeakerContext(model));\r\n\r\n        const node: IAudioStreamNode = await this.privSpeakerAudioSource.attach(this.privRequestSession.audioNodeId);\r\n        const format: AudioStreamFormatImpl = await this.privSpeakerAudioSource.format;\r\n        const deviceInfo: ISpeechConfigAudioDevice = await this.privSpeakerAudioSource.deviceInfo;\r\n\r\n        const audioNode = new ReplayableAudioNode(node, format.avgBytesPerSec);\r\n        await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\r\n\r\n        this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\r\n\r\n        try {\r\n            await conPromise;\r\n            await preAudioPromise;\r\n        } catch (err) {\r\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.ConnectionFailure, err as string);\r\n        }\r\n\r\n        const sessionStartEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n\r\n        if (!!this.privRecognizer.sessionStarted) {\r\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\r\n        }\r\n\r\n        void this.receiveMessage();\r\n        const audioSendPromise = this.sendAudio(audioNode);\r\n\r\n        // /* eslint-disable no-empty */\r\n        audioSendPromise.then((): void => { /* add? return true;*/ }, (error: string): void => {\r\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.RuntimeError, error);\r\n        });\r\n\r\n        return this.privResultDeferral.promise;\r\n    }\r\n\r\n    private async sendPreAudioMessages(context: SpeakerContext): Promise<void> {\r\n        const connection: IConnection = await this.fetchConnection();\r\n        await this.sendSpeakerRecognition(connection, context);\r\n        // await this.sendWaveHeader(connection);\r\n    }\r\n\r\n    private async sendSpeakerRecognition(connection: IConnection, context: SpeakerContext): Promise<void> {\r\n        const speakerContextJson = JSON.stringify(context);\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"speaker.context\",\r\n            this.privRequestSession.requestId,\r\n            \"application/json; charset=utf-8\",\r\n            speakerContextJson));\r\n    }\r\n\r\n    private extractSpeakerContext(model: SpeakerRecognitionModel): SpeakerContext {\r\n        return {\r\n            features: {\r\n                interimResult: \"enabled\",\r\n                progressiveDetection: \"disabled\",\r\n            },\r\n            profileIds: model.profileIds,\r\n            scenario: model.scenario,\r\n        };\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts.js\";\r\n\r\n/**\r\n * Source Language configuration.\r\n * @class SourceLanguageConfig\r\n */\r\nexport class SourceLanguageConfig {\r\n    private privLanguage: string;\r\n    private privEndpointId: string;\r\n\r\n    private constructor(language: string, endpointId?: string) {\r\n        Contracts.throwIfNullOrUndefined(language, \"language\");\r\n        this.privLanguage = language;\r\n        this.privEndpointId = endpointId;\r\n    }\r\n\r\n    /**\r\n     * @member SourceLanguageConfig.fromLanguage\r\n     * @function\r\n     * @public\r\n     * @param {string} language language (eg. \"en-US\") value of config.\r\n     * @param {string?} endpointId endpointId of model bound to given language of config.\r\n     * @return {SourceLanguageConfig} Instance of SourceLanguageConfig\r\n     * @summary Creates an instance of the SourceLanguageConfig with the given language and optional endpointId.\r\n     * Added in version 1.13.0.\r\n     */\r\n    public static fromLanguage(language: string, endpointId?: string): SourceLanguageConfig {\r\n        return new SourceLanguageConfig(language, endpointId);\r\n    }\r\n\r\n    public get language(): string {\r\n        return this.privLanguage;\r\n    }\r\n\r\n    public get endpointId(): string {\r\n        return this.privEndpointId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"./Error.js\";\r\nimport { createNoDashGuid } from \"./Guid.js\";\r\nimport { Queue } from \"./Queue.js\";\r\n\r\nexport interface IStreamChunk<TBuffer> {\r\n    isEnd: boolean;\r\n    buffer: TBuffer;\r\n    timeReceived: number;\r\n}\r\n\r\nexport class Stream<TBuffer> {\r\n    private privId: string;\r\n    private privIsWriteEnded: boolean = false;\r\n    private privIsReadEnded: boolean = false;\r\n    private privReaderQueue: Queue<IStreamChunk<TBuffer>>;\r\n\r\n    public constructor(streamId?: string) {\r\n        this.privId = streamId ? streamId : createNoDashGuid();\r\n        this.privReaderQueue = new Queue<IStreamChunk<TBuffer>>();\r\n    }\r\n\r\n    public get isClosed(): boolean {\r\n        return this.privIsWriteEnded;\r\n    }\r\n\r\n    public get isReadEnded(): boolean {\r\n        return this.privIsReadEnded;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public close(): void {\r\n        if (!this.privIsWriteEnded) {\r\n            this.writeStreamChunk({\r\n                buffer: null,\r\n                isEnd: true,\r\n                timeReceived: Date.now(),\r\n            });\r\n            this.privIsWriteEnded = true;\r\n        }\r\n    }\r\n\r\n    public writeStreamChunk(streamChunk: IStreamChunk<TBuffer>): void {\r\n        this.throwIfClosed();\r\n        if (!this.privReaderQueue.isDisposed()) {\r\n            try {\r\n                this.privReaderQueue.enqueue(streamChunk);\r\n            } catch (e) {\r\n                // Do nothing\r\n            }\r\n        }\r\n    }\r\n\r\n    public read(): Promise<IStreamChunk<TBuffer>> {\r\n        if (this.privIsReadEnded) {\r\n            throw new InvalidOperationError(\"Stream read has already finished\");\r\n        }\r\n\r\n        return this.privReaderQueue\r\n            .dequeue()\r\n            .then(async (streamChunk: IStreamChunk<TBuffer>): Promise<IStreamChunk<TBuffer>> => {\r\n                if (streamChunk === undefined || streamChunk.isEnd) {\r\n                    await this.privReaderQueue.dispose(\"End of stream reached\");\r\n                }\r\n\r\n                return streamChunk;\r\n            });\r\n    }\r\n    public readEnded(): void {\r\n        if (!this.privIsReadEnded) {\r\n            this.privIsReadEnded = true;\r\n            this.privReaderQueue = new Queue<IStreamChunk<TBuffer>>();\r\n        }\r\n    }\r\n\r\n    private throwIfClosed(): void {\r\n        if (this.privIsWriteEnded) {\r\n            throw new InvalidOperationError(\"Stream closed\");\r\n        }\r\n    }\r\n}\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function get() {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function get() {\n    return _parse.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function get() {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function get() {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function get() {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function get() {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function get() {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function get() {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function get() {\n    return _version.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\n\nvar _version = _interopRequireDefault(require(\"./version.js\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    AddedLmIntent,\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    IntentConnectionFactory,\r\n    IntentServiceRecognizer,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig\r\n} from \"../common.speech/Exports.js\";\r\nimport { marshalPromiseToCallbacks } from \"../common/Exports.js\";\r\nimport { AudioConfigImpl } from \"./Audio/AudioConfig.js\";\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport {\r\n    AudioConfig,\r\n    IntentRecognitionCanceledEventArgs,\r\n    IntentRecognitionEventArgs,\r\n    IntentRecognitionResult,\r\n    KeywordRecognitionModel,\r\n    LanguageUnderstandingModel,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    SpeechConfig,\r\n} from \"./Exports.js\";\r\nimport { LanguageUnderstandingModelImpl } from \"./LanguageUnderstandingModel.js\";\r\nimport { SpeechConfigImpl } from \"./SpeechConfig.js\";\r\n\r\n/**\r\n * Intent recognizer.\r\n * @class\r\n */\r\nexport class IntentRecognizer extends Recognizer {\r\n    private privDisposedIntentRecognizer: boolean;\r\n    private privAddedIntents: string[][];\r\n    private privAddedLmIntents: { [id: string]: AddedLmIntent };\r\n    private privUmbrellaIntent: AddedLmIntent;\r\n\r\n    /**\r\n     * Initializes an instance of the IntentRecognizer.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - The set of configuration properties.\r\n     * @param {AudioConfig} audioConfig - An optional audio input config associated with the recognizer\r\n     */\r\n    public constructor(speechConfig: SpeechConfig, audioConfig?: AudioConfig) {\r\n        Contracts.throwIfNullOrUndefined(speechConfig, \"speechConfig\");\r\n        const configImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNullOrUndefined(configImpl, \"speechConfig\");\r\n\r\n        super(audioConfig, configImpl.properties, new IntentConnectionFactory());\r\n        this.privAddedIntents = [];\r\n        this.privAddedLmIntents = {};\r\n\r\n        this.privDisposedIntentRecognizer = false;\r\n        this.privProperties = configImpl.properties;\r\n\r\n        Contracts.throwIfNullOrWhitespace(this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage), PropertyId[PropertyId.SpeechServiceConnection_RecoLanguage]);\r\n    }\r\n\r\n    /**\r\n     * The event recognizing signals that an intermediate recognition result is received.\r\n     * @member IntentRecognizer.prototype.recognizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognizing: (sender: IntentRecognizer, event: IntentRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event recognized signals that a final recognition result is received.\r\n     * @member IntentRecognizer.prototype.recognized\r\n     * @function\r\n     * @public\r\n     */\r\n    public recognized: (sender: IntentRecognizer, event: IntentRecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * The event canceled signals that an error occurred during recognition.\r\n     * @member IntentRecognizer.prototype.canceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public canceled: (sender: IntentRecognizer, event: IntentRecognitionCanceledEventArgs) => void;\r\n\r\n    /**\r\n     * Gets the spoken language of recognition.\r\n     * @member IntentRecognizer.prototype.speechRecognitionLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {string} the spoken language of recognition.\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\r\n\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage);\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member IntentRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * Note: Please use a token derived from your LanguageUnderstanding subscription key for the Intent recognizer.\r\n     * @member IntentRecognizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} value - Authorization token.\r\n     */\r\n    public set authorizationToken(value: string) {\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, value);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this IntentRecognizer.\r\n     * @member IntentRecognizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their\r\n     * values defined for this IntentRecognizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Starts intent recognition, and stops after the first utterance is recognized.\r\n     * The task returns the recognition text and intent as result.\r\n     * Note: RecognizeOnceAsync() returns when the first utterance has been recognized,\r\n     * so it is suitable only for single shot recognition like command or query.\r\n     * For long-running recognition, use StartContinuousRecognitionAsync() instead.\r\n     * @member IntentRecognizer.prototype.recognizeOnceAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback that received the recognition has finished with an IntentRecognitionResult.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public recognizeOnceAsync(cb?: (e: IntentRecognitionResult) => void, err?: (e: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\r\n\r\n        if (Object.keys(this.privAddedLmIntents).length !== 0 || undefined !== this.privUmbrellaIntent) {\r\n            const context: IIntentContext = this.buildSpeechContext();\r\n\r\n            this.privReco.speechContext.setSection(\"intent\", context.Intent);\r\n            this.privReco.dynamicGrammar.addReferenceGrammar(context.ReferenceGrammars);\r\n\r\n            const intentReco: IntentServiceRecognizer = this.privReco as IntentServiceRecognizer;\r\n            intentReco.setIntents(this.privAddedLmIntents, this.privUmbrellaIntent);\r\n        }\r\n\r\n        marshalPromiseToCallbacks(this.recognizeOnceAsyncImpl(RecognitionMode.Interactive), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition, until stopContinuousRecognitionAsync() is called.\r\n     * User must subscribe to events to receive recognition results.\r\n     * @member IntentRecognizer.prototype.startContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        if (Object.keys(this.privAddedLmIntents).length !== 0 || undefined !== this.privUmbrellaIntent) {\r\n            const context: IIntentContext = this.buildSpeechContext();\r\n\r\n            this.privReco.speechContext.setSection(\"intent\", context.Intent);\r\n            this.privReco.dynamicGrammar.addReferenceGrammar(context.ReferenceGrammars);\r\n\r\n            const intentReco: IntentServiceRecognizer = this.privReco as IntentServiceRecognizer;\r\n            intentReco.setIntents(this.privAddedLmIntents, this.privUmbrellaIntent);\r\n        }\r\n\r\n        marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(RecognitionMode.Conversation), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Stops continuous intent recognition.\r\n     * @member IntentRecognizer.prototype.stopContinuousRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopContinuousRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), cb, err);\r\n    }\r\n\r\n    /**\r\n     * Starts speech recognition with keyword spotting, until stopKeywordRecognitionAsync() is called.\r\n     * User must subscribe to events to receive recognition results.\r\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK.\r\n     * This functionality is currently not included in the SDK itself.\r\n     * @member IntentRecognizer.prototype.startKeywordRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param {KeywordRecognitionModel} model - The keyword recognition model that specifies the keyword to be recognized.\r\n     * @param cb - Callback invoked once the recognition has started.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public startKeywordRecognitionAsync(model: KeywordRecognitionModel, cb?: () => void, err?: (e: string) => void): void {\r\n        Contracts.throwIfNull(model, \"model\");\r\n\r\n        if (!!err) {\r\n            err(\"Not yet implemented.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stops continuous speech recognition.\r\n     * Note: Key word spotting functionality is only available on the Speech Devices SDK.\r\n     * This functionality is currently not included in the SDK itself.\r\n     * @member IntentRecognizer.prototype.stopKeywordRecognitionAsync\r\n     * @function\r\n     * @public\r\n     * @param cb - Callback invoked once the recognition has stopped.\r\n     * @param err - Callback invoked in case of an error.\r\n     */\r\n    public stopKeywordRecognitionAsync(cb?: () => void, err?: (e: string) => void): void {\r\n        if (!!cb) {\r\n            try {\r\n                cb();\r\n            } catch (e) {\r\n                if (!!err) {\r\n                    err(e as string);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds a phrase that should be recognized as intent.\r\n     * @member IntentRecognizer.prototype.addIntent\r\n     * @function\r\n     * @public\r\n     * @param {string} intentId - A String that represents the identifier of the intent to be recognized.\r\n     * @param {string} phrase - A String that specifies the phrase representing the intent.\r\n     */\r\n    public addIntent(simplePhrase: string, intentId?: string): void {\r\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\r\n        Contracts.throwIfNullOrWhitespace(intentId, \"intentId\");\r\n        Contracts.throwIfNullOrWhitespace(simplePhrase, \"simplePhrase\");\r\n\r\n        this.privAddedIntents.push([intentId, simplePhrase]);\r\n    }\r\n\r\n    /**\r\n     * Adds an intent from Language Understanding service for recognition.\r\n     * @member IntentRecognizer.prototype.addIntentWithLanguageModel\r\n     * @function\r\n     * @public\r\n     * @param {string} intentId - A String that represents the identifier of the intent\r\n     * to be recognized. Ignored if intentName is empty.\r\n     * @param {string} model - The intent model from Language Understanding service.\r\n     * @param {string} intentName - The intent name defined in the intent model. If it\r\n     * is empty, all intent names defined in the model will be added.\r\n     */\r\n    public addIntentWithLanguageModel(intentId: string, model: LanguageUnderstandingModel, intentName?: string): void {\r\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\r\n        Contracts.throwIfNullOrWhitespace(intentId, \"intentId\");\r\n        Contracts.throwIfNull(model, \"model\");\r\n\r\n        const modelImpl: LanguageUnderstandingModelImpl = model as LanguageUnderstandingModelImpl;\r\n        Contracts.throwIfNullOrWhitespace(modelImpl.appId, \"model.appId\");\r\n\r\n        this.privAddedLmIntents[intentId] = new AddedLmIntent(modelImpl, intentName);\r\n    }\r\n\r\n    /**\r\n     * @summary Adds all intents from the specified Language Understanding Model.\r\n     * @member IntentRecognizer.prototype.addAllIntents\r\n     * @function\r\n     * @public\r\n     * @function\r\n     * @public\r\n     * @param {LanguageUnderstandingModel} model - The language understanding model containing the intents.\r\n     * @param {string} intentId - A custom id String to be returned in the IntentRecognitionResult's getIntentId() method.\r\n     */\r\n    public addAllIntents(model: LanguageUnderstandingModel, intentId?: string): void {\r\n        Contracts.throwIfNull(model, \"model\");\r\n\r\n        const modelImpl: LanguageUnderstandingModelImpl = model as LanguageUnderstandingModelImpl;\r\n        Contracts.throwIfNullOrWhitespace(modelImpl.appId, \"model.appId\");\r\n\r\n        this.privUmbrellaIntent = new AddedLmIntent(modelImpl, intentId);\r\n    }\r\n\r\n    /**\r\n     * closes all external resources held by an instance of this class.\r\n     * @member IntentRecognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposedIntentRecognizer);\r\n\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.privProperties);\r\n    }\r\n\r\n    protected createServiceRecognizer(authentication: IAuthentication, connectionFactory: IConnectionFactory, audioConfig: AudioConfig, recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n        const audioImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        return new IntentServiceRecognizer(authentication, connectionFactory, audioImpl, recognizerConfig, this);\r\n    }\r\n\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedIntentRecognizer) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            this.privDisposedIntentRecognizer = true;\r\n            await super.dispose(disposing);\r\n        }\r\n    }\r\n\r\n    private buildSpeechContext(): IIntentContext {\r\n        let appId: string;\r\n        let region: string;\r\n        let subscriptionKey: string;\r\n        const refGrammers: string[] = [];\r\n\r\n        if (undefined !== this.privUmbrellaIntent) {\r\n            appId = this.privUmbrellaIntent.modelImpl.appId;\r\n            region = this.privUmbrellaIntent.modelImpl.region;\r\n            subscriptionKey = this.privUmbrellaIntent.modelImpl.subscriptionKey;\r\n        }\r\n\r\n        // Build the reference grammer array.\r\n        for (const intentId of Object.keys(this.privAddedLmIntents)) {\r\n            const addedLmIntent: AddedLmIntent = this.privAddedLmIntents[intentId];\r\n\r\n            // validate all the same model, region, and key...\r\n            if (appId === undefined) {\r\n                appId = addedLmIntent.modelImpl.appId;\r\n            } else {\r\n                if (appId !== addedLmIntent.modelImpl.appId) {\r\n                    throw new Error(\"Intents must all be from the same LUIS model\");\r\n                }\r\n            }\r\n\r\n            if (region === undefined) {\r\n                region = addedLmIntent.modelImpl.region;\r\n            } else {\r\n                if (region !== addedLmIntent.modelImpl.region) {\r\n                    throw new Error(\"Intents must all be from the same LUIS model in a single region\");\r\n                }\r\n            }\r\n\r\n            if (subscriptionKey === undefined) {\r\n                subscriptionKey = addedLmIntent.modelImpl.subscriptionKey;\r\n            } else {\r\n                if (subscriptionKey !== addedLmIntent.modelImpl.subscriptionKey) {\r\n                    throw new Error(\"Intents must all use the same subscription key\");\r\n                }\r\n            }\r\n\r\n            const grammer: string = \"luis/\" + appId + \"-PRODUCTION#\" + intentId;\r\n            refGrammers.push(grammer);\r\n        }\r\n\r\n        return {\r\n            Intent: {\r\n                id: appId,\r\n                key: (subscriptionKey === undefined) ? this.privProperties.getProperty(PropertyId[PropertyId.SpeechServiceConnection_Key]) : subscriptionKey,\r\n                provider: \"LUIS\",\r\n            },\r\n            ReferenceGrammars: (undefined === this.privUmbrellaIntent) ? refGrammers : [\"luis/\" + appId + \"-PRODUCTION\"],\r\n        };\r\n    }\r\n}\r\n\r\ninterface IIntentContext {\r\n    Intent: {\r\n        id: string;\r\n        key: string;\r\n        provider: string;\r\n    };\r\n    ReferenceGrammars: string[];\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ArgumentNullError } from \"./Error.js\";\r\nimport { EventSource } from \"./EventSource.js\";\r\nimport { IEventSource } from \"./IEventSource.js\";\r\nimport { PlatformEvent } from \"./PlatformEvent.js\";\r\n\r\nexport class Events {\r\n    private static privInstance: IEventSource<PlatformEvent> = new EventSource<PlatformEvent>();\r\n\r\n    public static setEventSource(eventSource: IEventSource<PlatformEvent>): void {\r\n        if (!eventSource) {\r\n            throw new ArgumentNullError(\"eventSource\");\r\n        }\r\n\r\n        Events.privInstance = eventSource;\r\n    }\r\n\r\n    public static get instance(): IEventSource<PlatformEvent> {\r\n        return Events.privInstance;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { INumberDictionary } from \"../../common/Exports.js\";\r\nimport { SpeechSynthesisOutputFormat } from \"../SpeechSynthesisOutputFormat.js\";\r\nimport { AudioFormatTag, AudioStreamFormatImpl } from \"./AudioStreamFormat.js\";\r\n\r\n/**\r\n * @private\r\n * @class AudioOutputFormatImpl\r\n * Updated in version 1.17.0\r\n */\r\n// eslint-disable-next-line max-classes-per-file\r\nexport class AudioOutputFormatImpl extends AudioStreamFormatImpl {\r\n    public static SpeechSynthesisOutputFormatToString: INumberDictionary<string> = {\r\n        [SpeechSynthesisOutputFormat.Raw8Khz8BitMonoMULaw]: \"raw-8khz-8bit-mono-mulaw\",\r\n        [SpeechSynthesisOutputFormat.Riff16Khz16KbpsMonoSiren]: \"riff-16khz-16kbps-mono-siren\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz16KbpsMonoSiren]: \"audio-16khz-16kbps-mono-siren\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz32KBitRateMonoMp3]: \"audio-16khz-32kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz128KBitRateMonoMp3]: \"audio-16khz-128kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz64KBitRateMonoMp3]: \"audio-16khz-64kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio24Khz48KBitRateMonoMp3]: \"audio-24khz-48kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio24Khz96KBitRateMonoMp3]: \"audio-24khz-96kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio24Khz160KBitRateMonoMp3]: \"audio-24khz-160kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Raw16Khz16BitMonoTrueSilk]: \"raw-16khz-16bit-mono-truesilk\",\r\n        [SpeechSynthesisOutputFormat.Riff16Khz16BitMonoPcm]: \"riff-16khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff8Khz16BitMonoPcm]: \"riff-8khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm]: \"riff-24khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff8Khz8BitMonoMULaw]: \"riff-8khz-8bit-mono-mulaw\",\r\n        [SpeechSynthesisOutputFormat.Raw16Khz16BitMonoPcm]: \"raw-16khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Raw24Khz16BitMonoPcm]: \"raw-24khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Raw8Khz16BitMonoPcm]: \"raw-8khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Ogg16Khz16BitMonoOpus]: \"ogg-16khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Ogg24Khz16BitMonoOpus]: \"ogg-24khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Raw48Khz16BitMonoPcm]: \"raw-48khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff48Khz16BitMonoPcm]: \"riff-48khz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Audio48Khz96KBitRateMonoMp3]: \"audio-48khz-96kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Audio48Khz192KBitRateMonoMp3]: \"audio-48khz-192kbitrate-mono-mp3\",\r\n        [SpeechSynthesisOutputFormat.Ogg48Khz16BitMonoOpus]: \"ogg-48khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Webm16Khz16BitMonoOpus]: \"webm-16khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Webm24Khz16BitMonoOpus]: \"webm-24khz-16bit-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Webm24Khz16Bit24KbpsMonoOpus]: \"webm-24khz-16bit-24kbps-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Raw24Khz16BitMonoTrueSilk]: \"raw-24khz-16bit-mono-truesilk\",\r\n        [SpeechSynthesisOutputFormat.Raw8Khz8BitMonoALaw]: \"raw-8khz-8bit-mono-alaw\",\r\n        [SpeechSynthesisOutputFormat.Riff8Khz8BitMonoALaw]: \"riff-8khz-8bit-mono-alaw\",\r\n        [SpeechSynthesisOutputFormat.Audio16Khz16Bit32KbpsMonoOpus]: \"audio-16khz-16bit-32kbps-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Audio24Khz16Bit48KbpsMonoOpus]: \"audio-24khz-16bit-48kbps-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Audio24Khz16Bit24KbpsMonoOpus]: \"audio-24khz-16bit-24kbps-mono-opus\",\r\n        [SpeechSynthesisOutputFormat.Raw22050Hz16BitMonoPcm]: \"raw-22050hz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff22050Hz16BitMonoPcm]: \"riff-22050hz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Raw44100Hz16BitMonoPcm]: \"raw-44100hz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.Riff44100Hz16BitMonoPcm]: \"riff-44100hz-16bit-mono-pcm\",\r\n        [SpeechSynthesisOutputFormat.AmrWb16000Hz]: \"amr-wb-16000hz\",\r\n        [SpeechSynthesisOutputFormat.G72216Khz64Kbps]: \"g722-16khz-64kbps\",\r\n    };\r\n    private priAudioFormatString: string;\r\n    /**\r\n     * audio format string for synthesis request, which may differ from priAudioFormatString.\r\n     * e.g. for riff format, we will request raw format and add a header in SDK side.\r\n     */\r\n    private readonly priRequestAudioFormatString: string;\r\n    private readonly priHasHeader: boolean;\r\n\r\n    /**\r\n     * Creates an instance with the given values.\r\n     * @constructor\r\n     * @param formatTag\r\n     * @param {number} channels - Number of channels.\r\n     * @param {number} samplesPerSec - Samples per second.\r\n     * @param {number} avgBytesPerSec - Average bytes per second.\r\n     * @param {number} blockAlign - Block alignment.\r\n     * @param {number} bitsPerSample - Bits per sample.\r\n     * @param {string} audioFormatString - Audio format string\r\n     * @param {string} requestAudioFormatString - Audio format string sent to service.\r\n     * @param {boolean} hasHeader - If the format has header or not.\r\n     */\r\n    public constructor(formatTag: AudioFormatTag,\r\n                       channels: number,\r\n                       samplesPerSec: number,\r\n                       avgBytesPerSec: number,\r\n                       blockAlign: number,\r\n                       bitsPerSample: number,\r\n                       audioFormatString: string,\r\n                       requestAudioFormatString: string,\r\n                       hasHeader: boolean) {\r\n        super(samplesPerSec, bitsPerSample, channels, formatTag);\r\n        this.formatTag = formatTag;\r\n        this.avgBytesPerSec = avgBytesPerSec;\r\n        this.blockAlign = blockAlign;\r\n        this.priAudioFormatString = audioFormatString;\r\n        this.priRequestAudioFormatString = requestAudioFormatString;\r\n        this.priHasHeader = hasHeader;\r\n    }\r\n\r\n    public static fromSpeechSynthesisOutputFormat(speechSynthesisOutputFormat?: SpeechSynthesisOutputFormat): AudioOutputFormatImpl {\r\n        if (speechSynthesisOutputFormat === undefined) {\r\n            return AudioOutputFormatImpl.getDefaultOutputFormat();\r\n        }\r\n        return AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(\r\n            AudioOutputFormatImpl.SpeechSynthesisOutputFormatToString[speechSynthesisOutputFormat]);\r\n    }\r\n\r\n    public static fromSpeechSynthesisOutputFormatString(speechSynthesisOutputFormatString: string): AudioOutputFormatImpl {\r\n        switch (speechSynthesisOutputFormatString) {\r\n            case \"raw-8khz-8bit-mono-mulaw\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MuLaw,\r\n                    1,\r\n                    8000,\r\n                    8000,\r\n                    1,\r\n                    8,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"riff-16khz-16kbps-mono-siren\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.Siren,\r\n                    1,\r\n                    16000,\r\n                    2000,\r\n                    40,\r\n                    0,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"audio-16khz-16kbps-mono-siren\",\r\n                    true);\r\n            case \"audio-16khz-16kbps-mono-siren\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.Siren,\r\n                    1,\r\n                    16000,\r\n                    2000,\r\n                    40,\r\n                    0,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-16khz-32kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    16000,\r\n                    32 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-16khz-128kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    16000,\r\n                    128 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-16khz-64kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    16000,\r\n                    64 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-48kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    24000,\r\n                    48 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-96kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    24000,\r\n                    96 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-160kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    24000,\r\n                    160 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"raw-16khz-16bit-mono-truesilk\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.SILKSkype,\r\n                    1,\r\n                    16000,\r\n                    32000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n\r\n            case \"riff-8khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    8000,\r\n                    16000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-8khz-16bit-mono-pcm\",\r\n                    true);\r\n            case \"riff-24khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    24000,\r\n                    48000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-24khz-16bit-mono-pcm\",\r\n                    true);\r\n            case \"riff-8khz-8bit-mono-mulaw\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MuLaw,\r\n                    1,\r\n                    8000,\r\n                    8000,\r\n                    1,\r\n                    8,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-8khz-8bit-mono-mulaw\",\r\n                    true);\r\n            case \"raw-16khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    16000,\r\n                    32000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-16khz-16bit-mono-pcm\",\r\n                    false);\r\n            case \"raw-24khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    24000,\r\n                    48000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-24khz-16bit-mono-pcm\",\r\n                    false);\r\n            case \"raw-8khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    8000,\r\n                    16000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-8khz-16bit-mono-pcm\",\r\n                    false);\r\n            case \"ogg-16khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OGG_OPUS,\r\n                    1,\r\n                    16000,\r\n                    8192,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"ogg-24khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OGG_OPUS,\r\n                    1,\r\n                    24000,\r\n                    8192,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"raw-48khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    48000,\r\n                    96000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-48khz-16bit-mono-pcm\",\r\n                    false);\r\n            case \"riff-48khz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    48000,\r\n                    96000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-48khz-16bit-mono-pcm\",\r\n                    true);\r\n            case \"audio-48khz-96kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    48000,\r\n                    96 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-48khz-192kbitrate-mono-mp3\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.MP3,\r\n                    1,\r\n                    48000,\r\n                    192 << 7,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"ogg-48khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OGG_OPUS,\r\n                    1,\r\n                    48000,\r\n                    12000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"webm-16khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.WEBM_OPUS,\r\n                    1,\r\n                    16000,\r\n                    4000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"webm-24khz-16bit-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.WEBM_OPUS,\r\n                    1,\r\n                    24000,\r\n                    6000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"webm-24khz-16bit-24kbps-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.WEBM_OPUS,\r\n                    1,\r\n                    24000,\r\n                    3000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-16khz-16bit-32kbps-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OPUS,\r\n                    1,\r\n                    16000,\r\n                    4000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-16bit-48kbps-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OPUS,\r\n                    1,\r\n                    24000,\r\n                    6000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-16bit-24kbps-mono-opus\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.OPUS,\r\n                    1,\r\n                    24000,\r\n                    3000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-24khz-16bit-mono-flac\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.FLAC,\r\n                    1,\r\n                    24000,\r\n                    24000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"audio-48khz-16bit-mono-flac\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.FLAC,\r\n                    1,\r\n                    48000,\r\n                    30000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"raw-24khz-16bit-mono-truesilk\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.SILKSkype,\r\n                    1,\r\n                    24000,\r\n                    48000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"raw-8khz-8bit-mono-alaw\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.ALaw,\r\n                    1,\r\n                    8000,\r\n                    8000,\r\n                    1,\r\n                    8,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"riff-8khz-8bit-mono-alaw\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.ALaw,\r\n                    1,\r\n                    8000,\r\n                    8000,\r\n                    1,\r\n                    8,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-8khz-8bit-mono-alaw\",\r\n                    true);\r\n            case \"raw-22050hz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    22050,\r\n                    44100,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"riff-22050hz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    22050,\r\n                    44100,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-22050hz-16bit-mono-pcm\",\r\n                    true);\r\n            case \"raw-44100hz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    44100,\r\n                    88200,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"riff-44100hz-16bit-mono-pcm\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    44100,\r\n                    88200,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    \"raw-44100hz-16bit-mono-pcm\",\r\n                    true);\r\n            case \"amr-wb-16000h\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.AMR_WB,\r\n                    1,\r\n                    16000,\r\n                    3052,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"g722-16khz-64kbps\":\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.G722,\r\n                    1,\r\n                    16000,\r\n                    8000,\r\n                    2,\r\n                    16,\r\n                    speechSynthesisOutputFormatString,\r\n                    speechSynthesisOutputFormatString,\r\n                    false);\r\n            case \"riff-16khz-16bit-mono-pcm\":\r\n            default:\r\n                return new AudioOutputFormatImpl(\r\n                    AudioFormatTag.PCM,\r\n                    1,\r\n                    16000,\r\n                    32000,\r\n                    2,\r\n                    16,\r\n                    \"riff-16khz-16bit-mono-pcm\",\r\n                    \"raw-16khz-16bit-mono-pcm\",\r\n                    true);\r\n        }\r\n    }\r\n\r\n    public static getDefaultOutputFormat(): AudioOutputFormatImpl {\r\n        return AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(\r\n            (typeof window !== \"undefined\") ? \"audio-24khz-48kbitrate-mono-mp3\" : \"riff-16khz-16bit-mono-pcm\");\r\n    }\r\n\r\n    /**\r\n     * The format tag of the audio\r\n     * @AudioFormatTag AudioOutputFormatImpl.prototype.formatTag\r\n     * @function\r\n     * @public\r\n     */\r\n    public formatTag: AudioFormatTag;\r\n\r\n    /**\r\n     * Specifies if this audio output format has a header\r\n     * @boolean AudioOutputFormatImpl.prototype.hasHeader\r\n     * @function\r\n     * @public\r\n     */\r\n    public get hasHeader(): boolean {\r\n        return this.priHasHeader;\r\n    }\r\n\r\n    /**\r\n     * Specifies the header of this format\r\n     * @ArrayBuffer AudioOutputFormatImpl.prototype.header\r\n     * @function\r\n     * @public\r\n     */\r\n    public get header(): ArrayBuffer {\r\n        if (this.hasHeader) {\r\n            return this.privHeader;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Updates the header based on the audio length\r\n     * @member AudioOutputFormatImpl.updateHeader\r\n     * @function\r\n     * @public\r\n     * @param {number} audioLength - the audio length\r\n     */\r\n    public updateHeader(audioLength: number): void {\r\n        if (this.priHasHeader) {\r\n            const view = new DataView(this.privHeader);\r\n            view.setUint32(4, audioLength + this.privHeader.byteLength - 8, true);\r\n            view.setUint32(40, audioLength, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Specifies the audio format string to be sent to the service\r\n     * @string AudioOutputFormatImpl.prototype.requestAudioFormatString\r\n     * @function\r\n     * @public\r\n     */\r\n    public get requestAudioFormatString(): string {\r\n        return this.priRequestAudioFormatString;\r\n    }\r\n\r\n    /**\r\n     * Adds audio header\r\n     * @param audio the raw audio without header\r\n     * @returns the audio with header if applicable\r\n     */\r\n\r\n    public addHeader(audio: ArrayBuffer): ArrayBuffer {\r\n        if (!this.hasHeader) {\r\n            return audio;\r\n        }\r\n        this.updateHeader(audio.byteLength);\r\n        const tmp = new Uint8Array(audio.byteLength + this.header.byteLength);\r\n        tmp.set(new Uint8Array(this.header), 0);\r\n        tmp.set(new Uint8Array(audio), this.header.byteLength);\r\n        return tmp.buffer;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport { ConnectionMessage } from \"./ConnectionMessage.js\";\r\nimport { IStringDictionary } from \"./IDictionary.js\";\r\nimport { EventType, PlatformEvent } from \"./PlatformEvent.js\";\r\n\r\nexport class ServiceEvent extends PlatformEvent {\r\n    private privJsonResult: string;\r\n\r\n    public constructor(eventName: string, jsonstring: string, eventType: EventType = EventType.Info) {\r\n      super(eventName, eventType);\r\n      this.privJsonResult = jsonstring;\r\n    }\r\n\r\n    public get jsonString(): string {\r\n        return this.privJsonResult;\r\n    }\r\n}\r\n\r\nexport class ConnectionEvent extends PlatformEvent {\r\n    private privConnectionId: string;\r\n\r\n    public constructor(eventName: string, connectionId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n        this.privConnectionId = connectionId;\r\n    }\r\n\r\n    public get connectionId(): string {\r\n        return this.privConnectionId;\r\n    }\r\n}\r\n\r\nexport class ConnectionStartEvent extends ConnectionEvent {\r\n    private privUri: string;\r\n    private privHeaders: IStringDictionary<string>;\r\n\r\n    public constructor(connectionId: string, uri: string, headers?: IStringDictionary<string>) {\r\n        super(\"ConnectionStartEvent\", connectionId);\r\n        this.privUri = uri;\r\n        this.privHeaders = headers;\r\n    }\r\n\r\n    public get uri(): string {\r\n        return this.privUri;\r\n    }\r\n\r\n    public get headers(): IStringDictionary<string> {\r\n        return this.privHeaders;\r\n    }\r\n}\r\n\r\nexport class ConnectionEstablishedEvent extends ConnectionEvent {\r\n    public constructor(connectionId: string) {\r\n        super(\"ConnectionEstablishedEvent\", connectionId);\r\n    }\r\n}\r\n\r\nexport class ConnectionClosedEvent extends ConnectionEvent {\r\n    private privReason: string;\r\n    private privStatusCode: number;\r\n\r\n    public constructor(connectionId: string, statusCode: number, reason: string) {\r\n        super(\"ConnectionClosedEvent\", connectionId, EventType.Debug);\r\n        this.privReason = reason;\r\n        this.privStatusCode = statusCode;\r\n    }\r\n\r\n    public get reason(): string {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get statusCode(): number {\r\n        return this.privStatusCode;\r\n    }\r\n}\r\n\r\nexport class ConnectionErrorEvent extends ConnectionEvent {\r\n    private readonly privMessage: string;\r\n    private readonly privType: string;\r\n\r\n    public constructor(connectionId: string, message: string, type: string) {\r\n        super(\"ConnectionErrorEvent\", connectionId, EventType.Debug);\r\n        this.privMessage = message;\r\n        this.privType = type;\r\n    }\r\n\r\n    public get message(): string {\r\n        return this.privMessage;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privType;\r\n    }\r\n}\r\n\r\nexport class ConnectionEstablishErrorEvent extends ConnectionEvent {\r\n    private privStatusCode: number;\r\n    private privReason: string;\r\n\r\n    public constructor(connectionId: string, statuscode: number, reason: string) {\r\n        super(\"ConnectionEstablishErrorEvent\", connectionId, EventType.Error);\r\n        this.privStatusCode = statuscode;\r\n        this.privReason = reason;\r\n    }\r\n\r\n    public get reason(): string {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get statusCode(): number {\r\n        return this.privStatusCode;\r\n    }\r\n}\r\n\r\nexport class ConnectionMessageReceivedEvent extends ConnectionEvent {\r\n    private privNetworkReceivedTime: string;\r\n    private privMessage: ConnectionMessage;\r\n\r\n    public constructor(connectionId: string, networkReceivedTimeISO: string, message: ConnectionMessage) {\r\n        super(\"ConnectionMessageReceivedEvent\", connectionId);\r\n        this.privNetworkReceivedTime = networkReceivedTimeISO;\r\n        this.privMessage = message;\r\n    }\r\n\r\n    public get networkReceivedTime(): string {\r\n        return this.privNetworkReceivedTime;\r\n    }\r\n\r\n    public get message(): ConnectionMessage {\r\n        return this.privMessage;\r\n    }\r\n}\r\n\r\nexport class ConnectionMessageSentEvent extends ConnectionEvent {\r\n    private privNetworkSentTime: string;\r\n    private privMessage: ConnectionMessage;\r\n\r\n    public constructor(connectionId: string, networkSentTimeISO: string, message: ConnectionMessage) {\r\n        super(\"ConnectionMessageSentEvent\", connectionId);\r\n        this.privNetworkSentTime = networkSentTimeISO;\r\n        this.privMessage = message;\r\n    }\r\n\r\n    public get networkSentTime(): string {\r\n        return this.privNetworkSentTime;\r\n    }\r\n\r\n    public get message(): ConnectionMessage {\r\n        return this.privMessage;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognizerConfig } from \"../common.speech/Exports.js\";\r\nimport { PropertyCollection, PropertyId } from \"../sdk/Exports.js\";\r\n\r\nexport class ProxyInfo {\r\n    private privProxyHostName: string;\r\n    private privProxyPort: number;\r\n    private privProxyUserName: string;\r\n    private privProxyPassword: string;\r\n\r\n    private constructor(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string) {\r\n        this.privProxyHostName = proxyHostName;\r\n        this.privProxyPort = proxyPort;\r\n        this.privProxyUserName = proxyUserName;\r\n        this.privProxyPassword = proxyPassword;\r\n    }\r\n\r\n    public static fromParameters(parameters: PropertyCollection): ProxyInfo {\r\n        return new ProxyInfo(parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyHostName),\r\n            parseInt(parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyPort), 10),\r\n            parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyUserName),\r\n            parameters.getProperty(PropertyId.SpeechServiceConnection_ProxyPassword));\r\n    }\r\n\r\n    public static fromRecognizerConfig(config: RecognizerConfig): ProxyInfo {\r\n        return this.fromParameters(config.parameters);\r\n    }\r\n\r\n    public get HostName(): string {\r\n        return this.privProxyHostName;\r\n    }\r\n\r\n    public get Port(): number {\r\n        return this.privProxyPort;\r\n    }\r\n\r\n    public get UserName(): string {\r\n        return this.privProxyUserName;\r\n    }\r\n\r\n    public get Password(): string {\r\n        return this.privProxyPassword;\r\n    }\r\n}\r\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    createNoDashGuid,\r\n    Deferred,\r\n    IDetachable,\r\n} from \"../../common/Exports.js\";\r\n\r\n/**\r\n * Placeholder class for the Conversation Request Session. Based off RequestSession.\r\n * TODO: define what telemetry is required.\r\n */\r\nexport class ConversationRequestSession {\r\n    private privIsDisposed: boolean = false;\r\n    private privDetachables: IDetachable[] = new Array<IDetachable>();\r\n    private privRequestId: string;\r\n    private privRequestCompletionDeferral: Deferred<void>;\r\n    private privSessionId: string;\r\n\r\n    public constructor(sessionId: string) {\r\n        this.privSessionId = sessionId;\r\n        this.privRequestId = createNoDashGuid();\r\n        this.privRequestCompletionDeferral = new Deferred<void>();\r\n    }\r\n\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get completionPromise(): Promise<void> {\r\n        return this.privRequestCompletionDeferral.promise;\r\n    }\r\n\r\n    public onPreConnectionStart(authFetchEventId: string, connectionId: string): void {\r\n        this.privSessionId = connectionId;\r\n    }\r\n\r\n    public onAuthCompleted(isError: boolean): void {\r\n        if (isError) {\r\n            this.onComplete();\r\n        }\r\n    }\r\n\r\n    public onConnectionEstablishCompleted(statusCode: number): void {\r\n        if (statusCode === 200) {\r\n            return;\r\n        } else if (statusCode === 403) {\r\n            this.onComplete();\r\n        }\r\n    }\r\n\r\n    public onServiceTurnEndResponse(continuousRecognition: boolean): void {\r\n        if (!continuousRecognition) {\r\n            this.onComplete();\r\n        } else {\r\n            this.privRequestId = createNoDashGuid();\r\n        }\r\n    }\r\n\r\n    public async dispose(): Promise<void> {\r\n        if (!this.privIsDisposed) {\r\n            // we should have completed by now. If we did not its an unknown error.\r\n            this.privIsDisposed = true;\r\n            for (const detachable of this.privDetachables) {\r\n                await detachable.detach();\r\n            }\r\n        }\r\n    }\r\n\r\n    private onComplete(): void {\r\n        //\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\n/**\r\n * Defines a coordinate in 2D space.\r\n * @class Coordinate\r\n * Added in version 1.33.0\r\n */\r\nexport class Coordinate {\r\n    public x: number;\r\n    public y: number;\r\n\r\n    public constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n\r\n/**\r\n * Defines the avatar output video format.\r\n * @class AvatarVideoFormat\r\n * Added in version 1.33.0\r\n *\r\n * @experimental This feature is experimental and might change in the future.\r\n */\r\nexport class AvatarVideoFormat {\r\n    /**\r\n     * Defines the video codec.\r\n     * @default \"H264\"\r\n     */\r\n    public codec: string;\r\n    /**\r\n     * Defines the video bitrate.\r\n     * @default 2000000\r\n     */\r\n    public bitrate: number;\r\n    /**\r\n     * Defines the video width.\r\n     * @default 1920\r\n     */\r\n    public width: number;\r\n    /**\r\n     * Defines the video height.\r\n     * @default 1080\r\n     */\r\n    public height: number;\r\n\r\n    /**\r\n     * Sets the video crop range.\r\n     */\r\n    public setCropRange(topLeft: Coordinate, bottomRight: Coordinate): void {\r\n        this.cropRange = {\r\n            bottomRight,\r\n            topLeft,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Defines the video crop range.\r\n     * @default undefined\r\n     * @internal\r\n     */\r\n    public cropRange: {\r\n        topLeft: Coordinate;\r\n        bottomRight: Coordinate;\r\n    };\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} codec - The video codec.\r\n     * @param {number} bitrate - The video bitrate.\r\n     * @param {number} width - The video width.\r\n     * @param {number} height - The video height.\r\n     */\r\n    public constructor(codec: string = \"H264\",\r\n                       bitrate: number = 2000000,\r\n                       width: number = 1920,\r\n                       height: number = 1080,\r\n    ) {\r\n        this.codec = codec;\r\n        this.bitrate = bitrate;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport {\r\n    AutoDetectSourceLanguagesOpenRangeOptionName,\r\n    CognitiveSubscriptionKeyAuthentication,\r\n    CognitiveTokenAuthentication,\r\n    Context,\r\n    IAuthentication,\r\n    ISynthesisConnectionFactory,\r\n    OS,\r\n    SpeechServiceConfig,\r\n    SynthesisAdapterBase,\r\n    SynthesisRestAdapter,\r\n    SynthesizerConfig } from \"../common.speech/Exports.js\";\r\nimport { IAudioDestination, IStringDictionary, Queue } from \"../common/Exports.js\";\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport { PropertyCollection, PropertyId, SpeechConfig, SpeechConfigImpl, SpeechSynthesisResult } from \"./Exports.js\";\r\n\r\nexport abstract class Synthesizer {\r\n    protected privAdapter: SynthesisAdapterBase;\r\n    protected privRestAdapter: SynthesisRestAdapter;\r\n    protected privProperties: PropertyCollection;\r\n    protected privConnectionFactory: ISynthesisConnectionFactory;\r\n    protected privDisposed: boolean;\r\n    protected privSynthesizing: boolean;\r\n    protected synthesisRequestQueue: Queue<SynthesisRequest>;\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member Synthesizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member Synthesizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this Synthesizer.\r\n     * @member Synthesizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechSynthesizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Indicates if auto detect source language is enabled\r\n     * @member Synthesizer.prototype.autoDetectSourceLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {boolean} if auto detect source language is enabled\r\n     */\r\n    public get autoDetectSourceLanguage(): boolean {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages) === AutoDetectSourceLanguagesOpenRangeOptionName;\r\n    }\r\n\r\n    /**\r\n     * Creates and initializes an instance of a Recognizer\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - The speech config to initialize the synthesizer.\r\n     */\r\n    protected constructor(speechConfig: SpeechConfig) {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\r\n\r\n        this.privProperties = speechConfigImpl.properties.clone();\r\n        this.privDisposed = false;\r\n        this.privSynthesizing = false;\r\n        this.synthesisRequestQueue = new Queue<SynthesisRequest>();\r\n    }\r\n\r\n    public buildSsml(text: string): string {\r\n        const languageToDefaultVoice: IStringDictionary<string>  = {\r\n            [\"af-ZA\"]: \"af-ZA-AdriNeural\",\r\n            [\"am-ET\"]: \"am-ET-AmehaNeural\",\r\n            [\"ar-AE\"]: \"ar-AE-FatimaNeural\",\r\n            [\"ar-BH\"]: \"ar-BH-AliNeural\",\r\n            [\"ar-DZ\"]: \"ar-DZ-AminaNeural\",\r\n            [\"ar-EG\"]: \"ar-EG-SalmaNeural\",\r\n            [\"ar-IQ\"]: \"ar-IQ-BasselNeural\",\r\n            [\"ar-JO\"]: \"ar-JO-SanaNeural\",\r\n            [\"ar-KW\"]: \"ar-KW-FahedNeural\",\r\n            [\"ar-LY\"]: \"ar-LY-ImanNeural\",\r\n            [\"ar-MA\"]: \"ar-MA-JamalNeural\",\r\n            [\"ar-QA\"]: \"ar-QA-AmalNeural\",\r\n            [\"ar-SA\"]: \"ar-SA-HamedNeural\",\r\n            [\"ar-SY\"]: \"ar-SY-AmanyNeural\",\r\n            [\"ar-TN\"]: \"ar-TN-HediNeural\",\r\n            [\"ar-YE\"]: \"ar-YE-MaryamNeural\",\r\n            [\"bg-BG\"]: \"bg-BG-BorislavNeural\",\r\n            [\"bn-BD\"]: \"bn-BD-NabanitaNeural\",\r\n            [\"bn-IN\"]: \"bn-IN-BashkarNeural\",\r\n            [\"ca-ES\"]: \"ca-ES-JoanaNeural\",\r\n            [\"cs-CZ\"]: \"cs-CZ-AntoninNeural\",\r\n            [\"cy-GB\"]: \"cy-GB-AledNeural\",\r\n            [\"da-DK\"]: \"da-DK-ChristelNeural\",\r\n            [\"de-AT\"]: \"de-AT-IngridNeural\",\r\n            [\"de-CH\"]: \"de-CH-JanNeural\",\r\n            [\"de-DE\"]: \"de-DE-KatjaNeural\",\r\n            [\"el-GR\"]: \"el-GR-AthinaNeural\",\r\n            [\"en-AU\"]: \"en-AU-NatashaNeural\",\r\n            [\"en-CA\"]: \"en-CA-ClaraNeural\",\r\n            [\"en-GB\"]: \"en-GB-LibbyNeural\",\r\n            [\"en-HK\"]: \"en-HK-SamNeural\",\r\n            [\"en-IE\"]: \"en-IE-ConnorNeural\",\r\n            [\"en-IN\"]: \"en-IN-NeerjaNeural\",\r\n            [\"en-KE\"]: \"en-KE-AsiliaNeural\",\r\n            [\"en-NG\"]: \"en-NG-AbeoNeural\",\r\n            [\"en-NZ\"]: \"en-NZ-MitchellNeural\",\r\n            [\"en-PH\"]: \"en-PH-JamesNeural\",\r\n            [\"en-SG\"]: \"en-SG-LunaNeural\",\r\n            [\"en-TZ\"]: \"en-TZ-ElimuNeural\",\r\n            [\"en-US\"]: \"en-US-AvaMultilingualNeural\",\r\n            [\"en-ZA\"]: \"en-ZA-LeahNeural\",\r\n            [\"es-AR\"]: \"es-AR-ElenaNeural\",\r\n            [\"es-BO\"]: \"es-BO-MarceloNeural\",\r\n            [\"es-CL\"]: \"es-CL-CatalinaNeural\",\r\n            [\"es-CO\"]: \"es-CO-GonzaloNeural\",\r\n            [\"es-CR\"]: \"es-CR-JuanNeural\",\r\n            [\"es-CU\"]: \"es-CU-BelkysNeural\",\r\n            [\"es-DO\"]: \"es-DO-EmilioNeural\",\r\n            [\"es-EC\"]: \"es-EC-AndreaNeural\",\r\n            [\"es-ES\"]: \"es-ES-AlvaroNeural\",\r\n            [\"es-GQ\"]: \"es-GQ-JavierNeural\",\r\n            [\"es-GT\"]: \"es-GT-AndresNeural\",\r\n            [\"es-HN\"]: \"es-HN-CarlosNeural\",\r\n            [\"es-MX\"]: \"es-MX-DaliaNeural\",\r\n            [\"es-NI\"]: \"es-NI-FedericoNeural\",\r\n            [\"es-PA\"]: \"es-PA-MargaritaNeural\",\r\n            [\"es-PE\"]: \"es-PE-AlexNeural\",\r\n            [\"es-PR\"]: \"es-PR-KarinaNeural\",\r\n            [\"es-PY\"]: \"es-PY-MarioNeural\",\r\n            [\"es-SV\"]: \"es-SV-LorenaNeural\",\r\n            [\"es-US\"]: \"es-US-AlonsoNeural\",\r\n            [\"es-UY\"]: \"es-UY-MateoNeural\",\r\n            [\"es-VE\"]: \"es-VE-PaolaNeural\",\r\n            [\"et-EE\"]: \"et-EE-AnuNeural\",\r\n            [\"fa-IR\"]: \"fa-IR-DilaraNeural\",\r\n            [\"fi-FI\"]: \"fi-FI-SelmaNeural\",\r\n            [\"fil-PH\"]: \"fil-PH-AngeloNeural\",\r\n            [\"fr-BE\"]: \"fr-BE-CharlineNeural\",\r\n            [\"fr-CA\"]: \"fr-CA-SylvieNeural\",\r\n            [\"fr-CH\"]: \"fr-CH-ArianeNeural\",\r\n            [\"fr-FR\"]: \"fr-FR-DeniseNeural\",\r\n            [\"ga-IE\"]: \"ga-IE-ColmNeural\",\r\n            [\"gl-ES\"]: \"gl-ES-RoiNeural\",\r\n            [\"gu-IN\"]: \"gu-IN-DhwaniNeural\",\r\n            [\"he-IL\"]: \"he-IL-AvriNeural\",\r\n            [\"hi-IN\"]: \"hi-IN-MadhurNeural\",\r\n            [\"hr-HR\"]: \"hr-HR-GabrijelaNeural\",\r\n            [\"hu-HU\"]: \"hu-HU-NoemiNeural\",\r\n            [\"id-ID\"]: \"id-ID-ArdiNeural\",\r\n            [\"is-IS\"]: \"is-IS-GudrunNeural\",\r\n            [\"it-IT\"]: \"it-IT-IsabellaNeural\",\r\n            [\"ja-JP\"]: \"ja-JP-NanamiNeural\",\r\n            [\"jv-ID\"]: \"jv-ID-DimasNeural\",\r\n            [\"kk-KZ\"]: \"kk-KZ-AigulNeural\",\r\n            [\"km-KH\"]: \"km-KH-PisethNeural\",\r\n            [\"kn-IN\"]: \"kn-IN-GaganNeural\",\r\n            [\"ko-KR\"]: \"ko-KR-SunHiNeural\",\r\n            [\"lo-LA\"]: \"lo-LA-ChanthavongNeural\",\r\n            [\"lt-LT\"]: \"lt-LT-LeonasNeural\",\r\n            [\"lv-LV\"]: \"lv-LV-EveritaNeural\",\r\n            [\"mk-MK\"]: \"mk-MK-AleksandarNeural\",\r\n            [\"ml-IN\"]: \"ml-IN-MidhunNeural\",\r\n            [\"mr-IN\"]: \"mr-IN-AarohiNeural\",\r\n            [\"ms-MY\"]: \"ms-MY-OsmanNeural\",\r\n            [\"mt-MT\"]: \"mt-MT-GraceNeural\",\r\n            [\"my-MM\"]: \"my-MM-NilarNeural\",\r\n            [\"nb-NO\"]: \"nb-NO-PernilleNeural\",\r\n            [\"nl-BE\"]: \"nl-BE-ArnaudNeural\",\r\n            [\"nl-NL\"]: \"nl-NL-ColetteNeural\",\r\n            [\"pl-PL\"]: \"pl-PL-AgnieszkaNeural\",\r\n            [\"ps-AF\"]: \"ps-AF-GulNawazNeural\",\r\n            [\"pt-BR\"]: \"pt-BR-FranciscaNeural\",\r\n            [\"pt-PT\"]: \"pt-PT-DuarteNeural\",\r\n            [\"ro-RO\"]: \"ro-RO-AlinaNeural\",\r\n            [\"ru-RU\"]: \"ru-RU-SvetlanaNeural\",\r\n            [\"si-LK\"]: \"si-LK-SameeraNeural\",\r\n            [\"sk-SK\"]: \"sk-SK-LukasNeural\",\r\n            [\"sl-SI\"]: \"sl-SI-PetraNeural\",\r\n            [\"so-SO\"]: \"so-SO-MuuseNeural\",\r\n            [\"sr-RS\"]: \"sr-RS-NicholasNeural\",\r\n            [\"su-ID\"]: \"su-ID-JajangNeural\",\r\n            [\"sv-SE\"]: \"sv-SE-SofieNeural\",\r\n            [\"sw-KE\"]: \"sw-KE-RafikiNeural\",\r\n            [\"sw-TZ\"]: \"sw-TZ-DaudiNeural\",\r\n            [\"ta-IN\"]: \"ta-IN-PallaviNeural\",\r\n            [\"ta-LK\"]: \"ta-LK-KumarNeural\",\r\n            [\"ta-SG\"]: \"ta-SG-AnbuNeural\",\r\n            [\"te-IN\"]: \"te-IN-MohanNeural\",\r\n            [\"th-TH\"]: \"th-TH-PremwadeeNeural\",\r\n            [\"tr-TR\"]: \"tr-TR-AhmetNeural\",\r\n            [\"uk-UA\"]: \"uk-UA-OstapNeural\",\r\n            [\"ur-IN\"]: \"ur-IN-GulNeural\",\r\n            [\"ur-PK\"]: \"ur-PK-AsadNeural\",\r\n            [\"uz-UZ\"]: \"uz-UZ-MadinaNeural\",\r\n            [\"vi-VN\"]: \"vi-VN-HoaiMyNeural\",\r\n            [\"zh-CN\"]: \"zh-CN-XiaoxiaoNeural\",\r\n            [\"zh-HK\"]: \"zh-HK-HiuMaanNeural\",\r\n            [\"zh-TW\"]: \"zh-TW-HsiaoChenNeural\",\r\n            [\"zu-ZA\"]: \"zu-ZA-ThandoNeural\",\r\n        };\r\n\r\n        let language = this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthLanguage, \"en-US\");\r\n        let voice = this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthVoice, \"\");\r\n        let ssml: string = Synthesizer.XMLEncode(text);\r\n        if (this.autoDetectSourceLanguage) {\r\n            language = \"en-US\";\r\n        } else {\r\n            voice = voice || languageToDefaultVoice[language];\r\n        }\r\n        if (voice) {\r\n            ssml = `<voice name='${voice}'>${ssml}</voice>`;\r\n        }\r\n        ssml = `<speak version='1.0' xmlns='http://www.w3.org/2001/10/synthesis' xmlns:mstts='http://www.w3.org/2001/mstts' xmlns:emo='http://www.w3.org/2009/10/emotionml' xml:lang='${language}'>${ssml}</speak>`;\r\n        return ssml;\r\n    }\r\n\r\n    /**\r\n     * This method performs cleanup of resources.\r\n     * The Boolean parameter disposing indicates whether the method is called\r\n     * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\r\n     * Derived classes should override this method to dispose resource if needed.\r\n     * @member Synthesizer.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - Flag to request disposal.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposed) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            if (this.privAdapter) {\r\n                await this.privAdapter.dispose();\r\n            }\r\n        }\r\n\r\n        this.privDisposed = true;\r\n    }\r\n\r\n    protected async adapterSpeak(): Promise<void> {\r\n        if (!this.privDisposed && !this.privSynthesizing) {\r\n            this.privSynthesizing = true;\r\n            const request: SynthesisRequest = await this.synthesisRequestQueue.dequeue();\r\n            return this.privAdapter.Speak(request.text, request.isSSML, request.requestId, request.cb, request.err, request.dataStream);\r\n        }\r\n    }\r\n\r\n    //\r\n    // ################################################################################################################\r\n    // IMPLEMENTATION.\r\n    // Move to independent class\r\n    // ################################################################################################################\r\n    //\r\n\r\n    // Creates the synthesis adapter\r\n    protected abstract createSynthesisAdapter(\r\n        authentication: IAuthentication,\r\n        connectionFactory: ISynthesisConnectionFactory,\r\n        synthesizerConfig: SynthesizerConfig): SynthesisAdapterBase;\r\n\r\n    // Creates the REST synthesis adapter\r\n    protected abstract createRestSynthesisAdapter(\r\n        authentication: IAuthentication,\r\n        synthesizerConfig: SynthesizerConfig): SynthesisRestAdapter;\r\n\r\n    protected createSynthesizerConfig(speechConfig: SpeechServiceConfig): SynthesizerConfig {\r\n        return new SynthesizerConfig(\r\n            speechConfig,\r\n            this.privProperties);\r\n    }\r\n\r\n    // Does the generic synthesizer setup that is common across all synthesizer types.\r\n    protected implCommonSynthesizeSetup(): void {\r\n\r\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\r\n        let osName = \"unknown\";\r\n        let osVersion = \"unknown\";\r\n\r\n        if (typeof navigator !== \"undefined\") {\r\n            osPlatform = osPlatform + \"/\" + navigator.platform;\r\n            osName = navigator.userAgent;\r\n            osVersion = navigator.appVersion;\r\n        }\r\n\r\n        const synthesizerConfig: SynthesizerConfig = this.createSynthesizerConfig(\r\n            new SpeechServiceConfig(\r\n                new Context(new OS(osPlatform, osName, osVersion))));\r\n\r\n        const subscriptionKey = this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Key, undefined);\r\n        const authentication = (subscriptionKey && subscriptionKey !== \"\") ?\r\n            new CognitiveSubscriptionKeyAuthentication(subscriptionKey) :\r\n            new CognitiveTokenAuthentication(\r\n                (): Promise<string> => {\r\n                    const authorizationToken = this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                },\r\n                (): Promise<string> => {\r\n                    const authorizationToken = this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                });\r\n\r\n        this.privAdapter = this.createSynthesisAdapter(\r\n            authentication,\r\n            this.privConnectionFactory,\r\n            synthesizerConfig);\r\n\r\n        this.privRestAdapter = this.createRestSynthesisAdapter(\r\n            authentication,\r\n            synthesizerConfig);\r\n    }\r\n\r\n    protected static XMLEncode(text: string): string {\r\n        return text.replace(/&/g, \"&amp;\")\r\n            .replace(/</g, \"&lt;\")\r\n            .replace(/>/g, \"&gt;\")\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/'/g, \"&apos;\");\r\n    }\r\n}\r\n\r\nexport class SynthesisRequest {\r\n    public requestId: string;\r\n    public text: string;\r\n    public isSSML: boolean;\r\n    public cb: (e: SpeechSynthesisResult) => void;\r\n    public err: (e: string) => void;\r\n    public dataStream: IAudioDestination;\r\n\r\n    public constructor(requestId: string, text: string, isSSML: boolean, cb?: (e: SpeechSynthesisResult) => void, err?: (e: string) => void, dataStream?: IAudioDestination) {\r\n        this.requestId = requestId;\r\n        this.text = text;\r\n        this.isSSML = isSSML;\r\n        this.cb = cb;\r\n        this.err = err;\r\n        this.dataStream = dataStream;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport { AudioConfig } from \"./Audio/AudioConfig.js\";\r\nexport { AudioStreamFormat, AudioFormatTag } from \"./Audio/AudioStreamFormat.js\";\r\nexport { AudioInputStream, PullAudioInputStream, PushAudioInputStream } from \"./Audio/AudioInputStream.js\";\r\nexport { AudioOutputStream, PullAudioOutputStream, PushAudioOutputStream} from \"./Audio/AudioOutputStream.js\";\r\nexport { CancellationReason } from \"./CancellationReason.js\";\r\nexport { PullAudioInputStreamCallback } from \"./Audio/PullAudioInputStreamCallback.js\";\r\nexport { PushAudioOutputStreamCallback } from \"./Audio/PushAudioOutputStreamCallback.js\";\r\nexport { KeywordRecognitionModel } from \"./KeywordRecognitionModel.js\";\r\nexport { SessionEventArgs } from \"./SessionEventArgs.js\";\r\nexport { RecognitionEventArgs } from \"./RecognitionEventArgs.js\";\r\nexport { OutputFormat } from \"./OutputFormat.js\";\r\nexport { IntentRecognitionEventArgs } from \"./IntentRecognitionEventArgs.js\";\r\nexport { RecognitionResult } from \"./RecognitionResult.js\";\r\nexport { SpeechRecognitionResult } from \"./SpeechRecognitionResult.js\";\r\nexport { IntentRecognitionResult } from \"./IntentRecognitionResult.js\";\r\nexport { LanguageUnderstandingModel } from \"./LanguageUnderstandingModel.js\";\r\nexport { SpeechRecognitionEventArgs, ConversationTranscriptionEventArgs, MeetingTranscriptionEventArgs } from \"./SpeechRecognitionEventArgs.js\";\r\nexport { SpeechRecognitionCanceledEventArgs } from \"./SpeechRecognitionCanceledEventArgs.js\";\r\nexport { TranslationRecognitionEventArgs } from \"./TranslationRecognitionEventArgs.js\";\r\nexport { TranslationSynthesisEventArgs } from \"./TranslationSynthesisEventArgs.js\";\r\nexport { TranslationRecognitionResult } from \"./TranslationRecognitionResult.js\";\r\nexport { TranslationSynthesisResult } from \"./TranslationSynthesisResult.js\";\r\nexport { ResultReason } from \"./ResultReason.js\";\r\nexport { SpeechConfig, SpeechConfigImpl } from \"./SpeechConfig.js\";\r\nexport { SpeechTranslationConfig, SpeechTranslationConfigImpl } from \"./SpeechTranslationConfig.js\";\r\nexport { PropertyCollection } from \"./PropertyCollection.js\";\r\nexport { PropertyId } from \"./PropertyId.js\";\r\nexport { Recognizer } from \"./Recognizer.js\";\r\nexport { SpeechRecognizer } from \"./SpeechRecognizer.js\";\r\nexport { IntentRecognizer } from \"./IntentRecognizer.js\";\r\nexport { VoiceProfileType } from \"./VoiceProfileType.js\";\r\nexport { TranslationRecognizer } from \"./TranslationRecognizer.js\";\r\nexport { Translations } from \"./Translations.js\";\r\nexport { NoMatchReason } from \"./NoMatchReason.js\";\r\nexport { NoMatchDetails } from \"./NoMatchDetails.js\";\r\nexport { TranslationRecognitionCanceledEventArgs } from \"./TranslationRecognitionCanceledEventArgs.js\";\r\nexport { IntentRecognitionCanceledEventArgs } from \"./IntentRecognitionCanceledEventArgs.js\";\r\nexport { CancellationDetailsBase } from \"./CancellationDetailsBase.js\";\r\nexport { CancellationDetails } from \"./CancellationDetails.js\";\r\nexport { CancellationErrorCode } from \"./CancellationErrorCodes.js\";\r\nexport { ConnectionEventArgs } from \"./ConnectionEventArgs.js\";\r\nexport { ServiceEventArgs } from \"./ServiceEventArgs.js\";\r\nexport { Connection } from \"./Connection.js\";\r\nexport { PhraseListGrammar } from \"./PhraseListGrammar.js\";\r\nexport { DialogServiceConfig } from \"./DialogServiceConfig.js\";\r\nexport { BotFrameworkConfig } from \"./BotFrameworkConfig.js\";\r\nexport { CustomCommandsConfig } from \"./CustomCommandsConfig.js\";\r\nexport { DialogServiceConnector } from \"./DialogServiceConnector.js\";\r\nexport { ActivityReceivedEventArgs } from \"./ActivityReceivedEventArgs.js\";\r\nexport { TurnStatusReceivedEventArgs } from \"./TurnStatusReceivedEventArgs.js\";\r\nexport { ServicePropertyChannel } from \"./ServicePropertyChannel.js\";\r\nexport { ProfanityOption } from \"./ProfanityOption.js\";\r\nexport { BaseAudioPlayer } from \"./Audio/BaseAudioPlayer.js\";\r\nexport { ConnectionMessageEventArgs } from \"./ConnectionMessageEventArgs.js\";\r\nexport { ConnectionMessage } from \"./ConnectionMessage.js\";\r\nexport { VoiceProfile } from \"./VoiceProfile.js\";\r\nexport { VoiceProfileEnrollmentResult, VoiceProfileEnrollmentCancellationDetails } from \"./VoiceProfileEnrollmentResult.js\";\r\nexport { VoiceProfileResult, VoiceProfileCancellationDetails } from \"./VoiceProfileResult.js\";\r\nexport { VoiceProfilePhraseResult } from \"./VoiceProfilePhraseResult.js\";\r\nexport { VoiceProfileClient } from \"./VoiceProfileClient.js\";\r\nexport { SpeakerRecognizer } from \"./SpeakerRecognizer.js\";\r\nexport { SpeakerIdentificationModel } from \"./SpeakerIdentificationModel.js\";\r\nexport { SpeakerVerificationModel } from \"./SpeakerVerificationModel.js\";\r\nexport { AutoDetectSourceLanguageConfig } from \"./AutoDetectSourceLanguageConfig.js\";\r\nexport { AutoDetectSourceLanguageResult } from \"./AutoDetectSourceLanguageResult.js\";\r\nexport { SourceLanguageConfig } from \"./SourceLanguageConfig.js\";\r\nexport { SpeakerRecognitionResult, SpeakerRecognitionResultType, SpeakerRecognitionCancellationDetails } from \"./SpeakerRecognitionResult.js\";\r\nexport { Conversation,\r\n    ConversationExpirationEventArgs,\r\n    ConversationInfo,\r\n    ConversationParticipantsChangedEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    ConversationTranslationEventArgs,\r\n    ConversationTranslationResult,\r\n    ConversationTranslator,\r\n    ConversationTranscriber,\r\n    ConversationTranscriptionResult,\r\n    Meeting,\r\n    MeetingInfo,\r\n    MeetingTranscriber,\r\n    IParticipant,\r\n    Participant,\r\n    ParticipantChangedReason,\r\n    User,\r\n    VoiceSignature\r\n    } from \"./Transcription/Exports.js\";\r\nexport { Synthesizer } from \"./Synthesizer.js\";\r\nexport { SpeechSynthesisOutputFormat } from \"./SpeechSynthesisOutputFormat.js\";\r\nexport { SpeechSynthesizer } from \"./SpeechSynthesizer.js\";\r\nexport { SynthesisResult } from \"./SynthesisResult.js\";\r\nexport { SpeechSynthesisResult } from \"./SpeechSynthesisResult.js\";\r\nexport { SpeechSynthesisEventArgs } from \"./SpeechSynthesisEventArgs.js\";\r\nexport { SpeechSynthesisWordBoundaryEventArgs } from \"./SpeechSynthesisWordBoundaryEventArgs.js\";\r\nexport { SpeechSynthesisBookmarkEventArgs } from \"./SpeechSynthesisBookmarkEventArgs.js\";\r\nexport { SpeechSynthesisVisemeEventArgs } from \"./SpeechSynthesisVisemeEventArgs.js\";\r\nexport { SpeechSynthesisBoundaryType } from \"./SpeechSynthesisBoundaryType.js\";\r\nexport { SynthesisVoicesResult } from \"./SynthesisVoicesResult.js\";\r\nexport { SynthesisVoiceGender, SynthesisVoiceType, VoiceInfo } from \"./VoiceInfo.js\";\r\nexport { IPlayer } from \"./Audio/IPlayer.js\";\r\nexport { SpeakerAudioDestination } from \"./Audio/SpeakerAudioDestination.js\";\r\nexport { CancellationEventArgs } from \"./CancellationEventArgs.js\";\r\nexport { ConversationTranscriptionCanceledEventArgs } from \"./ConversationTranscriptionCanceledEventArgs.js\";\r\nexport { MeetingTranscriptionCanceledEventArgs } from \"./MeetingTranscriptionCanceledEventArgs.js\";\r\nexport { PronunciationAssessmentGradingSystem } from \"./PronunciationAssessmentGradingSystem.js\";\r\nexport { PronunciationAssessmentGranularity } from \"./PronunciationAssessmentGranularity.js\";\r\nexport { PronunciationAssessmentConfig } from \"./PronunciationAssessmentConfig.js\";\r\nexport { PronunciationAssessmentResult } from \"./PronunciationAssessmentResult.js\";\r\nexport { LanguageIdMode } from \"./LanguageIdMode.js\";\r\nexport { AvatarConfig } from \"./AvatarConfig.js\";\r\nexport { AvatarEventArgs } from \"./AvatarEventArgs.js\";\r\nexport { AvatarSynthesizer } from \"./AvatarSynthesizer.js\";\r\nexport { AvatarVideoFormat, Coordinate } from \"./AvatarVideoFormat.js\";\r\nexport { AvatarWebRTCConnectionResult } from \"./AvatarWebRTCConnectionResult.js\";\r\nexport { Diagnostics } from \"./Diagnostics.js\";\r\nexport { LogLevel } from \"./LogLevel.js\";\r\nexport { IVoiceJson } from \"./IVoiceJson.js\";\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CognitiveSubscriptionKeyAuthentication,\r\n    CognitiveTokenAuthentication,\r\n    Context,\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    OS,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig,\r\n} from \"../common.speech/Exports.js\";\r\nimport {\r\n    Deferred,\r\n    marshalPromiseToCallbacks\r\n} from \"../common/Exports.js\";\r\nimport {\r\n    Contracts\r\n} from \"./Contracts.js\";\r\nimport {\r\n    AudioConfig,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    RecognitionEventArgs,\r\n    SessionEventArgs,\r\n    SpeechRecognitionResult,\r\n} from \"./Exports.js\";\r\n\r\n/**\r\n * Defines the base class Recognizer which mainly contains common event handlers.\r\n * @class Recognizer\r\n */\r\nexport abstract class Recognizer {\r\n    private privDisposed: boolean;\r\n    protected audioConfig: AudioConfig;\r\n    protected privReco: ServiceRecognizerBase;\r\n    protected privProperties: PropertyCollection;\r\n    private privConnectionFactory: IConnectionFactory;\r\n\r\n    /**\r\n     * Creates and initializes an instance of a Recognizer\r\n     * @constructor\r\n     * @param {AudioConfig} audioInput - An optional audio input stream associated with the recognizer\r\n     * @param {PropertyCollection} properties - A set of properties to set on the recognizer\r\n     * @param {IConnectionFactory} connectionFactory - The factory class used to create a custom IConnection for the recognizer\r\n     */\r\n    protected constructor(audioConfig: AudioConfig, properties: PropertyCollection, connectionFactory: IConnectionFactory) {\r\n        this.audioConfig = (audioConfig !== undefined) ? audioConfig : AudioConfig.fromDefaultMicrophoneInput();\r\n        this.privDisposed = false;\r\n        this.privProperties = properties.clone();\r\n        this.privConnectionFactory = connectionFactory;\r\n        this.implCommonRecognizerSetup();\r\n    }\r\n\r\n    /**\r\n     * Defines event handler for session started events.\r\n     * @member Recognizer.prototype.sessionStarted\r\n     * @function\r\n     * @public\r\n     */\r\n    public sessionStarted: (sender: Recognizer, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for session stopped events.\r\n     * @member Recognizer.prototype.sessionStopped\r\n     * @function\r\n     * @public\r\n     */\r\n    public sessionStopped: (sender: Recognizer, event: SessionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for speech started events.\r\n     * @member Recognizer.prototype.speechStartDetected\r\n     * @function\r\n     * @public\r\n     */\r\n    public speechStartDetected: (sender: Recognizer, event: RecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for speech stopped events.\r\n     * @member Recognizer.prototype.speechEndDetected\r\n     * @function\r\n     * @public\r\n     */\r\n    public speechEndDetected: (sender: Recognizer, event: RecognitionEventArgs) => void;\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member Recognizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, errorCb?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, errorCb);\r\n    }\r\n\r\n    /**\r\n     * @Internal\r\n     * Internal data member to support fromRecognizer* pattern methods on other classes.\r\n     * Do not use externally, object returned will change without warning or notice.\r\n     */\r\n    public get internalData(): object {\r\n        return this.privReco;\r\n    }\r\n\r\n    /**\r\n     * This method performs cleanup of resources.\r\n     * The Boolean parameter disposing indicates whether the method is called\r\n     * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\r\n     * Derived classes should override this method to dispose resource if needed.\r\n     * @member Recognizer.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - Flag to request disposal.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposed) {\r\n            return;\r\n        }\r\n\r\n        this.privDisposed = true;\r\n\r\n        if (disposing) {\r\n            if (this.privReco) {\r\n                await this.privReco.audioSource.turnOff();\r\n                await this.privReco.dispose();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method returns the current state of the telemetry setting.\r\n     * @member Recognizer.prototype.telemetryEnabled\r\n     * @function\r\n     * @public\r\n     * @returns true if the telemetry is enabled, false otherwise.\r\n     */\r\n    public static get telemetryEnabled(): boolean {\r\n        return ServiceRecognizerBase.telemetryDataEnabled;\r\n    }\r\n\r\n    /**\r\n     * This method globally enables or disables telemetry.\r\n     * @member Recognizer.prototype.enableTelemetry\r\n     * @function\r\n     * @public\r\n     * @param enabled - Global setting for telemetry collection.\r\n     * If set to true, telemetry information like microphone errors,\r\n     * recognition errors are collected and sent to Microsoft.\r\n     * If set to false, no telemetry is sent to Microsoft.\r\n     */\r\n    public static enableTelemetry(enabled: boolean): void {\r\n        ServiceRecognizerBase.telemetryDataEnabled = enabled;\r\n    }\r\n\r\n    //\r\n    // ################################################################################################################\r\n    // IMPLEMENTATION.\r\n    // Move to independent class\r\n    // ################################################################################################################\r\n    //\r\n    protected abstract createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig;\r\n\r\n    // Creates the correct service recognizer for the type\r\n    protected abstract createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase;\r\n\r\n    // Does the generic recognizer setup that is common across all recognizer types.\r\n    protected implCommonRecognizerSetup(): void {\r\n\r\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\r\n        let osName = \"unknown\";\r\n        let osVersion = \"unknown\";\r\n\r\n        if (typeof navigator !== \"undefined\") {\r\n            osPlatform = osPlatform + \"/\" + navigator.platform;\r\n            osName = navigator.userAgent;\r\n            osVersion = navigator.appVersion;\r\n        }\r\n\r\n        const recognizerConfig = this.createRecognizerConfig(\r\n            new SpeechServiceConfig(\r\n                new Context(new OS(osPlatform, osName, osVersion))));\r\n\r\n        this.privReco = this.createServiceRecognizer(\r\n            Recognizer.getAuthFromProperties(this.privProperties),\r\n            this.privConnectionFactory,\r\n            this.audioConfig,\r\n            recognizerConfig);\r\n    }\r\n\r\n    protected async recognizeOnceAsyncImpl(recognitionMode: RecognitionMode): Promise<SpeechRecognitionResult> {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n        const ret: Deferred<SpeechRecognitionResult> = new Deferred<SpeechRecognitionResult>();\r\n\r\n        await this.implRecognizerStop();\r\n        await this.privReco.recognize(recognitionMode, ret.resolve, ret.reject);\r\n        const result: SpeechRecognitionResult = await ret.promise;\r\n        await this.implRecognizerStop();\r\n\r\n        return result;\r\n\r\n    }\r\n\r\n    protected async startContinuousRecognitionAsyncImpl(recognitionMode: RecognitionMode): Promise<void> {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n\r\n        await this.implRecognizerStop();\r\n        await this.privReco.recognize(recognitionMode, undefined, undefined);\r\n    }\r\n\r\n    protected async stopContinuousRecognitionAsyncImpl(): Promise<void> {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n        await this.implRecognizerStop();\r\n    }\r\n\r\n    protected async implRecognizerStop(): Promise<void> {\r\n        if (this.privReco) {\r\n            await this.privReco.stopRecognizing();\r\n        }\r\n        return;\r\n    }\r\n\r\n    protected static getAuthFromProperties(properties: PropertyCollection): IAuthentication {\r\n        const subscriptionKey = properties.getProperty(PropertyId.SpeechServiceConnection_Key, undefined);\r\n        const authentication = (subscriptionKey && subscriptionKey !== \"\") ?\r\n            new CognitiveSubscriptionKeyAuthentication(subscriptionKey) :\r\n            new CognitiveTokenAuthentication(\r\n                (): Promise<string> => {\r\n                    const authorizationToken = properties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                },\r\n                (): Promise<string> => {\r\n                    const authorizationToken = properties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                });\r\n\r\n        return authentication;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// speech.keyword\r\nexport interface ISpeechKeyword {\r\n    Status: string;\r\n    Text: string;\r\n    Offset: number;\r\n    Duration: number;\r\n    [key: string]: any;\r\n}\r\n\r\nexport class SpeechKeyword implements ISpeechKeyword {\r\n    private privSpeechKeyword: ISpeechKeyword;\r\n\r\n    private constructor(json: string, baseOffset: number) {\r\n        this.privSpeechKeyword = JSON.parse(json) as ISpeechKeyword;\r\n        this.privSpeechKeyword.Offset += baseOffset;\r\n    }\r\n\r\n    public static fromJSON(json: string, baseOffset: number): SpeechKeyword {\r\n        return new SpeechKeyword(json, baseOffset);\r\n    }\r\n\r\n    public get Status(): string {\r\n        return this.privSpeechKeyword.Status;\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this.privSpeechKeyword.Text;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSpeechKeyword.Offset;\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privSpeechKeyword.Duration;\r\n    }\r\n\r\n    public asJson(): string {\r\n        return JSON.stringify(this.privSpeechKeyword);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ReplayableAudioNode } from \"../common.browser/Exports.js\";\r\nimport { ConnectionOpenResponse } from \"../common/ConnectionOpenResponse.js\";\r\nimport {\r\n    ArgumentNullError,\r\n    ConnectionClosedEvent,\r\n    ConnectionEvent,\r\n    ConnectionState,\r\n    createNoDashGuid,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IConnection,\r\n    IDisposable,\r\n    IStreamChunk,\r\n    MessageType,\r\n    ServiceEvent,\r\n    Timeout\r\n} from \"../common/Exports.js\";\r\nimport { AudioStreamFormatImpl } from \"../sdk/Audio/AudioStreamFormat.js\";\r\nimport { SpeakerRecognitionModel } from \"../sdk/SpeakerRecognitionModel.js\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyId,\r\n    RecognitionEventArgs,\r\n    Recognizer,\r\n    SessionEventArgs,\r\n    SpeakerRecognitionResult,\r\n    SpeechRecognitionResult,\r\n    OutputFormat\r\n} from \"../sdk/Exports.js\";\r\nimport { Callback } from \"../sdk/Transcription/IConversation.js\";\r\nimport {\r\n    AgentConfig,\r\n    DynamicGrammarBuilder,\r\n    ISpeechConfigAudioDevice,\r\n    RecognitionMode,\r\n    RequestSession,\r\n    SpeechContext,\r\n    SpeechDetected,\r\n    type,\r\n    OutputFormatPropertyName\r\n} from \"./Exports.js\";\r\nimport {\r\n    AuthInfo,\r\n    IAuthentication,\r\n} from \"./IAuthentication.js\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory.js\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig.js\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal.js\";\r\n\r\ninterface CustomModel {\r\n    language: string;\r\n    endpoint: string;\r\n}\r\n\r\nexport interface PhraseDetection {\r\n    customModels?: CustomModel[];\r\n    onInterim?: { action: string };\r\n    onSuccess?: { action: string };\r\n    mode?: string;\r\n    INTERACTIVE?: Segmentation;\r\n    CONVERSATION?: Segmentation;\r\n    DICTATION?: Segmentation;\r\n    speakerDiarization?: SpeakerDiarization;\r\n}\r\n\r\nexport interface SpeakerDiarization {\r\n    mode?: string;\r\n    audioSessionId?: string;\r\n    audioOffsetMs?: number;\r\n    identityProvider?: string;\r\n    diarizeIntermediates?: boolean;\r\n}\r\n\r\nexport interface Segmentation {\r\n    segmentation: {\r\n        mode: string;\r\n        segmentationSilenceTimeoutMs?: number;\r\n        segmentationForcedTimeoutMs?: number;\r\n    };\r\n}\r\n\r\nexport abstract class ServiceRecognizerBase implements IDisposable {\r\n    private privAuthentication: IAuthentication;\r\n    private privConnectionFactory: IConnectionFactory;\r\n\r\n    // A promise for a configured connection.\r\n    // Do not consume directly, call fetchConnection instead.\r\n    private privConnectionConfigurationPromise: Promise<IConnection> = undefined;\r\n\r\n    // A promise for a connection, but one that has not had the speech context sent yet.\r\n    // Do not consume directly, call fetchConnection instead.\r\n    private privConnectionPromise: Promise<IConnection> = undefined;\r\n    private privAuthFetchEventId: string;\r\n    private privIsDisposed: boolean;\r\n    private privMustReportEndOfStream: boolean;\r\n    private privConnectionEvents: EventSource<ConnectionEvent>;\r\n    private privServiceEvents: EventSource<ServiceEvent>;\r\n    private privDynamicGrammar: DynamicGrammarBuilder;\r\n    private privAgentConfig: AgentConfig;\r\n    private privServiceHasSentMessage: boolean;\r\n    private privActivityTemplate: string;\r\n    private privSetTimeout: (cb: () => void, delay: number) => number = setTimeout;\r\n    private privAudioSource: IAudioSource;\r\n    private privIsLiveAudio: boolean = false;\r\n    private privAverageBytesPerMs: number = 0;\r\n    protected privSpeechContext: SpeechContext;\r\n    protected privRequestSession: RequestSession;\r\n    protected privConnectionId: string;\r\n    protected privDiarizationSessionId: string;\r\n    protected privRecognizerConfig: RecognizerConfig;\r\n    protected privRecognizer: Recognizer;\r\n    protected privSuccessCallback: (e: SpeechRecognitionResult) => void;\r\n    protected privErrorCallback: (e: string) => void;\r\n    protected privEnableSpeakerId: boolean = false;\r\n    protected privExpectContentAssessmentResponse: boolean = false;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        recognizer: Recognizer) {\r\n\r\n        if (!authentication) {\r\n            throw new ArgumentNullError(\"authentication\");\r\n        }\r\n\r\n        if (!connectionFactory) {\r\n            throw new ArgumentNullError(\"connectionFactory\");\r\n        }\r\n\r\n        if (!audioSource) {\r\n            throw new ArgumentNullError(\"audioSource\");\r\n        }\r\n\r\n        if (!recognizerConfig) {\r\n            throw new ArgumentNullError(\"recognizerConfig\");\r\n        }\r\n\r\n        this.privEnableSpeakerId = recognizerConfig.isSpeakerDiarizationEnabled;\r\n        this.privMustReportEndOfStream = false;\r\n        this.privAuthentication = authentication;\r\n        this.privConnectionFactory = connectionFactory;\r\n        this.privAudioSource = audioSource;\r\n        this.privRecognizerConfig = recognizerConfig;\r\n        this.privIsDisposed = false;\r\n        this.privRecognizer = recognizer;\r\n        this.privRequestSession = new RequestSession(this.privAudioSource.id());\r\n        this.privConnectionEvents = new EventSource<ConnectionEvent>();\r\n        this.privServiceEvents = new EventSource<ServiceEvent>();\r\n        this.privDynamicGrammar = new DynamicGrammarBuilder();\r\n        this.privSpeechContext = new SpeechContext(this.privDynamicGrammar);\r\n        this.privAgentConfig = new AgentConfig();\r\n        const webWorkerLoadType: string = this.privRecognizerConfig.parameters.getProperty(PropertyId.WebWorkerLoadType, \"on\").toLowerCase();\r\n        if (webWorkerLoadType === \"on\" && typeof (Blob) !== \"undefined\" && typeof (Worker) !== \"undefined\") {\r\n            this.privSetTimeout = Timeout.setTimeout;\r\n        } else {\r\n            if (typeof window !== \"undefined\") {\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n                this.privSetTimeout = window.setTimeout.bind(window);\r\n            }\r\n            if (typeof globalThis !== \"undefined\") {\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n                this.privSetTimeout = globalThis.setTimeout.bind(globalThis);\r\n            }\r\n        }\r\n\r\n        this.connectionEvents.attach((connectionEvent: ConnectionEvent): void => {\r\n            if (connectionEvent.name === \"ConnectionClosedEvent\") {\r\n                const connectionClosedEvent = connectionEvent as ConnectionClosedEvent;\r\n                if (connectionClosedEvent.statusCode === 1003 ||\r\n                    connectionClosedEvent.statusCode === 1007 ||\r\n                    connectionClosedEvent.statusCode === 1002 ||\r\n                    connectionClosedEvent.statusCode === 4000 ||\r\n                    this.privRequestSession.numConnectionAttempts > this.privRecognizerConfig.maxRetryCount\r\n                ) {\r\n                    void this.cancelRecognitionLocal(CancellationReason.Error,\r\n                        connectionClosedEvent.statusCode === 1007 ? CancellationErrorCode.BadRequestParameters : CancellationErrorCode.ConnectionFailure,\r\n                        `${connectionClosedEvent.reason} websocket error code: ${connectionClosedEvent.statusCode}`);\r\n                }\r\n            }\r\n        });\r\n\r\n        if (this.privEnableSpeakerId) {\r\n            this.privDiarizationSessionId = createNoDashGuid();\r\n        }\r\n\r\n        this.setLanguageIdJson();\r\n        this.setOutputDetailLevelJson();\r\n    }\r\n\r\n    protected setTranslationJson(): void {\r\n        const targetLanguages: string = this.privRecognizerConfig.parameters.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined);\r\n        if (targetLanguages !== undefined) {\r\n            const languages = targetLanguages.split(\",\");\r\n            const translationVoice: string =  this.privRecognizerConfig.parameters.getProperty(PropertyId.SpeechServiceConnection_TranslationVoice, undefined);\r\n            const action = ( translationVoice !== undefined ) ? \"Synthesize\" : \"None\";\r\n            this.privSpeechContext.setSection(\"translation\", {\r\n                onSuccess: { action },\r\n                output: { interimResults: { mode: \"Always\" } },\r\n                targetLanguages: languages,\r\n            });\r\n\r\n            if (translationVoice !== undefined) {\r\n                const languageToVoiceMap: { [key: string]: string } = {};\r\n                for (const lang of languages) {\r\n                    languageToVoiceMap[lang] = translationVoice;\r\n                }\r\n                this.privSpeechContext.setSection(\"synthesis\", {\r\n                    defaultVoices: languageToVoiceMap\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    protected setSpeechSegmentationTimeoutJson(): void {\r\n        const speechSegmentationSilenceTimeoutMs: string = this.privRecognizerConfig.parameters.getProperty(PropertyId.Speech_SegmentationSilenceTimeoutMs, undefined);\r\n        const speechSegmentationMaximumTimeMs: string = this.privRecognizerConfig.parameters.getProperty(PropertyId.Speech_SegmentationMaximumTimeMs, undefined);\r\n        const speechSegmentationStrategy: string = this.privRecognizerConfig.parameters.getProperty(PropertyId.Speech_SegmentationStrategy, undefined);\r\n        const segmentation: Segmentation = {\r\n            segmentation: {\r\n                mode: \"\"\r\n            }\r\n        };\r\n        let configuredSegment = false;\r\n\r\n        if (speechSegmentationStrategy !== undefined) {\r\n            configuredSegment = true;\r\n            let segMode: string = \"\";\r\n            switch (speechSegmentationStrategy.toLowerCase()) {\r\n                case \"default\":\r\n                    break;\r\n                case \"time\":\r\n                    segMode = \"Custom\";\r\n                    break;\r\n                case \"semantic\":\r\n                    segMode = \"Semantic\";\r\n                    break;\r\n            }\r\n\r\n            segmentation.segmentation.mode = segMode;\r\n        }\r\n\r\n        if (speechSegmentationSilenceTimeoutMs !== undefined) {\r\n            configuredSegment = true;\r\n            const segmentationSilenceTimeoutMs: number = parseInt(speechSegmentationSilenceTimeoutMs, 10);\r\n            segmentation.segmentation.mode = \"Custom\";\r\n            segmentation.segmentation.segmentationSilenceTimeoutMs = segmentationSilenceTimeoutMs;\r\n        }\r\n\r\n        if (speechSegmentationMaximumTimeMs !== undefined) {\r\n            configuredSegment = true;\r\n            const segmentationMaximumTimeMs: number = parseInt(speechSegmentationMaximumTimeMs, 10);\r\n            segmentation.segmentation.mode = \"Custom\";\r\n            segmentation.segmentation.segmentationForcedTimeoutMs = segmentationMaximumTimeMs;\r\n        }\r\n\r\n        if (configuredSegment) {\r\n            const recoMode = this.recognitionMode === RecognitionMode.Conversation ? \"CONVERSATION\" :\r\n                this.recognitionMode === RecognitionMode.Dictation ? \"DICTATION\" : \"INTERACTIVE\";\r\n            const phraseDetection = this.privSpeechContext.getSection(\"phraseDetection\") as PhraseDetection;\r\n            phraseDetection.mode = recoMode;\r\n            phraseDetection[recoMode] = segmentation;\r\n            this.privSpeechContext.setSection(\"phraseDetection\", phraseDetection);\r\n        }\r\n    }\r\n\r\n    protected setLanguageIdJson(): void {\r\n        const phraseDetection = this.privSpeechContext.getSection(\"phraseDetection\") as PhraseDetection;\r\n        if (this.privRecognizerConfig.autoDetectSourceLanguages !== undefined) {\r\n            const sourceLanguages: string[] = this.privRecognizerConfig.autoDetectSourceLanguages.split(\",\");\r\n\r\n            let speechContextLidMode;\r\n            if (this.privRecognizerConfig.languageIdMode === \"Continuous\") {\r\n                speechContextLidMode = \"DetectContinuous\";\r\n            } else {// recognizerConfig.languageIdMode === \"AtStart\"\r\n                speechContextLidMode = \"DetectAtAudioStart\";\r\n            }\r\n\r\n            this.privSpeechContext.setSection(\"languageId\", {\r\n                Priority: \"PrioritizeLatency\",\r\n                languages: sourceLanguages,\r\n                mode: speechContextLidMode,\r\n                onSuccess: { action: \"Recognize\" },\r\n                onUnknown: { action: \"None\" }\r\n            });\r\n            this.privSpeechContext.setSection(\"phraseOutput\", {\r\n                interimResults: {\r\n                    resultType: \"Auto\"\r\n                },\r\n                phraseResults: {\r\n                    resultType: \"Always\"\r\n                }\r\n            });\r\n            const customModels: CustomModel[] = this.privRecognizerConfig.sourceLanguageModels;\r\n            if (customModels !== undefined) {\r\n                phraseDetection.customModels = customModels;\r\n                phraseDetection.onInterim = { action: \"None\" };\r\n                phraseDetection.onSuccess = { action: \"None\" };\r\n            }\r\n        }\r\n        const targetLanguages: string = this.privRecognizerConfig.parameters.getProperty(PropertyId.SpeechServiceConnection_TranslationToLanguages, undefined);\r\n        if (targetLanguages !== undefined) {\r\n            phraseDetection.onInterim = { action: \"Translate\" };\r\n            phraseDetection.onSuccess = { action: \"Translate\" };\r\n            this.privSpeechContext.setSection(\"phraseOutput\", {\r\n                interimResults: {\r\n                    resultType: \"None\"\r\n                },\r\n                phraseResults: {\r\n                    resultType: \"None\"\r\n                }\r\n            });\r\n        }\r\n\r\n        this.privSpeechContext.setSection(\"phraseDetection\", phraseDetection);\r\n    }\r\n\r\n    protected setOutputDetailLevelJson(): void {\r\n        if (this.privEnableSpeakerId) {\r\n            const requestWordLevelTimestamps: string = this.privRecognizerConfig.parameters.getProperty(PropertyId.SpeechServiceResponse_RequestWordLevelTimestamps, \"false\").toLowerCase();\r\n            if (requestWordLevelTimestamps === \"true\") {\r\n                this.privSpeechContext.setWordLevelTimings();\r\n            } else {\r\n                const outputFormat: string = this.privRecognizerConfig.parameters.getProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Simple]).toLowerCase();\r\n                if (outputFormat === OutputFormat[OutputFormat.Detailed].toLocaleLowerCase()) {\r\n                    this.privSpeechContext.setDetailedOutputFormat();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public get isSpeakerDiarizationEnabled(): boolean {\r\n        return this.privEnableSpeakerId;\r\n    }\r\n\r\n    public get audioSource(): IAudioSource {\r\n        return this.privAudioSource;\r\n    }\r\n\r\n    public get speechContext(): SpeechContext {\r\n        return this.privSpeechContext;\r\n    }\r\n\r\n    public get dynamicGrammar(): DynamicGrammarBuilder {\r\n        return this.privDynamicGrammar;\r\n    }\r\n\r\n    public get agentConfig(): AgentConfig {\r\n        return this.privAgentConfig;\r\n    }\r\n\r\n    public set conversationTranslatorToken(token: string) {\r\n        this.privRecognizerConfig.parameters.setProperty(PropertyId.ConversationTranslator_Token, token);\r\n    }\r\n\r\n    public set voiceProfileType(type: string) {\r\n        this.privRecognizerConfig.parameters.setProperty(PropertyId.SpeechServiceConnection_SpeakerIdMode, type);\r\n    }\r\n\r\n    public set authentication(auth: IAuthentication) {\r\n        this.privAuthentication = auth;\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    public async dispose(reason?: string): Promise<void> {\r\n        this.privIsDisposed = true;\r\n        if (this.privConnectionConfigurationPromise !== undefined) {\r\n            try {\r\n                const connection: IConnection = await this.privConnectionConfigurationPromise;\r\n                await connection.dispose(reason);\r\n            } catch (error) {\r\n                // The connection is in a bad state. But we're trying to kill it, so...\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    public get connectionEvents(): EventSource<ConnectionEvent> {\r\n        return this.privConnectionEvents;\r\n    }\r\n\r\n    public get serviceEvents(): EventSource<ServiceEvent> {\r\n        return this.privServiceEvents;\r\n    }\r\n\r\n    public get recognitionMode(): RecognitionMode {\r\n        return this.privRecognizerConfig.recognitionMode;\r\n    }\r\n\r\n    protected recognizeOverride: (recoMode: RecognitionMode, sc: (e: SpeechRecognitionResult) => void, ec: (e: string) => void) => Promise<void> = undefined;\r\n\r\n    public recognizeSpeaker: (model: SpeakerRecognitionModel) => Promise<SpeakerRecognitionResult> = undefined;\r\n\r\n    public async recognize(\r\n        recoMode: RecognitionMode,\r\n        successCallback: (e: SpeechRecognitionResult) => void,\r\n        errorCallBack: (e: string) => void,\r\n    ): Promise<void> {\r\n\r\n        if (this.recognizeOverride !== undefined) {\r\n            await this.recognizeOverride(recoMode, successCallback, errorCallBack);\r\n            return;\r\n        }\r\n        // Clear the existing configuration promise to force a re-transmission of config and context.\r\n        this.privConnectionConfigurationPromise = undefined;\r\n        this.privRecognizerConfig.recognitionMode = recoMode;\r\n        this.setSpeechSegmentationTimeoutJson();\r\n        this.setTranslationJson();\r\n\r\n        this.privSuccessCallback = successCallback;\r\n        this.privErrorCallback = errorCallBack;\r\n\r\n        this.privRequestSession.startNewRecognition();\r\n        this.privRequestSession.listenForServiceTelemetry(this.privAudioSource.events);\r\n\r\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\r\n        const conPromise: Promise<IConnection> = this.connectImpl();\r\n        let audioNode: ReplayableAudioNode;\r\n\r\n        try {\r\n            const audioStreamNode: IAudioStreamNode = await this.audioSource.attach(this.privRequestSession.audioNodeId);\r\n            const format: AudioStreamFormatImpl = await this.audioSource.format;\r\n            const deviceInfo: ISpeechConfigAudioDevice = await this.audioSource.deviceInfo;\r\n            this.privIsLiveAudio = deviceInfo.type && deviceInfo.type === type.Microphones;\r\n\r\n            audioNode = new ReplayableAudioNode(audioStreamNode, format.avgBytesPerSec);\r\n            await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\r\n            this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\r\n\r\n        } catch (error) {\r\n            await this.privRequestSession.onStopRecognizing();\r\n            throw error;\r\n        }\r\n\r\n        try {\r\n            await conPromise;\r\n        } catch (error) {\r\n            await this.cancelRecognitionLocal(CancellationReason.Error, CancellationErrorCode.ConnectionFailure, error as string);\r\n            return;\r\n        }\r\n\r\n        const sessionStartEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n\r\n        if (!!this.privRecognizer.sessionStarted) {\r\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\r\n        }\r\n\r\n        void this.receiveMessage();\r\n        const audioSendPromise = this.sendAudio(audioNode);\r\n\r\n        audioSendPromise.catch(async (error: string): Promise<void> => {\r\n            await this.cancelRecognitionLocal(CancellationReason.Error, CancellationErrorCode.RuntimeError, error);\r\n        });\r\n\r\n        return;\r\n    }\r\n\r\n    public async stopRecognizing(): Promise<void> {\r\n        if (this.privRequestSession.isRecognizing) {\r\n            try {\r\n                await this.audioSource.turnOff();\r\n                await this.sendFinalAudio();\r\n                await this.privRequestSession.onStopRecognizing();\r\n                await this.privRequestSession.turnCompletionPromise;\r\n            } finally {\r\n                await this.privRequestSession.dispose();\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    public async connect(): Promise<void> {\r\n        await this.connectImpl();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public connectAsync(cb?: Callback, err?: Callback): void {\r\n        this.connectImpl().then((): void => {\r\n            try {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            } catch (e) {\r\n                if (!!err) {\r\n                    err(e);\r\n                }\r\n            }\r\n        }, (reason: any): void => {\r\n            try {\r\n                if (!!err) {\r\n                    err(reason);\r\n                }\r\n                /* eslint-disable no-empty */\r\n            } catch (error) {\r\n            }\r\n        });\r\n    }\r\n\r\n    protected disconnectOverride: () => Promise<void> = undefined;\r\n\r\n    public async disconnect(): Promise<void> {\r\n        await this.cancelRecognitionLocal(CancellationReason.Error,\r\n            CancellationErrorCode.NoError,\r\n            \"Disconnecting\");\r\n\r\n        if (this.disconnectOverride !== undefined) {\r\n            await this.disconnectOverride();\r\n        }\r\n\r\n        if (this.privConnectionPromise !== undefined) {\r\n            try {\r\n                await (await this.privConnectionPromise).dispose();\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n        this.privConnectionPromise = undefined;\r\n    }\r\n\r\n    // Called when telemetry data is sent to the service.\r\n    // Used for testing Telemetry capture.\r\n    public static telemetryData: (json: string) => void;\r\n    public static telemetryDataEnabled: boolean = true;\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    public sendMessage(message: string): Promise<void> {\r\n        return;\r\n    }\r\n\r\n    public async sendNetworkMessage(path: string, payload: string | ArrayBuffer): Promise<void> {\r\n        const type: MessageType = typeof payload === \"string\" ? MessageType.Text : MessageType.Binary;\r\n        const contentType: string = typeof payload === \"string\" ? \"application/json\" : \"\";\r\n\r\n        const connection: IConnection = await this.fetchConnection();\r\n        return connection.send(new SpeechConnectionMessage(type, path, this.privRequestSession.requestId, contentType, payload));\r\n    }\r\n\r\n    public set activityTemplate(messagePayload: string) {\r\n        this.privActivityTemplate = messagePayload;\r\n    }\r\n\r\n    public get activityTemplate(): string {\r\n        return this.privActivityTemplate;\r\n    }\r\n\r\n    public set expectContentAssessmentResponse(value: boolean) {\r\n        this.privExpectContentAssessmentResponse = value;\r\n    }\r\n\r\n    protected abstract processTypeSpecificMessages(\r\n        connectionMessage: SpeechConnectionMessage,\r\n        successCallback?: (e: SpeechRecognitionResult) => void,\r\n        errorCallBack?: (e: string) => void): Promise<boolean>;\r\n\r\n    protected async sendTelemetryData(): Promise<void> {\r\n        const telemetryData = this.privRequestSession.getTelemetry();\r\n        if (ServiceRecognizerBase.telemetryDataEnabled !== true ||\r\n            this.privIsDisposed ||\r\n            null === telemetryData) {\r\n            return;\r\n        }\r\n\r\n        if (!!ServiceRecognizerBase.telemetryData) {\r\n            try {\r\n                ServiceRecognizerBase.telemetryData(telemetryData);\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        const connection: IConnection = await this.fetchConnection();\r\n        await connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"telemetry\",\r\n            this.privRequestSession.requestId,\r\n            \"application/json\",\r\n            telemetryData));\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected abstract cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void;\r\n\r\n    // Cancels recognition.\r\n    protected async cancelRecognitionLocal(\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): Promise<void> {\r\n\r\n        if (!!this.privRequestSession.isRecognizing) {\r\n            await this.privRequestSession.onStopRecognizing();\r\n\r\n            this.cancelRecognition(\r\n                this.privRequestSession.sessionId,\r\n                this.privRequestSession.requestId,\r\n                cancellationReason,\r\n                errorCode,\r\n                error);\r\n        }\r\n    }\r\n\r\n    protected receiveMessageOverride: () => Promise<void> = undefined;\r\n\r\n    protected async receiveMessage(): Promise<void> {\r\n        try {\r\n            if (this.privIsDisposed) {\r\n                // We're done.\r\n                return;\r\n            }\r\n\r\n            let connection = await this.fetchConnection();\r\n            const message = await connection.read();\r\n\r\n            if (this.receiveMessageOverride !== undefined) {\r\n                return this.receiveMessageOverride();\r\n            }\r\n\r\n            // indicates we are draining the queue and it came with no message;\r\n            if (!message) {\r\n                return this.receiveMessage();\r\n            }\r\n\r\n            this.privServiceHasSentMessage = true;\r\n            const connectionMessage = SpeechConnectionMessage.fromConnectionMessage(message);\r\n\r\n            if (connectionMessage.requestId.toLowerCase() === this.privRequestSession.requestId.toLowerCase()) {\r\n                switch (connectionMessage.path.toLowerCase()) {\r\n                    case \"turn.start\":\r\n                        this.privMustReportEndOfStream = true;\r\n                        this.privRequestSession.onServiceTurnStartResponse();\r\n                        break;\r\n\r\n                    case \"speech.startdetected\":\r\n                        const speechStartDetected: SpeechDetected = SpeechDetected.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\r\n                        const speechStartEventArgs = new RecognitionEventArgs(speechStartDetected.Offset, this.privRequestSession.sessionId);\r\n                        if (!!this.privRecognizer.speechStartDetected) {\r\n                            this.privRecognizer.speechStartDetected(this.privRecognizer, speechStartEventArgs);\r\n                        }\r\n                        break;\r\n\r\n                    case \"speech.enddetected\":\r\n                        let json: string;\r\n                        if (connectionMessage.textBody.length > 0) {\r\n                            json = connectionMessage.textBody;\r\n                        } else {\r\n                            // If the request was empty, the JSON returned is empty.\r\n                            json = \"{ Offset: 0 }\";\r\n                        }\r\n                        const speechStopDetected: SpeechDetected = SpeechDetected.fromJSON(json, this.privRequestSession.currentTurnAudioOffset);\r\n                        const speechStopEventArgs = new RecognitionEventArgs(speechStopDetected.Offset + this.privRequestSession.currentTurnAudioOffset, this.privRequestSession.sessionId);\r\n                        if (!!this.privRecognizer.speechEndDetected) {\r\n                            this.privRecognizer.speechEndDetected(this.privRecognizer, speechStopEventArgs);\r\n                        }\r\n                        break;\r\n\r\n                    case \"turn.end\":\r\n                        await this.sendTelemetryData();\r\n                        if (this.privRequestSession.isSpeechEnded && this.privMustReportEndOfStream) {\r\n                            this.privMustReportEndOfStream = false;\r\n                            await this.cancelRecognitionLocal(CancellationReason.EndOfStream, CancellationErrorCode.NoError, undefined);\r\n                        }\r\n                        const sessionStopEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n                        await this.privRequestSession.onServiceTurnEndResponse(this.privRecognizerConfig.isContinuousRecognition);\r\n                        if (!this.privRecognizerConfig.isContinuousRecognition || this.privRequestSession.isSpeechEnded || !this.privRequestSession.isRecognizing) {\r\n                            if (!!this.privRecognizer.sessionStopped) {\r\n                                this.privRecognizer.sessionStopped(this.privRecognizer, sessionStopEventArgs);\r\n                            }\r\n                            return;\r\n                        } else {\r\n                            connection = await this.fetchConnection();\r\n                            await this.sendPrePayloadJSON(connection);\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n                        if (!await this.processTypeSpecificMessages(connectionMessage)) {\r\n                            // here are some messages that the derived class has not processed, dispatch them to connect class\r\n                            if (!!this.privServiceEvents) {\r\n                                this.serviceEvents.onEvent(new ServiceEvent(connectionMessage.path.toLowerCase(), connectionMessage.textBody));\r\n                            }\r\n                        }\r\n                }\r\n            }\r\n            return this.receiveMessage();\r\n        } catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private updateSpeakerDiarizationAudioOffset(): void {\r\n        const bytesSent: number = this.privRequestSession.recognitionBytesSent;\r\n        const audioOffsetMs: number = this.privAverageBytesPerMs !== 0 ? bytesSent / this.privAverageBytesPerMs : 0;\r\n        this.privSpeechContext.setSpeakerDiarizationAudioOffsetMs(audioOffsetMs);\r\n    }\r\n\r\n    protected sendSpeechContext(connection: IConnection, generateNewRequestId: boolean): Promise<void> {\r\n        if (this.privEnableSpeakerId) {\r\n            this.updateSpeakerDiarizationAudioOffset();\r\n        }\r\n        const speechContextJson = this.speechContext.toJSON();\r\n        if (generateNewRequestId) {\r\n            this.privRequestSession.onSpeechContext();\r\n        }\r\n\r\n        if (speechContextJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"speech.context\",\r\n                this.privRequestSession.requestId,\r\n                \"application/json\",\r\n                speechContextJson));\r\n        }\r\n        return;\r\n    }\r\n\r\n    protected sendPrePayloadJSONOverride: (connection: IConnection) => Promise<void> = undefined;\r\n\r\n    protected noOp(): Promise<void> {\r\n        // operation not supported\r\n        return;\r\n    }\r\n\r\n    // Encapsulated for derived service recognizers that need to send additional JSON\r\n    protected async sendPrePayloadJSON(connection: IConnection, generateNewRequestId: boolean = true): Promise<void> {\r\n        if (this.sendPrePayloadJSONOverride !== undefined) {\r\n            return this.sendPrePayloadJSONOverride(connection);\r\n        }\r\n\r\n        await this.sendSpeechContext(connection, generateNewRequestId);\r\n        await this.sendWaveHeader(connection);\r\n        return;\r\n    }\r\n\r\n    protected async sendWaveHeader(connection: IConnection): Promise<void> {\r\n        const format: AudioStreamFormatImpl = await this.audioSource.format;\r\n        // this.writeBufferToConsole(format.header);\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Binary,\r\n            \"audio\",\r\n            this.privRequestSession.requestId,\r\n            \"audio/x-wav\",\r\n            format.header\r\n        ));\r\n    }\r\n\r\n    protected postConnectImplOverride: (connection: Promise<IConnection>) => Promise<IConnection> = undefined;\r\n\r\n    // Establishes a websocket connection to the end point.\r\n    protected connectImpl(): Promise<IConnection> {\r\n        if (this.privConnectionPromise !== undefined) {\r\n            return this.privConnectionPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionPromise = undefined;\r\n                    this.privServiceHasSentMessage = false;\r\n                    return this.connectImpl();\r\n                }\r\n                return this.privConnectionPromise;\r\n            }, (): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionPromise = undefined;\r\n                this.privServiceHasSentMessage = false;\r\n                return this.connectImpl();\r\n            });\r\n        }\r\n\r\n        this.privConnectionPromise = this.retryableConnect();\r\n\r\n        // Attach an empty handler to allow the promise to run in the background while\r\n        // other startup events happen. It'll eventually be awaited on.\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        this.privConnectionPromise.catch((): void => { });\r\n\r\n        if (this.postConnectImplOverride !== undefined) {\r\n            return this.postConnectImplOverride(this.privConnectionPromise);\r\n        }\r\n\r\n        return this.privConnectionPromise;\r\n    }\r\n\r\n    protected configConnectionOverride: (connection: IConnection) => Promise<IConnection> = undefined;\r\n    protected handleSpeechPhraseMessage: (textBody: string) => Promise<void> = undefined;\r\n    protected handleSpeechHypothesisMessage: (textBody: string) => void = undefined;\r\n\r\n    protected sendSpeechServiceConfig(connection: IConnection, requestSession: RequestSession, SpeechServiceConfigJson: string): Promise<void> {\r\n        requestSession.onSpeechContext();\r\n        // filter out anything that is not required for the service to work.\r\n        if (ServiceRecognizerBase.telemetryDataEnabled !== true) {\r\n            const withTelemetry: { context: { system: string } } = JSON.parse(SpeechServiceConfigJson) as { context: { system: string } };\r\n\r\n            const replacement: any = {\r\n                context: {\r\n                    system: withTelemetry.context.system,\r\n                },\r\n            };\r\n\r\n            SpeechServiceConfigJson = JSON.stringify(replacement);\r\n        }\r\n\r\n        if (this.privRecognizerConfig.parameters.getProperty(\"f0f5debc-f8c9-4892-ac4b-90a7ab359fd2\", \"false\").toLowerCase() === \"true\") {\r\n            const json: { context: { DisableReferenceChannel: string; MicSpec: string } } = JSON.parse(SpeechServiceConfigJson) as { context: { DisableReferenceChannel: string; MicSpec: string } };\r\n            json.context.DisableReferenceChannel = \"True\";\r\n            json.context.MicSpec = \"1_0_0\";\r\n            SpeechServiceConfigJson = JSON.stringify(json);\r\n        }\r\n\r\n        if (SpeechServiceConfigJson) {\r\n            return connection.send(new SpeechConnectionMessage(\r\n                MessageType.Text,\r\n                \"speech.config\",\r\n                requestSession.requestId,\r\n                \"application/json\",\r\n                SpeechServiceConfigJson));\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    protected async fetchConnection(): Promise<IConnection> {\r\n        if (this.privConnectionConfigurationPromise !== undefined) {\r\n            return this.privConnectionConfigurationPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionConfigurationPromise = undefined;\r\n                    this.privServiceHasSentMessage = false;\r\n                    return this.fetchConnection();\r\n                }\r\n                return this.privConnectionConfigurationPromise;\r\n            }, (): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionConfigurationPromise = undefined;\r\n                this.privServiceHasSentMessage = false;\r\n                return this.fetchConnection();\r\n            });\r\n        }\r\n\r\n        this.privConnectionConfigurationPromise = this.configureConnection();\r\n        return await this.privConnectionConfigurationPromise;\r\n    }\r\n\r\n    protected async sendAudio(audioStreamNode: IAudioStreamNode): Promise<void> {\r\n        const audioFormat: AudioStreamFormatImpl = await this.audioSource.format;\r\n        this.privAverageBytesPerMs = audioFormat.avgBytesPerSec / 1000;\r\n        // The time we last sent data to the service.\r\n        let nextSendTime: number = Date.now();\r\n\r\n        // Max amount to send before we start to throttle\r\n        const fastLaneSizeMs: string = this.privRecognizerConfig.parameters.getProperty(\"SPEECH-TransmitLengthBeforThrottleMs\", \"5000\");\r\n        const maxSendUnthrottledBytes: number = audioFormat.avgBytesPerSec / 1000 * parseInt(fastLaneSizeMs, 10);\r\n        const startRecogNumber: number = this.privRequestSession.recogNumber;\r\n\r\n        const readAndUploadCycle = async (): Promise<void> => {\r\n            // If speech is done, stop sending audio.\r\n            if (!this.privIsDisposed &&\r\n                !this.privRequestSession.isSpeechEnded &&\r\n                this.privRequestSession.isRecognizing &&\r\n                this.privRequestSession.recogNumber === startRecogNumber) {\r\n\r\n                const connection: IConnection = await this.fetchConnection();\r\n                const audioStreamChunk: IStreamChunk<ArrayBuffer> = await audioStreamNode.read();\r\n                // we have a new audio chunk to upload.\r\n                if (this.privRequestSession.isSpeechEnded) {\r\n                    // If service already recognized audio end then don't send any more audio\r\n                    return;\r\n                }\r\n\r\n                let payload: ArrayBuffer;\r\n                let sendDelay: number;\r\n\r\n                if (!audioStreamChunk || audioStreamChunk.isEnd) {\r\n                    payload = null;\r\n                    sendDelay = 0;\r\n                } else {\r\n                    payload = audioStreamChunk.buffer;\r\n\r\n                    this.privRequestSession.onAudioSent(payload.byteLength);\r\n\r\n                    if (maxSendUnthrottledBytes >= this.privRequestSession.bytesSent) {\r\n                        sendDelay = 0;\r\n                    } else {\r\n                        sendDelay = Math.max(0, nextSendTime - Date.now());\r\n                    }\r\n                }\r\n\r\n                if (0 !== sendDelay) {\r\n                    await this.delay(sendDelay);\r\n                }\r\n\r\n                if (payload !== null) {\r\n                    nextSendTime = Date.now() + (payload.byteLength * 1000 / (audioFormat.avgBytesPerSec * 2));\r\n                }\r\n\r\n                // Are we still alive?\r\n                if (!this.privIsDisposed &&\r\n                    !this.privRequestSession.isSpeechEnded &&\r\n                    this.privRequestSession.isRecognizing &&\r\n                    this.privRequestSession.recogNumber === startRecogNumber) {\r\n                    connection.send(\r\n                        new SpeechConnectionMessage(MessageType.Binary, \"audio\", this.privRequestSession.requestId, null, payload)\r\n                    ).catch((): void => {\r\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n                        this.privRequestSession.onServiceTurnEndResponse(this.privRecognizerConfig.isContinuousRecognition).catch((): void => { });\r\n                    });\r\n\r\n                    if (!audioStreamChunk?.isEnd) {\r\n                        // this.writeBufferToConsole(payload);\r\n                        // Regardless of success or failure, schedule the next upload.\r\n                        // If the underlying connection was broken, the next cycle will\r\n                        // get a new connection and re-transmit missing audio automatically.\r\n                        return readAndUploadCycle();\r\n                    } else {\r\n                        // the audio stream has been closed, no need to schedule next\r\n                        // read-upload cycle.\r\n                        if (!this.privIsLiveAudio) {\r\n                            this.privRequestSession.onSpeechEnded();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        return readAndUploadCycle();\r\n    }\r\n\r\n    private async retryableConnect(): Promise<IConnection> {\r\n        let isUnAuthorized: boolean = false;\r\n\r\n        this.privAuthFetchEventId = createNoDashGuid();\r\n        const sessionId: string = this.privRequestSession.sessionId;\r\n        this.privConnectionId = (sessionId !== undefined) ? sessionId : createNoDashGuid();\r\n\r\n        this.privRequestSession.onPreConnectionStart(this.privAuthFetchEventId, this.privConnectionId);\r\n        let lastStatusCode: number = 0;\r\n        let lastReason: string = \"\";\r\n\r\n        while (this.privRequestSession.numConnectionAttempts <= this.privRecognizerConfig.maxRetryCount) {\r\n\r\n            // Get the auth information for the connection. This is a bit of overkill for the current API surface, but leaving the plumbing in place to be able to raise a developer-customer\r\n            // facing event when a connection fails to let them try and provide new auth information.\r\n            const authPromise = isUnAuthorized ? this.privAuthentication.fetchOnExpiry(this.privAuthFetchEventId) : this.privAuthentication.fetch(this.privAuthFetchEventId);\r\n            const auth: AuthInfo = await authPromise;\r\n\r\n            await this.privRequestSession.onAuthCompleted(false);\r\n\r\n            // Create the connection\r\n            const connection: IConnection = this.privConnectionFactory.create(this.privRecognizerConfig, auth, this.privConnectionId);\r\n            // Attach the telemetry handlers.\r\n            this.privRequestSession.listenForServiceTelemetry(connection.events);\r\n\r\n            // Attach to the underlying event. No need to hold onto the detach pointers as in the event the connection goes away,\r\n            // it'll stop sending events.\r\n            connection.events.attach((event: ConnectionEvent): void => {\r\n                this.connectionEvents.onEvent(event);\r\n            });\r\n\r\n            const response: ConnectionOpenResponse = await connection.open();\r\n            // 200 == everything is fine.\r\n            if (response.statusCode === 200) {\r\n                await this.privRequestSession.onConnectionEstablishCompleted(response.statusCode);\r\n                return Promise.resolve(connection);\r\n            } else if (response.statusCode === 1006) {\r\n                isUnAuthorized = true;\r\n            }\r\n\r\n            lastStatusCode = response.statusCode;\r\n            lastReason = response.reason;\r\n\r\n            this.privRequestSession.onRetryConnection();\r\n        }\r\n\r\n        await this.privRequestSession.onConnectionEstablishCompleted(lastStatusCode, lastReason);\r\n        return Promise.reject(`Unable to contact server. StatusCode: ${lastStatusCode}, ${this.privRecognizerConfig.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint)} Reason: ${lastReason}`);\r\n    }\r\n\r\n    private delay(delayMs: number): Promise<void> {\r\n        return new Promise((resolve: () => void): number => this.privSetTimeout(resolve, delayMs));\r\n    }\r\n\r\n    private writeBufferToConsole(buffer: ArrayBuffer): void {\r\n        let out: string = \"Buffer Size: \";\r\n        if (null === buffer) {\r\n            out += \"null\";\r\n        } else {\r\n            const readView: Uint8Array = new Uint8Array(buffer);\r\n            out += `${buffer.byteLength}\\r\\n`;\r\n            for (let i: number = 0; i < buffer.byteLength; i++) {\r\n                out += readView[i].toString(16).padStart(2, \"0\") + \" \";\r\n                if (((i + 1) % 16) === 0) {\r\n                    // eslint-disable-next-line no-console\r\n                    console.info(out);\r\n                    out = \"\";\r\n                }\r\n            }\r\n        }\r\n        // eslint-disable-next-line no-console\r\n        console.info(out);\r\n    }\r\n\r\n    private async sendFinalAudio(): Promise<void> {\r\n        const connection: IConnection = await this.fetchConnection();\r\n        await connection.send(new SpeechConnectionMessage(MessageType.Binary, \"audio\", this.privRequestSession.requestId, null, null));\r\n        return;\r\n    }\r\n\r\n    // Takes an established websocket connection to the endpoint and sends speech configuration information.\r\n    private async configureConnection(): Promise<IConnection> {\r\n        const connection: IConnection = await this.connectImpl();\r\n        if (this.configConnectionOverride !== undefined) {\r\n            return this.configConnectionOverride(connection);\r\n        }\r\n        await this.sendSpeechServiceConfig(connection, this.privRequestSession, this.privRecognizerConfig.SpeechServiceConfig.serialize());\r\n        await this.sendPrePayloadJSON(connection, false);\r\n        return connection;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IRestResponse\r\n} from \"../common.browser/Exports.js\";\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig,\r\n    VoiceProfileConnectionFactory,\r\n    VoiceServiceRecognizer\r\n} from \"../common.speech/Exports.js\";\r\nimport { AudioConfig, AudioConfigImpl } from \"./Audio/AudioConfig.js\";\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport {\r\n    AudioInputStream,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    ResultReason,\r\n    VoiceProfile,\r\n    VoiceProfileEnrollmentResult,\r\n    VoiceProfilePhraseResult,\r\n    VoiceProfileResult,\r\n    VoiceProfileType\r\n} from \"./Exports.js\";\r\nimport { SpeechConfig, SpeechConfigImpl } from \"./SpeechConfig.js\";\r\n\r\n/**\r\n * Defines VoiceProfileClient class for Speaker Recognition\r\n * Handles operations from user for Voice Profile operations (e.g. createProfile, deleteProfile)\r\n * @class VoiceProfileClient\r\n */\r\nexport class VoiceProfileClient extends Recognizer {\r\n    protected privProperties: PropertyCollection;\r\n    private privVoiceAdapter: VoiceServiceRecognizer;\r\n    private privDisposedVoiceAdapter: boolean;\r\n\r\n    /**\r\n     * VoiceProfileClient constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this synthesizer (authentication key, region, &c)\r\n     */\r\n    public constructor(speechConfig: SpeechConfig) {\r\n        Contracts.throwIfNullOrUndefined(speechConfig, \"speechConfig\");\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\r\n\r\n        super(AudioConfig.fromStreamInput(AudioInputStream.createPushStream()), speechConfigImpl.properties, new VoiceProfileConnectionFactory());\r\n\r\n        this.privProperties = speechConfigImpl.properties.clone();\r\n        this.privVoiceAdapter = this.privReco as VoiceServiceRecognizer;\r\n        this.privDisposedVoiceAdapter = false;\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this VoiceProfileClient.\r\n     * @member VoiceProfileClient.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this VoiceProfileClient.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member VoiceProfileClient.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member VoiceProfileClient.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * Create a speaker recognition voice profile\r\n     * @member VoiceProfileClient.prototype.createProfileAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfileType} profileType Type of Voice Profile to be created\r\n     * @param {string} lang Language string (locale) for Voice Profile\r\n     * @return {Promise<VoiceProfile>} - Promise of a VoiceProfile.\r\n     */\r\n    public async createProfileAsync(profileType: VoiceProfileType, lang: string): Promise<VoiceProfile> {\r\n        const profileIds: string[] = await this.privVoiceAdapter.createProfile(profileType, lang);\r\n        return new VoiceProfile(profileIds[0], profileType);\r\n    }\r\n\r\n    /**\r\n     * Get current information of a voice profile\r\n     * @member VoiceProfileClient.prototype.retrieveEnrollmentResultAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfile} profile Voice Profile to retrieve info for\r\n     * @return {Promise<VoiceProfileEnrollmentResult>} - Promise of a VoiceProfileEnrollmentResult.\r\n     */\r\n    public async retrieveEnrollmentResultAsync(profile: VoiceProfile): Promise<VoiceProfileEnrollmentResult> {\r\n        return this.privVoiceAdapter.retrieveEnrollmentResult(profile);\r\n    }\r\n\r\n    /**\r\n     * Get all voice profiles on account with given voice profile type\r\n     * @member VoiceProfileClient.prototype.getAllProfilesAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfileType} profileType profile type (identification/verification) for which to list profiles\r\n     * @return {Promise<VoiceProfileEnrollmentResult[]>} - Promise of an array of VoiceProfileEnrollmentResults.\r\n     */\r\n    public async getAllProfilesAsync(profileType: VoiceProfileType): Promise<VoiceProfileEnrollmentResult[]> {\r\n        return this.privVoiceAdapter.getAllProfiles(profileType);\r\n        /*\r\n        const result: { json: { value: EnrollmentResultJSON[] } } = await this.privAdapter.getProfiles(profileType);\r\n        if (profileType === VoiceProfileType.TextIndependentIdentification) {\r\n            return VoiceProfileEnrollmentResult.FromIdentificationProfileList(result.json);\r\n        }\r\n        return VoiceProfileEnrollmentResult.FromVerificationProfileList(result.json);\r\n        */\r\n    }\r\n\r\n    /**\r\n     * Get valid authorization phrases for voice profile enrollment\r\n     * @member VoiceProfileClient.prototype.getActivationPhrasesAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfileType} profileType Profile Type to get activation phrases for\r\n     * @param {string} lang Language string (locale) for Voice Profile\r\n     */\r\n    public async getActivationPhrasesAsync(profileType: VoiceProfileType, lang: string): Promise<VoiceProfilePhraseResult> {\r\n        return this.privVoiceAdapter.getActivationPhrases(profileType, lang);\r\n    }\r\n\r\n    /**\r\n     * Create a speaker recognition voice profile\r\n     * @member VoiceProfileClient.prototype.enrollProfileAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfile} profile Voice Profile to create enrollment for\r\n     * @param {AudioConfig} audioConfig source info from which to create enrollment\r\n     * @return {Promise<VoiceProfileEnrollmentResult>} - Promise of a VoiceProfileEnrollmentResult.\r\n     */\r\n    public async enrollProfileAsync(profile: VoiceProfile, audioConfig: AudioConfig): Promise<VoiceProfileEnrollmentResult> {\r\n        const configImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        Contracts.throwIfNullOrUndefined(configImpl, \"audioConfig\");\r\n        this.audioConfig = audioConfig;\r\n        this.privVoiceAdapter.SpeakerAudioSource = configImpl;\r\n\r\n        return this.privVoiceAdapter.enrollProfile(profile);\r\n    }\r\n\r\n    /**\r\n     * Delete a speaker recognition voice profile\r\n     * @member VoiceProfileClient.prototype.deleteProfileAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfile} profile Voice Profile to be deleted\r\n     * @return {Promise<VoiceProfileResult>} - Promise of a VoiceProfileResult.\r\n     */\r\n    public async deleteProfileAsync(profile: VoiceProfile): Promise<VoiceProfileResult> {\r\n        return this.privVoiceAdapter.deleteProfile(profile);\r\n    }\r\n\r\n    /**\r\n     * Remove all enrollments for a speaker recognition voice profile\r\n     * @member VoiceProfileClient.prototype.resetProfileAsync\r\n     * @function\r\n     * @public\r\n     * @async\r\n     * @param {VoiceProfile} profile Voice Profile to be reset\r\n     * @return {Promise<VoiceProfileResult>} - Promise of a VoiceProfileResult.\r\n     */\r\n    public async resetProfileAsync(profile: VoiceProfile): Promise<VoiceProfileResult> {\r\n        return this.privVoiceAdapter.resetProfile(profile);\r\n    }\r\n\r\n    /**\r\n     * Clean up object and close underlying connection\r\n     * @member VoiceProfileClient.prototype.close\r\n     * @function\r\n     * @async\r\n     * @public\r\n     */\r\n    public async close(): Promise<void> {\r\n        await this.dispose(true);\r\n    }\r\n\r\n    protected createServiceRecognizer(authentication: IAuthentication, connectionFactory: IConnectionFactory, audioConfig: AudioConfig, recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n        const audioImpl: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n        return new VoiceServiceRecognizer(authentication, connectionFactory, audioImpl, recognizerConfig, this);\r\n    }\r\n\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposedVoiceAdapter) {\r\n            return;\r\n        }\r\n\r\n        this.privDisposedVoiceAdapter = true;\r\n\r\n        if (disposing) {\r\n            await super.dispose(disposing);\r\n        }\r\n    }\r\n\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.properties);\r\n    }\r\n\r\n    private getResult(result: IRestResponse, successReason: ResultReason): VoiceProfileResult {\r\n        const response: VoiceProfileResult =\r\n            new VoiceProfileResult(\r\n                result.ok ? successReason : ResultReason.Canceled,\r\n                result.statusText\r\n            );\r\n        return (response);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    Deferred,\r\n    IAudioSource,\r\n    MessageType,\r\n} from \"../common/Exports.js\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    IntentRecognitionCanceledEventArgs,\r\n    IntentRecognitionEventArgs,\r\n    IntentRecognitionResult,\r\n    IntentRecognizer,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n} from \"../sdk/Exports.js\";\r\nimport {\r\n    AddedLmIntent,\r\n    CancellationErrorCodePropertyName,\r\n    EnumTranslation,\r\n    IntentResponse,\r\n    ServiceRecognizerBase,\r\n    SimpleSpeechPhrase,\r\n    SpeechHypothesis,\r\n} from \"./Exports.js\";\r\nimport { IAuthentication } from \"./IAuthentication.js\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory.js\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig.js\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal.js\";\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nexport class IntentServiceRecognizer extends ServiceRecognizerBase {\r\n    private privIntentRecognizer: IntentRecognizer;\r\n    private privAddedLmIntents: { [id: string]: AddedLmIntent };\r\n    private privIntentDataSent: boolean;\r\n    private privUmbrellaIntent: AddedLmIntent;\r\n    private privPendingIntentArgs: IntentRecognitionEventArgs;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        recognizer: IntentRecognizer) {\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\r\n        this.privIntentRecognizer = recognizer;\r\n        this.privIntentDataSent = false;\r\n    }\r\n\r\n    public setIntents(addedIntents: { [id: string]: AddedLmIntent }, umbrellaIntent: AddedLmIntent): void {\r\n        this.privAddedLmIntents = addedIntents;\r\n        this.privUmbrellaIntent = umbrellaIntent;\r\n        this.privIntentDataSent = true;\r\n    }\r\n\r\n    protected processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        let result: IntentRecognitionResult;\r\n        let ev: IntentRecognitionEventArgs;\r\n        let processed: boolean = false;\r\n\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        if (connectionMessage.messageType === MessageType.Text) {\r\n            resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        }\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"speech.hypothesis\":\r\n                const speechHypothesis: SpeechHypothesis = SpeechHypothesis.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\r\n\r\n                result = new IntentRecognitionResult(\r\n                    undefined,\r\n                    this.privRequestSession.requestId,\r\n                    ResultReason.RecognizingIntent,\r\n                    speechHypothesis.Text,\r\n                    speechHypothesis.Duration,\r\n                    speechHypothesis.Offset,\r\n                    speechHypothesis.Language,\r\n                    speechHypothesis.LanguageDetectionConfidence,\r\n                    undefined,\r\n                    speechHypothesis.asJson(),\r\n                    resultProps);\r\n\r\n                this.privRequestSession.onHypothesis(result.offset);\r\n\r\n                ev = new IntentRecognitionEventArgs(result, speechHypothesis.Offset, this.privRequestSession.sessionId);\r\n\r\n                if (!!this.privIntentRecognizer.recognizing) {\r\n                    try {\r\n                        this.privIntentRecognizer.recognizing(this.privIntentRecognizer, ev);\r\n                        /* eslint-disable no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.phrase\":\r\n                const simple: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(connectionMessage.textBody, this.privRequestSession.currentTurnAudioOffset);\r\n                result = new IntentRecognitionResult(\r\n                    undefined,\r\n                    this.privRequestSession.requestId,\r\n                    EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus),\r\n                    simple.DisplayText,\r\n                    simple.Duration,\r\n                    simple.Offset,\r\n                    simple.Language,\r\n                    simple.LanguageDetectionConfidence,\r\n                    undefined,\r\n                    simple.asJson(),\r\n                    resultProps);\r\n\r\n                ev = new IntentRecognitionEventArgs(result, result.offset, this.privRequestSession.sessionId);\r\n\r\n                const sendEvent: () => void = (): void => {\r\n                    if (!!this.privIntentRecognizer.recognized) {\r\n                        try {\r\n                            this.privIntentRecognizer.recognized(this.privIntentRecognizer, ev);\r\n                            /* eslint-disable no-empty */\r\n                        } catch (error) {\r\n                            // Not going to let errors in the event handler\r\n                            // trip things up.\r\n                        }\r\n                    }\r\n\r\n                    // report result to promise.\r\n                    if (!!this.privSuccessCallback) {\r\n                        try {\r\n                            this.privSuccessCallback(result);\r\n                        } catch (e) {\r\n                            if (!!this.privErrorCallback) {\r\n                                this.privErrorCallback(e as string);\r\n                            }\r\n                        }\r\n                        // Only invoke the call back once.\r\n                        // and if it's successful don't invoke the\r\n                        // error after that.\r\n                        this.privSuccessCallback = undefined;\r\n                        this.privErrorCallback = undefined;\r\n                    }\r\n                };\r\n\r\n                // If intent data was sent, the terminal result for this recognizer is an intent being found.\r\n                // If no intent data was sent, the terminal event is speech recognition being successful.\r\n                if (false === this.privIntentDataSent || ResultReason.NoMatch === ev.result.reason) {\r\n                    // Advance the buffers.\r\n                    this.privRequestSession.onPhraseRecognized(ev.offset + ev.result.duration);\r\n                    sendEvent();\r\n                } else {\r\n                    // Squirrel away the args, when the response event arrives it will build upon them\r\n                    // and then return\r\n                    this.privPendingIntentArgs = ev;\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"response\":\r\n                // Response from LUIS\r\n                ev = this.privPendingIntentArgs;\r\n                this.privPendingIntentArgs = undefined;\r\n\r\n                if (undefined === ev) {\r\n                    if (\"\" === connectionMessage.textBody) {\r\n                        // This condition happens if there is nothing but silence in the\r\n                        // audio sent to the service.\r\n                        return;\r\n                    }\r\n\r\n                    // Odd... Not sure this can happen\r\n                    ev = new IntentRecognitionEventArgs(new IntentRecognitionResult(), 0, this.privRequestSession.sessionId);\r\n                }\r\n\r\n                const intentResponse: IntentResponse = IntentResponse.fromJSON(connectionMessage.textBody);\r\n\r\n                // If LUIS didn't return anything, send the existing event, else\r\n                // modify it to show the match.\r\n                // See if the intent found is in the list of intents asked for.\r\n\r\n                if (null !== intentResponse && !!intentResponse.topScoringIntent && !!intentResponse.topScoringIntent.intent) {\r\n                    let addedIntent: AddedLmIntent = this.privAddedLmIntents[intentResponse.topScoringIntent.intent];\r\n\r\n                    if (this.privUmbrellaIntent !== undefined) {\r\n                        addedIntent = this.privUmbrellaIntent;\r\n                    }\r\n\r\n                    if (!!addedIntent) {\r\n                        const intentId = addedIntent === undefined || addedIntent.intentName === undefined ? intentResponse.topScoringIntent.intent : addedIntent.intentName;\r\n                        let reason = ev.result.reason;\r\n\r\n                        if (undefined !== intentId) {\r\n                            reason = ResultReason.RecognizedIntent;\r\n                        }\r\n\r\n                        // make sure, properties is set.\r\n                        const properties = (undefined !== ev.result.properties) ?\r\n                            ev.result.properties : new PropertyCollection();\r\n\r\n                        properties.setProperty(PropertyId.LanguageUnderstandingServiceResponse_JsonResult, connectionMessage.textBody);\r\n\r\n                        ev = new IntentRecognitionEventArgs(\r\n                            new IntentRecognitionResult(\r\n                                intentId,\r\n                                ev.result.resultId,\r\n                                reason,\r\n                                ev.result.text,\r\n                                ev.result.duration,\r\n                                ev.result.offset,\r\n                                undefined,\r\n                                undefined,\r\n                                ev.result.errorDetails,\r\n                                ev.result.json,\r\n                                properties),\r\n                            ev.offset,\r\n                            ev.sessionId);\r\n\r\n                    }\r\n                }\r\n                this.privRequestSession.onPhraseRecognized(ev.offset + ev.result.duration);\r\n\r\n                if (!!this.privIntentRecognizer.recognized) {\r\n                    try {\r\n                        this.privIntentRecognizer.recognized(this.privIntentRecognizer, ev);\r\n                        /* eslint-disable no-empty */\r\n                    } catch (error) {\r\n                        // Not going to let errors in the event handler\r\n                        // trip things up.\r\n                    }\r\n                }\r\n\r\n                // report result to promise.\r\n                if (!!this.privSuccessCallback) {\r\n                    try {\r\n                        this.privSuccessCallback(ev.result);\r\n                    } catch (e) {\r\n                        if (!!this.privErrorCallback) {\r\n                            this.privErrorCallback(e as string);\r\n                        }\r\n                    }\r\n                    // Only invoke the call back once.\r\n                    // and if it's successful don't invoke the\r\n                    // error after that.\r\n                    this.privSuccessCallback = undefined;\r\n                    this.privErrorCallback = undefined;\r\n                }\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        const defferal = new Deferred<boolean>();\r\n        defferal.resolve(processed);\r\n        return defferal.promise;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n        if (!!this.privIntentRecognizer.canceled) {\r\n\r\n            const cancelEvent: IntentRecognitionCanceledEventArgs = new IntentRecognitionCanceledEventArgs(\r\n                cancellationReason,\r\n                error,\r\n                errorCode,\r\n                undefined,\r\n                undefined,\r\n                sessionId);\r\n            try {\r\n                this.privIntentRecognizer.canceled(this.privIntentRecognizer, cancelEvent);\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n        }\r\n\r\n        if (!!this.privSuccessCallback) {\r\n            const result: IntentRecognitionResult = new IntentRecognitionResult(\r\n                undefined, // Intent Id\r\n                requestId,\r\n                ResultReason.Canceled,\r\n                undefined, // Text\r\n                undefined, // Duration\r\n                undefined, // Offset\r\n                undefined, // Language\r\n                undefined, // LanguageDetectionConfidence\r\n                error,\r\n                undefined, // Json\r\n                properties);\r\n            try {\r\n                this.privSuccessCallback(result);\r\n                this.privSuccessCallback = undefined;\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines channels used to pass property settings to service.\r\n * Added in version 1.7.0.\r\n */\r\nexport enum ServicePropertyChannel {\r\n    /**\r\n     * Uses URI query parameter to pass property settings to service.\r\n     */\r\n    UriQueryParameter = 0.\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n} from \"./Exports.js\";\r\n\r\n/**\r\n * Contains detailed information about why a result was canceled.\r\n * @class CancellationDetailsBase\r\n */\r\nexport class CancellationDetailsBase {\r\n    private privReason: CancellationReason;\r\n    private privErrorDetails: string;\r\n    private privErrorCode: CancellationErrorCode;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {CancellationReason} reason - The cancellation reason.\r\n     * @param {string} errorDetails - The error details, if provided.\r\n     */\r\n    protected constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        this.privReason = reason;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privErrorCode = errorCode;\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member CancellationDetailsBase.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {CancellationReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): CancellationReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful recognition, provides details of the occurred error.\r\n     * @member CancellationDetailsBase.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the error details.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    /**\r\n     * The error code in case of an unsuccessful recognition.\r\n     * Added in version 1.1.0.\r\n     * @return An error code that represents the error reason.\r\n     */\r\n    public get ErrorCode(): CancellationErrorCode {\r\n        return this.privErrorCode;\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nimport {\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SpeechServiceConfig\r\n} from \"../../common.speech/Exports.js\";\r\nimport {\r\n    BackgroundEvent,\r\n    Events,\r\n    Timeout,\r\n} from \"../../common/Exports.js\";\r\nimport { AudioConfigImpl } from \"../../sdk/Audio/AudioConfig.js\";\r\nimport { Contracts } from \"../../sdk/Contracts.js\";\r\nimport {\r\n    AudioConfig,\r\n    Connection,\r\n    ConnectionEventArgs,\r\n    ConversationExpirationEventArgs,\r\n    ConversationParticipantsChangedEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    SessionEventArgs,\r\n    SpeechTranslationConfig\r\n} from \"../../sdk/Exports.js\";\r\nimport { SpeechTranslationConfigImpl } from \"../../sdk/SpeechTranslationConfig.js\";\r\nimport { ConversationImpl } from \"../../sdk/Transcription/Conversation.js\";\r\nimport { Callback, IConversation } from \"../../sdk/Transcription/IConversation.js\";\r\nimport { ConversationConnectionFactory } from \"./ConversationConnectionFactory.js\";\r\nimport { ConversationServiceAdapter } from \"./ConversationServiceAdapter.js\";\r\nimport {\r\n    ConversationReceivedTranslationEventArgs,\r\n    LockRoomEventArgs,\r\n    MuteAllEventArgs,\r\n    ParticipantAttributeEventArgs,\r\n    ParticipantEventArgs,\r\n    ParticipantsListEventArgs\r\n} from \"./ConversationTranslatorEventArgs.js\";\r\nimport {\r\n    ConversationRecognizer,\r\n} from \"./ConversationTranslatorInterfaces.js\";\r\n\r\nexport class ConversationRecognizerFactory {\r\n    public static fromConfig(conversation: IConversation, speechConfig: SpeechTranslationConfig, audioConfig?: AudioConfig): ConversationRecognizer {\r\n        return new ConversationTranslatorRecognizer(conversation, speechConfig, audioConfig);\r\n    }\r\n}\r\n\r\n/**\r\n * Sends messages to the Conversation Translator websocket and listens for incoming events containing websocket messages.\r\n * Based off the recognizers in the SDK folder.\r\n */\r\nexport class ConversationTranslatorRecognizer extends Recognizer implements ConversationRecognizer {\r\n\r\n    private privIsDisposed: boolean;\r\n    private privSpeechRecognitionLanguage: string;\r\n    private privConnection: Connection;\r\n    private privConversation: ConversationImpl;\r\n    private privTimeoutToken: any;\r\n    private privSetTimeout: (cb: () => void, delay: number) => number;\r\n    private privClearTimeout: (id: number) => void;\r\n\r\n    public constructor(conversation: IConversation, speechConfig: SpeechTranslationConfig, audioConfig?: AudioConfig) {\r\n        const serviceConfigImpl = speechConfig as SpeechTranslationConfigImpl;\r\n        Contracts.throwIfNull(serviceConfigImpl, \"speechConfig\");\r\n        const conversationImpl = conversation as ConversationImpl;\r\n        Contracts.throwIfNull(conversationImpl, \"conversationImpl\");\r\n\r\n        super(audioConfig, serviceConfigImpl.properties, new ConversationConnectionFactory());\r\n\r\n        this.privConversation = conversationImpl;\r\n        this.privIsDisposed = false;\r\n        this.privProperties = serviceConfigImpl.properties.clone();\r\n        this.privConnection = Connection.fromRecognizer(this);\r\n        const webWorkerLoadType: string = this.privProperties.getProperty(PropertyId.WebWorkerLoadType, \"on\").toLowerCase();\r\n        if (webWorkerLoadType === \"on\" && typeof (Blob) !== \"undefined\" && typeof (Worker) !== \"undefined\") {\r\n            this.privSetTimeout = Timeout.setTimeout;\r\n            this.privClearTimeout = Timeout.clearTimeout;\r\n        } else {\r\n            if (typeof window !== \"undefined\") {\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n                this.privSetTimeout = window.setTimeout.bind(window);\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n                this.privClearTimeout = window.clearTimeout.bind(window);\r\n            } else {\r\n                this.privSetTimeout = setTimeout;\r\n                this.privClearTimeout = clearTimeout;\r\n            }\r\n        }\r\n    }\r\n\r\n    public canceled: (sender: ConversationRecognizer, event: ConversationTranslationCanceledEventArgs) => void;\r\n    public conversationExpiration: (sender: ConversationRecognizer, event: ConversationExpirationEventArgs) => void;\r\n    public lockRoomCommandReceived: (sender: ConversationRecognizer, event: LockRoomEventArgs) => void;\r\n    public muteAllCommandReceived: (sender: ConversationRecognizer, event: MuteAllEventArgs) => void;\r\n    public participantJoinCommandReceived: (sender: ConversationRecognizer, event: ParticipantEventArgs) => void;\r\n    public participantLeaveCommandReceived: (sender: ConversationRecognizer, event: ParticipantEventArgs) => void;\r\n    public participantUpdateCommandReceived: (sender: ConversationRecognizer, event: ParticipantAttributeEventArgs) => void;\r\n    public connectionOpened: (sender: ConversationRecognizer, event: SessionEventArgs) => void;\r\n    public connectionClosed: (sender: ConversationRecognizer, event: SessionEventArgs) => void;\r\n    public translationReceived: (sender: ConversationRecognizer, event: ConversationReceivedTranslationEventArgs) => void;\r\n    public participantsListReceived: (sender: ConversationRecognizer, event: ParticipantsListEventArgs) => void;\r\n    public participantsChanged: (sender: ConversationRecognizer, event: ConversationParticipantsChangedEventArgs) => void;\r\n\r\n    public set connected(cb: (e: ConnectionEventArgs) => void) {\r\n        this.privConnection.connected = cb;\r\n    }\r\n\r\n    public set disconnected(cb: (e: ConnectionEventArgs) => void) {\r\n        this.privConnection.disconnected = cb;\r\n    }\r\n\r\n    /**\r\n     * Return the speech language used by the recognizer\r\n     */\r\n    public get speechRecognitionLanguage(): string {\r\n        return this.privSpeechRecognitionLanguage;\r\n    }\r\n\r\n    /**\r\n     * Return the properties for the recognizer\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return this.privIsDisposed;\r\n    }\r\n\r\n    /**\r\n     * Connect to the recognizer\r\n     * @param token\r\n     */\r\n    public connect(token: string, cb?: () => void, err?: (e: string) => void): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n            this.privReco.conversationTranslatorToken = token;\r\n            this.resetConversationTimeout();\r\n            this.privReco.connectAsync(cb, err);\r\n        } catch (error) {\r\n            if (!!err) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error as string);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disconnect from the recognizer\r\n     */\r\n    public disconnect(cb?: () => void, err?: (e: string) => void): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            if (this.privTimeoutToken !== undefined) {\r\n               // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n               this.privClearTimeout(this.privTimeoutToken);\r\n            }\r\n            this.privReco.disconnect().then((): void => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string): void => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n        } catch (error) {\r\n            if (!!err) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error as string);\r\n                }\r\n            }\r\n            // Destroy the recognizer.\r\n            this.dispose(true).catch((reason: string): void => {\r\n                Events.instance.onEvent(new BackgroundEvent(reason));\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send the mute all participants command to the websocket\r\n     * @param conversationId\r\n     * @param participantId\r\n     * @param isMuted\r\n     */\r\n    public sendRequest(command: string, cb?: () => void, err?: (e: string) => void): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privIsDisposed);\r\n            this.sendMessage(command, cb, err);\r\n        } catch (error) {\r\n            if (!!err) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error as string);\r\n                }\r\n            }\r\n\r\n            // Destroy the recognizer.\r\n            this.dispose(true).catch((reason: string): void => {\r\n                Events.instance.onEvent(new BackgroundEvent(reason));\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle update of service auth token (#694)\r\n     */\r\n    public onToken(token: IAuthentication): void {\r\n        this.privConversation.onToken(token);\r\n    }\r\n\r\n    /**\r\n     * Close and dispose the recognizer\r\n     */\r\n    public async close(): Promise<void> {\r\n        if (!this.privIsDisposed) {\r\n            if (!!this.privConnection) {\r\n                this.privConnection.closeConnection();\r\n                this.privConnection.close();\r\n            }\r\n            this.privConnection = undefined;\r\n            await this.dispose(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Dispose the recognizer\r\n     * @param disposing\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privIsDisposed) {\r\n            return;\r\n        }\r\n        if (disposing) {\r\n            if (this.privTimeoutToken !== undefined) {\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n                this.privClearTimeout(this.privTimeoutToken);\r\n            }\r\n            this.privIsDisposed = true;\r\n            if (!!this.privConnection) {\r\n                this.privConnection.closeConnection();\r\n                this.privConnection.close();\r\n                this.privConnection = undefined;\r\n            }\r\n            await super.dispose(disposing);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create the config for the recognizer\r\n     * @param speechConfig\r\n     */\r\n    protected createRecognizerConfig(speechConfig: SpeechServiceConfig): RecognizerConfig {\r\n        return new RecognizerConfig(speechConfig, this.privProperties);\r\n    }\r\n\r\n    /**\r\n     * Create the service recognizer.\r\n     * The audio source is redundnant here but is required by the implementation.\r\n     * @param authentication\r\n     * @param connectionFactory\r\n     * @param audioConfig\r\n     * @param recognizerConfig\r\n     */\r\n    protected createServiceRecognizer(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioConfig: AudioConfig,\r\n        recognizerConfig: RecognizerConfig): ServiceRecognizerBase {\r\n\r\n        const audioSource: AudioConfigImpl = audioConfig as AudioConfigImpl;\r\n\r\n        return new ConversationServiceAdapter(authentication, connectionFactory, audioSource, recognizerConfig, this);\r\n    }\r\n\r\n    private sendMessage(msg: string, cb?: Callback, err?: Callback): void {\r\n        const withAsync = this.privReco as ConversationServiceAdapter;\r\n        const PromiseToEmptyCallback = <T>(promise: Promise<T>, cb?: Callback, err?: Callback): void => {\r\n            if (promise !== undefined) {\r\n                promise.then((): void => {\r\n                    try {\r\n                        if (!!cb) {\r\n                            cb();\r\n                        }\r\n                    } catch (e) {\r\n                        if (!!err) {\r\n                            err(`'Unhandled error on promise callback: ${e as string}'`);\r\n                        }\r\n                    }\r\n                }, (reason: any): void => {\r\n                    try {\r\n                        if (!!err) {\r\n                            err(reason);\r\n                        }\r\n                        // eslint-disable-next-line no-empty\r\n                    } catch (error) { }\r\n                });\r\n            } else {\r\n                if (!!err) {\r\n                    err(\"Null promise\");\r\n                }\r\n            }\r\n        };\r\n\r\n        PromiseToEmptyCallback(withAsync.sendMessageAsync(msg), cb, err);\r\n        this.resetConversationTimeout();\r\n    }\r\n\r\n    private resetConversationTimeout(): void {\r\n        if (this.privTimeoutToken !== undefined) {\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\r\n            this.privClearTimeout(this.privTimeoutToken);\r\n        }\r\n\r\n        this.privTimeoutToken = this.privSetTimeout((): void => {\r\n            this.sendRequest(this.privConversation.getKeepAlive());\r\n        }, 60000);\r\n    }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    PropertyCollection,\r\n    ResultReason,\r\n    SynthesisResult\r\n} from \"./Exports.js\";\r\n\r\n/**\r\n * Defines result of speech synthesis.\r\n * @class SpeechSynthesisResult\r\n * Added in version 1.11.0\r\n */\r\nexport class SpeechSynthesisResult extends SynthesisResult {\r\n    private readonly privAudioData: ArrayBuffer;\r\n    private readonly privAudioDuration: number;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {ArrayBuffer} audioData - The synthesized audio binary.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     * @param {number} audioDuration - The audio duration.\r\n     */\r\n    public constructor(resultId?: string, reason?: ResultReason, audioData?: ArrayBuffer,\r\n                errorDetails?: string, properties?: PropertyCollection, audioDuration?: number) {\r\n        super(resultId, reason, errorDetails, properties);\r\n        this.privAudioData = audioData;\r\n        this.privAudioDuration = audioDuration;\r\n    }\r\n\r\n    /**\r\n     * The synthesized audio data\r\n     * @member SpeechSynthesisResult.prototype.audioData\r\n     * @function\r\n     * @public\r\n     * @returns {ArrayBuffer} The synthesized audio data.\r\n     */\r\n    public get audioData(): ArrayBuffer {\r\n        return this.privAudioData;\r\n    }\r\n\r\n    /**\r\n     * The time duration of synthesized audio, in ticks (100 nanoseconds).\r\n     * @member SpeechSynthesisResult.prototype.audioDuration\r\n     * @function\r\n     * @public\r\n     * @returns {number} The time duration of synthesized audio.\r\n     */\r\n    public get audioDuration(): number {\r\n        return this.privAudioDuration;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { CancellationEventArgsBase } from \"../CancellationEventArgsBase.js\";\r\n\r\nexport class ConversationTranslationCanceledEventArgs extends CancellationEventArgsBase {\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports.js\";\r\nimport { OutputFormatPropertyName } from \"../common.speech/Exports.js\";\r\nimport { IConnection, IStringDictionary } from \"../common/Exports.js\";\r\nimport { DialogServiceConfig, OutputFormat, PropertyId } from \"../sdk/Exports.js\";\r\nimport { ConnectionFactoryBase } from \"./ConnectionFactoryBase.js\";\r\nimport { AuthInfo, RecognizerConfig, WebsocketMessageFormatter } from \"./Exports.js\";\r\nimport { HeaderNames } from \"./HeaderNames.js\";\r\nimport { QueryParameterNames } from \"./QueryParameterNames.js\";\r\n\r\nexport class DialogConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    private static readonly ApiKey: string = \"api\";\r\n    private static readonly BaseUrl: string = \"convai.speech\";\r\n\r\n    public create(\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection {\r\n\r\n        const applicationId: string = config.parameters.getProperty(PropertyId.Conversation_ApplicationId, \"\");\r\n        const dialogType: string = config.parameters.getProperty(PropertyId.Conversation_DialogType);\r\n        const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region);\r\n        const language: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, \"en-US\");\r\n        const requestTurnStatus: string = config.parameters.getProperty(PropertyId.Conversation_Request_Bot_Status_Messages, \"true\");\r\n\r\n        const queryParams: IStringDictionary<string> = {};\r\n        queryParams[HeaderNames.ConnectionId] = connectionId;\r\n        queryParams[QueryParameterNames.Format] = config.parameters.getProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Simple]).toLowerCase();\r\n        queryParams[QueryParameterNames.Language] = language;\r\n        queryParams[QueryParameterNames.RequestBotStatusMessages] = requestTurnStatus;\r\n        if (applicationId) {\r\n            queryParams[QueryParameterNames.BotId] = applicationId;\r\n            if (dialogType === DialogServiceConfig.DialogTypes.CustomCommands) {\r\n                queryParams[HeaderNames.CustomCommandsAppId] = applicationId;\r\n            }\r\n        }\r\n\r\n        const resourceInfix: string =\r\n            dialogType === DialogServiceConfig.DialogTypes.CustomCommands ? \"commands/\"\r\n            : \"\";\r\n        const version: string =\r\n            dialogType === DialogServiceConfig.DialogTypes.CustomCommands ? \"v1\"\r\n            : dialogType === DialogServiceConfig.DialogTypes.BotFramework ? \"v3\"\r\n            : \"v0\";\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n\r\n        if (authInfo.token != null && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n\r\n        // The URL used for connection is chosen in a priority order of specification:\r\n        //  1. If a custom endpoint is provided, that URL is used verbatim.\r\n        //  2. If a custom host is provided (e.g. \"wss://my.custom.endpoint.com:1123\"), a URL is constructed from it.\r\n        //  3. If no custom connection details are provided, a URL is constructed from default values.\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, \"\");\r\n        if (!endpoint) {\r\n            const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n            const host: string = config.parameters.getProperty(\r\n                PropertyId.SpeechServiceConnection_Host,\r\n                `wss://${region}.${DialogConnectionFactory.BaseUrl}${hostSuffix}`);\r\n            const standardizedHost: string = host.endsWith(\"/\") ? host : host + \"/\";\r\n            endpoint = `${standardizedHost}${resourceInfix}${DialogConnectionFactory.ApiKey}/${version}`;\r\n        }\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpoint);\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n        return new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\n/**\r\n * The error that is thrown when an argument passed in is null.\r\n *\r\n * @export\r\n * @class ArgumentNullError\r\n * @extends {Error}\r\n */\r\nexport class ArgumentNullError extends Error {\r\n\r\n    /**\r\n     * Creates an instance of ArgumentNullError.\r\n     *\r\n     * @param {string} argumentName - Name of the argument that is null\r\n     *\r\n     * @memberOf ArgumentNullError\r\n     */\r\n    public constructor(argumentName: string) {\r\n        super(argumentName);\r\n        this.name = \"ArgumentNull\";\r\n        this.message = argumentName;\r\n    }\r\n}\r\n\r\n/**\r\n * The error that is thrown when an invalid operation is performed in the code.\r\n *\r\n * @export\r\n * @class InvalidOperationError\r\n * @extends {Error}\r\n */\r\nexport class InvalidOperationError extends Error {\r\n\r\n    /**\r\n     * Creates an instance of InvalidOperationError.\r\n     *\r\n     * @param {string} error - The error\r\n     *\r\n     * @memberOf InvalidOperationError\r\n     */\r\n    public constructor(error: string) {\r\n        super(error);\r\n        this.name = \"InvalidOperation\";\r\n        this.message = error;\r\n    }\r\n}\r\n\r\n/**\r\n * The error that is thrown when an object is disposed.\r\n *\r\n * @export\r\n * @class ObjectDisposedError\r\n * @extends {Error}\r\n */\r\nexport class ObjectDisposedError extends Error {\r\n\r\n    /**\r\n     * Creates an instance of ObjectDisposedError.\r\n     *\r\n     * @param {string} objectName - The object that is disposed\r\n     * @param {string} error - The error\r\n     *\r\n     * @memberOf ObjectDisposedError\r\n     */\r\n    public constructor(objectName: string, error?: string) {\r\n        super(error);\r\n        this.name = objectName + \"ObjectDisposed\";\r\n        this.message = error;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Output format\r\n * @class VoiceProfileType\r\n */\r\nexport enum VoiceProfileType {\r\n\r\n    /**\r\n     * Text independent speaker identification\r\n     * @member VoiceProfileType.TextIndependentIdentification\r\n     */\r\n    TextIndependentIdentification,\r\n\r\n    /**\r\n     * Text dependent speaker verification\r\n     * @member VoiceProfileType.TextDependentVerification\r\n     */\r\n    TextDependentVerification,\r\n\r\n    /**\r\n     * Text independent speaker verification\r\n     * @member VoiceProfileType.TextIndependentVerification\r\n     */\r\n    TextIndependentVerification,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ConnectionState,\r\n    createNoDashGuid,\r\n    Deferred,\r\n    IAudioSource,\r\n    IConnection,\r\n    MessageType,\r\n} from \"../../common/Exports.js\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    ConversationExpirationEventArgs,\r\n    ConversationTranslationCanceledEventArgs,\r\n    ConversationTranslationResult,\r\n    ResultReason,\r\n    Translations\r\n} from \"../../sdk/Exports.js\";\r\nimport {\r\n    CognitiveTokenAuthentication,\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase\r\n} from \"../Exports.js\";\r\nimport { ConversationConnectionMessage } from \"./ConversationConnectionMessage.js\";\r\nimport { ConversationRequestSession } from \"./ConversationRequestSession.js\";\r\nimport {\r\n    ConversationReceivedTranslationEventArgs,\r\n    LockRoomEventArgs,\r\n    MuteAllEventArgs,\r\n    ParticipantAttributeEventArgs,\r\n    ParticipantEventArgs,\r\n    ParticipantsListEventArgs\r\n} from \"./ConversationTranslatorEventArgs.js\";\r\nimport {\r\n    ConversationTranslatorCommandTypes,\r\n    ConversationTranslatorMessageTypes,\r\n    IInternalParticipant\r\n} from \"./ConversationTranslatorInterfaces.js\";\r\nimport { ConversationTranslatorRecognizer } from \"./ConversationTranslatorRecognizer.js\";\r\nimport {\r\n    CommandResponsePayload,\r\n    IParticipantPayloadResponse,\r\n    IParticipantsListPayloadResponse,\r\n    ITranslationResponsePayload,\r\n    ParticipantPayloadResponse,\r\n    ParticipantsListPayloadResponse,\r\n    SpeechResponsePayload,\r\n    TextResponsePayload\r\n} from \"./ServiceMessages/Exports.js\";\r\n\r\n/**\r\n * The service adapter handles sending and receiving messages to the Conversation Translator websocket.\r\n */\r\nexport class ConversationServiceAdapter extends ServiceRecognizerBase {\r\n    private privConversationServiceConnector: ConversationTranslatorRecognizer;\r\n    private privConversationConnectionFactory: IConnectionFactory;\r\n    private privConversationAuthFetchEventId: string;\r\n    private privConversationAuthentication: IAuthentication;\r\n    private privConversationRequestSession: ConversationRequestSession;\r\n    private privConnectionConfigPromise: Promise<IConnection> = undefined;\r\n    private privConnectionLoop: Promise<void>;\r\n    private terminateMessageLoop: boolean;\r\n    private privLastPartialUtteranceId: string;\r\n    private privConversationIsDisposed: boolean;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        conversationServiceConnector: ConversationTranslatorRecognizer) {\r\n\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, conversationServiceConnector);\r\n\r\n        this.privLastPartialUtteranceId = \"\";\r\n        this.privConversationServiceConnector = conversationServiceConnector;\r\n        this.privConversationAuthentication = authentication;\r\n        this.receiveMessageOverride = (): Promise<void> => this.receiveConversationMessageOverride();\r\n        this.recognizeOverride = (): Promise<void> => this.noOp();\r\n        this.postConnectImplOverride = (connection: Promise<IConnection>): Promise<IConnection> => this.conversationConnectImpl(connection);\r\n        this.configConnectionOverride = (): Promise<IConnection> => this.configConnection();\r\n        this.disconnectOverride = (): Promise<void> => this.privDisconnect();\r\n        this.privConversationRequestSession = new ConversationRequestSession(createNoDashGuid());\r\n        this.privConversationConnectionFactory = connectionFactory;\r\n        this.privConversationIsDisposed = false;\r\n    }\r\n\r\n    public isDisposed(): boolean {\r\n        return super.isDisposed() || this.privConversationIsDisposed;\r\n    }\r\n\r\n    public async dispose(reason?: string): Promise<void> {\r\n        this.privConversationIsDisposed = true;\r\n        if (this.privConnectionConfigPromise !== undefined) {\r\n            const connection: IConnection = await this.privConnectionConfigPromise;\r\n            await connection.dispose(reason);\r\n        }\r\n        await super.dispose(reason);\r\n    }\r\n\r\n    public async sendMessage(message: string): Promise<void> {\r\n        const connection: IConnection = await this.fetchConnection();\r\n        return connection.send(new ConversationConnectionMessage(\r\n            MessageType.Text,\r\n            message));\r\n    }\r\n\r\n    public async sendMessageAsync(message: string): Promise<void> {\r\n        const connection: IConnection = await this.fetchConnection();\r\n\r\n        await connection.send(new ConversationConnectionMessage(MessageType.Text, message));\r\n    }\r\n\r\n    protected privDisconnect(): Promise<void> {\r\n        if (this.terminateMessageLoop) {\r\n            return;\r\n        }\r\n        this.cancelRecognition(this.privConversationRequestSession.sessionId,\r\n            this.privConversationRequestSession.requestId,\r\n            CancellationReason.Error,\r\n            CancellationErrorCode.NoError,\r\n            \"Disconnecting\");\r\n\r\n        this.terminateMessageLoop = true;\r\n        return Promise.resolve();\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/require-await\r\n    protected async processTypeSpecificMessages(): Promise<boolean> {\r\n        return true;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        this.terminateMessageLoop = true;\r\n\r\n        const cancelEvent: ConversationTranslationCanceledEventArgs = new ConversationTranslationCanceledEventArgs(\r\n            cancellationReason,\r\n            error,\r\n            errorCode,\r\n            undefined,\r\n            sessionId);\r\n\r\n        try {\r\n            if (!!this.privConversationServiceConnector.canceled) {\r\n                this.privConversationServiceConnector.canceled(this.privConversationServiceConnector, cancelEvent);\r\n            }\r\n        } catch {\r\n            // continue on error\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Establishes a websocket connection to the end point.\r\n     */\r\n    protected async conversationConnectImpl(connection: Promise<IConnection>): Promise<IConnection> {\r\n        this.privConnectionLoop = this.startMessageLoop();\r\n        return connection;\r\n    }\r\n\r\n    /**\r\n     * Process incoming websocket messages\r\n     */\r\n    private async receiveConversationMessageOverride(): Promise<void> {\r\n        if (this.isDisposed() || this.terminateMessageLoop) {\r\n            return Promise.resolve();\r\n        }\r\n        // we won't rely on the cascading promises of the connection since we want to continually be available to receive messages\r\n        const communicationCustodian: Deferred<void> = new Deferred<void>();\r\n\r\n        try {\r\n            const connection: IConnection = await this.fetchConnection();\r\n            const message: ConversationConnectionMessage = await connection.read() as ConversationConnectionMessage;\r\n            if (this.isDisposed() || this.terminateMessageLoop) {\r\n                // We're done.\r\n                communicationCustodian.resolve();\r\n                return Promise.resolve();\r\n            }\r\n\r\n            if (!message) {\r\n                return this.receiveConversationMessageOverride();\r\n            }\r\n\r\n            const sessionId: string = this.privConversationRequestSession.sessionId;\r\n            const conversationMessageType: string = message.conversationMessageType.toLowerCase();\r\n            let sendFinal: boolean = false;\r\n\r\n            try {\r\n                switch (conversationMessageType) {\r\n                    case \"info\":\r\n                    case \"participant_command\":\r\n                    case \"command\":\r\n                        const commandPayload: CommandResponsePayload = CommandResponsePayload.fromJSON(message.textBody);\r\n                        switch (commandPayload.command.toLowerCase()) {\r\n\r\n                            /**\r\n                             * 'ParticpantList' is the first message sent to the user after the websocket connection has opened.\r\n                             * The consuming client must wait for this message to arrive\r\n                             * before starting to send their own data.\r\n                             */\r\n                            case \"participantlist\":\r\n\r\n                                const participantsPayload: IParticipantsListPayloadResponse = ParticipantsListPayloadResponse.fromJSON(message.textBody);\r\n\r\n                                const participantsResult: IInternalParticipant[] = participantsPayload.participants.map((p: IParticipantPayloadResponse): IInternalParticipant => {\r\n                                    const participant: IInternalParticipant = {\r\n                                        avatar: p.avatar,\r\n                                        displayName: p.nickname,\r\n                                        id: p.participantId,\r\n                                        isHost: p.ishost,\r\n                                        isMuted: p.ismuted,\r\n                                        isUsingTts: p.usetts,\r\n                                        preferredLanguage: p.locale\r\n                                    };\r\n                                    return participant;\r\n                                });\r\n\r\n                                if (!!this.privConversationServiceConnector.participantsListReceived) {\r\n                                    this.privConversationServiceConnector.participantsListReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantsListEventArgs(participantsPayload.roomid, participantsPayload.token,\r\n                                            participantsPayload.translateTo, participantsPayload.profanityFilter,\r\n                                            participantsPayload.roomProfanityFilter, participantsPayload.roomLocked,\r\n                                            participantsPayload.muteAll, participantsResult, sessionId));\r\n                                }\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetTranslateToLanguages' represents the list of languages being used in the Conversation by all users(?).\r\n                             * This is sent at the start of the Conversation\r\n                             */\r\n                            case \"settranslatetolanguages\":\r\n\r\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantAttributeEventArgs(commandPayload.participantId,\r\n                                            ConversationTranslatorCommandTypes.setTranslateToLanguages,\r\n                                            commandPayload.value, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetProfanityFiltering' lets the client set the level of profanity filtering.\r\n                             * If sent by the participant the setting will effect only their own profanity level.\r\n                             * If sent by the host, the setting will effect all participants including the host.\r\n                             * Note: the profanity filters differ from Speech Service (?): 'marked', 'raw', 'removed', 'tagged'\r\n                             */\r\n                            case \"setprofanityfiltering\":\r\n\r\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantAttributeEventArgs(commandPayload.participantId,\r\n                                            ConversationTranslatorCommandTypes.setProfanityFiltering,\r\n                                            commandPayload.value, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetMute' is sent if the participant has been muted by the host.\r\n                             * Check the 'participantId' to determine if the current user has been muted.\r\n                             */\r\n                            case \"setmute\":\r\n\r\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantAttributeEventArgs(commandPayload.participantId,\r\n                                            ConversationTranslatorCommandTypes.setMute,\r\n                                            commandPayload.value, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetMuteAll' is sent if the Conversation has been muted by the host.\r\n                             */\r\n                            case \"setmuteall\":\r\n\r\n                                if (!!this.privConversationServiceConnector.muteAllCommandReceived) {\r\n                                    this.privConversationServiceConnector.muteAllCommandReceived(this.privConversationServiceConnector,\r\n                                        new MuteAllEventArgs(commandPayload.value as boolean, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'RoomExpirationWarning' is sent towards the end of the Conversation session to give a timeout warning.\r\n                             */\r\n                            case \"roomexpirationwarning\":\r\n\r\n                                if (!!this.privConversationServiceConnector.conversationExpiration) {\r\n                                    this.privConversationServiceConnector.conversationExpiration(this.privConversationServiceConnector,\r\n                                        new ConversationExpirationEventArgs(commandPayload.value as number, this.privConversationRequestSession.sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetUseTts' is sent as a confirmation if the user requests TTS to be turned on or off.\r\n                             */\r\n                            case \"setusetts\":\r\n\r\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantAttributeEventArgs(commandPayload.participantId,\r\n                                            ConversationTranslatorCommandTypes.setUseTTS,\r\n                                            commandPayload.value, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'SetLockState' is set if the host has locked or unlocked the Conversation.\r\n                             */\r\n                            case \"setlockstate\":\r\n\r\n                                if (!!this.privConversationServiceConnector.lockRoomCommandReceived) {\r\n                                    this.privConversationServiceConnector.lockRoomCommandReceived(this.privConversationServiceConnector,\r\n                                        new LockRoomEventArgs(commandPayload.value as boolean, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'ChangeNickname' is received if a user changes their display name.\r\n                             * Any cached particpiants list should be updated to reflect the display name.\r\n                             */\r\n                            case \"changenickname\":\r\n\r\n                                if (!!this.privConversationServiceConnector.participantUpdateCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantUpdateCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantAttributeEventArgs(commandPayload.participantId,\r\n                                            ConversationTranslatorCommandTypes.changeNickname,\r\n                                            commandPayload.value, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'JoinSession' is sent when a user joins the Conversation.\r\n                             */\r\n                            case \"joinsession\":\r\n\r\n                                const joinParticipantPayload: ParticipantPayloadResponse = ParticipantPayloadResponse.fromJSON(message.textBody);\r\n\r\n                                const joiningParticipant: IInternalParticipant = {\r\n                                    avatar: joinParticipantPayload.avatar,\r\n                                    displayName: joinParticipantPayload.nickname,\r\n                                    id: joinParticipantPayload.participantId,\r\n                                    isHost: joinParticipantPayload.ishost,\r\n                                    isMuted: joinParticipantPayload.ismuted,\r\n                                    isUsingTts: joinParticipantPayload.usetts,\r\n                                    preferredLanguage: joinParticipantPayload.locale,\r\n                                };\r\n\r\n                                if (!!this.privConversationServiceConnector.participantJoinCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantJoinCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantEventArgs(\r\n                                            joiningParticipant,\r\n                                            sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'LeaveSession' is sent when a user leaves the Conversation'.\r\n                             */\r\n                            case \"leavesession\":\r\n\r\n                                const leavingParticipant: IInternalParticipant = {\r\n                                    id: commandPayload.participantId\r\n                                };\r\n\r\n                                if (!!this.privConversationServiceConnector.participantLeaveCommandReceived) {\r\n                                    this.privConversationServiceConnector.participantLeaveCommandReceived(this.privConversationServiceConnector,\r\n                                        new ParticipantEventArgs(leavingParticipant, sessionId));\r\n                                }\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * 'DisconnectSession' is sent when a user is disconnected from the session (e.g. network problem).\r\n                             * Check the 'ParticipantId' to check whether the message is for the current user.\r\n                             */\r\n                            case \"disconnectsession\":\r\n\r\n                                // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n                                const disconnectParticipant: IInternalParticipant = {\r\n                                    id: commandPayload.participantId\r\n                                };\r\n\r\n                                break;\r\n\r\n                            case \"token\":\r\n                                const token = new CognitiveTokenAuthentication(\r\n                                    (): Promise<string> => {\r\n                                        const authorizationToken = commandPayload.token;\r\n                                        return Promise.resolve(authorizationToken);\r\n                                    },\r\n                                    (): Promise<string> => {\r\n                                        const authorizationToken = commandPayload.token;\r\n                                        return Promise.resolve(authorizationToken);\r\n                                    });\r\n                                this.authentication = token;\r\n                                this.privConversationServiceConnector.onToken(token);\r\n\r\n                                break;\r\n\r\n                            /**\r\n                             * Message not recognized.\r\n                             */\r\n                            default:\r\n                                break;\r\n                        }\r\n                        break;\r\n\r\n                    /**\r\n                     * 'partial' (or 'hypothesis') represents a unfinalized speech message.\r\n                     */\r\n                    case \"partial\":\r\n\r\n                    /**\r\n                     * 'final' (or 'phrase') represents a finalized speech message.\r\n                     */\r\n                    case \"final\":\r\n\r\n                        const speechPayload: SpeechResponsePayload = SpeechResponsePayload.fromJSON(message.textBody);\r\n                        const conversationResultReason: ResultReason = (conversationMessageType === \"final\") ? ResultReason.TranslatedParticipantSpeech : ResultReason.TranslatingParticipantSpeech;\r\n\r\n                        const speechResult: ConversationTranslationResult = new ConversationTranslationResult(speechPayload.participantId,\r\n                            this.getTranslations(speechPayload.translations),\r\n                            speechPayload.language,\r\n                            speechPayload.id,\r\n                            conversationResultReason,\r\n                            speechPayload.recognition,\r\n                            undefined,\r\n                            undefined,\r\n                            message.textBody,\r\n                            undefined);\r\n\r\n                        if (speechPayload.isFinal) {\r\n                            // check the length, sometimes empty finals are returned\r\n                            if (speechResult.text !== undefined && speechResult.text.length > 0) {\r\n                                sendFinal = true;\r\n                            } else if (speechPayload.id === this.privLastPartialUtteranceId) {\r\n                                // send final as normal. We had a non-empty partial for this same utterance\r\n                                // so sending the empty final is important\r\n                                sendFinal = true;\r\n                            } else {\r\n                                // suppress unneeded final\r\n                            }\r\n\r\n                            if (sendFinal) {\r\n                                if (!!this.privConversationServiceConnector.translationReceived) {\r\n                                    this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector,\r\n                                        new ConversationReceivedTranslationEventArgs(ConversationTranslatorMessageTypes.final, speechResult, sessionId));\r\n                                }\r\n                            }\r\n                        } else if (speechResult.text !== undefined) {\r\n                            this.privLastPartialUtteranceId = speechPayload.id;\r\n                            if (!!this.privConversationServiceConnector.translationReceived) {\r\n                                this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector,\r\n                                    new ConversationReceivedTranslationEventArgs(ConversationTranslatorMessageTypes.partial, speechResult, sessionId));\r\n                            }\r\n                        }\r\n\r\n                        break;\r\n\r\n                    /**\r\n                     * \"translated_message\" is a text message or instant message (IM).\r\n                     */\r\n                    case \"translated_message\":\r\n\r\n                        const textPayload: TextResponsePayload = TextResponsePayload.fromJSON(message.textBody);\r\n                        // TODO: (Native parity) a result reason should be set based whether the participantId is ours or not\r\n\r\n                        const textResult: ConversationTranslationResult = new ConversationTranslationResult(textPayload.participantId,\r\n                            this.getTranslations(textPayload.translations),\r\n                            textPayload.language,\r\n                            undefined,\r\n                            undefined,\r\n                            textPayload.originalText,\r\n                            undefined,\r\n                            undefined,\r\n                            undefined,\r\n                            message.textBody,\r\n                            undefined);\r\n\r\n                        if (!!this.privConversationServiceConnector.translationReceived) {\r\n                            this.privConversationServiceConnector.translationReceived(this.privConversationServiceConnector,\r\n                                new ConversationReceivedTranslationEventArgs(ConversationTranslatorMessageTypes.instantMessage, textResult, sessionId));\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n                        // ignore any unsupported message types\r\n                        break;\r\n                }\r\n            } catch (e) {\r\n                // continue\r\n            }\r\n            return this.receiveConversationMessageOverride();\r\n        } catch (e) {\r\n            this.terminateMessageLoop = true;\r\n        }\r\n\r\n        return communicationCustodian.promise;\r\n    }\r\n\r\n    private async startMessageLoop(): Promise<void> {\r\n        if (this.isDisposed()) {\r\n            return Promise.resolve();\r\n        }\r\n        this.terminateMessageLoop = false;\r\n\r\n        const messageRetrievalPromise = this.receiveConversationMessageOverride();\r\n\r\n        try {\r\n            const r = await messageRetrievalPromise;\r\n            return r;\r\n        } catch (error) {\r\n            this.cancelRecognition(this.privRequestSession ? this.privRequestSession.sessionId : \"\", this.privRequestSession ? this.privRequestSession.requestId : \"\", CancellationReason.Error, CancellationErrorCode.RuntimeError, error as string);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    // Takes an established websocket connection to the endpoint\r\n    private configConnection(): Promise<IConnection> {\r\n        if (this.isDisposed()) {\r\n            return Promise.resolve<IConnection>(undefined);\r\n        }\r\n        if (this.privConnectionConfigPromise !== undefined) {\r\n            return this.privConnectionConfigPromise.then((connection: IConnection): Promise<IConnection> => {\r\n                if (connection.state() === ConnectionState.Disconnected) {\r\n                    this.privConnectionId = null;\r\n                    this.privConnectionConfigPromise = undefined;\r\n                    return this.configConnection();\r\n                }\r\n                return this.privConnectionConfigPromise;\r\n            }, (): Promise<IConnection> => {\r\n                this.privConnectionId = null;\r\n                this.privConnectionConfigPromise = undefined;\r\n                return this.configConnection();\r\n            });\r\n        }\r\n        if (this.terminateMessageLoop) {\r\n            return Promise.resolve<IConnection>(undefined);\r\n        }\r\n\r\n        this.privConnectionConfigPromise = this.connectImpl().then((connection: IConnection): IConnection => connection);\r\n\r\n        return this.privConnectionConfigPromise;\r\n    }\r\n\r\n    private getTranslations(serviceResultTranslations: ITranslationResponsePayload[]): Translations {\r\n        let translations: Translations;\r\n\r\n        if (undefined !== serviceResultTranslations) {\r\n            translations = new Translations();\r\n            for (const translation of serviceResultTranslations) {\r\n                translations.set(translation.lang, translation.translation);\r\n            }\r\n        }\r\n\r\n        return translations;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nexport enum ParticipantChangedReason {\r\n    /** Participant has joined the conversation. */\r\n    JoinedConversation,\r\n\r\n    /** Participant has left the conversation. This could be voluntary, or involuntary\r\n     * (e.g. they are experiencing networking issues).\r\n     */\r\n    LeftConversation,\r\n\r\n    /** The participants' state has changed (e.g. they became muted, changed their nickname). */\r\n    Updated\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ReplayableAudioNode } from \"../common.browser/Exports.js\";\r\nimport {\r\n    DeferralMap,\r\n    Deferred,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IConnection,\r\n    MessageType,\r\n} from \"../common/Exports.js\";\r\nimport { AudioStreamFormatImpl } from \"../sdk/Audio/AudioStreamFormat.js\";\r\nimport { SpeakerRecognitionModel } from \"../sdk/SpeakerRecognitionModel.js\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    VoiceProfileClient,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n    SessionEventArgs,\r\n    VoiceProfileEnrollmentResult,\r\n    VoiceProfilePhraseResult,\r\n    VoiceProfileResult,\r\n    VoiceProfileType,\r\n    VoiceProfile\r\n} from \"../sdk/Exports.js\";\r\nimport {\r\n    CancellationErrorCodePropertyName,\r\n    EnrollmentResponse,\r\n    IProfile,\r\n    ISpeechConfigAudioDevice,\r\n    ProfilePhraseResponse,\r\n    ProfileResponse,\r\n    ServiceRecognizerBase,\r\n} from \"./Exports.js\";\r\nimport { IAuthentication } from \"./IAuthentication.js\";\r\nimport { IConnectionFactory } from \"./IConnectionFactory.js\";\r\nimport { RecognizerConfig } from \"./RecognizerConfig.js\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal.js\";\r\n\r\ninterface CreateProfile {\r\n    scenario: string;\r\n    locale: string;\r\n    number: string;\r\n}\r\n\r\ninterface PhraseRequest {\r\n    scenario: string;\r\n    locale: string;\r\n}\r\n\r\ninterface SpeakerContext {\r\n    scenario: string;\r\n    profileIds: string[];\r\n    features: {\r\n        interimResult: string;\r\n        progressiveDetection: string;\r\n    };\r\n}\r\n\r\n// eslint-disable-next-line max-classes-per-file\r\nexport class VoiceServiceRecognizer extends ServiceRecognizerBase {\r\n    private privSpeakerAudioSource: IAudioSource;\r\n    private privDeferralMap: DeferralMap = new DeferralMap();\r\n    private privExpectedProfileId: string;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        recognizer: VoiceProfileClient) {\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\r\n        this.privSpeakerAudioSource = audioSource;\r\n        this.sendPrePayloadJSONOverride = (): Promise<void> => this.noOp();\r\n    }\r\n\r\n    public set SpeakerAudioSource(audioSource: IAudioSource) {\r\n        this.privSpeakerAudioSource = audioSource;\r\n    }\r\n\r\n    protected processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n\r\n        let processed: boolean = false;\r\n\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        if (connectionMessage.messageType === MessageType.Text) {\r\n            resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, connectionMessage.textBody);\r\n        }\r\n\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            // Profile management response for create, fetch, delete, reset\r\n            case \"speaker.profiles\":\r\n                const response: ProfileResponse = JSON.parse(connectionMessage.textBody) as ProfileResponse;\r\n                switch (response.operation.toLowerCase()) {\r\n                    case \"create\":\r\n                        this.handleCreateResponse(response, connectionMessage.requestId);\r\n                        break;\r\n\r\n                    case \"delete\":\r\n                    case \"reset\":\r\n                        this.handleResultResponse(response, connectionMessage.requestId);\r\n                        break;\r\n\r\n                    case \"fetch\":\r\n                        const enrollmentResponse: EnrollmentResponse = JSON.parse(connectionMessage.textBody) as EnrollmentResponse;\r\n                        this.handleFetchResponse(enrollmentResponse, connectionMessage.requestId);\r\n                        break;\r\n\r\n                    default:\r\n                        break;\r\n                }\r\n                processed = true;\r\n                break;\r\n            // Activation and authorization phrase response\r\n            case \"speaker.phrases\":\r\n                const phraseResponse: ProfilePhraseResponse = JSON.parse(connectionMessage.textBody) as ProfilePhraseResponse;\r\n                this.handlePhrasesResponse(phraseResponse, connectionMessage.requestId);\r\n                processed = true;\r\n                break;\r\n            // Enrollment response\r\n            case \"speaker.profile.enrollment\":\r\n                const enrollmentResponse: EnrollmentResponse = JSON.parse(connectionMessage.textBody) as EnrollmentResponse;\r\n                const result: VoiceProfileEnrollmentResult = new VoiceProfileEnrollmentResult(\r\n                    this.enrollmentReasonFrom(!!enrollmentResponse.enrollment ? enrollmentResponse.enrollment.enrollmentStatus : enrollmentResponse.status.statusCode),\r\n                    !!enrollmentResponse.enrollment ? JSON.stringify(enrollmentResponse.enrollment) : undefined,\r\n                    enrollmentResponse.status.reason,\r\n                    );\r\n                if (!!this.privDeferralMap.getId(connectionMessage.requestId)) {\r\n                    this.privDeferralMap.complete<VoiceProfileEnrollmentResult>(connectionMessage.requestId, result);\r\n                }\r\n                this.privRequestSession.onSpeechEnded();\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        const defferal = new Deferred<boolean>();\r\n        defferal.resolve(processed);\r\n        return defferal.promise;\r\n    }\r\n\r\n    // Cancels recognition.\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n\r\n        const properties: PropertyCollection = new PropertyCollection();\r\n        // const enrollmentResponse: EnrollmentResponse = JSON.parse(connectionMessage.textBody) as EnrollmentResponse;\r\n        properties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[errorCode]);\r\n\r\n            const result: VoiceProfileEnrollmentResult = new VoiceProfileEnrollmentResult(\r\n                ResultReason.Canceled,\r\n                error,\r\n                error,\r\n                );\r\n            if (!!this.privDeferralMap.getId(requestId)) {\r\n                this.privDeferralMap.complete<VoiceProfileEnrollmentResult>(requestId, result);\r\n            }\r\n    }\r\n\r\n    public async createProfile(profileType: VoiceProfileType, locale: string): Promise<string[]> {\r\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\r\n        this.voiceProfileType = profileType.toString();\r\n        const conPromise: Promise<IConnection> = this.connectImpl();\r\n        try {\r\n            const createProfileDeferral = new Deferred<string[]>();\r\n            await conPromise;\r\n            await this.sendCreateProfile(createProfileDeferral, profileType, locale);\r\n            void this.receiveMessage();\r\n            return createProfileDeferral.promise;\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    public async resetProfile(profile: VoiceProfile): Promise<VoiceProfileResult> {\r\n        this.voiceProfileType = profile.profileType.toString();\r\n        return this.sendCommonRequest<VoiceProfileResult>(\"reset\", profile.profileType, profile);\r\n    }\r\n\r\n    public async deleteProfile(profile: VoiceProfile): Promise<VoiceProfileResult> {\r\n        this.voiceProfileType = profile.profileType.toString();\r\n        return this.sendCommonRequest<VoiceProfileResult>(\"delete\", profile.profileType, profile);\r\n    }\r\n\r\n    public async retrieveEnrollmentResult(profile: VoiceProfile): Promise<VoiceProfileEnrollmentResult> {\r\n        this.voiceProfileType = profile.profileType.toString();\r\n        this.privExpectedProfileId = profile.profileId;\r\n        return this.sendCommonRequest<VoiceProfileEnrollmentResult>(\"fetch\", profile.profileType, profile);\r\n    }\r\n\r\n    public async getAllProfiles(profileType: VoiceProfileType): Promise<VoiceProfileEnrollmentResult[]> {\r\n        this.voiceProfileType = profileType.toString();\r\n        return this.sendCommonRequest<VoiceProfileEnrollmentResult[]>(\"fetch\", profileType);\r\n    }\r\n\r\n    public async getActivationPhrases(profileType: VoiceProfileType, lang: string): Promise<VoiceProfilePhraseResult> {\r\n        this.voiceProfileType = profileType.toString();\r\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\r\n        const conPromise: Promise<IConnection> = this.connectImpl();\r\n        try {\r\n            const getPhrasesDeferral = new Deferred<VoiceProfilePhraseResult>();\r\n            await conPromise;\r\n            await this.sendPhrasesRequest(getPhrasesDeferral, profileType, lang);\r\n            void this.receiveMessage();\r\n            return getPhrasesDeferral.promise;\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    public async enrollProfile(profile: VoiceProfile): Promise<VoiceProfileEnrollmentResult> {\r\n        this.voiceProfileType = profile.profileType.toString();\r\n        const enrollmentDeferral = new Deferred<VoiceProfileEnrollmentResult>();\r\n        this.privRequestSession.startNewRecognition();\r\n        this.privRequestSession.listenForServiceTelemetry(this.privSpeakerAudioSource.events);\r\n\r\n        this.privRecognizerConfig.parameters.setProperty(PropertyId.Speech_SessionId, this.privRequestSession.sessionId);\r\n\r\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\r\n        const conPromise: Promise<IConnection> = this.connectImpl();\r\n\r\n        const preAudioPromise: Promise<void> = this.sendPreAudioMessages(profile, enrollmentDeferral);\r\n\r\n        const node: IAudioStreamNode = await this.privSpeakerAudioSource.attach(this.privRequestSession.audioNodeId);\r\n        const format: AudioStreamFormatImpl = await this.privSpeakerAudioSource.format;\r\n        const deviceInfo: ISpeechConfigAudioDevice = await this.privSpeakerAudioSource.deviceInfo;\r\n\r\n        const audioNode = new ReplayableAudioNode(node, format.avgBytesPerSec);\r\n        await this.privRequestSession.onAudioSourceAttachCompleted(audioNode, false);\r\n\r\n        this.privRecognizerConfig.SpeechServiceConfig.Context.audio = { source: deviceInfo };\r\n\r\n        try {\r\n            await conPromise;\r\n            await preAudioPromise;\r\n        } catch (err) {\r\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.ConnectionFailure, err as string);\r\n        }\r\n\r\n        const sessionStartEventArgs: SessionEventArgs = new SessionEventArgs(this.privRequestSession.sessionId);\r\n\r\n        if (!!this.privRecognizer.sessionStarted) {\r\n            this.privRecognizer.sessionStarted(this.privRecognizer, sessionStartEventArgs);\r\n        }\r\n\r\n        void this.receiveMessage();\r\n        const audioSendPromise = this.sendAudio(audioNode);\r\n\r\n        // /* eslint-disable no-empty */\r\n        audioSendPromise.then((): void => { /* add? return true;*/ }, (error: string): void => {\r\n            this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, CancellationReason.Error, CancellationErrorCode.RuntimeError, error);\r\n        });\r\n\r\n        return enrollmentDeferral.promise;\r\n    }\r\n\r\n    private async sendPreAudioMessages(profile: VoiceProfile, enrollmentDeferral: Deferred<VoiceProfileEnrollmentResult>): Promise<void> {\r\n        const connection: IConnection = await this.fetchConnection();\r\n        this.privRequestSession.onSpeechContext();\r\n        this.privDeferralMap.add<VoiceProfileEnrollmentResult>(this.privRequestSession.requestId, enrollmentDeferral);\r\n        await this.sendBaseRequest(connection, \"enroll\", this.scenarioFrom(profile.profileType), profile);\r\n    }\r\n\r\n    private async sendPhrasesRequest(getPhrasesDeferral: Deferred<VoiceProfilePhraseResult>, profileType: VoiceProfileType, locale: string): Promise<void> {\r\n        const connection: IConnection = await this.fetchConnection();\r\n        this.privRequestSession.onSpeechContext();\r\n        this.privDeferralMap.add<VoiceProfilePhraseResult>(this.privRequestSession.requestId, getPhrasesDeferral);\r\n        const scenario = this.scenarioFrom(profileType);\r\n\r\n        const profileCreateRequest: PhraseRequest = {\r\n            locale,\r\n            scenario,\r\n        };\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"speaker.profile.phrases\",\r\n            this.privRequestSession.requestId,\r\n            \"application/json; charset=utf-8\",\r\n            JSON.stringify(profileCreateRequest)));\r\n    }\r\n\r\n    private async sendCreateProfile(createProfileDeferral: Deferred<string[]>, profileType: VoiceProfileType, locale: string): Promise<void> {\r\n\r\n        const connection: IConnection = await this.fetchConnection();\r\n        this.privRequestSession.onSpeechContext();\r\n        this.privDeferralMap.add<string[]>(this.privRequestSession.requestId, createProfileDeferral);\r\n        const scenario = profileType === VoiceProfileType.TextIndependentIdentification ? \"TextIndependentIdentification\" :\r\n            profileType === VoiceProfileType.TextIndependentVerification ? \"TextIndependentVerification\" : \"TextDependentVerification\";\r\n\r\n        const profileCreateRequest: CreateProfile = {\r\n            locale,\r\n            number: \"1\",\r\n            scenario,\r\n        };\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            \"speaker.profile.create\",\r\n            this.privRequestSession.requestId,\r\n            \"application/json; charset=utf-8\",\r\n            JSON.stringify(profileCreateRequest)));\r\n    }\r\n\r\n    private async sendCommonRequest<T>(operation: string, profileType: VoiceProfileType, profile: VoiceProfile = undefined): Promise<T> {\r\n        // Start the connection to the service. The promise this will create is stored and will be used by configureConnection().\r\n        const conPromise: Promise<IConnection> = this.connectImpl();\r\n        try {\r\n            const deferral = new Deferred<T>();\r\n            this.privRequestSession.onSpeechContext();\r\n            await conPromise;\r\n            const connection: IConnection = await this.fetchConnection();\r\n            this.privDeferralMap.add<T>(this.privRequestSession.requestId, deferral);\r\n            await this.sendBaseRequest(connection, operation, this.scenarioFrom(profileType), profile);\r\n            void this.receiveMessage();\r\n            return deferral.promise;\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    private async sendBaseRequest(connection: IConnection, operation: string, scenario: string, profile: VoiceProfile): Promise<void> {\r\n        const profileRequest: { maxPageSize?: number; profileIds?: string[]; scenario: string } = {\r\n            scenario\r\n        };\r\n        if (!!profile) {\r\n            profileRequest.profileIds = [ profile.profileId ];\r\n        } else {\r\n            profileRequest.maxPageSize = -1;\r\n        }\r\n        return connection.send(new SpeechConnectionMessage(\r\n            MessageType.Text,\r\n            `speaker.profile.${operation}`,\r\n            this.privRequestSession.requestId,\r\n            \"application/json; charset=utf-8\",\r\n            JSON.stringify(profileRequest)));\r\n    }\r\n\r\n    private extractSpeakerContext(model: SpeakerRecognitionModel): SpeakerContext {\r\n        return {\r\n            features: {\r\n                interimResult: \"enabled\",\r\n                progressiveDetection: \"disabled\",\r\n            },\r\n            profileIds: model.profileIds,\r\n            scenario: model.scenario,\r\n        };\r\n    }\r\n\r\n    private handlePhrasesResponse(response: ProfilePhraseResponse, requestId: string): void {\r\n        if (!!this.privDeferralMap.getId(requestId)) {\r\n            if (response.status.statusCode.toLowerCase() !== \"success\") {\r\n                const reason: ResultReason = ResultReason.Canceled;\r\n                const result = new VoiceProfilePhraseResult(reason, response.status.statusCode, response.passPhraseType, []);\r\n                this.privDeferralMap.complete<VoiceProfilePhraseResult>(requestId, result);\r\n            } else if (!!response.phrases && response.phrases.length > 0) {\r\n                const reason: ResultReason = ResultReason.EnrollingVoiceProfile;\r\n                const result = new VoiceProfilePhraseResult(reason, response.status.statusCode, response.passPhraseType, response.phrases);\r\n                this.privDeferralMap.complete<VoiceProfilePhraseResult>(requestId, result);\r\n            } else {\r\n                throw new Error(\"Voice Profile get activation phrases failed, no phrases received\");\r\n            }\r\n        } else {\r\n            throw new Error(`Voice Profile get activation phrases request for requestID ${requestId} not found`);\r\n        }\r\n    }\r\n\r\n    private handleCreateResponse(response: ProfileResponse, requestId: string): void {\r\n        if (!!response.profiles && response.profiles.length > 0) {\r\n            if (!!this.privDeferralMap.getId(requestId)) {\r\n                const profileIds: string[] = response.profiles.map((profile: IProfile): string => profile.profileId);\r\n                this.privDeferralMap.complete<string[]>(requestId, profileIds);\r\n            } else {\r\n                throw new Error(`Voice Profile create request for requestID ${requestId} not found`);\r\n            }\r\n        } else {\r\n            throw new Error(\"Voice Profile create failed, no profile id received\");\r\n        }\r\n    }\r\n\r\n    private handleResultResponse(response: ProfileResponse, requestId: string): void {\r\n        if (!!this.privDeferralMap.getId(requestId)) {\r\n            const successReason: ResultReason = response.operation.toLowerCase() === \"delete\" ? ResultReason.DeletedVoiceProfile : ResultReason.ResetVoiceProfile;\r\n            const reason: ResultReason = response.status.statusCode.toLowerCase() === \"success\" ? successReason : ResultReason.Canceled;\r\n            const result = new VoiceProfileResult(reason, `statusCode: ${response.status.statusCode}, errorDetails: ${response.status.reason}`);\r\n            this.privDeferralMap.complete<VoiceProfileResult>(requestId, result);\r\n        } else {\r\n            throw new Error(`Voice Profile create request for requestID ${requestId} not found`);\r\n        }\r\n    }\r\n\r\n    private handleFetchResponse(enrollmentResponse: EnrollmentResponse, requestId: string): void {\r\n        if (!!this.privDeferralMap.getId(requestId) && !!enrollmentResponse.profiles[0]) {\r\n            if (!!this.privExpectedProfileId && enrollmentResponse.profiles.length === 1 && enrollmentResponse.profiles[0].profileId === this.privExpectedProfileId) {\r\n                this.privExpectedProfileId = undefined;\r\n                const profileInfo: IProfile = enrollmentResponse.profiles[0];\r\n                const result: VoiceProfileEnrollmentResult = new VoiceProfileEnrollmentResult(\r\n                    this.enrollmentReasonFrom(profileInfo.enrollmentStatus),\r\n                    JSON.stringify(profileInfo),\r\n                    enrollmentResponse.status.reason,\r\n                    );\r\n                this.privDeferralMap.complete<VoiceProfileEnrollmentResult>(requestId, result);\r\n            } else if (enrollmentResponse.profiles.length > 0) {\r\n                const iProfiles: IProfile[] = enrollmentResponse.profiles;\r\n                const profileResults: VoiceProfileEnrollmentResult[] = [];\r\n                for (const profile of iProfiles) {\r\n                    profileResults.push( new VoiceProfileEnrollmentResult(\r\n                        this.enrollmentReasonFrom(profile.enrollmentStatus),\r\n                        JSON.stringify(profile),\r\n                        enrollmentResponse.status.reason,\r\n                    ));\r\n                }\r\n                this.privDeferralMap.complete<VoiceProfileEnrollmentResult[]>(requestId, profileResults);\r\n            }\r\n        } else {\r\n            throw new Error(`Voice Profile fetch request for requestID ${requestId} not found`);\r\n        }\r\n    }\r\n\r\n    private enrollmentReasonFrom(statusCode: string): ResultReason {\r\n        switch (statusCode.toLowerCase()) {\r\n            case \"enrolled\":\r\n                return ResultReason.EnrolledVoiceProfile;\r\n            case \"invalidlocale\":\r\n            case \"invalidphrase\":\r\n            case \"invalidaudioformat\":\r\n            case \"invalidscenario\":\r\n            case \"invalidprofilecount\":\r\n            case \"invalidoperation\":\r\n            case \"audiotooshort\":\r\n            case \"audiotoolong\":\r\n            case \"toomanyenrollments\":\r\n            case \"storageconflict\":\r\n            case \"profilenotfound\":\r\n            case \"incompatibleprofiles\":\r\n            case \"incompleteenrollment\":\r\n                return ResultReason.Canceled;\r\n            default:\r\n                return ResultReason.EnrollingVoiceProfile;\r\n        }\r\n    }\r\n\r\n    private scenarioFrom(profileType: VoiceProfileType): string {\r\n        return profileType === VoiceProfileType.TextIndependentIdentification ? \"TextIndependentIdentification\" :\r\n            profileType === VoiceProfileType.TextIndependentVerification ? \"TextIndependentVerification\" : \"TextDependentVerification\";\r\n    }\r\n}\r\n","import { IAudioSource } from \"../common/Exports.js\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    OutputFormat,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    Recognizer,\r\n    ResultReason,\r\n    SpeechRecognitionResult\r\n} from \"../sdk/Exports.js\";\r\nimport {\r\n    DetailedSpeechPhrase,\r\n    EnumTranslation,\r\n    IAuthentication,\r\n    IConnectionFactory,\r\n    OutputFormatPropertyName,\r\n    RecognitionStatus,\r\n    RecognizerConfig,\r\n    ServiceRecognizerBase,\r\n    SimpleSpeechPhrase,\r\n    SpeechHypothesis\r\n} from \"./Exports.js\";\r\nimport { SpeechConnectionMessage } from \"./SpeechConnectionMessage.Internal.js\";\r\n\r\nexport class ConversationServiceRecognizer extends ServiceRecognizerBase {\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: IConnectionFactory,\r\n        audioSource: IAudioSource,\r\n        recognizerConfig: RecognizerConfig,\r\n        recognizer: Recognizer) {\r\n        super(authentication, connectionFactory, audioSource, recognizerConfig, recognizer);\r\n        this.handleSpeechPhraseMessage = async (textBody: string): Promise<void> => this.handleSpeechPhrase(textBody);\r\n        this.handleSpeechHypothesisMessage = (textBody: string): void => this.handleSpeechHypothesis(textBody);\r\n    }\r\n\r\n    protected processTypeSpecificMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n        void connectionMessage;\r\n        return;\r\n    }\r\n\r\n    protected handleRecognizedCallback(result: SpeechRecognitionResult, offset: number, sessionId: string): void {\r\n        void result;\r\n        void offset;\r\n        void sessionId;\r\n        return;\r\n    }\r\n\r\n    protected handleRecognizingCallback(result: SpeechRecognitionResult, duration: number, sessionId: string): void {\r\n        void result;\r\n        void duration;\r\n        void sessionId;\r\n        return;\r\n    }\r\n\r\n    protected async processSpeechMessages(connectionMessage: SpeechConnectionMessage): Promise<boolean> {\r\n        let processed: boolean = false;\r\n        switch (connectionMessage.path.toLowerCase()) {\r\n            case \"speech.hypothesis\":\r\n            case \"speech.fragment\":\r\n                if (!!this.handleSpeechHypothesisMessage) {\r\n                    this.handleSpeechHypothesisMessage(connectionMessage.textBody);\r\n                }\r\n                processed = true;\r\n                break;\r\n            case \"speech.phrase\":\r\n                if (!!this.handleSpeechPhraseMessage) {\r\n                    await this.handleSpeechPhraseMessage(connectionMessage.textBody);\r\n                }\r\n                processed = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return processed;\r\n    }\r\n\r\n    protected cancelRecognition(\r\n        sessionId: string,\r\n        requestId: string,\r\n        cancellationReason: CancellationReason,\r\n        errorCode: CancellationErrorCode,\r\n        error: string): void {\r\n        // Implementing to allow inheritance\r\n        void sessionId;\r\n        void requestId;\r\n        void cancellationReason;\r\n        void errorCode;\r\n        void error;\r\n    }\r\n\r\n    protected async handleSpeechPhrase(textBody: string): Promise<void> {\r\n\r\n        const simple: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(textBody, this.privRequestSession.currentTurnAudioOffset);\r\n        const resultReason: ResultReason = EnumTranslation.implTranslateRecognitionResult(simple.RecognitionStatus);\r\n        let result: SpeechRecognitionResult;\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, textBody);\r\n\r\n        this.privRequestSession.onPhraseRecognized(simple.Offset + simple.Duration);\r\n\r\n        if (ResultReason.Canceled === resultReason) {\r\n            const cancelReason: CancellationReason = EnumTranslation.implTranslateCancelResult(simple.RecognitionStatus);\r\n            const cancellationErrorCode: CancellationErrorCode = EnumTranslation.implTranslateCancelErrorCode(simple.RecognitionStatus);\r\n\r\n            await this.cancelRecognitionLocal(\r\n                cancelReason,\r\n                cancellationErrorCode,\r\n                EnumTranslation.implTranslateErrorDetails(cancellationErrorCode));\r\n\r\n        } else {\r\n            if (simple.RecognitionStatus !== RecognitionStatus.EndOfDictation) {\r\n                if (this.privRecognizerConfig.parameters.getProperty(OutputFormatPropertyName) === OutputFormat[OutputFormat.Simple]) {\r\n                    result = new SpeechRecognitionResult(\r\n                        this.privRequestSession.requestId,\r\n                        resultReason,\r\n                        simple.DisplayText,\r\n                        simple.Duration,\r\n                        simple.Offset,\r\n                        simple.Language,\r\n                        simple.LanguageDetectionConfidence,\r\n                        simple.SpeakerId,\r\n                        undefined,\r\n                        simple.asJson(),\r\n                        resultProps);\r\n                } else {\r\n                    const detailed: DetailedSpeechPhrase = DetailedSpeechPhrase.fromJSON(textBody, this.privRequestSession.currentTurnAudioOffset);\r\n\r\n                    result = new SpeechRecognitionResult(\r\n                        this.privRequestSession.requestId,\r\n                        resultReason,\r\n                        detailed.Text,\r\n                        detailed.Duration,\r\n                        detailed.Offset,\r\n                        detailed.Language,\r\n                        detailed.LanguageDetectionConfidence,\r\n                        detailed.SpeakerId,\r\n                        undefined,\r\n                        detailed.asJson(),\r\n                        resultProps);\r\n                }\r\n\r\n                this.handleRecognizedCallback(result, result.offset, this.privRequestSession.sessionId);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected handleSpeechHypothesis(textBody: string): void {\r\n        const hypothesis: SpeechHypothesis = SpeechHypothesis.fromJSON(textBody, this.privRequestSession.currentTurnAudioOffset);\r\n        const resultProps: PropertyCollection = new PropertyCollection();\r\n        resultProps.setProperty(PropertyId.SpeechServiceResponse_JsonResult, textBody);\r\n\r\n        const result = new SpeechRecognitionResult(\r\n            this.privRequestSession.requestId,\r\n            ResultReason.RecognizingSpeech,\r\n            hypothesis.Text,\r\n            hypothesis.Duration,\r\n            hypothesis.Offset,\r\n            hypothesis.Language,\r\n            hypothesis.LanguageDetectionConfidence,\r\n            hypothesis.SpeakerId,\r\n            undefined,\r\n            hypothesis.asJson(),\r\n            resultProps);\r\n\r\n        this.privRequestSession.onHypothesis(hypothesis.Offset);\r\n\r\n        this.handleRecognizingCallback(result, hypothesis.Duration, this.privRequestSession.sessionId);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SpeechSynthesisBoundaryType } from \"./SpeechSynthesisBoundaryType.js\";\r\n\r\n/**\r\n * Defines contents of speech synthesis word boundary event.\r\n * @class SpeechSynthesisWordBoundaryEventArgs\r\n * Added in version 1.11.0\r\n */\r\nexport class SpeechSynthesisWordBoundaryEventArgs {\r\n    private readonly privAudioOffset: number;\r\n    private readonly privDuration: number;\r\n    private readonly privText: string;\r\n    private readonly privWordLength: number;\r\n    private readonly privTextOffset: number;\r\n    private readonly privBoundaryType: SpeechSynthesisBoundaryType;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} audioOffset - The audio offset.\r\n     * @param {number} duration - The audio duration.\r\n     * @param {string} text - The text.\r\n     * @param {number} wordLength - The length of the word.\r\n     * @param {number} textOffset - The text offset.\r\n     * @param {SpeechSynthesisBoundaryType} boundaryType - The boundary type\r\n     */\r\n    public constructor(audioOffset: number, duration: number, text: string, wordLength: number,\r\n                       textOffset: number, boundaryType: SpeechSynthesisBoundaryType) {\r\n        this.privAudioOffset = audioOffset;\r\n        this.privDuration = duration;\r\n        this.privText = text;\r\n        this.privWordLength = wordLength;\r\n        this.privTextOffset = textOffset;\r\n        this.privBoundaryType = boundaryType;\r\n    }\r\n\r\n    /**\r\n     * Specifies the audio offset.\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.audioOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the audio offset.\r\n     */\r\n    public get audioOffset(): number {\r\n        return this.privAudioOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the duration, in ticks (100 nanoseconds).\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.duration\r\n     * @function\r\n     * @public\r\n     * @returns {number} Duration in 100 nanosecond increments.\r\n     */\r\n    public get duration(): number {\r\n        return this.privDuration;\r\n    }\r\n\r\n    /**\r\n     * Specifies the text of the word boundary event.\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.text\r\n     * @function\r\n     * @public\r\n     * @returns {string} the text.\r\n     */\r\n    public get text(): string {\r\n        return this.privText;\r\n    }\r\n\r\n    /**\r\n     * Specifies the word length\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.wordLength\r\n     * @function\r\n     * @public\r\n     * @returns {number} the word length\r\n     */\r\n    public get wordLength(): number {\r\n        return this.privWordLength;\r\n    }\r\n\r\n    /**\r\n     * Specifies the text offset.\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.textOffset\r\n     * @function\r\n     * @public\r\n     * @returns {number} the text offset.\r\n     */\r\n    public get textOffset(): number {\r\n        return this.privTextOffset;\r\n    }\r\n\r\n    /**\r\n     * Specifies the boundary type.\r\n     * @member SpeechSynthesisWordBoundaryEventArgs.prototype.boundaryType\r\n     * @function\r\n     * @public\r\n     * @returns {SpeechSynthesisBoundaryType} the boundary type.\r\n     */\r\n    public get boundaryType(): SpeechSynthesisBoundaryType {\r\n        return this.privBoundaryType;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n/**\r\n * An abstract base class that defines callback methods (write() and close()) for\r\n * custom audio output streams).\r\n * @class PushAudioOutputStreamCallback\r\n */\r\nexport abstract class PushAudioOutputStreamCallback {\r\n\r\n    /**\r\n     * Writes audio data into the data buffer.\r\n     * @member PushAudioOutputStreamCallback.prototype.write\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The byte array that stores the audio data to write.\r\n     */\r\n    public abstract write(dataBuffer: ArrayBuffer): void;\r\n\r\n    /**\r\n     * Closes the audio output stream.\r\n     * @member PushAudioOutputStreamCallback.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport class HeaderNames {\r\n    public static AuthKey: string = \"Ocp-Apim-Subscription-Key\";\r\n    public static Authorization: string = \"Authorization\";\r\n    public static SpIDAuthKey: string = \"Apim-Subscription-Id\";\r\n    public static ConnectionId: string = \"X-ConnectionId\";\r\n    public static ContentType: string = \"Content-Type\";\r\n    public static CustomCommandsAppId: string = \"X-CommandsAppId\";\r\n    public static Path: string = \"Path\";\r\n    public static RequestId: string = \"X-RequestId\";\r\n    public static RequestStreamId: string = \"X-StreamId\";\r\n    public static RequestTimestamp: string = \"X-Timestamp\";\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\nimport { AgentConfig } from \"./src/common.speech/Exports.js\";\r\n\r\n// Note: this instantiation ensures the above import isn't\r\n// removed on compile. The import being absent causes an error on running\r\nvoid new AgentConfig();\r\n\r\n// Speech SDK API\r\nexport * from \"./src/sdk/Exports.js\";\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IAudioDestination } from \"../common/Exports.js\";\r\nimport {\r\n    ResultReason,\r\n    SpeechSynthesisBookmarkEventArgs,\r\n    SpeechSynthesisEventArgs,\r\n    SpeechSynthesisResult,\r\n    SpeechSynthesisVisemeEventArgs,\r\n    SpeechSynthesisWordBoundaryEventArgs,\r\n    SpeechSynthesizer,\r\n    Synthesizer,\r\n} from \"../sdk/Exports.js\";\r\nimport {\r\n    IAuthentication,\r\n    ISynthesisConnectionFactory,\r\n    SynthesisAdapterBase,\r\n    SynthesizerConfig\r\n} from \"./Exports.js\";\r\n\r\nexport class SpeechSynthesisAdapter extends SynthesisAdapterBase {\r\n    private privSpeechSynthesizer: SpeechSynthesizer;\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: ISynthesisConnectionFactory,\r\n        synthesizerConfig: SynthesizerConfig,\r\n        speechSynthesizer: SpeechSynthesizer,\r\n        audioDestination: IAudioDestination) {\r\n            super(authentication, connectionFactory, synthesizerConfig, audioDestination);\r\n            this.privSpeechSynthesizer = speechSynthesizer;\r\n            this.privSynthesizer = speechSynthesizer as Synthesizer;\r\n        }\r\n\r\n    protected setSynthesisContextSynthesisSection(): void {\r\n        this.privSynthesisContext.setSynthesisSection(this.privSpeechSynthesizer);\r\n    }\r\n\r\n    protected onSynthesisStarted(requestId: string): void {\r\n        const synthesisStartEventArgs: SpeechSynthesisEventArgs = new SpeechSynthesisEventArgs(\r\n            new SpeechSynthesisResult(\r\n                requestId,\r\n                ResultReason.SynthesizingAudioStarted,\r\n            )\r\n        );\r\n\r\n        if (!!this.privSpeechSynthesizer.synthesisStarted) {\r\n            this.privSpeechSynthesizer.synthesisStarted(this.privSpeechSynthesizer, synthesisStartEventArgs);\r\n        }\r\n    }\r\n\r\n    protected onSynthesizing(audio: ArrayBuffer): void {\r\n        if (!!this.privSpeechSynthesizer.synthesizing) {\r\n            try {\r\n                const audioWithHeader = this.privSynthesisTurn.audioOutputFormat.addHeader(audio);\r\n                const ev: SpeechSynthesisEventArgs = new SpeechSynthesisEventArgs(\r\n                    new SpeechSynthesisResult(\r\n                        this.privSynthesisTurn.requestId,\r\n                        ResultReason.SynthesizingAudio,\r\n                        audioWithHeader));\r\n                this.privSpeechSynthesizer.synthesizing(this.privSpeechSynthesizer, ev);\r\n            } catch (error) {\r\n                // Not going to let errors in the event handler\r\n                // trip things up.\r\n            }\r\n        }\r\n    }\r\n\r\n    protected onSynthesisCancelled(result: SpeechSynthesisResult): void {\r\n        if (!!this.privSpeechSynthesizer.SynthesisCanceled) {\r\n            const cancelEvent: SpeechSynthesisEventArgs = new SpeechSynthesisEventArgs(result);\r\n            try {\r\n                this.privSpeechSynthesizer.SynthesisCanceled(this.privSpeechSynthesizer, cancelEvent);\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n        }\r\n    }\r\n\r\n    protected onSynthesisCompleted(result: SpeechSynthesisResult): void {\r\n        if (this.privSpeechSynthesizer.synthesisCompleted) {\r\n            try {\r\n                this.privSpeechSynthesizer.synthesisCompleted(\r\n                    this.privSpeechSynthesizer,\r\n                    new SpeechSynthesisEventArgs(result)\r\n                );\r\n            } catch (e) {\r\n                // Not going to let errors in the event handler\r\n                // trip things up.\r\n            }\r\n        }\r\n    }\r\n\r\n    protected onWordBoundary(wordBoundaryEventArgs: SpeechSynthesisWordBoundaryEventArgs): void {\r\n        if (!!this.privSpeechSynthesizer.wordBoundary) {\r\n            try {\r\n                this.privSpeechSynthesizer.wordBoundary(this.privSpeechSynthesizer, wordBoundaryEventArgs);\r\n            } catch (error) {\r\n                // Not going to let errors in the event handler\r\n                // trip things up.\r\n            }\r\n        }\r\n    }\r\n\r\n    protected onVisemeReceived(visemeEventArgs: SpeechSynthesisVisemeEventArgs): void {\r\n        if (!!this.privSpeechSynthesizer.visemeReceived) {\r\n            try {\r\n                this.privSpeechSynthesizer.visemeReceived(this.privSpeechSynthesizer, visemeEventArgs);\r\n            } catch (error) {\r\n                // Not going to let errors in the event handler\r\n                // trip things up.\r\n            }\r\n        }\r\n    }\r\n\r\n    protected onBookmarkReached(bookmarkEventArgs: SpeechSynthesisBookmarkEventArgs): void {\r\n        if (!!this.privSpeechSynthesizer.bookmarkReached) {\r\n            try {\r\n                this.privSpeechSynthesizer.bookmarkReached(this.privSpeechSynthesizer, bookmarkEventArgs);\r\n            } catch (error) {\r\n                // Not going to let errors in the event handler\r\n                // trip things up.\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationEventArgs,\r\n    CancellationReason,\r\n    RecognitionEventArgs\r\n} from \"./Exports.js\";\r\n\r\n/**\r\n * Defines content of a CancellationEvent.\r\n * @class CancellationEventArgsBase\r\n */\r\nexport class CancellationEventArgsBase extends RecognitionEventArgs implements CancellationEventArgs {\r\n    private privReason: CancellationReason;\r\n    private privErrorDetails: string;\r\n    private privErrorCode: CancellationErrorCode;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {CancellationReason} reason - The cancellation reason.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(reason: CancellationReason, errorDetails: string,\r\n                       errorCode: CancellationErrorCode, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privReason = reason;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privErrorCode = errorCode;\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member CancellationEventArgsBase.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {CancellationReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): CancellationReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * The error code in case of an unsuccessful operation.\r\n     * @return An error code that represents the error reason.\r\n     */\r\n    public get errorCode(): CancellationErrorCode {\r\n        return this.privErrorCode;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful operation, provides details of the occurred error.\r\n     * @member CancellationEventArgsBase.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the error details.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { SessionEventArgs } from \"./Exports.js\";\r\n\r\n/**\r\n * Defines payload for session events like Speech Start/End Detected\r\n * @class\r\n */\r\nexport class RecognitionEventArgs extends SessionEventArgs {\r\n    private privOffset: number;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(offset: number, sessionId?: string) {\r\n        super(sessionId);\r\n\r\n        this.privOffset = offset;\r\n    }\r\n\r\n    /**\r\n     * Represents the message offset\r\n     * @member RecognitionEventArgs.prototype.offset\r\n     * @function\r\n     * @public\r\n     */\r\n    public get offset(): number {\r\n        return this.privOffset;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Define speech synthesis audio output formats.\r\n * @enum SpeechSynthesisOutputFormat\r\n * Updated in version 1.17.0\r\n */\r\nexport enum SpeechSynthesisOutputFormat {\r\n    /**\r\n     * raw-8khz-8bit-mono-mulaw\r\n     * @member SpeechSynthesisOutputFormat.Raw8Khz8BitMonoMULaw,\r\n     */\r\n    Raw8Khz8BitMonoMULaw,\r\n\r\n    /**\r\n     * riff-16khz-16kbps-mono-siren\r\n     * @note Unsupported by the service. Do not use this value.\r\n     * @member SpeechSynthesisOutputFormat.Riff16Khz16KbpsMonoSiren\r\n     */\r\n    Riff16Khz16KbpsMonoSiren,\r\n\r\n    /**\r\n     * audio-16khz-16kbps-mono-siren\r\n     * @note Unsupported by the service. Do not use this value.\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz16KbpsMonoSiren\r\n     */\r\n    Audio16Khz16KbpsMonoSiren,\r\n\r\n    /**\r\n     * audio-16khz-32kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz32KBitRateMonoMp3\r\n     */\r\n    Audio16Khz32KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-16khz-128kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz128KBitRateMonoMp3\r\n     */\r\n    Audio16Khz128KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-16khz-64kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz64KBitRateMonoMp3\r\n     */\r\n    Audio16Khz64KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-24khz-48kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio24Khz48KBitRateMonoMp3\r\n     */\r\n    Audio24Khz48KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-24khz-96kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio24Khz96KBitRateMonoMp3\r\n     */\r\n    Audio24Khz96KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-24khz-160kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio24Khz160KBitRateMonoMp3\r\n     */\r\n    Audio24Khz160KBitRateMonoMp3,\r\n\r\n    /**\r\n     * raw-16khz-16bit-mono-truesilk\r\n     * @member SpeechSynthesisOutputFormat.Raw16Khz16BitMonoTrueSilk\r\n     */\r\n    Raw16Khz16BitMonoTrueSilk,\r\n\r\n    /**\r\n     * riff-16khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Riff16Khz16BitMonoPcm\r\n     */\r\n    Riff16Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-8khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Riff8Khz16BitMonoPcm\r\n     */\r\n    Riff8Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-24khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Riff24Khz16BitMonoPcm\r\n     */\r\n    Riff24Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-8khz-8bit-mono-mulaw\r\n     * @member SpeechSynthesisOutputFormat.Riff8Khz8BitMonoMULaw\r\n     */\r\n    Riff8Khz8BitMonoMULaw,\r\n\r\n    /**\r\n     * raw-16khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Raw16Khz16BitMonoPcm\r\n     */\r\n    Raw16Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * raw-24khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Raw24Khz16BitMonoPcm\r\n     */\r\n    Raw24Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * raw-8khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Raw8Khz16BitMonoPcm\r\n     */\r\n    Raw8Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * ogg-16khz-16bit-mono-opus\r\n     * @member SpeechSynthesisOutputFormat.Ogg16Khz16BitMonoOpus\r\n     */\r\n    Ogg16Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * ogg-24khz-16bit-mono-opus\r\n     * @member SpeechSynthesisOutputFormat.Ogg24Khz16BitMonoOpus\r\n     */\r\n    Ogg24Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * raw-48khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Raw48Khz16BitMonoPcm\r\n     */\r\n    Raw48Khz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-48khz-16bit-mono-pcm\r\n     * @member SpeechSynthesisOutputFormat.Riff48Khz16BitMonoPcm\r\n     */\r\n\r\n    Riff48Khz16BitMonoPcm,\r\n    /**\r\n     * audio-48khz-96kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio48Khz96KBitRateMonoMp3\r\n     */\r\n    Audio48Khz96KBitRateMonoMp3,\r\n\r\n    /**\r\n     * audio-48khz-192kbitrate-mono-mp3\r\n     * @member SpeechSynthesisOutputFormat.Audio48Khz192KBitRateMonoMp3\r\n     */\r\n    Audio48Khz192KBitRateMonoMp3,\r\n\r\n    /**\r\n     * ogg-48khz-16bit-mono-opus\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesisOutputFormat.Ogg48Khz16BitMonoOpus\r\n     */\r\n    Ogg48Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * webm-16khz-16bit-mono-opus\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesisOutputFormat.Webm16Khz16BitMonoOpus\r\n     */\r\n    Webm16Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * webm-24khz-16bit-mono-opus\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesisOutputFormat.Webm24Khz16BitMonoOpus\r\n     */\r\n    Webm24Khz16BitMonoOpus,\r\n\r\n    /**\r\n     * raw-24khz-16bit-mono-truesilk\r\n     * Added in version 1.17.0\r\n     * @member SpeechSynthesisOutputFormat.Raw24Khz16BitMonoTrueSilk\r\n     */\r\n     Raw24Khz16BitMonoTrueSilk,\r\n\r\n    /**\r\n     * raw-8khz-8bit-mono-alaw\r\n     * Added in version 1.17.0\r\n     * @member SpeechSynthesisOutputFormat.Raw8Khz8BitMonoALaw\r\n     */\r\n     Raw8Khz8BitMonoALaw,\r\n\r\n    /**\r\n     * riff-8khz-8bit-mono-alaw\r\n     * Added in version 1.17.0\r\n     * @member SpeechSynthesisOutputFormat.Riff8Khz8BitMonoALaw\r\n     */\r\n     Riff8Khz8BitMonoALaw,\r\n\r\n    /**\r\n     * webm-24khz-16bit-24kbps-mono-opus\r\n     * Audio compressed by OPUS codec in a webm container, with bitrate of 24kbps, optimized for IoT scenario.\r\n     * Added in version 1.19.0\r\n     * @member SpeechSynthesisOutputFormat.Webm24Khz16Bit24KbpsMonoOpus\r\n     */\r\n    Webm24Khz16Bit24KbpsMonoOpus,\r\n\r\n    /**\r\n     * audio-16khz-16bit-32kbps-mono-opus\r\n     * Audio compressed by OPUS codec without container, with bitrate of 32kbps.\r\n     * Added in version 1.20.0\r\n     * @member SpeechSynthesisOutputFormat.Audio16Khz16Bit32KbpsMonoOpus\r\n     */\r\n    Audio16Khz16Bit32KbpsMonoOpus,\r\n\r\n    /**\r\n     * audio-24khz-16bit-48kbps-mono-opus\r\n     * Audio compressed by OPUS codec without container, with bitrate of 48kbps.\r\n     * Added in version 1.20.0\r\n     * @member SpeechSynthesisOutputFormat.Audio24Khz16Bit48KbpsMonoOpus\r\n     */\r\n    Audio24Khz16Bit48KbpsMonoOpus,\r\n\r\n    /**\r\n     * audio-24khz-16bit-24kbps-mono-opus\r\n     * Audio compressed by OPUS codec without container, with bitrate of 24kbps.\r\n     * Added in version 1.20.0\r\n     * @member SpeechSynthesisOutputFormat.Audio24Khz16Bit24KbpsMonoOpus\r\n     */\r\n    Audio24Khz16Bit24KbpsMonoOpus,\r\n\r\n    /**\r\n     * raw-22050hz-16bit-mono-pcm\r\n     * Raw PCM audio at 22050Hz sampling rate and 16-bit depth.\r\n     * Added in version 1.22.0\r\n     * @member SpeechSynthesisOutputFormat.Raw22050Hz16BitMonoPcm\r\n     */\r\n    Raw22050Hz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-22050hz-16bit-mono-pcm\r\n     * PCM audio at 22050Hz sampling rate and 16-bit depth, with RIFF header.\r\n     * Added in version 1.22.0\r\n     * @member SpeechSynthesisOutputFormat.Riff22050Hz16BitMonoPcm\r\n     */\r\n    Riff22050Hz16BitMonoPcm,\r\n\r\n    /**\r\n     * raw-44100hz-16bit-mono-pcm\r\n     * Raw PCM audio at 44100Hz sampling rate and 16-bit depth.\r\n     * Added in version 1.22.0\r\n     * @member SpeechSynthesisOutputFormat.Raw44100Hz16BitMonoPcm\r\n     */\r\n    Raw44100Hz16BitMonoPcm,\r\n\r\n    /**\r\n     * riff-44100hz-16bit-mono-pcm\r\n     * PCM audio at 44100Hz sampling rate and 16-bit depth, with RIFF header.\r\n     * Added in version 1.22.0\r\n     * @member SpeechSynthesisOutputFormat.Riff44100Hz16BitMonoPcm\r\n     */\r\n    Riff44100Hz16BitMonoPcm,\r\n\r\n    /**\r\n     * amr-wb-16000hz\r\n     * AMR-WB audio at 16kHz sampling rate.\r\n     * Added in version 1.38.0\r\n     * @member SpeechSynthesisOutputFormat.AmrWb16000Hz\r\n     */\r\n    AmrWb16000Hz,\r\n\r\n    /**\r\n     * g722-16khz-64kbps\r\n     * G.722 audio at 16kHz sampling rate and 64kbps bitrate.\r\n     * Added in version 1.38.0\r\n     */\r\n    G72216Khz64Kbps\r\n}\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.unsafeStringify = unsafeStringify;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport * as fs from \"fs\";\r\nimport { IAudioDestination } from \"../../common/Exports.js\";\r\nimport { Contracts } from \"../Contracts.js\";\r\nimport { AudioStreamFormat } from \"../Exports.js\";\r\nimport { AudioOutputFormatImpl } from \"./AudioOutputFormat.js\";\r\n\r\nexport class AudioFileWriter implements IAudioDestination {\r\n    private privAudioFormat: AudioOutputFormatImpl;\r\n    private privFd: number;\r\n    private privId: string;\r\n    private privWriteStream: fs.WriteStream;\r\n\r\n    public constructor(filename: fs.PathLike) {\r\n        Contracts.throwIfNullOrUndefined(fs.openSync, \"\\nFile System access not available, please use Push or PullAudioOutputStream\");\r\n        this.privFd = fs.openSync(filename, \"w\");\r\n    }\r\n\r\n    public set format(format: AudioStreamFormat) {\r\n        Contracts.throwIfNotUndefined(this.privAudioFormat, \"format is already set\");\r\n        this.privAudioFormat = format as AudioOutputFormatImpl;\r\n        let headerOffset: number = 0;\r\n        if (this.privAudioFormat.hasHeader) {\r\n            headerOffset = this.privAudioFormat.header.byteLength;\r\n        }\r\n        if (this.privFd !== undefined) {\r\n            this.privWriteStream = fs.createWriteStream(\"\", {fd: this.privFd, start: headerOffset, autoClose: false});\r\n        }\r\n    }\r\n\r\n    public write(buffer: ArrayBuffer): void {\r\n        Contracts.throwIfNullOrUndefined(this.privAudioFormat, \"must set format before writing.\");\r\n        if (this.privWriteStream !== undefined) {\r\n            this.privWriteStream.write(new Uint8Array(buffer.slice(0)));\r\n        }\r\n    }\r\n\r\n    public close(): void {\r\n        if (this.privFd !== undefined) {\r\n            this.privWriteStream.on(\"finish\", (): void => {\r\n                if (this.privAudioFormat.hasHeader) {\r\n                    this.privAudioFormat.updateHeader(this.privWriteStream.bytesWritten);\r\n                    fs.writeSync(this.privFd,\r\n                        new Int8Array(this.privAudioFormat.header),\r\n                        0,\r\n                        this.privAudioFormat.header.byteLength,\r\n                        0);\r\n                }\r\n                fs.closeSync(this.privFd);\r\n                this.privFd = undefined;\r\n            });\r\n            this.privWriteStream.end();\r\n        }\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nvar _default = sha1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\n\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IVoiceJson, IVoiceTag } from \"./IVoiceJson\";\r\n\r\n/**\r\n * Defines the gender of synthesis voices.\r\n * Added in version 1.20.0.\r\n */\r\nexport enum SynthesisVoiceGender {\r\n\r\n    /** Gender unknown */\r\n    Unknown,\r\n\r\n    /** Female voice */\r\n    Female,\r\n\r\n    /** Male voice */\r\n    Male,\r\n\r\n    /** Neutral voice */\r\n    Neutral\r\n}\r\n\r\nexport enum SynthesisVoiceType {\r\n    /**\r\n     * Voice type is not known.\r\n     */\r\n    Unknown = 0,\r\n\r\n    /**\r\n     * Online neural voices.\r\n     */\r\n    OnlineNeural = 1,\r\n\r\n    /**\r\n     * Online standard voices. These voices are deprecated.\r\n     */\r\n    OnlineStandard = 2,\r\n\r\n    /**\r\n     * Offline neural voices.\r\n     */\r\n    OfflineNeural = 3,\r\n\r\n    /**\r\n     * Offline standard voices.\r\n     */\r\n    OfflineStandard = 4,\r\n\r\n    /**\r\n     * High definition (HD) voices. Refer to https://learn.microsoft.com/azure/ai-services/speech-service/high-definition-voices\r\n     */\r\n    OnlineNeuralHD = 5,\r\n}\r\n\r\nconst GENDER_LOOKUP: Record<string, SynthesisVoiceGender> = {\r\n    [SynthesisVoiceGender[SynthesisVoiceGender.Neutral]]: SynthesisVoiceGender.Neutral,\r\n    [SynthesisVoiceGender[SynthesisVoiceGender.Male]]: SynthesisVoiceGender.Male,\r\n    [SynthesisVoiceGender[SynthesisVoiceGender.Female]]: SynthesisVoiceGender.Female,\r\n};\r\n\r\nconst VOICE_TYPE_LOOKUP: Record<string, SynthesisVoiceType> = {\r\n    Neural: SynthesisVoiceType.OnlineNeural,\r\n    NeuralHD: SynthesisVoiceType.OnlineNeuralHD,\r\n};\r\n\r\n/**\r\n * Information about Speech Synthesis voice\r\n * Added in version 1.20.0.\r\n * @class VoiceInfo\r\n */\r\nexport class VoiceInfo {\r\n    private privName: IVoiceJson[\"Name\"];\r\n    private privLocale: IVoiceJson[\"Locale\"];\r\n    private privShortName: IVoiceJson[\"ShortName\"];\r\n    private privDisplayName: IVoiceJson[\"DisplayName\"];\r\n    private privLocalName: IVoiceJson[\"LocalName\"];\r\n    private privLocaleName: IVoiceJson[\"LocaleName\"];\r\n    private privGender: SynthesisVoiceGender;\r\n    private privVoiceType: SynthesisVoiceType;\r\n    private privStyleList: IVoiceJson[\"StyleList\"] = [];\r\n    private privSampleRateHertz: IVoiceJson[\"SampleRateHertz\"];\r\n    private privStatus: IVoiceJson[\"Status\"];\r\n    private privExtendedPropertyMap: IVoiceJson[\"ExtendedPropertyMap\"];\r\n    private privWordsPerMinute: IVoiceJson[\"WordsPerMinute\"];\r\n    private privSecondaryLocaleList: IVoiceJson[\"SecondaryLocaleList\"];\r\n    private privRolePlayList: IVoiceJson[\"RolePlayList\"];\r\n    private privVoiceTag: IVoiceTag;\r\n\r\n    public constructor(json: IVoiceJson) {\r\n        if (!!json) {\r\n            this.privName = json.Name;\r\n            this.privLocale = json.Locale;\r\n            this.privShortName = json.ShortName;\r\n            this.privLocaleName = json.LocaleName;\r\n            this.privDisplayName = json.DisplayName;\r\n            this.privLocalName = json.LocalName;\r\n            this.privVoiceType = VOICE_TYPE_LOOKUP[json.VoiceType] || SynthesisVoiceType.Unknown;\r\n            this.privGender = GENDER_LOOKUP[json.Gender] || SynthesisVoiceGender.Unknown;\r\n\r\n            if (!!json.StyleList && Array.isArray(json.StyleList)) {\r\n                for (const style of json.StyleList) {\r\n                    this.privStyleList.push(style);\r\n                }\r\n            }\r\n\r\n            this.privSampleRateHertz = json.SampleRateHertz;\r\n            this.privStatus = json.Status;\r\n\r\n            if (json.ExtendedPropertyMap) {\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n                this.privExtendedPropertyMap = json.ExtendedPropertyMap;\r\n            }\r\n\r\n            this.privWordsPerMinute = json.WordsPerMinute;\r\n\r\n            if (Array.isArray(json.SecondaryLocaleList)) {\r\n                this.privSecondaryLocaleList = [...json.SecondaryLocaleList];\r\n            }\r\n\r\n            if (Array.isArray(json.RolePlayList)) {\r\n                this.privRolePlayList = [...json.RolePlayList];\r\n            }\r\n\r\n            if (json.VoiceTag) {\r\n                this.privVoiceTag = json.VoiceTag;\r\n            }\r\n        }\r\n    }\r\n\r\n    public get name(): IVoiceJson[\"Name\"] {\r\n        return this.privName;\r\n    }\r\n\r\n    public get locale(): IVoiceJson[\"Locale\"] {\r\n        return this.privLocale;\r\n    }\r\n\r\n    public get shortName(): IVoiceJson[\"ShortName\"] {\r\n        return this.privShortName;\r\n    }\r\n\r\n    public get displayName(): IVoiceJson[\"DisplayName\"] {\r\n        return this.privDisplayName;\r\n    }\r\n\r\n    public get localName(): IVoiceJson[\"LocalName\"] {\r\n        return this.privLocalName;\r\n    }\r\n\r\n    public get localeName(): IVoiceJson[\"LocaleName\"] {\r\n        return this.privLocaleName;\r\n    }\r\n\r\n    public get gender(): SynthesisVoiceGender {\r\n        return this.privGender;\r\n    }\r\n\r\n    public get voiceType(): SynthesisVoiceType {\r\n        return this.privVoiceType;\r\n    }\r\n\r\n    public get styleList(): IVoiceJson[\"StyleList\"] {\r\n        return this.privStyleList;\r\n    }\r\n\r\n    public get sampleRateHertz(): IVoiceJson[\"SampleRateHertz\"] {\r\n        return this.privSampleRateHertz;\r\n    }\r\n\r\n    public get status(): IVoiceJson[\"Status\"] {\r\n        return this.privStatus;\r\n    }\r\n\r\n    public get extendedPropertyMap(): IVoiceJson[\"ExtendedPropertyMap\"] {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return this.privExtendedPropertyMap;\r\n    }\r\n\r\n    public get wordsPerMinute(): IVoiceJson[\"WordsPerMinute\"] {\r\n        return this.privWordsPerMinute;\r\n    }\r\n\r\n    public get secondaryLocaleList(): IVoiceJson[\"SecondaryLocaleList\"] {\r\n        return this.privSecondaryLocaleList;\r\n    }\r\n\r\n    public get rolePlayList(): IVoiceJson[\"RolePlayList\"] {\r\n        return this.privRolePlayList;\r\n    }\r\n\r\n    public get voiceTag(): IVoiceTag {\r\n        return this.privVoiceTag;\r\n    }\r\n}\r\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection } from \"../sdk/Exports.js\";\r\nimport {\r\n    Context,\r\n    ISynthesisSectionVideo,\r\n    SpeechServiceConfig\r\n    } from \"./Exports.js\";\r\n\r\nexport enum SynthesisServiceType {\r\n    Standard,\r\n    Custom,\r\n}\r\n\r\nexport class SynthesizerConfig {\r\n    private privSynthesisServiceType: SynthesisServiceType = SynthesisServiceType.Standard;\r\n    private privSpeechServiceConfig: SpeechServiceConfig;\r\n    private privParameters: PropertyCollection;\r\n    public avatarEnabled: boolean = false;\r\n\r\n    public constructor(\r\n        speechServiceConfig: SpeechServiceConfig,\r\n        parameters: PropertyCollection) {\r\n        this.privSpeechServiceConfig = speechServiceConfig ? speechServiceConfig : new SpeechServiceConfig(new Context(null));\r\n        this.privParameters = parameters;\r\n    }\r\n\r\n    public get parameters(): PropertyCollection {\r\n        return this.privParameters;\r\n    }\r\n\r\n    public get synthesisServiceType(): SynthesisServiceType {\r\n        return this.privSynthesisServiceType;\r\n    }\r\n\r\n    public set synthesisServiceType(value: SynthesisServiceType) {\r\n        this.privSynthesisServiceType = value;\r\n    }\r\n\r\n    public set synthesisVideoSection(value: ISynthesisSectionVideo) {\r\n        this.privSpeechServiceConfig.Context.synthesis = {\r\n            video: value\r\n        };\r\n    }\r\n\r\n    public get SpeechServiceConfig(): SpeechServiceConfig {\r\n        return this.privSpeechServiceConfig;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines content for session events like SessionStarted/Stopped, SoundStarted/Stopped.\r\n * @class SessionEventArgs\r\n */\r\nexport class SessionEventArgs {\r\n    private privSessionId: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(sessionId: string) {\r\n        this.privSessionId = sessionId;\r\n    }\r\n\r\n    /**\r\n     * Represents the session identifier.\r\n     * @member SessionEventArgs.prototype.sessionId\r\n     * @function\r\n     * @public\r\n     * @returns {string} Represents the session identifier.\r\n     */\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { EventType } from \"../common/Exports.js\";\r\n\r\n/**\r\n * Define event severity types for setting logging output.\r\n * @class LogLevel\r\n */\r\n\r\nexport { EventType as LogLevel };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { CancellationErrorCode, CancellationReason, TranslationRecognitionResult } from \"./Exports.js\";\r\n\r\n/**\r\n * Define payload of speech recognition canceled result events.\r\n * @class TranslationRecognitionCanceledEventArgs\r\n */\r\nexport class TranslationRecognitionCanceledEventArgs {\r\n    private privResult: TranslationRecognitionResult;\r\n    private privSessionId: string;\r\n    private privCancelReason: CancellationReason;\r\n    private privErrorDetails: string;\r\n    private privErrorCode: CancellationErrorCode;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} sessionid - The session id.\r\n     * @param {CancellationReason} cancellationReason - The cancellation reason.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {TranslationRecognitionResult} result - The result.\r\n     */\r\n    public constructor(\r\n        sessionid: string,\r\n        cancellationReason: CancellationReason,\r\n        errorDetails: string,\r\n        errorCode: CancellationErrorCode,\r\n        result: TranslationRecognitionResult) {\r\n        this.privCancelReason = cancellationReason;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privResult = result;\r\n        this.privSessionId = sessionid;\r\n        this.privErrorCode = errorCode;\r\n    }\r\n\r\n    /**\r\n     * Specifies the recognition result.\r\n     * @member TranslationRecognitionCanceledEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {TranslationRecognitionResult} the recognition result.\r\n     */\r\n    public get result(): TranslationRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n\r\n    /**\r\n     * Specifies the session identifier.\r\n     * @member TranslationRecognitionCanceledEventArgs.prototype.sessionId\r\n     * @function\r\n     * @public\r\n     * @returns {string} the session identifier.\r\n     */\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member TranslationRecognitionCanceledEventArgs.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {CancellationReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): CancellationReason {\r\n        return this.privCancelReason;\r\n    }\r\n\r\n    /**\r\n     * The error code in case of an unsuccessful recognition.\r\n     * Added in version 1.1.0.\r\n     * @return An error code that represents the error reason.\r\n     */\r\n    public get errorCode(): CancellationErrorCode {\r\n        return this.privErrorCode;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful recognition, provides details of the occurred error.\r\n     * @member TranslationRecognitionCanceledEventArgs.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the error details.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n}\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the boundary type of speech synthesis boundary event.\r\n * @class SpeechSynthesisBoundaryType\r\n * Added in version 1.21.0\r\n */\r\nexport enum SpeechSynthesisBoundaryType {\r\n    /**\r\n     * Indicates the boundary text is a word.\r\n     * @member SpeechSynthesisBoundaryType.Word\r\n     */\r\n    Word = \"WordBoundary\",\r\n\r\n    /**\r\n     * Indicates the boundary text is a punctuation.\r\n     * @member SpeechSynthesisBoundaryType.Punctuation\r\n     */\r\n    Punctuation = \"PunctuationBoundary\",\r\n\r\n    /**\r\n     * Indicates the boundary text is a sentence.\r\n     * @member SpeechSynthesisBoundaryType.Sentence\r\n     */\r\n    Sentence = \"SentenceBoundary\"\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ProxyInfo,\r\n    WebsocketConnection,\r\n} from \"../common.browser/Exports.js\";\r\nimport {\r\n    ForceDictationPropertyName,\r\n    OutputFormatPropertyName,\r\n} from \"../common.speech/Exports.js\";\r\nimport {\r\n    IConnection,\r\n    IStringDictionary\r\n} from \"../common/Exports.js\";\r\nimport {\r\n    OutputFormat,\r\n    PropertyId\r\n} from \"../sdk/Exports.js\";\r\nimport {\r\n    ConnectionFactoryBase\r\n} from \"./ConnectionFactoryBase.js\";\r\nimport {\r\n    AuthInfo,\r\n    RecognitionMode,\r\n    RecognizerConfig,\r\n    WebsocketMessageFormatter\r\n} from \"./Exports.js\";\r\nimport { HeaderNames } from \"./HeaderNames.js\";\r\nimport {\r\n    QueryParameterNames\r\n} from \"./QueryParameterNames.js\";\r\n\r\nexport class SpeechConnectionFactory extends ConnectionFactoryBase {\r\n\r\n    private readonly interactiveRelativeUri: string = \"/speech/recognition/interactive/cognitiveservices/v1\";\r\n    private readonly conversationRelativeUri: string = \"/speech/recognition/conversation/cognitiveservices/v1\";\r\n    private readonly dictationRelativeUri: string = \"/speech/recognition/dictation/cognitiveservices/v1\";\r\n    private readonly universalUri: string = \"/speech/universal/v\";\r\n\r\n    public create(\r\n        config: RecognizerConfig,\r\n        authInfo: AuthInfo,\r\n        connectionId?: string): IConnection {\r\n\r\n        let endpoint: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Endpoint, undefined);\r\n        const region: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Region, undefined);\r\n        const hostSuffix: string = ConnectionFactoryBase.getHostSuffix(region);\r\n        const host: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_Host, \"wss://\" + region + \".stt.speech\" + hostSuffix);\r\n        const queryParams: IStringDictionary<string> = {};\r\n        const endpointId: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_EndpointId, undefined);\r\n        const language: string = config.parameters.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, undefined);\r\n\r\n        if (endpointId) {\r\n            if (!endpoint || endpoint.search(QueryParameterNames.CustomSpeechDeploymentId) === -1) {\r\n                queryParams[QueryParameterNames.CustomSpeechDeploymentId] = endpointId;\r\n            }\r\n        } else if (language) {\r\n            if (!endpoint || endpoint.search(QueryParameterNames.Language) === -1) {\r\n                queryParams[QueryParameterNames.Language] = language;\r\n            }\r\n        }\r\n\r\n        if (!endpoint || endpoint.search(QueryParameterNames.Format) === -1) {\r\n            queryParams[QueryParameterNames.Format] = config.parameters.getProperty(OutputFormatPropertyName, OutputFormat[OutputFormat.Simple]).toLowerCase();\r\n        }\r\n\r\n        if (config.autoDetectSourceLanguages !== undefined) {\r\n            queryParams[QueryParameterNames.EnableLanguageId] = \"true\";\r\n        }\r\n\r\n        this.setCommonUrlParams(config, queryParams, endpoint);\r\n\r\n        if (!endpoint) {\r\n            switch (config.recognitionMode) {\r\n                case RecognitionMode.Conversation:\r\n                    if (config.parameters.getProperty(ForceDictationPropertyName, \"false\") === \"true\") {\r\n                        endpoint = host + this.dictationRelativeUri;\r\n                    } else {\r\n                        if (config.recognitionEndpointVersion !== undefined && parseInt(config.recognitionEndpointVersion, 10) > 1) {\r\n                            endpoint = `${host}${this.universalUri}${config.recognitionEndpointVersion}`;\r\n                        } else {\r\n                            endpoint = host + this.conversationRelativeUri;\r\n                        }\r\n                    }\r\n                    break;\r\n                case RecognitionMode.Dictation:\r\n                    endpoint = host + this.dictationRelativeUri;\r\n                    break;\r\n                default:\r\n                    if (config.recognitionEndpointVersion !== undefined && parseInt(config.recognitionEndpointVersion, 10) > 1) {\r\n                        endpoint = `${host}${this.universalUri}${config.recognitionEndpointVersion}`;\r\n                    } else {\r\n                        endpoint = host + this.interactiveRelativeUri; // default is interactive\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        const headers: IStringDictionary<string> = {};\r\n        if (authInfo.token !== undefined && authInfo.token !== \"\") {\r\n            headers[authInfo.headerName] = authInfo.token;\r\n        }\r\n        headers[HeaderNames.ConnectionId] = connectionId;\r\n\r\n        const enableCompression: boolean = config.parameters.getProperty(\"SPEECH-EnableWebsocketCompression\", \"false\") === \"true\";\r\n\r\n        const webSocketConnection = new WebsocketConnection(endpoint, queryParams, headers, new WebsocketMessageFormatter(), ProxyInfo.fromRecognizerConfig(config), enableCompression, connectionId);\r\n\r\n        // Set the value of SpeechServiceConnection_Url to webSocketConnection.uri (and not to `endpoint`), since this value is the final\r\n        // URI that was used to make the connection (including query parameters).\r\n        const uri: string = webSocketConnection.uri;\r\n        config.parameters.setProperty(PropertyId.SpeechServiceConnection_Url, uri);\r\n\r\n        return webSocketConnection;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    AvatarConfig,\r\n    AvatarEventArgs,\r\n    AvatarSynthesizer,\r\n    PropertyId,\r\n    Synthesizer,\r\n} from \"../sdk/Exports.js\";\r\nimport {\r\n    ISynthesisConnectionFactory,\r\n    ISynthesisMetadata,\r\n    ISynthesisSectionVideo,\r\n    SynthesisAdapterBase,\r\n    SynthesizerConfig\r\n} from \"./Exports.js\";\r\nimport { IAuthentication } from \"./IAuthentication.js\";\r\n\r\nexport class AvatarSynthesisAdapter extends SynthesisAdapterBase {\r\n    private readonly privAvatarSynthesizer: AvatarSynthesizer;\r\n    private readonly privAvatarConfig: AvatarConfig;\r\n\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: ISynthesisConnectionFactory,\r\n        synthesizerConfig: SynthesizerConfig,\r\n        avatarSynthesizer: AvatarSynthesizer,\r\n        avatarConfig: AvatarConfig,\r\n        ) {\r\n\r\n        super(authentication, connectionFactory,\r\n            synthesizerConfig, undefined);\r\n        this.privAvatarSynthesizer = avatarSynthesizer;\r\n        this.privSynthesizer = avatarSynthesizer as Synthesizer;\r\n        this.privAvatarConfig = avatarConfig;\r\n    }\r\n\r\n    protected setSynthesisContextSynthesisSection(): void {\r\n        this.privSynthesisContext.setSynthesisSection(undefined);\r\n    }\r\n\r\n    protected setSpeechConfigSynthesisSection(): void {\r\n        this.privSynthesizerConfig.synthesisVideoSection = {\r\n            format: {\r\n                bitrate: this.privAvatarConfig.videoFormat?.bitrate,\r\n                codec: this.privAvatarConfig.videoFormat?.codec,\r\n                crop: {\r\n                    bottomRight: {\r\n                        x: this.privAvatarConfig.videoFormat?.cropRange?.bottomRight?.x,\r\n                        y: this.privAvatarConfig.videoFormat?.cropRange?.bottomRight?.y,\r\n                    },\r\n                    topLeft: {\r\n                        x: this.privAvatarConfig.videoFormat?.cropRange?.topLeft?.x,\r\n                        y: this.privAvatarConfig.videoFormat?.cropRange?.topLeft?.y,\r\n                    },\r\n                },\r\n                resolution: {\r\n                    height: this.privAvatarConfig.videoFormat?.height,\r\n                    width: this.privAvatarConfig.videoFormat?.width,\r\n                },\r\n            },\r\n            protocol: {\r\n                name: \"WebRTC\",\r\n                webrtcConfig: {\r\n                    clientDescription: btoa(this.privSynthesizerConfig.parameters.getProperty(PropertyId.TalkingAvatarService_WebRTC_SDP)),\r\n                    iceServers: this.privAvatarConfig.remoteIceServers ?? this.privAvatarSynthesizer.iceServers,\r\n                },\r\n            },\r\n            talkingAvatar: {\r\n                background: {\r\n                    color: this.privAvatarConfig.backgroundColor,\r\n                    image: {\r\n                        url: this.privAvatarConfig.backgroundImage?.toString(),\r\n                    }\r\n                },\r\n                character: this.privAvatarConfig.character,\r\n                customized: this.privAvatarConfig.customized,\r\n                style: this.privAvatarConfig.style,\r\n                useBuiltInVoice: this.privAvatarConfig.useBuiltInVoice,\r\n            }\r\n        } as ISynthesisSectionVideo;\r\n    }\r\n\r\n\r\n    protected onAvatarEvent(metadata: ISynthesisMetadata): void {\r\n        if (!!this.privAvatarSynthesizer.avatarEventReceived) {\r\n            const avatarEventArgs: AvatarEventArgs = new AvatarEventArgs(\r\n                metadata.Data.Offset,\r\n                metadata.Data.Name);\r\n            try {\r\n                this.privAvatarSynthesizer.avatarEventReceived(this.privAvatarSynthesizer, avatarEventArgs);\r\n            } catch (error) {\r\n                // Not going to let errors in the event handler\r\n                // trip things up.\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst createGuid: () => string = (): string => uuid();\r\n\r\nconst createNoDashGuid: () => string = (): string => createGuid().replace(new RegExp(\"-\", \"g\"), \"\").toUpperCase();\r\n\r\nexport { createGuid, createNoDashGuid };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IRequestOptions,\r\n    IRestParams,\r\n    IRestResponse,\r\n    RestMessageAdapter,\r\n    RestRequestType\r\n} from \"../../common.browser/Exports.js\";\r\nimport { IErrorMessages, IStringDictionary } from \"../../common/Exports.js\";\r\nimport { Contracts } from \"../../sdk/Contracts.js\";\r\nimport { PropertyCollection, PropertyId } from \"../../sdk/Exports.js\";\r\nimport { ConversationConnectionConfig } from \"./ConversationConnectionConfig.js\";\r\nimport { IConversationResponseError, IInternalConversation } from \"./ConversationTranslatorInterfaces.js\";\r\n\r\nexport class ConversationManager {\r\n\r\n    private privRequestParams: IRestParams;\r\n    private privErrors: IErrorMessages;\r\n    private privHost: string;\r\n    private privApiVersion: string;\r\n    private privRestPath: string;\r\n    private privRestAdapter: RestMessageAdapter;\r\n\r\n    public constructor() {\r\n        //\r\n        this.privRequestParams = ConversationConnectionConfig.configParams;\r\n        this.privErrors = ConversationConnectionConfig.restErrors;\r\n        this.privHost = ConversationConnectionConfig.host;\r\n        this.privApiVersion = ConversationConnectionConfig.apiVersion;\r\n        this.privRestPath = ConversationConnectionConfig.restPath;\r\n        this.privRestAdapter = new RestMessageAdapter({});\r\n    }\r\n\r\n    /**\r\n     * Make a POST request to the Conversation Manager service endpoint to create or join a conversation.\r\n     * @param args\r\n     * @param conversationCode\r\n     * @param callback\r\n     * @param errorCallback\r\n     */\r\n    public createOrJoin(args: PropertyCollection, conversationCode: string, cb?: (c: any) => void, err?: (e: string) => void): void {\r\n\r\n        try {\r\n\r\n            Contracts.throwIfNullOrUndefined(args, \"args\");\r\n\r\n            const languageCode: string = args.getProperty(PropertyId.SpeechServiceConnection_RecoLanguage, ConversationConnectionConfig.defaultLanguageCode);\r\n            const nickname: string = args.getProperty(PropertyId.ConversationTranslator_Name, \"conversation_host\");\r\n            const endpointHost: string = args.getProperty(PropertyId.ConversationTranslator_Host, this.privHost);\r\n            const correlationId: string = args.getProperty(PropertyId.ConversationTranslator_CorrelationId);\r\n            const subscriptionKey: string = args.getProperty(PropertyId.SpeechServiceConnection_Key);\r\n            const subscriptionRegion: string = args.getProperty(PropertyId.SpeechServiceConnection_Region);\r\n            const authToken: string = args.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n\r\n            Contracts.throwIfNullOrWhitespace(languageCode, \"languageCode\");\r\n            Contracts.throwIfNullOrWhitespace(nickname, \"nickname\");\r\n            Contracts.throwIfNullOrWhitespace(endpointHost, \"endpointHost\");\r\n\r\n            const queryParams: IStringDictionary<string> = {};\r\n            queryParams[this.privRequestParams.apiVersion] = this.privApiVersion;\r\n            queryParams[this.privRequestParams.languageCode] = languageCode;\r\n            queryParams[this.privRequestParams.nickname] = nickname;\r\n\r\n            const headers: IStringDictionary<string> = {};\r\n            if (correlationId) {\r\n                headers[this.privRequestParams.correlationId] = correlationId;\r\n            }\r\n            headers[this.privRequestParams.clientAppId] = ConversationConnectionConfig.clientAppId;\r\n\r\n            if (conversationCode !== undefined) {\r\n                queryParams[this.privRequestParams.roomId] = conversationCode;\r\n            } else {\r\n                Contracts.throwIfNullOrUndefined(subscriptionRegion, this.privErrors.authInvalidSubscriptionRegion);\r\n                headers[this.privRequestParams.subscriptionRegion] = subscriptionRegion;\r\n                if (subscriptionKey) {\r\n                    headers[this.privRequestParams.subscriptionKey] = subscriptionKey;\r\n                } else if (authToken) {\r\n                    headers[this.privRequestParams.authorization] = `Bearer ${authToken}`;\r\n                } else {\r\n                    Contracts.throwIfNullOrUndefined(subscriptionKey, this.privErrors.authInvalidSubscriptionKey);\r\n                }\r\n            }\r\n\r\n            const config: IRequestOptions = {};\r\n            config.headers = headers;\r\n            this.privRestAdapter.options = config;\r\n\r\n            const endpoint: string = `https://${endpointHost}${this.privRestPath}`;\r\n\r\n            // TODO: support a proxy and certificate validation\r\n            this.privRestAdapter.request(RestRequestType.Post, endpoint, queryParams, null).then((response: IRestResponse): void => {\r\n\r\n                const requestId: string = RestMessageAdapter.extractHeaderValue(this.privRequestParams.requestId, response.headers);\r\n\r\n                if (!response.ok) {\r\n                    if (!!err) {\r\n                        // get the error\r\n                        let errorMessage: string = this.privErrors.invalidCreateJoinConversationResponse.replace(\"{status}\", response.status.toString());\r\n                        let errMessageRaw: IConversationResponseError;\r\n                        try {\r\n                            errMessageRaw = JSON.parse(response.data) as IConversationResponseError;\r\n                            errorMessage += ` [${errMessageRaw.error.code}: ${errMessageRaw.error.message}]`;\r\n                        } catch (e) {\r\n                            errorMessage += ` [${response.data}]`;\r\n                        }\r\n                        if (requestId) {\r\n                            errorMessage += ` ${requestId}`;\r\n                        }\r\n\r\n                        err(errorMessage);\r\n                    }\r\n                    return;\r\n                }\r\n                const conversation: IInternalConversation = JSON.parse(response.data) as IInternalConversation;\r\n                if (conversation) {\r\n                    conversation.requestId = requestId;\r\n                }\r\n                if (!!cb) {\r\n                    try {\r\n                        cb(conversation);\r\n                    } catch (e) {\r\n                        if (!!err) {\r\n                            err(e as string);\r\n                        }\r\n                    }\r\n                    cb = undefined;\r\n                }\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            }).catch( (): void => { });\r\n\r\n        } catch (error) {\r\n            if (!!err) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n\r\n                } else {\r\n                    err(error as string);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Make a DELETE request to the Conversation Manager service endpoint to leave the conversation.\r\n     * @param args\r\n     * @param sessionToken\r\n     * @param callback\r\n     */\r\n    public leave(args: PropertyCollection, sessionToken: string): Promise<void> {\r\n        return new Promise<void>((resolve: () => void, reject: (reason: string) => void): void => {\r\n            try {\r\n\r\n                Contracts.throwIfNullOrUndefined(args, this.privErrors.invalidArgs.replace(\"{arg}\", \"config\"));\r\n                Contracts.throwIfNullOrWhitespace(sessionToken, this.privErrors.invalidArgs.replace(\"{arg}\", \"token\"));\r\n\r\n                const endpointHost: string = args.getProperty(PropertyId.ConversationTranslator_Host, this.privHost);\r\n                const correlationId: string = args.getProperty(PropertyId.ConversationTranslator_CorrelationId);\r\n\r\n                const queryParams: IStringDictionary<string> = {};\r\n                queryParams[this.privRequestParams.apiVersion] = this.privApiVersion;\r\n                queryParams[this.privRequestParams.sessionToken] = sessionToken;\r\n\r\n                const headers: IStringDictionary<string> = {};\r\n                if (correlationId) {\r\n                    headers[this.privRequestParams.correlationId] = correlationId;\r\n                }\r\n\r\n                const config: IRequestOptions = {};\r\n                config.headers = headers;\r\n                this.privRestAdapter.options = config;\r\n\r\n                const endpoint: string = `https://${endpointHost}${this.privRestPath}`;\r\n\r\n                // TODO: support a proxy and certificate validation\r\n                this.privRestAdapter.request(RestRequestType.Delete, endpoint, queryParams, null).then((response: IRestResponse): void => {\r\n\r\n                    if (!response.ok) {\r\n                        // ignore errors on delete\r\n                    }\r\n\r\n                    resolve();\r\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n                }).catch( (): void => {});\r\n\r\n            } catch (error) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error;\r\n                    reject(typedError.name + \": \" + typedError.message);\r\n\r\n                } else {\r\n                    reject(error as string);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * @class SynthesisStatus\r\n * @private\r\n */\r\nexport enum SynthesisStatus {\r\n    /**\r\n     * The response contains valid audio data.\r\n     * @member SynthesisStatus.Success\r\n     */\r\n    Success,\r\n\r\n    /**\r\n     * Indicates the end of audio data. No valid audio data is included in the message.\r\n     * @member SynthesisStatus.SynthesisEnd\r\n     */\r\n    SynthesisEnd,\r\n\r\n    /**\r\n     * Indicates an error occurred during synthesis data processing.\r\n     * @member SynthesisStatus.Error\r\n     */\r\n    Error,\r\n}\r\n\r\nexport enum RecognitionStatus {\r\n    Success,\r\n    NoMatch,\r\n    InitialSilenceTimeout,\r\n    BabbleTimeout,\r\n    Error,\r\n    EndOfDictation,\r\n    TooManyRequests,\r\n    BadRequest,\r\n    Forbidden,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Language Identification mode\r\n * @class LanguageIdMode\r\n */\r\nexport enum LanguageIdMode {\r\n\r\n    /**\r\n     * Detect language at audio start\r\n     * @member LanguageIdMode.AtStart\r\n     */\r\n    AtStart,\r\n\r\n    /**\r\n     * Continuously detect language\r\n     * @member LanguageIdMode.Continuous\r\n     */\r\n    Continuous,\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n/* eslint-disable max-classes-per-file */\r\nimport { ConversationTranslationResult, SessionEventArgs } from \"../../sdk/Exports.js\";\r\nimport { IInternalParticipant } from \"./ConversationTranslatorInterfaces.js\";\r\n\r\nexport class MuteAllEventArgs extends SessionEventArgs {\r\n    private privIsMuted: boolean;\r\n\r\n    public constructor(isMuted: boolean, sessionId?: string) {\r\n        super(sessionId);\r\n\r\n        this.privIsMuted = isMuted;\r\n    }\r\n\r\n    public get isMuted(): boolean {\r\n        return this.privIsMuted;\r\n    }\r\n}\r\n\r\nexport class LockRoomEventArgs extends SessionEventArgs {\r\n    private privIsLocked: boolean;\r\n\r\n    public constructor(isLocked: boolean, sessionId?: string) {\r\n        super(sessionId);\r\n\r\n        this.privIsLocked = isLocked;\r\n    }\r\n\r\n    public get isMuted(): boolean {\r\n        return this.privIsLocked;\r\n    }\r\n}\r\n\r\nexport class ParticipantEventArgs extends SessionEventArgs {\r\n    private privParticipant: IInternalParticipant;\r\n\r\n    public constructor(participant: IInternalParticipant, sessionId?: string) {\r\n        super(sessionId);\r\n        this.privParticipant = participant;\r\n    }\r\n\r\n    public get participant(): IInternalParticipant {\r\n        return this.privParticipant;\r\n    }\r\n}\r\n\r\nexport class ParticipantAttributeEventArgs extends SessionEventArgs {\r\n    private privValue: boolean | number | string | string[];\r\n    private privKey: string;\r\n    private privParticipantId: string;\r\n\r\n    public constructor(participantId: string, key: string, value: boolean | number | string |  string[], sessionId?: string) {\r\n        super(sessionId);\r\n\r\n        this.privKey = key;\r\n        this.privValue = value;\r\n        this.privParticipantId = participantId;\r\n    }\r\n\r\n    public get value(): boolean | number | string |  string[] {\r\n        return this.privValue;\r\n    }\r\n\r\n    public get key(): string {\r\n        return this.privKey;\r\n    }\r\n    public get id(): string {\r\n        return this.privParticipantId;\r\n    }\r\n}\r\n\r\nexport class ParticipantsListEventArgs extends SessionEventArgs {\r\n\r\n    private privRoomId: string;\r\n    private privSessionToken: string;\r\n    private privTranslateTo: string[];\r\n    private privProfanityFilter: string;\r\n    private privRoomProfanityFilter: string;\r\n    private privIsRoomLocked: boolean;\r\n    private privIsMuteAll: boolean;\r\n    private privParticipants: IInternalParticipant[];\r\n\r\n    public constructor(conversationId: string, token: string, translateTo: string[], profanityFilter: string,\r\n                       roomProfanityFilter: string, isRoomLocked: boolean, isMuteAll: boolean, participants: IInternalParticipant[], sessionId?: string) {\r\n        super(sessionId);\r\n        this.privRoomId = conversationId;\r\n        this.privSessionToken = token;\r\n        this.privTranslateTo = translateTo;\r\n        this.privProfanityFilter = profanityFilter;\r\n        this.privRoomProfanityFilter = roomProfanityFilter;\r\n        this.privIsRoomLocked = isRoomLocked;\r\n        this.privIsRoomLocked = isMuteAll;\r\n        this.privParticipants = participants;\r\n    }\r\n    public get sessionToken(): string {\r\n        return this.privSessionToken;\r\n    }\r\n\r\n    public get conversationId(): string {\r\n        return this.privRoomId;\r\n    }\r\n\r\n    public get translateTo(): string[] {\r\n        return this.privTranslateTo;\r\n    }\r\n\r\n    public get profanityFilter(): string {\r\n        return this.privProfanityFilter;\r\n    }\r\n\r\n    public get roomProfanityFilter(): string {\r\n        return this.privRoomProfanityFilter;\r\n    }\r\n\r\n    public get isRoomLocked(): boolean {\r\n        return this.privIsRoomLocked;\r\n    }\r\n\r\n    public get isMuteAll(): boolean {\r\n        return this.privIsMuteAll;\r\n    }\r\n\r\n    public get participants(): IInternalParticipant[] {\r\n        return this.privParticipants;\r\n    }\r\n}\r\n\r\nexport class ConversationReceivedTranslationEventArgs {\r\n    private privPayload: ConversationTranslationResult;\r\n    private privCommand: string;\r\n    private privSessionId: string;\r\n\r\n    public constructor(command: string, payload: ConversationTranslationResult,  sessionId?: string) {\r\n        this.privPayload = payload;\r\n        this.privCommand = command;\r\n        this.privSessionId = sessionId;\r\n    }\r\n\r\n    public get payload(): ConversationTranslationResult {\r\n        return this.privPayload;\r\n    }\r\n\r\n    public get command(): string {\r\n        return this.privCommand;\r\n    }\r\n\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason } from \"./Exports.js\";\r\n\r\n/**\r\n * Base class for synthesis results\r\n * @class SynthesisResult\r\n * Added in version 1.20.0\r\n */\r\nexport class SynthesisResult {\r\n    private privResultId: string;\r\n    private privReason: ResultReason;\r\n    private privErrorDetails: string;\r\n    private privProperties: PropertyCollection;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    public constructor(resultId?: string, reason?: ResultReason, errorDetails?: string, properties?: PropertyCollection) {\r\n        this.privResultId = resultId;\r\n        this.privReason = reason;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privProperties = properties;\r\n    }\r\n\r\n    /**\r\n     * Specifies the result identifier.\r\n     * @member SynthesisResult.prototype.resultId\r\n     * @function\r\n     * @public\r\n     * @returns {string} Specifies the result identifier.\r\n     */\r\n    public get resultId(): string {\r\n        return this.privResultId;\r\n    }\r\n\r\n    /**\r\n     * Specifies status of the result.\r\n     * @member SynthesisResult.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {ResultReason} Specifies status of the result.\r\n     */\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful synthesis, provides details of the occurred error.\r\n     * @member SynthesisResult.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} a brief description of an error.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    /**\r\n     * The set of properties exposed in the result.\r\n     * @member SynthesisResult.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The set of properties exposed in the result.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    BackgroundEvent,\r\n    createNoDashGuid,\r\n    Events,\r\n    IAudioDestination,\r\n    INumberDictionary\r\n} from \"../../common/Exports.js\";\r\nimport { AudioStreamFormat, IPlayer } from \"../Exports.js\";\r\nimport { AudioOutputFormatImpl } from \"./AudioOutputFormat.js\";\r\nimport { PullAudioOutputStreamImpl } from \"./AudioOutputStream.js\";\r\nimport { AudioFormatTag } from \"./AudioStreamFormat.js\";\r\n\r\nconst MediaDurationPlaceholderSeconds = 60 * 30;\r\n\r\nconst AudioFormatToMimeType: INumberDictionary<string> = {\r\n    [AudioFormatTag.PCM]: \"audio/wav\",\r\n    [AudioFormatTag.MuLaw]: \"audio/x-wav\",\r\n    [AudioFormatTag.MP3]: \"audio/mpeg\",\r\n    [AudioFormatTag.OGG_OPUS]: \"audio/ogg\",\r\n    [AudioFormatTag.WEBM_OPUS]: \"audio/webm; codecs=opus\",\r\n    [AudioFormatTag.ALaw]: \"audio/x-wav\",\r\n    [AudioFormatTag.FLAC]: \"audio/flac\",\r\n    [AudioFormatTag.AMR_WB]: \"audio/amr-wb\",\r\n    [AudioFormatTag.G722]: \"audio/G722\",\r\n};\r\n\r\n/**\r\n * Represents the speaker playback audio destination, which only works in browser.\r\n * Note: the SDK will try to use <a href=\"https://www.w3.org/TR/media-source/\">Media Source Extensions</a> to play audio.\r\n * Mp3 format has better supports on Microsoft Edge, Chrome and Safari (desktop), so, it's better to specify mp3 format for playback.\r\n * @class SpeakerAudioDestination\r\n * Updated in version 1.17.0\r\n */\r\nexport class SpeakerAudioDestination implements IAudioDestination, IPlayer {\r\n    private readonly privId: string;\r\n    private privFormat: AudioOutputFormatImpl;\r\n    private privAudio: HTMLAudioElement;\r\n    private privMediaSource: MediaSource;\r\n    private privSourceBuffer: SourceBuffer;\r\n    private privPlaybackStarted: boolean = false;\r\n    private privAudioBuffer: ArrayBuffer[];\r\n    private privAppendingToBuffer: boolean = false;\r\n    private privMediaSourceOpened: boolean = false;\r\n    private privIsClosed: boolean;\r\n    private privIsPaused: boolean;\r\n    private privAudioOutputStream: PullAudioOutputStreamImpl;\r\n    private privBytesReceived: number = 0;\r\n\r\n    public constructor(audioDestinationId?: string) {\r\n        this.privId = audioDestinationId ? audioDestinationId : createNoDashGuid();\r\n        this.privIsPaused = false;\r\n        this.privIsClosed = false;\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public write(buffer: ArrayBuffer, cb?: () => void, err?: (error: string) => void): void {\r\n        if (this.privAudioBuffer !== undefined) {\r\n            this.privAudioBuffer.push(buffer);\r\n            this.updateSourceBuffer().then((): void => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string): void => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n        } else if (this.privAudioOutputStream !== undefined) {\r\n            this.privAudioOutputStream.write(buffer);\r\n            this.privBytesReceived += buffer.byteLength;\r\n        }\r\n    }\r\n\r\n    public close(cb?: () => void, err?: (error: string) => void): void {\r\n        this.privIsClosed = true;\r\n        if (this.privSourceBuffer !== undefined) {\r\n            this.handleSourceBufferUpdateEnd().then((): void => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string): void => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n        } else if (this.privAudioOutputStream !== undefined && typeof window !== \"undefined\") {\r\n            if ((this.privFormat.formatTag === AudioFormatTag.PCM || this.privFormat.formatTag === AudioFormatTag.MuLaw\r\n                || this.privFormat.formatTag === AudioFormatTag.ALaw) && this.privFormat.hasHeader === false) {\r\n                // eslint-disable-next-line no-console\r\n                console.warn(\"Play back is not supported for raw PCM, mulaw or alaw format without header.\");\r\n                if (!!this.onAudioEnd) {\r\n                    this.onAudioEnd(this);\r\n                }\r\n            } else {\r\n                let receivedAudio = new ArrayBuffer(this.privBytesReceived);\r\n                this.privAudioOutputStream.read(receivedAudio).then((): void => {\r\n                    receivedAudio = this.privFormat.addHeader(receivedAudio);\r\n                    const audioBlob = new Blob([receivedAudio], { type: AudioFormatToMimeType[this.privFormat.formatTag] });\r\n                    this.privAudio.src = window.URL.createObjectURL(audioBlob);\r\n                    this.notifyPlayback().then((): void => {\r\n                        if (!!cb) {\r\n                            cb();\r\n                        }\r\n                    }, (error: string): void => {\r\n                        if (!!err) {\r\n                            err(error);\r\n                        }\r\n                    });\r\n                }, (error: string): void => {\r\n                    if (!!err) {\r\n                        err(error);\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            // unsupported format, call onAudioEnd directly.\r\n            if (!!this.onAudioEnd) {\r\n                this.onAudioEnd(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    public set format(format: AudioStreamFormat) {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n        if (typeof (AudioContext) !== \"undefined\" || (typeof (window) !== \"undefined\" && typeof ((window as any).webkitAudioContext) !== \"undefined\")) {\r\n            this.privFormat = format as AudioOutputFormatImpl;\r\n            const mimeType: string = AudioFormatToMimeType[this.privFormat.formatTag];\r\n            if (mimeType === undefined) {\r\n                // eslint-disable-next-line no-console\r\n                console.warn(\r\n                    `Unknown mimeType for format ${AudioFormatTag[this.privFormat.formatTag]}; playback is not supported.`);\r\n\r\n            } else if (typeof (MediaSource) !== \"undefined\" && MediaSource.isTypeSupported(mimeType)) {\r\n                this.privAudio = new Audio();\r\n                this.privAudioBuffer = [];\r\n                this.privMediaSource = new MediaSource();\r\n                this.privAudio.src = URL.createObjectURL(this.privMediaSource);\r\n                this.privAudio.load();\r\n                this.privMediaSource.onsourceopen = (): void => {\r\n                    this.privMediaSourceOpened = true;\r\n                    this.privMediaSource.duration = MediaDurationPlaceholderSeconds;\r\n                    this.privSourceBuffer = this.privMediaSource.addSourceBuffer(mimeType);\r\n                    this.privSourceBuffer.onupdate = (): void => {\r\n                        this.updateSourceBuffer().catch((reason: string): void => {\r\n                            Events.instance.onEvent(new BackgroundEvent(reason));\r\n                        });\r\n                    };\r\n                    this.privSourceBuffer.onupdateend = (): void => {\r\n                        this.handleSourceBufferUpdateEnd().catch((reason: string): void => {\r\n                            Events.instance.onEvent(new BackgroundEvent(reason));\r\n                        });\r\n                    };\r\n                    this.privSourceBuffer.onupdatestart = (): void => {\r\n                        this.privAppendingToBuffer = false;\r\n                    };\r\n                };\r\n                this.updateSourceBuffer().catch((reason: string): void => {\r\n                    Events.instance.onEvent(new BackgroundEvent(reason));\r\n                });\r\n\r\n            } else {\r\n                // eslint-disable-next-line no-console\r\n                console.warn(\r\n                    `Format ${AudioFormatTag[this.privFormat.formatTag]} could not be played by MSE, streaming playback is not enabled.`);\r\n                this.privAudioOutputStream = new PullAudioOutputStreamImpl();\r\n                this.privAudioOutputStream.format = this.privFormat;\r\n                this.privAudio = new Audio();\r\n            }\r\n        }\r\n    }\r\n\r\n    public get volume(): number {\r\n        return this.privAudio?.volume ?? -1;\r\n    }\r\n\r\n    public set volume(volume: number) {\r\n        if (!!this.privAudio) {\r\n            this.privAudio.volume = volume;\r\n        }\r\n    }\r\n\r\n    public mute(): void {\r\n        if (!!this.privAudio) {\r\n            this.privAudio.muted = true;\r\n        }\r\n    }\r\n\r\n    public unmute(): void {\r\n        if (!!this.privAudio) {\r\n            this.privAudio.muted = false;\r\n        }\r\n    }\r\n\r\n    public get isClosed(): boolean {\r\n        return this.privIsClosed;\r\n    }\r\n\r\n    public get currentTime(): number {\r\n        if (this.privAudio !== undefined) {\r\n            return this.privAudio.currentTime;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    public pause(): void {\r\n        if (!this.privIsPaused && this.privAudio !== undefined) {\r\n            this.privAudio.pause();\r\n            this.privIsPaused = true;\r\n        }\r\n    }\r\n\r\n    public resume(cb?: () => void, err?: (error: string) => void): void {\r\n        if (this.privIsPaused && this.privAudio !== undefined) {\r\n            this.privAudio.play().then((): void => {\r\n                if (!!cb) {\r\n                    cb();\r\n                }\r\n            }, (error: string): void => {\r\n                if (!!err) {\r\n                    err(error);\r\n                }\r\n            });\r\n            this.privIsPaused = false;\r\n        }\r\n    }\r\n\r\n    public onAudioStart: (sender: IPlayer) => void;\r\n\r\n    public onAudioEnd: (sender: IPlayer) => void;\r\n\r\n    public get internalAudio(): HTMLAudioElement {\r\n        return this.privAudio;\r\n    }\r\n\r\n    private async updateSourceBuffer(): Promise<void> {\r\n        if (this.privAudioBuffer !== undefined && (this.privAudioBuffer.length > 0) && this.sourceBufferAvailable()) {\r\n            this.privAppendingToBuffer = true;\r\n            const binary = this.privAudioBuffer.shift();\r\n            try {\r\n                this.privSourceBuffer.appendBuffer(binary);\r\n            } catch (error) {\r\n                this.privAudioBuffer.unshift(binary);\r\n                // eslint-disable-next-line no-console\r\n                console.log(\r\n                    \"buffer filled, pausing addition of binaries until space is made\");\r\n                return;\r\n            }\r\n            await this.notifyPlayback();\r\n        } else if (this.canEndStream()) {\r\n            await this.handleSourceBufferUpdateEnd();\r\n        }\r\n    }\r\n\r\n    private async handleSourceBufferUpdateEnd(): Promise<void> {\r\n        if (this.canEndStream() && this.sourceBufferAvailable()) {\r\n            this.privMediaSource.endOfStream();\r\n            await this.notifyPlayback();\r\n        }\r\n    }\r\n\r\n    private async notifyPlayback(): Promise<void> {\r\n        if (!this.privPlaybackStarted && this.privAudio !== undefined) {\r\n            this.privPlaybackStarted = true;\r\n            if (!!this.onAudioStart) {\r\n                this.onAudioStart(this);\r\n            }\r\n            this.privAudio.onended = (): void => {\r\n                if (!!this.onAudioEnd) {\r\n                    this.onAudioEnd(this);\r\n                }\r\n            };\r\n            if (!this.privIsPaused) {\r\n                await this.privAudio.play();\r\n            }\r\n        }\r\n    }\r\n\r\n    private canEndStream(): boolean {\r\n        return (this.isClosed && this.privSourceBuffer !== undefined && (this.privAudioBuffer.length === 0)\r\n            && this.privMediaSourceOpened && !this.privAppendingToBuffer && this.privMediaSource.readyState === \"open\");\r\n    }\r\n\r\n    private sourceBufferAvailable(): boolean {\r\n        return (this.privSourceBuffer !== undefined && !this.privSourceBuffer.updating);\r\n    }\r\n}\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport {\r\n    createNoDashGuid,\r\n    IAudioDestination,\r\n    IStreamChunk,\r\n    Stream,\r\n} from \"../../common/Exports.js\";\r\nimport { Contracts } from \"../Contracts.js\";\r\nimport {\r\n    AudioStreamFormat,\r\n    PushAudioOutputStreamCallback\r\n} from \"../Exports.js\";\r\nimport { AudioOutputFormatImpl } from \"./AudioOutputFormat.js\";\r\n\r\n/**\r\n * Represents audio output stream used for custom audio output configurations.\r\n * @class AudioOutputStream\r\n */\r\nexport abstract class AudioOutputStream {\r\n\r\n    /**\r\n     * Creates and initializes an instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Sets the format of the AudioOutputStream\r\n     * Note: the format is set by the synthesizer before writing. Do not set it before passing it to AudioConfig\r\n     * @member AudioOutputStream.prototype.format\r\n     */\r\n    public abstract set format(format: AudioStreamFormat);\r\n\r\n    /**\r\n     * Creates a memory backed PullAudioOutputStream with the specified audio format.\r\n     * @member AudioOutputStream.createPullStream\r\n     * @function\r\n     * @public\r\n     * @returns {PullAudioOutputStream} The audio output stream being created.\r\n     */\r\n    public static createPullStream(): PullAudioOutputStream {\r\n        return PullAudioOutputStream.create();\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member AudioOutputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * Represents memory backed push audio output stream used for custom audio output configurations.\r\n * @class PullAudioOutputStream\r\n */\r\nexport abstract class PullAudioOutputStream extends AudioOutputStream {\r\n\r\n    /**\r\n     * Creates a memory backed PullAudioOutputStream with the specified audio format.\r\n     * @member PullAudioOutputStream.create\r\n     * @function\r\n     * @public\r\n     * @returns {PullAudioOutputStream} The push audio output stream being created.\r\n     */\r\n    public static create(): PullAudioOutputStream {\r\n        return new PullAudioOutputStreamImpl();\r\n    }\r\n\r\n    /**\r\n     * Reads audio data from the internal buffer.\r\n     * @member PullAudioOutputStream.prototype.read\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - An ArrayBuffer to store the read data.\r\n     * @returns {Promise<number>} Audio buffer length has been read.\r\n     */\r\n    public abstract read(dataBuffer: ArrayBuffer): Promise<number>;\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PullAudioOutputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n\r\n/**\r\n * Represents memory backed push audio output stream used for custom audio output configurations.\r\n * @private\r\n * @class PullAudioOutputStreamImpl\r\n */\r\nexport class PullAudioOutputStreamImpl extends PullAudioOutputStream implements IAudioDestination {\r\n    private privFormat: AudioOutputFormatImpl;\r\n    private privId: string;\r\n    private privStream: Stream<ArrayBuffer>;\r\n    private privLastChunkView: Int8Array;\r\n\r\n    /**\r\n     * Creates and initializes an instance with the given values.\r\n     * @constructor\r\n     */\r\n    public constructor() {\r\n        super();\r\n        this.privId = createNoDashGuid();\r\n        this.privStream = new Stream<ArrayBuffer>();\r\n    }\r\n\r\n    /**\r\n     * Sets the format information to the stream. For internal use only.\r\n     * @param {AudioStreamFormat} format - the format to be set.\r\n     */\r\n    public set format(format: AudioStreamFormat) {\r\n        if (format === undefined || format === null) {\r\n            this.privFormat = AudioOutputFormatImpl.getDefaultOutputFormat();\r\n        }\r\n        this.privFormat = format as AudioOutputFormatImpl;\r\n    }\r\n\r\n    /**\r\n     * Format information for the audio\r\n     */\r\n    public get format(): AudioStreamFormat {\r\n        return this.privFormat;\r\n    }\r\n\r\n    /**\r\n     * Checks if the stream is closed\r\n     * @member PullAudioOutputStreamImpl.prototype.isClosed\r\n     * @property\r\n     * @public\r\n     */\r\n    public get isClosed(): boolean {\r\n        return this.privStream.isClosed;\r\n    }\r\n\r\n    /**\r\n     * Gets the id of the stream\r\n     * @member PullAudioOutputStreamImpl.prototype.id\r\n     * @property\r\n     * @public\r\n     */\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    /**\r\n     * Reads audio data from the internal buffer.\r\n     * @member PullAudioOutputStreamImpl.prototype.read\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - An ArrayBuffer to store the read data.\r\n     * @returns {Promise<number>} - Audio buffer length has been read.\r\n     */\r\n    public async read(dataBuffer: ArrayBuffer): Promise<number> {\r\n        const intView: Int8Array = new Int8Array(dataBuffer);\r\n        let totalBytes: number = 0;\r\n\r\n        if (this.privLastChunkView !== undefined) {\r\n            if (this.privLastChunkView.length > dataBuffer.byteLength) {\r\n                intView.set(this.privLastChunkView.slice(0, dataBuffer.byteLength));\r\n                this.privLastChunkView = this.privLastChunkView.slice(dataBuffer.byteLength);\r\n                return Promise.resolve(dataBuffer.byteLength);\r\n            }\r\n            intView.set(this.privLastChunkView);\r\n            totalBytes = this.privLastChunkView.length;\r\n            this.privLastChunkView = undefined;\r\n        }\r\n\r\n        // Until we have the minimum number of bytes to send in a transmission, keep asking for more.\r\n        while (totalBytes < dataBuffer.byteLength && !this.privStream.isReadEnded) {\r\n            const chunk: IStreamChunk<ArrayBuffer> = await this.privStream.read();\r\n            if (chunk !== undefined && !chunk.isEnd) {\r\n                let tmpBuffer: ArrayBuffer;\r\n                if (chunk.buffer.byteLength > dataBuffer.byteLength - totalBytes) {\r\n                    tmpBuffer = chunk.buffer.slice(0, dataBuffer.byteLength - totalBytes);\r\n                    this.privLastChunkView = new Int8Array(chunk.buffer.slice(dataBuffer.byteLength - totalBytes));\r\n                } else {\r\n                    tmpBuffer = chunk.buffer;\r\n                }\r\n                intView.set(new Int8Array(tmpBuffer), totalBytes);\r\n                totalBytes += tmpBuffer.byteLength;\r\n            } else {\r\n                this.privStream.readEnded();\r\n            }\r\n        }\r\n        return totalBytes;\r\n    }\r\n\r\n    /**\r\n     * Writes the audio data specified by making an internal copy of the data.\r\n     * @member PullAudioOutputStreamImpl.prototype.write\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The audio buffer of which this function will make a copy.\r\n     */\r\n    public write(dataBuffer: ArrayBuffer): void {\r\n        Contracts.throwIfNullOrUndefined(this.privStream, \"must set format before writing\");\r\n        this.privStream.writeStreamChunk({\r\n            buffer: dataBuffer,\r\n            isEnd: false,\r\n            timeReceived: Date.now()\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Closes the stream.\r\n     * @member PullAudioOutputStreamImpl.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        this.privStream.close();\r\n    }\r\n}\r\n\r\n/*\r\n * Represents audio output stream used for custom audio output configurations.\r\n * @class PushAudioOutputStream\r\n */\r\nexport abstract class PushAudioOutputStream extends AudioOutputStream {\r\n    /**\r\n     * Creates and initializes and instance.\r\n     * @constructor\r\n     */\r\n    protected constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Creates a PushAudioOutputStream that delegates to the specified callback interface for\r\n     * write() and close() methods.\r\n     * @member PushAudioOutputStream.create\r\n     * @function\r\n     * @public\r\n     * @param {PushAudioOutputStreamCallback} callback - The custom audio output object,\r\n     * derived from PushAudioOutputStreamCallback\r\n     * @returns {PushAudioOutputStream} The push audio output stream being created.\r\n     */\r\n    public static create(callback: PushAudioOutputStreamCallback): PushAudioOutputStream {\r\n        return new PushAudioOutputStreamImpl(callback);\r\n    }\r\n\r\n    /**\r\n     * Explicitly frees any external resource attached to the object\r\n     * @member PushAudioOutputStream.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n\r\n}\r\n\r\n/**\r\n * Represents audio output stream used for custom audio output configurations.\r\n * @private\r\n * @class PushAudioOutputStreamImpl\r\n */\r\nexport class PushAudioOutputStreamImpl extends PushAudioOutputStream implements IAudioDestination {\r\n    private readonly privId: string;\r\n    private privCallback: PushAudioOutputStreamCallback;\r\n\r\n    /**\r\n     * Creates a PushAudioOutputStream that delegates to the specified callback interface for\r\n     * read() and close() methods.\r\n     * @constructor\r\n     * @param {PushAudioOutputStreamCallback} callback - The custom audio output object,\r\n     * derived from PushAudioOutputStreamCallback\r\n     */\r\n    public constructor(callback: PushAudioOutputStreamCallback) {\r\n        super();\r\n        this.privId = createNoDashGuid();\r\n        this.privCallback = callback;\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    public set format(format: AudioStreamFormat) { }\r\n\r\n    public write(buffer: ArrayBuffer): void {\r\n        if (!!this.privCallback.write) {\r\n            this.privCallback.write(buffer);\r\n        }\r\n    }\r\n\r\n    public close(): void {\r\n        if (!!this.privCallback.close) {\r\n            this.privCallback.close();\r\n        }\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable @typescript-eslint/no-empty-function */\r\n\r\nimport { PathLike } from \"fs\";\r\nimport { IRestResponse } from \"../common.browser/RestMessageAdapter.js\";\r\nimport {\r\n    IAuthentication,\r\n    ISynthesisConnectionFactory,\r\n    SpeechSynthesisConnectionFactory,\r\n    SynthesisAdapterBase,\r\n    SpeechSynthesisAdapter,\r\n    SynthesisRestAdapter,\r\n    SynthesizerConfig,\r\n} from \"../common.speech/Exports.js\";\r\nimport {\r\n    createNoDashGuid,\r\n    marshalPromiseToCallbacks,\r\n} from \"../common/Exports.js\";\r\nimport { AudioOutputConfigImpl } from \"./Audio/AudioConfig.js\";\r\nimport { AudioFileWriter } from \"./Audio/AudioFileWriter.js\";\r\nimport { AudioOutputFormatImpl } from \"./Audio/AudioOutputFormat.js\";\r\nimport {\r\n    PullAudioOutputStreamImpl,\r\n    PushAudioOutputStreamImpl\r\n} from \"./Audio/AudioOutputStream.js\";\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport {\r\n    AudioConfig,\r\n    AudioOutputStream,\r\n    AutoDetectSourceLanguageConfig,\r\n    PropertyId,\r\n    PullAudioOutputStream,\r\n    PushAudioOutputStreamCallback,\r\n    SpeechConfig,\r\n    SpeechSynthesisBookmarkEventArgs,\r\n    SpeechSynthesisEventArgs,\r\n    SpeechSynthesisOutputFormat,\r\n    SpeechSynthesisResult,\r\n    SpeechSynthesisVisemeEventArgs,\r\n    SpeechSynthesisWordBoundaryEventArgs,\r\n    SynthesisVoicesResult,\r\n    Synthesizer\r\n} from \"./Exports.js\";\r\nimport { SpeechConfigImpl } from \"./SpeechConfig.js\";\r\nimport { SynthesisRequest } from \"./Synthesizer.js\";\r\n\r\n/**\r\n * Defines the class SpeechSynthesizer for text to speech.\r\n * Updated in version 1.16.0\r\n * @class SpeechSynthesizer\r\n */\r\nexport class SpeechSynthesizer extends Synthesizer {\r\n    protected audioConfig: AudioConfig;\r\n\r\n    /**\r\n     * Defines event handler for synthesis start events.\r\n     * @member SpeechSynthesizer.prototype.synthesisStarted\r\n     * @function\r\n     * @public\r\n     */\r\n    public synthesisStarted: (sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for synthesizing events.\r\n     * @member SpeechSynthesizer.prototype.synthesizing\r\n     * @function\r\n     * @public\r\n     */\r\n    public synthesizing: (sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for synthesis completed events.\r\n     * @member SpeechSynthesizer.prototype.synthesisCompleted\r\n     * @function\r\n     * @public\r\n     */\r\n    public synthesisCompleted: (sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for synthesis cancelled events.\r\n     * @member SpeechSynthesizer.prototype.SynthesisCanceled\r\n     * @function\r\n     * @public\r\n     */\r\n    public SynthesisCanceled: (sender: SpeechSynthesizer, event: SpeechSynthesisEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for word boundary events\r\n     * @member SpeechSynthesizer.prototype.wordBoundary\r\n     * @function\r\n     * @public\r\n     */\r\n    public wordBoundary: (sender: SpeechSynthesizer, event: SpeechSynthesisWordBoundaryEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for bookmark reached events\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesizer.prototype.bookmarkReached\r\n     * @function\r\n     * @public\r\n     */\r\n    public bookmarkReached: (sender: SpeechSynthesizer, event: SpeechSynthesisBookmarkEventArgs) => void;\r\n\r\n    /**\r\n     * Defines event handler for viseme received event\r\n     * Added in version 1.16.0\r\n     * @member SpeechSynthesizer.prototype.visemeReceived\r\n     * @function\r\n     * @public\r\n     */\r\n    public visemeReceived: (sender: SpeechSynthesizer, event: SpeechSynthesisVisemeEventArgs) => void;\r\n\r\n    /**\r\n     * SpeechSynthesizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - An set of initial properties for this synthesizer.\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the synthesizer.\r\n     */\r\n    public constructor(speechConfig: SpeechConfig, audioConfig?: AudioConfig | null) {\r\n        super(speechConfig);\r\n\r\n        if (audioConfig !== null) {\r\n            if (audioConfig === undefined) {\r\n                this.audioConfig = (typeof window === \"undefined\") ? undefined : AudioConfig.fromDefaultSpeakerOutput();\r\n            } else {\r\n                this.audioConfig = audioConfig;\r\n            }\r\n        }\r\n\r\n        this.privConnectionFactory = new SpeechSynthesisConnectionFactory();\r\n        this.implCommonSynthesizeSetup();\r\n    }\r\n\r\n    /**\r\n     * SpeechSynthesizer constructor.\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - an set of initial properties for this synthesizer\r\n     * @param {AutoDetectSourceLanguageConfig} autoDetectSourceLanguageConfig - An source language detection configuration associated with the synthesizer\r\n     * @param {AudioConfig} audioConfig - An optional audio configuration associated with the synthesizer\r\n     */\r\n    public static FromConfig(speechConfig: SpeechConfig, autoDetectSourceLanguageConfig: AutoDetectSourceLanguageConfig, audioConfig?: AudioConfig | null): SpeechSynthesizer {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        autoDetectSourceLanguageConfig.properties.mergeTo(speechConfigImpl.properties);\r\n        return new SpeechSynthesizer(speechConfig, audioConfig);\r\n    }\r\n\r\n    /**\r\n     * Executes speech synthesis on plain text.\r\n     * The task returns the synthesis result.\r\n     * @member SpeechSynthesizer.prototype.speakTextAsync\r\n     * @function\r\n     * @public\r\n     * @param text - Text to be synthesized.\r\n     * @param cb - Callback that received the SpeechSynthesisResult.\r\n     * @param err - Callback invoked in case of an error.\r\n     * @param stream - AudioOutputStream to receive the synthesized audio.\r\n     */\r\n    public speakTextAsync(text: string, cb?: (e: SpeechSynthesisResult) => void, err?: (e: string) => void, stream?: AudioOutputStream | PushAudioOutputStreamCallback | PathLike): void {\r\n        this.speakImpl(text, false, cb, err, stream);\r\n    }\r\n\r\n    /**\r\n     * Executes speech synthesis on SSML.\r\n     * The task returns the synthesis result.\r\n     * @member SpeechSynthesizer.prototype.speakSsmlAsync\r\n     * @function\r\n     * @public\r\n     * @param ssml - SSML to be synthesized.\r\n     * @param cb - Callback that received the SpeechSynthesisResult.\r\n     * @param err - Callback invoked in case of an error.\r\n     * @param stream - AudioOutputStream to receive the synthesized audio.\r\n     */\r\n    public speakSsmlAsync(ssml: string, cb?: (e: SpeechSynthesisResult) => void, err?: (e: string) => void, stream?: AudioOutputStream | PushAudioOutputStreamCallback | PathLike): void {\r\n        this.speakImpl(ssml, true, cb, err, stream);\r\n    }\r\n\r\n    /**\r\n     * Get list of synthesis voices available.\r\n     * The task returns the synthesis voice result.\r\n     * @member SpeechSynthesizer.prototype.getVoicesAsync\r\n     * @function\r\n     * @async\r\n     * @public\r\n     * @param locale - Locale of voices in BCP-47 format; if left empty, get all available voices.\r\n     * @return {Promise<SynthesisVoicesResult>} - Promise of a SynthesisVoicesResult.\r\n     */\r\n    public async getVoicesAsync(locale: string = \"\"): Promise<SynthesisVoicesResult> {\r\n        return this.getVoices(locale);\r\n    }\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member SpeechSynthesizer.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(cb?: () => void, err?: (error: string) => void): void {\r\n        Contracts.throwIfDisposed(this.privDisposed);\r\n\r\n        marshalPromiseToCallbacks(this.dispose(true), cb, err);\r\n    }\r\n\r\n    /**\r\n     * @Internal\r\n     * Do not use externally, object returned will change without warning or notice.\r\n     */\r\n    public get internalData(): object {\r\n        return this.privAdapter;\r\n    }\r\n\r\n    //\r\n    // ################################################################################################################\r\n    // IMPLEMENTATION.\r\n    // ################################################################################################################\r\n    //\r\n\r\n    // Creates the synthesis adapter\r\n    protected createSynthesisAdapter(\r\n        authentication: IAuthentication,\r\n        connectionFactory: ISynthesisConnectionFactory,\r\n        synthesizerConfig: SynthesizerConfig): SynthesisAdapterBase {\r\n        return new SpeechSynthesisAdapter(authentication, connectionFactory,\r\n            synthesizerConfig, this, this.audioConfig as AudioOutputConfigImpl);\r\n    }\r\n\r\n    protected createRestSynthesisAdapter(\r\n        authentication: IAuthentication,\r\n        synthesizerConfig: SynthesizerConfig): SynthesisRestAdapter {\r\n        return new SynthesisRestAdapter(synthesizerConfig, authentication);\r\n    }\r\n\r\n    protected implCommonSynthesizeSetup(): void {\r\n        super.implCommonSynthesizeSetup();\r\n\r\n        this.privAdapter.audioOutputFormat = AudioOutputFormatImpl.fromSpeechSynthesisOutputFormat(\r\n            SpeechSynthesisOutputFormat[this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthOutputFormat, undefined) as keyof typeof SpeechSynthesisOutputFormat]\r\n        );\r\n    }\r\n\r\n    protected speakImpl(text: string, IsSsml: boolean, cb?: (e: SpeechSynthesisResult) => void, err?: (e: string) => void, dataStream?: AudioOutputStream | PushAudioOutputStreamCallback | PathLike): void {\r\n        try {\r\n            Contracts.throwIfDisposed(this.privDisposed);\r\n            const requestId = createNoDashGuid();\r\n            let audioDestination;\r\n            if (dataStream instanceof PushAudioOutputStreamCallback) {\r\n                audioDestination = new PushAudioOutputStreamImpl(dataStream);\r\n            } else if (dataStream instanceof PullAudioOutputStream) {\r\n                audioDestination = dataStream as PullAudioOutputStreamImpl;\r\n            } else if (dataStream !== undefined) {\r\n                audioDestination = new AudioFileWriter(dataStream as PathLike);\r\n            } else {\r\n                audioDestination = undefined;\r\n            }\r\n            this.synthesisRequestQueue.enqueue(new SynthesisRequest(requestId, text, IsSsml, (e: SpeechSynthesisResult): void => {\r\n                this.privSynthesizing = false;\r\n                if (!!cb) {\r\n                    try {\r\n                        cb(e);\r\n                    } catch (e) {\r\n                        if (!!err) {\r\n                            err(e as string);\r\n                        }\r\n                    }\r\n                }\r\n                cb = undefined;\r\n                /* eslint-disable no-empty */\r\n                this.adapterSpeak().catch((): void => { });\r\n\r\n            }, (e: string): void => {\r\n                if (!!err) {\r\n                    err(e);\r\n                }\r\n            }, audioDestination));\r\n\r\n            /* eslint-disable no-empty-function */\r\n            this.adapterSpeak().catch((): void => { });\r\n\r\n        } catch (error) {\r\n            if (!!err) {\r\n                if (error instanceof Error) {\r\n                    const typedError: Error = error;\r\n                    err(typedError.name + \": \" + typedError.message);\r\n                } else {\r\n                    err(error as string);\r\n                }\r\n            }\r\n\r\n            // Destroy the synthesizer.\r\n            /* eslint-disable no-empty */\r\n            this.dispose(true).catch((): void => { });\r\n        }\r\n    }\r\n\r\n    protected async getVoices(locale: string): Promise<SynthesisVoicesResult> {\r\n        const requestId = createNoDashGuid();\r\n        const response: IRestResponse = await this.privRestAdapter.getVoicesList(requestId);\r\n        if (response.ok && Array.isArray(response.json)) {\r\n            let json = response.json;\r\n            if (!!locale && locale.length > 0) {\r\n                json = json.filter((item: { Locale: string }): boolean => !!item.Locale && item.Locale.toLowerCase() === locale.toLowerCase() );\r\n            }\r\n            return new SynthesisVoicesResult(requestId, json, undefined);\r\n        } else {\r\n            return new SynthesisVoicesResult(requestId, undefined, `Error: ${response.status}: ${response.statusText}`);\r\n        }\r\n   }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\nimport { CancellationErrorCodePropertyName, SpeakerResponse } from \"../common.speech/Exports.js\";\r\nimport {\r\n    CancellationDetailsBase,\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n} from \"./Exports.js\";\r\n\r\nexport enum SpeakerRecognitionResultType {\r\n    Verify,\r\n    Identify\r\n}\r\n\r\n/**\r\n * Output format\r\n * @class SpeakerRecognitionResult\r\n */\r\nexport class SpeakerRecognitionResult {\r\n    private privReason: ResultReason;\r\n    private privProperties: PropertyCollection;\r\n    private privProfileId: string;\r\n    private privScore: number;\r\n    private privErrorDetails: string;\r\n\r\n    public constructor(response: SpeakerResponse, resultReason: ResultReason = ResultReason.RecognizedSpeaker, cancellationErrorCode: CancellationErrorCode = CancellationErrorCode.NoError, errorDetails: string = \"\") {\r\n        this.privProperties = new PropertyCollection();\r\n        const resultType = response.scenario === \"TextIndependentIdentification\" ? SpeakerRecognitionResultType.Identify : SpeakerRecognitionResultType.Verify;\r\n        this.privReason = resultReason;\r\n        if (this.privReason !== ResultReason.Canceled) {\r\n            if (resultType === SpeakerRecognitionResultType.Identify) {\r\n                this.privProfileId = response.identificationResult.identifiedProfile.profileId;\r\n                this.privScore = response.identificationResult.identifiedProfile.score;\r\n                this.privReason = ResultReason.RecognizedSpeakers;\r\n            } else {\r\n                this.privScore = response.verificationResult.score;\r\n                if (response.verificationResult.recognitionResult.toLowerCase() !== \"accept\") {\r\n                    this.privReason = ResultReason.NoMatch;\r\n                }\r\n                if (response.verificationResult.profileId !== undefined && response.verificationResult.profileId !== \"\") {\r\n                    this.privProfileId = response.verificationResult.profileId;\r\n                }\r\n            }\r\n        } else {\r\n            this.privErrorDetails = errorDetails;\r\n            this.privProperties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[cancellationErrorCode]);\r\n        }\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceResponse_JsonResult, JSON.stringify(response));\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get profileId(): string {\r\n        return this.privProfileId;\r\n    }\r\n\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    public get score(): number {\r\n        return this.privScore;\r\n    }\r\n}\r\n\r\n/**\r\n * @class SpeakerRecognitionCancellationDetails\r\n */\r\nexport class SpeakerRecognitionCancellationDetails extends CancellationDetailsBase {\r\n\r\n    private constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        super(reason, errorDetails, errorCode);\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of SpeakerRecognitionCancellationDetails object for the canceled SpeakerRecognitionResult\r\n     * @member SpeakerRecognitionCancellationDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {SpeakerRecognitionResult} result - The result that was canceled.\r\n     * @returns {SpeakerRecognitionCancellationDetails} The cancellation details object being created.\r\n     */\r\n    public static fromResult(result: SpeakerRecognitionResult): SpeakerRecognitionCancellationDetails {\r\n        const reason = CancellationReason.Error;\r\n        let errorCode: CancellationErrorCode = CancellationErrorCode.NoError;\r\n\r\n        if (!!result.properties) {\r\n            errorCode = CancellationErrorCode[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError]) as keyof typeof CancellationErrorCode];\r\n        }\r\n\r\n        return new SpeakerRecognitionCancellationDetails(reason, result.errorDetails, errorCode);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    DynamicGrammarBuilder,\r\n    IDynamicGrammar,\r\n} from \"./Exports.js\";\r\n\r\ninterface Context {\r\n    [section: string]: any;\r\n}\r\n\r\ninterface PhraseContext {\r\n    [section: string]: any;\r\n    phraseDetection?: {\r\n        enrichment?: {\r\n            pronunciationAssessment: any;\r\n            contentAssessment?: {\r\n                topic: string;\r\n            };\r\n        };\r\n        speakerDiarization?: {\r\n            mode?: string;\r\n            audioSessionId?: string;\r\n            audioOffsetMs?: number;\r\n            identityProvider?: string;\r\n        };\r\n        mode?: string;\r\n    };\r\n    phraseOutput?: {\r\n        detailed?: {\r\n            options?: string[];\r\n        };\r\n        format?: any;\r\n    };\r\n}\r\n\r\n/**\r\n * Represents the JSON used in the speech.context message sent to the speech service.\r\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\r\n */\r\nexport class SpeechContext {\r\n    private privContext: PhraseContext = {};\r\n    private privDynamicGrammar: DynamicGrammarBuilder;\r\n\r\n    public constructor(dynamicGrammar: DynamicGrammarBuilder) {\r\n        this.privDynamicGrammar = dynamicGrammar;\r\n    }\r\n\r\n    /**\r\n     * Gets a section of the speech.context object.\r\n     * @param sectionName Name of the section to get.\r\n     * @return string or Context JSON serializable object that represents the value.\r\n     */\r\n    public getSection(sectionName: string): string | Context {\r\n        return (this.privContext[sectionName] || {}) as string | Context;\r\n    }\r\n\r\n    /**\r\n     * Adds a section to the speech.context object.\r\n     * @param sectionName Name of the section to add.\r\n     * @param value JSON serializable object that represents the value.\r\n     */\r\n    public setSection(sectionName: string, value: string | Context): void {\r\n        this.privContext[sectionName] = value;\r\n    }\r\n\r\n    /**\r\n     * @Internal\r\n     * This is only used by pronunciation assessment config.\r\n     * Do not use externally, object returned will change without warning or notice.\r\n     */\r\n    public setPronunciationAssessmentParams(params: string,\r\n        contentAssessmentTopic: string,\r\n        isSpeakerDiarizationEnabled: boolean = false): void {\r\n        if (this.privContext.phraseDetection === undefined) {\r\n            this.privContext.phraseDetection = {\r\n                enrichment: {\r\n                    pronunciationAssessment: {}\r\n                }\r\n            };\r\n        }\r\n        if (this.privContext.phraseDetection.enrichment === undefined) {\r\n            this.privContext.phraseDetection.enrichment = {\r\n                pronunciationAssessment: {}\r\n            };\r\n        }\r\n        this.privContext.phraseDetection.enrichment.pronunciationAssessment = JSON.parse(params) as Context;\r\n        if (isSpeakerDiarizationEnabled) {\r\n            this.privContext.phraseDetection.mode = \"Conversation\";\r\n        }\r\n        this.setWordLevelTimings();\r\n        this.privContext.phraseOutput.detailed.options.push(\"PronunciationAssessment\");\r\n        if (this.privContext.phraseOutput.detailed.options.indexOf(\"SNR\") === -1) {\r\n            this.privContext.phraseOutput.detailed.options.push(\"SNR\");\r\n        }\r\n        if (!!contentAssessmentTopic) {\r\n            this.privContext.phraseDetection.enrichment.contentAssessment = {\r\n                topic: contentAssessmentTopic\r\n            };\r\n            this.privContext.phraseOutput.detailed.options.push(\"ContentAssessment\");\r\n        }\r\n    }\r\n\r\n    public setDetailedOutputFormat(): void {\r\n        if (this.privContext.phraseOutput === undefined) {\r\n            this.privContext.phraseOutput = {\r\n                detailed: {\r\n                    options: []\r\n                },\r\n                format: {}\r\n            };\r\n        }\r\n        if (this.privContext.phraseOutput.detailed === undefined) {\r\n            this.privContext.phraseOutput.detailed = {\r\n                options: []\r\n            };\r\n        }\r\n        this.privContext.phraseOutput.format = \"Detailed\";\r\n    }\r\n\r\n    public setWordLevelTimings(): void {\r\n        if (this.privContext.phraseOutput === undefined) {\r\n            this.privContext.phraseOutput = {\r\n                detailed: {\r\n                    options: []\r\n                },\r\n                format: {}\r\n            };\r\n        }\r\n        if (this.privContext.phraseOutput.detailed === undefined) {\r\n            this.privContext.phraseOutput.detailed = {\r\n                options: []\r\n            };\r\n        }\r\n        this.privContext.phraseOutput.format = \"Detailed\";\r\n        if (this.privContext.phraseOutput.detailed.options.indexOf(\"WordTimings\") === -1) {\r\n            this.privContext.phraseOutput.detailed.options.push(\"WordTimings\");\r\n        }\r\n    }\r\n\r\n    public setSpeakerDiarizationAudioOffsetMs(audioOffsetMs: number): void {\r\n        this.privContext.phraseDetection.speakerDiarization.audioOffsetMs = audioOffsetMs;\r\n    }\r\n\r\n    public toJSON(): string {\r\n\r\n        const dgi: IDynamicGrammar = this.privDynamicGrammar.generateGrammarObject();\r\n        this.setSection(\"dgi\", dgi);\r\n\r\n        const ret: string = JSON.stringify(this.privContext);\r\n        return ret;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// Make sure not to export internal modules.\r\n//\r\nexport * from \"./CognitiveSubscriptionKeyAuthentication.js\";\r\nexport * from \"./CognitiveTokenAuthentication.js\";\r\nexport * from \"./IAuthentication.js\";\r\nexport * from \"./IConnectionFactory.js\";\r\nexport * from \"./ISynthesisConnectionFactory.js\";\r\nexport * from \"./IntentConnectionFactory.js\";\r\nexport * from \"./SpeakerRecognitionConnectionFactory.js\";\r\nexport * from \"./RecognitionEvents.js\";\r\nexport * from \"./ServiceRecognizerBase.js\";\r\nexport * from \"./ConversationServiceRecognizer.js\";\r\nexport * from \"./RecognizerConfig.js\";\r\nexport * from \"./SpeechServiceInterfaces.js\";\r\nexport * from \"./WebsocketMessageFormatter.js\";\r\nexport * from \"./SpeechConnectionFactory.js\";\r\nexport * from \"./ConversationTranscriberConnectionFactory.js\";\r\nexport * from \"./TranscriberConnectionFactory.js\";\r\nexport * from \"./TranslationConnectionFactory.js\";\r\nexport * from \"./SpeechSynthesisConnectionFactory.js\";\r\nexport * from \"./EnumTranslation.js\";\r\nexport * from \"./ServiceMessages/Enums.js\";\r\nexport * from \"./ServiceMessages/TranslationSynthesisEnd.js\";\r\nexport * from \"./ServiceMessages/TranslationHypothesis.js\";\r\nexport * from \"./ServiceMessages/TranslationPhrase.js\";\r\nexport * from \"./TranslationServiceRecognizer.js\";\r\nexport * from \"./ServiceMessages/SpeechDetected.js\";\r\nexport * from \"./ServiceMessages/SpeechHypothesis.js\";\r\nexport * from \"./ServiceMessages/SpeechKeyword.js\";\r\nexport * from \"./SpeechServiceRecognizer.js\";\r\nexport * from \"./ConversationTranscriptionServiceRecognizer.js\";\r\nexport * from \"./TranscriptionServiceRecognizer.js\";\r\nexport * from \"./ServiceMessages/DetailedSpeechPhrase.js\";\r\nexport * from \"./ServiceMessages/SimpleSpeechPhrase.js\";\r\nexport * from \"./AddedLmIntent.js\";\r\nexport * from \"./IntentServiceRecognizer.js\";\r\nexport * from \"./ServiceMessages/IntentResponse.js\";\r\nexport * from \"./ServiceMessages/SpeakerResponse.js\";\r\nexport * from \"./RequestSession.js\";\r\nexport * from \"./SpeechContext.js\";\r\nexport * from \"./DynamicGrammarBuilder.js\";\r\nexport * from \"./DynamicGrammarInterfaces.js\";\r\nexport * from \"./DialogServiceAdapter.js\";\r\nexport * from \"./AgentConfig.js\";\r\nexport * from \"./Transcription/Exports.js\";\r\nexport * from \"./ServiceMessages/SynthesisAudioMetadata.js\";\r\nexport * from \"./SynthesisTurn.js\";\r\nexport * from \"./SynthesisAdapterBase.js\";\r\nexport { AvatarSynthesisAdapter } from \"./AvatarSynthesisAdapter.js\";\r\nexport { SpeechSynthesisAdapter } from \"./SpeechSynthesisAdapter.js\";\r\nexport * from \"./SynthesisRestAdapter.js\";\r\nexport * from \"./SynthesizerConfig.js\";\r\nexport * from \"./SynthesisContext.js\";\r\nexport * from \"./SpeakerRecognitionConfig.js\";\r\nexport * from \"./SpeakerServiceRecognizer.js\";\r\nexport * from \"./VoiceServiceRecognizer.js\";\r\nexport * from \"./SpeechServiceConfig.js\";\r\n\r\nexport const OutputFormatPropertyName: string = \"OutputFormat\";\r\nexport const CancellationErrorCodePropertyName: string = \"CancellationErrorCode\";\r\nexport const ServicePropertiesPropertyName: string = \"ServiceProperties\";\r\nexport const ForceDictationPropertyName: string = \"ForceDictation\";\r\nexport const AutoDetectSourceLanguagesOpenRangeOptionName: string = \"UND\";\r\n","\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    EventType,\r\n    PlatformEvent\r\n} from \"./Exports.js\";\r\n\r\nexport class BackgroundEvent extends PlatformEvent {\r\n    private privError: string;\r\n\r\n    public constructor(error: string) {\r\n        super(\"BackgroundEvent\", EventType.Error);\r\n        this.privError = error;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    connectivity,\r\n    ISpeechConfigAudioDevice,\r\n    type,\r\n} from \"../common.speech/Exports.js\";\r\nimport {\r\n    AudioSourceErrorEvent,\r\n    AudioSourceEvent,\r\n    AudioSourceInitializingEvent,\r\n    AudioSourceOffEvent,\r\n    AudioSourceReadyEvent,\r\n    AudioStreamNodeAttachedEvent,\r\n    AudioStreamNodeAttachingEvent,\r\n    AudioStreamNodeDetachedEvent,\r\n    AudioStreamNodeErrorEvent,\r\n    ChunkedArrayBufferStream,\r\n    createNoDashGuid,\r\n    Deferred,\r\n    Events,\r\n    EventSource,\r\n    IAudioSource,\r\n    IAudioStreamNode,\r\n    IStreamChunk,\r\n    IStringDictionary,\r\n    Stream,\r\n} from \"../common/Exports.js\";\r\nimport { AudioStreamFormat, AudioStreamFormatImpl } from \"../sdk/Audio/AudioStreamFormat.js\";\r\n\r\nexport class FileAudioSource implements IAudioSource {\r\n\r\n    private privAudioFormatPromise: Promise<AudioStreamFormatImpl>;\r\n\r\n    private privStreams: IStringDictionary<Stream<ArrayBuffer>> = {};\r\n\r\n    private privId: string;\r\n\r\n    private privEvents: EventSource<AudioSourceEvent>;\r\n\r\n    private privSource: Blob | Buffer;\r\n\r\n    private privFilename: string;\r\n\r\n    private privHeaderEnd: number = 44;\r\n\r\n    public constructor(file: File | Buffer, filename?: string, audioSourceId?: string) {\r\n        this.privId = audioSourceId ? audioSourceId : createNoDashGuid();\r\n        this.privEvents = new EventSource<AudioSourceEvent>();\r\n        this.privSource = file;\r\n        if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && this.privSource instanceof Blob) {\r\n            this.privFilename = (file as File).name;\r\n        } else {\r\n            this.privFilename = filename || \"unknown.wav\";\r\n        }\r\n\r\n        // Read the header.\r\n        this.privAudioFormatPromise = this.readHeader();\r\n    }\r\n\r\n    public get format(): Promise<AudioStreamFormatImpl> {\r\n        return this.privAudioFormatPromise;\r\n    }\r\n\r\n    public turnOn(): Promise<void> {\r\n        if (this.privFilename.lastIndexOf(\".wav\") !== this.privFilename.length - 4) {\r\n            const errorMsg = this.privFilename + \" is not supported. Only WAVE files are allowed at the moment.\";\r\n            this.onEvent(new AudioSourceErrorEvent(errorMsg, \"\"));\r\n            return Promise.reject(errorMsg);\r\n        }\r\n\r\n        this.onEvent(new AudioSourceInitializingEvent(this.privId)); // no stream id\r\n        this.onEvent(new AudioSourceReadyEvent(this.privId));\r\n        return;\r\n    }\r\n\r\n    public id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public async attach(audioNodeId: string): Promise<IAudioStreamNode> {\r\n        this.onEvent(new AudioStreamNodeAttachingEvent(this.privId, audioNodeId));\r\n\r\n        const stream: Stream<ArrayBuffer> = await this.upload(audioNodeId);\r\n\r\n        this.onEvent(new AudioStreamNodeAttachedEvent(this.privId, audioNodeId));\r\n        return Promise.resolve({\r\n            detach: async (): Promise<void> => {\r\n                stream.readEnded();\r\n                delete this.privStreams[audioNodeId];\r\n                this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n                await this.turnOff();\r\n            },\r\n            id: (): string => audioNodeId,\r\n            read: (): Promise<IStreamChunk<ArrayBuffer>> => stream.read(),\r\n        });\r\n    }\r\n\r\n    public detach(audioNodeId: string): void {\r\n        if (audioNodeId && this.privStreams[audioNodeId]) {\r\n            this.privStreams[audioNodeId].close();\r\n            delete this.privStreams[audioNodeId];\r\n            this.onEvent(new AudioStreamNodeDetachedEvent(this.privId, audioNodeId));\r\n        }\r\n    }\r\n\r\n    public turnOff(): Promise<void> {\r\n        for (const streamId in this.privStreams) {\r\n            if (streamId) {\r\n                const stream = this.privStreams[streamId];\r\n                if (stream && !stream.isClosed) {\r\n                    stream.close();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onEvent(new AudioSourceOffEvent(this.privId)); // no stream now\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public get events(): EventSource<AudioSourceEvent> {\r\n        return this.privEvents;\r\n    }\r\n\r\n    public get deviceInfo(): Promise<ISpeechConfigAudioDevice> {\r\n        return this.privAudioFormatPromise.then<ISpeechConfigAudioDevice>((result: AudioStreamFormatImpl): Promise<{\r\n            bitspersample: number;\r\n            channelcount: number;\r\n            connectivity: connectivity.Unknown;\r\n            manufacturer: string;\r\n            model: string;\r\n            samplerate: number;\r\n            type: type.File;\r\n        }> => ( Promise.resolve({\r\n                bitspersample: result.bitsPerSample,\r\n                channelcount: result.channels,\r\n                connectivity: connectivity.Unknown,\r\n                manufacturer: \"Speech SDK\",\r\n                model: \"File\",\r\n                samplerate: result.samplesPerSec,\r\n                type: type.File,\r\n            })\r\n        ));\r\n    }\r\n\r\n    private readHeader(): Promise<AudioStreamFormatImpl> {\r\n        // Read the wave header.\r\n        const maxHeaderSize: number = 4296;\r\n        const header: Blob | Buffer = this.privSource.slice(0, maxHeaderSize);\r\n\r\n        const headerResult: Deferred<AudioStreamFormatImpl> = new Deferred<AudioStreamFormatImpl>();\r\n\r\n        const processHeader = (header: ArrayBuffer): void => {\r\n            const view: DataView = new DataView(header);\r\n\r\n            const getWord = (index: number): string => String.fromCharCode(view.getUint8(index), view.getUint8(index + 1), view.getUint8(index + 2), view.getUint8(index + 3));\r\n\r\n            // RIFF 4 bytes.\r\n            if (\"RIFF\" !== getWord(0)) {\r\n                headerResult.reject(\"Invalid WAV header in file, RIFF was not found\");\r\n                return;\r\n            }\r\n\r\n            // length, 4 bytes\r\n            // RIFF Type & fmt 8 bytes\r\n            if (\"WAVE\" !== getWord(8) || \"fmt \" !== getWord(12)) {\r\n                headerResult.reject(\"Invalid WAV header in file, WAVEfmt was not found\");\r\n                return;\r\n            }\r\n\r\n            const formatSize: number = view.getInt32(16, true);\r\n            const channelCount: number = view.getUint16(22, true);\r\n            const sampleRate: number = view.getUint32(24, true);\r\n            const bitsPerSample: number = view.getUint16(34, true);\r\n            // Confirm if header is 44 bytes long.\r\n            let pos: number = 36 + Math.max(formatSize - 16, 0);\r\n            for (; getWord(pos) !== \"data\"; pos += 2) {\r\n                if (pos > maxHeaderSize - 8) {\r\n                    headerResult.reject(\"Invalid WAV header in file, data block was not found\");\r\n                    return;\r\n                }\r\n            }\r\n            this.privHeaderEnd = pos + 8;\r\n            headerResult.resolve(AudioStreamFormat.getWaveFormatPCM(sampleRate, bitsPerSample, channelCount) as AudioStreamFormatImpl);\r\n        };\r\n\r\n        if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && header instanceof Blob) {\r\n            const reader: FileReader = new FileReader();\r\n\r\n            reader.onload = (event: Event): void => {\r\n                const header: ArrayBuffer = (event.target as FileReader).result as ArrayBuffer;\r\n                processHeader(header);\r\n            };\r\n\r\n            reader.readAsArrayBuffer(header);\r\n        } else {\r\n            const h: Buffer = header as Buffer;\r\n            processHeader(h.buffer.slice(h.byteOffset, h.byteOffset + h.byteLength));\r\n        }\r\n        return headerResult.promise;\r\n    }\r\n\r\n    private async upload(audioNodeId: string): Promise<Stream<ArrayBuffer>> {\r\n        const onerror = (error: string): void => {\r\n            const errorMsg = `Error occurred while processing '${this.privFilename}'. ${error}`;\r\n            this.onEvent(new AudioStreamNodeErrorEvent(this.privId, audioNodeId, errorMsg));\r\n            throw new Error(errorMsg);\r\n        };\r\n\r\n        try {\r\n            await this.turnOn();\r\n\r\n            const format: AudioStreamFormatImpl = await this.privAudioFormatPromise;\r\n            const stream = new ChunkedArrayBufferStream(format.avgBytesPerSec / 10, audioNodeId);\r\n\r\n            this.privStreams[audioNodeId] = stream;\r\n            const chunk: Blob | Buffer = this.privSource.slice(this.privHeaderEnd);\r\n\r\n            const processFile = (buff: ArrayBuffer): void => {\r\n                if (stream.isClosed) {\r\n                    return; // output stream was closed (somebody called TurnOff). We're done here.\r\n                }\r\n\r\n                stream.writeStreamChunk({\r\n                    buffer: buff,\r\n                    isEnd: false,\r\n                    timeReceived: Date.now(),\r\n                });\r\n                stream.close();\r\n            };\r\n\r\n            if (typeof window !== \"undefined\" && typeof Blob !== \"undefined\" && chunk instanceof Blob) {\r\n                const reader: FileReader = new FileReader();\r\n                reader.onerror = (ev: ProgressEvent<FileReader>): void  =>  onerror(ev.toString());\r\n\r\n                reader.onload = (event: Event): void => {\r\n                    const fileBuffer: ArrayBuffer = (event.target as FileReader).result as ArrayBuffer;\r\n                    processFile(fileBuffer);\r\n                };\r\n\r\n                reader.readAsArrayBuffer(chunk);\r\n            } else {\r\n                const c: Buffer = chunk as Buffer;\r\n                processFile(c.buffer.slice(c.byteOffset, c.byteOffset + c.byteLength));\r\n            }\r\n\r\n            return stream;\r\n        } catch (e) {\r\n            onerror(e as string);\r\n        }\r\n    }\r\n\r\n    private onEvent(event: AudioSourceEvent): void {\r\n        this.privEvents.onEvent(event);\r\n        Events.instance.onEvent(event);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\nimport { CancellationErrorCodePropertyName } from \"../common.speech/Exports.js\";\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport {\r\n    CancellationDetailsBase,\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    ResultReason\r\n} from \"./Exports.js\";\r\n\r\n/**\r\n * Output format\r\n * @class VoiceProfileResult\r\n */\r\nexport class VoiceProfileResult {\r\n    private privReason: ResultReason;\r\n    private privProperties: PropertyCollection;\r\n    private privErrorDetails: string;\r\n\r\n    public constructor(reason: ResultReason, statusText: string) {\r\n        this.privReason = reason;\r\n        this.privProperties = new PropertyCollection();\r\n        if (reason === ResultReason.Canceled) {\r\n            Contracts.throwIfNullOrUndefined(statusText, \"statusText\");\r\n            this.privErrorDetails = statusText;\r\n            this.privProperties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.ServiceError]);\r\n        }\r\n    }\r\n\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n}\r\n\r\n/**\r\n * @class VoiceProfileCancellationDetails\r\n */\r\nexport class VoiceProfileCancellationDetails extends CancellationDetailsBase {\r\n\r\n    private constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        super(reason, errorDetails, errorCode);\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of VoiceProfileCancellationDetails object for the canceled VoiceProfileResult.\r\n     * @member VoiceProfileCancellationDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {VoiceProfileResult} result - The result that was canceled.\r\n     * @returns {VoiceProfileCancellationDetails} The cancellation details object being created.\r\n     */\r\n    public static fromResult(result: VoiceProfileResult): VoiceProfileCancellationDetails {\r\n        const reason = CancellationReason.Error;\r\n        let errorCode: CancellationErrorCode = CancellationErrorCode.NoError;\r\n\r\n        if (!!result.properties) {\r\n            errorCode = (CancellationErrorCode as any)[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError])]; //eslint-disable-line\r\n        }\r\n\r\n        return new VoiceProfileCancellationDetails(reason, result.errorDetails, errorCode);\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { AutoDetectSourceLanguagesOpenRangeOptionName } from \"../common.speech/Exports.js\";\r\nimport {Contracts} from \"./Contracts.js\";\r\nimport {\r\n    PropertyCollection,\r\n    PropertyId,\r\n    SourceLanguageConfig,\r\n} from \"./Exports.js\";\r\nimport { LanguageIdMode } from \"./LanguageIdMode.js\";\r\n\r\n/**\r\n * Language auto detect configuration.\r\n * @class AutoDetectSourceLanguageConfig\r\n * Added in version 1.13.0.\r\n */\r\nexport class AutoDetectSourceLanguageConfig {\r\n    private privProperties: PropertyCollection;\r\n    private privLanguageIdMode: LanguageIdMode;\r\n\r\n    private constructor() {\r\n        this.privProperties = new PropertyCollection();\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceConnection_LanguageIdMode, \"AtStart\");\r\n        this.privLanguageIdMode = LanguageIdMode.AtStart;\r\n    }\r\n\r\n    /**\r\n     * @member AutoDetectSourceLanguageConfig.fromOpenRange\r\n     * @function\r\n     * @public\r\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\r\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with open range.\r\n     * Only [[SpeechSynthesizer]] supports source language auto detection from open range,\r\n     * for [[Recognizer]], please use AutoDetectSourceLanguageConfig with specific source languages.\r\n     */\r\n    public static fromOpenRange(): AutoDetectSourceLanguageConfig {\r\n        const config = new AutoDetectSourceLanguageConfig();\r\n        config.properties.setProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, AutoDetectSourceLanguagesOpenRangeOptionName);\r\n        return config;\r\n    }\r\n\r\n    /**\r\n     * @member AutoDetectSourceLanguageConfig.fromLanguages\r\n     * @function\r\n     * @public\r\n     * @param {string[]} languages Comma-separated string of languages (eg. \"en-US,fr-FR\") to populate properties of config.\r\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\r\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with given languages.\r\n     */\r\n    public static fromLanguages(languages: string[]): AutoDetectSourceLanguageConfig {\r\n        Contracts.throwIfArrayEmptyOrWhitespace(languages, \"languages\");\r\n        const config = new AutoDetectSourceLanguageConfig();\r\n        config.properties.setProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, languages.join());\r\n        return config;\r\n    }\r\n\r\n    /**\r\n     * @member AutoDetectSourceLanguageConfig.fromSourceLanguageConfigs\r\n     * @function\r\n     * @public\r\n     * @param {SourceLanguageConfig[]} configs SourceLanguageConfigs to populate properties of config.\r\n     * @return {AutoDetectSourceLanguageConfig} Instance of AutoDetectSourceLanguageConfig\r\n     * @summary Creates an instance of the AutoDetectSourceLanguageConfig with given SourceLanguageConfigs.\r\n     */\r\n    public static fromSourceLanguageConfigs(configs: SourceLanguageConfig[]): AutoDetectSourceLanguageConfig {\r\n        if (configs.length < 1) {\r\n            throw new Error(\"Expected non-empty SourceLanguageConfig array.\");\r\n        }\r\n        const autoConfig = new AutoDetectSourceLanguageConfig();\r\n        const langs: string[] = [];\r\n        configs.forEach((config: SourceLanguageConfig): void => {\r\n            langs.push(config.language);\r\n            if (config.endpointId !== undefined && config.endpointId !== \"\") {\r\n                const customProperty = config.language + PropertyId.SpeechServiceConnection_EndpointId.toString();\r\n                autoConfig.properties.setProperty(customProperty, config.endpointId);\r\n            }\r\n        });\r\n        autoConfig.properties.setProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages, langs.join());\r\n\r\n        return autoConfig;\r\n    }\r\n\r\n    /**\r\n     * @member AutoDetectSourceLanguageConfig.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @return {PropertyCollection} Properties of the config.\r\n     * @summary Gets an auto detected language config properties\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * @member AutoDetectSourceLanguageConfig.prototype.mode\r\n     * @function\r\n     * @public\r\n     * @param {LanguageIdMode} mode LID mode desired.\r\n     * @summary Sets LID operation to desired mode\r\n     */\r\n    public set mode(mode: LanguageIdMode) {\r\n        if (mode === LanguageIdMode.Continuous) {\r\n            this.privProperties.setProperty(PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, \"2\");\r\n            this.privProperties.setProperty(PropertyId.SpeechServiceConnection_LanguageIdMode, \"Continuous\");\r\n        } else { // LanguageIdMode.AtStart\r\n            this.privProperties.setProperty(PropertyId.SpeechServiceConnection_RecognitionEndpointVersion, \"1\");\r\n            this.privProperties.setProperty(PropertyId.SpeechServiceConnection_LanguageIdMode, \"AtStart\");\r\n        }\r\n        this.privLanguageIdMode = mode;\r\n    }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"28d990b2\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"lucy:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/harikrishna-au/niloai.git/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunklucy\"] = self[\"webpackChunklucy\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Pagers for the GenAI List APIs.\n */\n\nexport enum PagedItem {\n  PAGED_ITEM_BATCH_JOBS = 'batchJobs',\n  PAGED_ITEM_MODELS = 'models',\n  PAGED_ITEM_TUNING_JOBS = 'tuningJobs',\n  PAGED_ITEM_FILES = 'files',\n  PAGED_ITEM_CACHED_CONTENTS = 'cachedContents',\n}\n\ninterface PagedItemConfig {\n  config?: {\n    pageToken?: string;\n    pageSize?: number;\n  };\n}\n\ninterface PagedItemResponse<T> {\n  nextPageToken?: string;\n  batchJobs?: T[];\n  models?: T[];\n  tuningJobs?: T[];\n  files?: T[];\n  cachedContents?: T[];\n}\n\n/**\n * Pager class for iterating through paginated results.\n */\nexport class Pager<T> implements AsyncIterable<T> {\n  private nameInternal!: PagedItem;\n  private pageInternal: T[] = [];\n  private paramsInternal: PagedItemConfig = {};\n  private pageInternalSize!: number;\n  protected requestInternal!: (\n    params: PagedItemConfig,\n  ) => Promise<PagedItemResponse<T>>;\n  protected idxInternal!: number;\n\n  constructor(\n    name: PagedItem,\n    request: (params: PagedItemConfig) => Promise<PagedItemResponse<T>>,\n    response: PagedItemResponse<T>,\n    params: PagedItemConfig,\n  ) {\n    this.requestInternal = request;\n    this.init(name, response, params);\n  }\n\n  private init(\n    name: PagedItem,\n    response: PagedItemResponse<T>,\n    params: PagedItemConfig,\n  ) {\n    this.nameInternal = name;\n    this.pageInternal = response[this.nameInternal] || [];\n    this.idxInternal = 0;\n    let requestParams: PagedItemConfig = {config: {}};\n    if (!params) {\n      requestParams = {config: {}};\n    } else if (typeof params === 'object') {\n      requestParams = {...params};\n    } else {\n      requestParams = params;\n    }\n    if (requestParams['config']) {\n      requestParams['config']['pageToken'] = response['nextPageToken'];\n    }\n    this.paramsInternal = requestParams;\n    this.pageInternalSize =\n      requestParams['config']?.['pageSize'] ?? this.pageInternal.length;\n  }\n\n  private initNextPage(response: PagedItemResponse<T>): void {\n    this.init(this.nameInternal, response, this.paramsInternal);\n  }\n\n  /**\n   * Returns the current page, which is a list of items.\n   *\n   * @remarks\n   * The first page is retrieved when the pager is created. The returned list of\n   * items could be a subset of the entire list.\n   */\n  get page(): T[] {\n    return this.pageInternal;\n  }\n\n  /**\n   * Returns the type of paged item (for example, ``batch_jobs``).\n   */\n  get name(): PagedItem {\n    return this.nameInternal;\n  }\n\n  /**\n   * Returns the length of the page fetched each time by this pager.\n   *\n   * @remarks\n   * The number of items in the page is less than or equal to the page length.\n   */\n  get pageSize(): number {\n    return this.pageInternalSize;\n  }\n\n  /**\n   * Returns the parameters when making the API request for the next page.\n   *\n   * @remarks\n   * Parameters contain a set of optional configs that can be\n   * used to customize the API request. For example, the `pageToken` parameter\n   * contains the token to request the next page.\n   */\n  get params(): PagedItemConfig {\n    return this.paramsInternal;\n  }\n\n  /**\n   * Returns the total number of items in the current page.\n   */\n  get pageLength(): number {\n    return this.pageInternal.length;\n  }\n\n  /**\n   * Returns the item at the given index.\n   */\n  getItem(index: number): T {\n    return this.pageInternal[index];\n  }\n\n  /**\n   * Returns an async iterator that support iterating through all items\n   * retrieved from the API.\n   *\n   * @remarks\n   * The iterator will automatically fetch the next page if there are more items\n   * to fetch from the API.\n   *\n   * @example\n   *\n   * ```ts\n   * const pager = await ai.files.list({config: {pageSize: 10}});\n   * for await (const file of pager) {\n   *   console.log(file.name);\n   * }\n   * ```\n   */\n  [Symbol.asyncIterator](): AsyncIterator<T> {\n    return {\n      next: async () => {\n        if (this.idxInternal >= this.pageLength) {\n          if (this.hasNextPage()) {\n            await this.nextPage();\n          } else {\n            return {value: undefined, done: true};\n          }\n        }\n        const item = this.getItem(this.idxInternal);\n        this.idxInternal += 1;\n        return {value: item, done: false};\n      },\n      return: async () => {\n        return {value: undefined, done: true};\n      },\n    };\n  }\n\n  /**\n   * Fetches the next page of items. This makes a new API request.\n   *\n   * @throws {Error} If there are no more pages to fetch.\n   *\n   * @example\n   *\n   * ```ts\n   * const pager = await ai.files.list({config: {pageSize: 10}});\n   * let page = pager.page;\n   * while (true) {\n   *   for (const file of page) {\n   *     console.log(file.name);\n   *   }\n   *   if (!pager.hasNextPage()) {\n   *     break;\n   *   }\n   *   page = await pager.nextPage();\n   * }\n   * ```\n   */\n  async nextPage(): Promise<T[]> {\n    if (!this.hasNextPage()) {\n      throw new Error('No more pages to fetch.');\n    }\n    const response = await this.requestInternal(this.params);\n    this.initNextPage(response);\n    return this.page;\n  }\n\n  /**\n   * Returns true if there are more pages to fetch from the API.\n   */\n  hasNextPage(): boolean {\n    if (this.params['config']?.['pageToken'] !== undefined) {\n      return true;\n    }\n    return false;\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\n/** Required. Outcome of the code execution. */\nexport enum Outcome {\n  OUTCOME_UNSPECIFIED = 'OUTCOME_UNSPECIFIED',\n  OUTCOME_OK = 'OUTCOME_OK',\n  OUTCOME_FAILED = 'OUTCOME_FAILED',\n  OUTCOME_DEADLINE_EXCEEDED = 'OUTCOME_DEADLINE_EXCEEDED',\n}\n\n/** Required. Programming language of the `code`. */\nexport enum Language {\n  LANGUAGE_UNSPECIFIED = 'LANGUAGE_UNSPECIFIED',\n  PYTHON = 'PYTHON',\n}\n\n/** Optional. The type of the data. */\nexport enum Type {\n  TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED',\n  STRING = 'STRING',\n  NUMBER = 'NUMBER',\n  INTEGER = 'INTEGER',\n  BOOLEAN = 'BOOLEAN',\n  ARRAY = 'ARRAY',\n  OBJECT = 'OBJECT',\n}\n\n/** Required. Harm category. */\nexport enum HarmCategory {\n  HARM_CATEGORY_UNSPECIFIED = 'HARM_CATEGORY_UNSPECIFIED',\n  HARM_CATEGORY_HATE_SPEECH = 'HARM_CATEGORY_HATE_SPEECH',\n  HARM_CATEGORY_DANGEROUS_CONTENT = 'HARM_CATEGORY_DANGEROUS_CONTENT',\n  HARM_CATEGORY_HARASSMENT = 'HARM_CATEGORY_HARASSMENT',\n  HARM_CATEGORY_SEXUALLY_EXPLICIT = 'HARM_CATEGORY_SEXUALLY_EXPLICIT',\n  HARM_CATEGORY_CIVIC_INTEGRITY = 'HARM_CATEGORY_CIVIC_INTEGRITY',\n}\n\n/** Optional. Specify if the threshold is used for probability or severity score. If not specified, the threshold is used for probability score. */\nexport enum HarmBlockMethod {\n  HARM_BLOCK_METHOD_UNSPECIFIED = 'HARM_BLOCK_METHOD_UNSPECIFIED',\n  SEVERITY = 'SEVERITY',\n  PROBABILITY = 'PROBABILITY',\n}\n\n/** Required. The harm block threshold. */\nexport enum HarmBlockThreshold {\n  HARM_BLOCK_THRESHOLD_UNSPECIFIED = 'HARM_BLOCK_THRESHOLD_UNSPECIFIED',\n  BLOCK_LOW_AND_ABOVE = 'BLOCK_LOW_AND_ABOVE',\n  BLOCK_MEDIUM_AND_ABOVE = 'BLOCK_MEDIUM_AND_ABOVE',\n  BLOCK_ONLY_HIGH = 'BLOCK_ONLY_HIGH',\n  BLOCK_NONE = 'BLOCK_NONE',\n  OFF = 'OFF',\n}\n\n/** The mode of the predictor to be used in dynamic retrieval. */\nexport enum Mode {\n  MODE_UNSPECIFIED = 'MODE_UNSPECIFIED',\n  MODE_DYNAMIC = 'MODE_DYNAMIC',\n}\n\n/** Output only. The reason why the model stopped generating tokens.\n\n  If empty, the model has not stopped generating the tokens.\n   */\nexport enum FinishReason {\n  FINISH_REASON_UNSPECIFIED = 'FINISH_REASON_UNSPECIFIED',\n  STOP = 'STOP',\n  MAX_TOKENS = 'MAX_TOKENS',\n  SAFETY = 'SAFETY',\n  RECITATION = 'RECITATION',\n  OTHER = 'OTHER',\n  BLOCKLIST = 'BLOCKLIST',\n  PROHIBITED_CONTENT = 'PROHIBITED_CONTENT',\n  SPII = 'SPII',\n  MALFORMED_FUNCTION_CALL = 'MALFORMED_FUNCTION_CALL',\n  IMAGE_SAFETY = 'IMAGE_SAFETY',\n}\n\n/** Output only. Harm probability levels in the content. */\nexport enum HarmProbability {\n  HARM_PROBABILITY_UNSPECIFIED = 'HARM_PROBABILITY_UNSPECIFIED',\n  NEGLIGIBLE = 'NEGLIGIBLE',\n  LOW = 'LOW',\n  MEDIUM = 'MEDIUM',\n  HIGH = 'HIGH',\n}\n\n/** Output only. Harm severity levels in the content. */\nexport enum HarmSeverity {\n  HARM_SEVERITY_UNSPECIFIED = 'HARM_SEVERITY_UNSPECIFIED',\n  HARM_SEVERITY_NEGLIGIBLE = 'HARM_SEVERITY_NEGLIGIBLE',\n  HARM_SEVERITY_LOW = 'HARM_SEVERITY_LOW',\n  HARM_SEVERITY_MEDIUM = 'HARM_SEVERITY_MEDIUM',\n  HARM_SEVERITY_HIGH = 'HARM_SEVERITY_HIGH',\n}\n\n/** Output only. Blocked reason. */\nexport enum BlockedReason {\n  BLOCKED_REASON_UNSPECIFIED = 'BLOCKED_REASON_UNSPECIFIED',\n  SAFETY = 'SAFETY',\n  OTHER = 'OTHER',\n  BLOCKLIST = 'BLOCKLIST',\n  PROHIBITED_CONTENT = 'PROHIBITED_CONTENT',\n}\n\n/** Output only. Traffic type. This shows whether a request consumes Pay-As-You-Go or Provisioned Throughput quota. */\nexport enum TrafficType {\n  TRAFFIC_TYPE_UNSPECIFIED = 'TRAFFIC_TYPE_UNSPECIFIED',\n  ON_DEMAND = 'ON_DEMAND',\n  PROVISIONED_THROUGHPUT = 'PROVISIONED_THROUGHPUT',\n}\n\n/** Server content modalities. */\nexport enum Modality {\n  MODALITY_UNSPECIFIED = 'MODALITY_UNSPECIFIED',\n  TEXT = 'TEXT',\n  IMAGE = 'IMAGE',\n  AUDIO = 'AUDIO',\n}\n\n/** The media resolution to use. */\nexport enum MediaResolution {\n  MEDIA_RESOLUTION_UNSPECIFIED = 'MEDIA_RESOLUTION_UNSPECIFIED',\n  MEDIA_RESOLUTION_LOW = 'MEDIA_RESOLUTION_LOW',\n  MEDIA_RESOLUTION_MEDIUM = 'MEDIA_RESOLUTION_MEDIUM',\n  MEDIA_RESOLUTION_HIGH = 'MEDIA_RESOLUTION_HIGH',\n}\n\n/** Config for the dynamic retrieval config mode. */\nexport enum DynamicRetrievalConfigMode {\n  MODE_UNSPECIFIED = 'MODE_UNSPECIFIED',\n  MODE_DYNAMIC = 'MODE_DYNAMIC',\n}\n\n/** Config for the function calling config mode. */\nexport enum FunctionCallingConfigMode {\n  MODE_UNSPECIFIED = 'MODE_UNSPECIFIED',\n  AUTO = 'AUTO',\n  ANY = 'ANY',\n  NONE = 'NONE',\n}\n\n/** Enum that controls the safety filter level for objectionable content. */\nexport enum SafetyFilterLevel {\n  BLOCK_LOW_AND_ABOVE = 'BLOCK_LOW_AND_ABOVE',\n  BLOCK_MEDIUM_AND_ABOVE = 'BLOCK_MEDIUM_AND_ABOVE',\n  BLOCK_ONLY_HIGH = 'BLOCK_ONLY_HIGH',\n  BLOCK_NONE = 'BLOCK_NONE',\n}\n\n/** Enum that controls the generation of people. */\nexport enum PersonGeneration {\n  DONT_ALLOW = 'DONT_ALLOW',\n  ALLOW_ADULT = 'ALLOW_ADULT',\n  ALLOW_ALL = 'ALLOW_ALL',\n}\n\n/** Enum that specifies the language of the text in the prompt. */\nexport enum ImagePromptLanguage {\n  auto = 'auto',\n  en = 'en',\n  ja = 'ja',\n  ko = 'ko',\n  hi = 'hi',\n}\n\n/** State for the lifecycle of a File. */\nexport enum FileState {\n  STATE_UNSPECIFIED = 'STATE_UNSPECIFIED',\n  PROCESSING = 'PROCESSING',\n  ACTIVE = 'ACTIVE',\n  FAILED = 'FAILED',\n}\n\n/** Source of the File. */\nexport enum FileSource {\n  SOURCE_UNSPECIFIED = 'SOURCE_UNSPECIFIED',\n  UPLOADED = 'UPLOADED',\n  GENERATED = 'GENERATED',\n}\n\n/** Enum representing the mask mode of a mask reference image. */\nexport enum MaskReferenceMode {\n  MASK_MODE_DEFAULT = 'MASK_MODE_DEFAULT',\n  MASK_MODE_USER_PROVIDED = 'MASK_MODE_USER_PROVIDED',\n  MASK_MODE_BACKGROUND = 'MASK_MODE_BACKGROUND',\n  MASK_MODE_FOREGROUND = 'MASK_MODE_FOREGROUND',\n  MASK_MODE_SEMANTIC = 'MASK_MODE_SEMANTIC',\n}\n\n/** Enum representing the control type of a control reference image. */\nexport enum ControlReferenceType {\n  CONTROL_TYPE_DEFAULT = 'CONTROL_TYPE_DEFAULT',\n  CONTROL_TYPE_CANNY = 'CONTROL_TYPE_CANNY',\n  CONTROL_TYPE_SCRIBBLE = 'CONTROL_TYPE_SCRIBBLE',\n  CONTROL_TYPE_FACE_MESH = 'CONTROL_TYPE_FACE_MESH',\n}\n\n/** Enum representing the subject type of a subject reference image. */\nexport enum SubjectReferenceType {\n  SUBJECT_TYPE_DEFAULT = 'SUBJECT_TYPE_DEFAULT',\n  SUBJECT_TYPE_PERSON = 'SUBJECT_TYPE_PERSON',\n  SUBJECT_TYPE_ANIMAL = 'SUBJECT_TYPE_ANIMAL',\n  SUBJECT_TYPE_PRODUCT = 'SUBJECT_TYPE_PRODUCT',\n}\n\n/** Server content modalities. */\nexport enum MediaModality {\n  MODALITY_UNSPECIFIED = 'MODALITY_UNSPECIFIED',\n  TEXT = 'TEXT',\n  IMAGE = 'IMAGE',\n  VIDEO = 'VIDEO',\n  AUDIO = 'AUDIO',\n  DOCUMENT = 'DOCUMENT',\n}\n\n/** Start of speech sensitivity. */\nexport enum StartSensitivity {\n  START_SENSITIVITY_UNSPECIFIED = 'START_SENSITIVITY_UNSPECIFIED',\n  START_SENSITIVITY_HIGH = 'START_SENSITIVITY_HIGH',\n  START_SENSITIVITY_LOW = 'START_SENSITIVITY_LOW',\n}\n\n/** End of speech sensitivity. */\nexport enum EndSensitivity {\n  END_SENSITIVITY_UNSPECIFIED = 'END_SENSITIVITY_UNSPECIFIED',\n  END_SENSITIVITY_HIGH = 'END_SENSITIVITY_HIGH',\n  END_SENSITIVITY_LOW = 'END_SENSITIVITY_LOW',\n}\n\n/** The different ways of handling user activity. */\nexport enum ActivityHandling {\n  ACTIVITY_HANDLING_UNSPECIFIED = 'ACTIVITY_HANDLING_UNSPECIFIED',\n  START_OF_ACTIVITY_INTERRUPTS = 'START_OF_ACTIVITY_INTERRUPTS',\n  NO_INTERRUPTION = 'NO_INTERRUPTION',\n}\n\n/** Options about which input is included in the user's turn. */\nexport enum TurnCoverage {\n  TURN_COVERAGE_UNSPECIFIED = 'TURN_COVERAGE_UNSPECIFIED',\n  TURN_INCLUDES_ONLY_ACTIVITY = 'TURN_INCLUDES_ONLY_ACTIVITY',\n  TURN_INCLUDES_ALL_INPUT = 'TURN_INCLUDES_ALL_INPUT',\n}\n\n/** Metadata describes the input video content. */\nexport declare interface VideoMetadata {\n  /** Optional. The end offset of the video. */\n  endOffset?: string;\n  /** Optional. The start offset of the video. */\n  startOffset?: string;\n}\n\n/** Result of executing the [ExecutableCode]. Always follows a `part` containing the [ExecutableCode]. */\nexport declare interface CodeExecutionResult {\n  /** Required. Outcome of the code execution. */\n  outcome?: Outcome;\n  /** Optional. Contains stdout when code execution is successful, stderr or other description otherwise. */\n  output?: string;\n}\n\n/** Code generated by the model that is meant to be executed, and the result returned to the model. Generated when using the [FunctionDeclaration] tool and [FunctionCallingConfig] mode is set to [Mode.CODE]. */\nexport declare interface ExecutableCode {\n  /** Required. The code to be executed. */\n  code?: string;\n  /** Required. Programming language of the `code`. */\n  language?: Language;\n}\n\n/** URI based data. */\nexport declare interface FileData {\n  /** Required. URI. */\n  fileUri?: string;\n  /** Required. The IANA standard MIME type of the source data. */\n  mimeType?: string;\n}\n\n/** A function call. */\nexport declare interface FunctionCall {\n  /** The unique id of the function call. If populated, the client to execute the\n   `function_call` and return the response with the matching `id`. */\n  id?: string;\n  /** Optional. Required. The function parameters and values in JSON object format. See [FunctionDeclaration.parameters] for parameter details. */\n  args?: Record<string, unknown>;\n  /** Required. The name of the function to call. Matches [FunctionDeclaration.name]. */\n  name?: string;\n}\n\n/** A function response. */\nexport class FunctionResponse {\n  /** The id of the function call this response is for. Populated by the client\n   to match the corresponding function call `id`. */\n  id?: string;\n  /** Required. The name of the function to call. Matches [FunctionDeclaration.name] and [FunctionCall.name]. */\n  name?: string;\n  /** Required. The function response in JSON object format. Use \"output\" key to specify function output and \"error\" key to specify error details (if any). If \"output\" and \"error\" keys are not specified, then whole \"response\" is treated as function output. */\n  response?: Record<string, unknown>;\n}\n\n/** Content blob. */\nexport declare interface Blob {\n  /** Required. Raw bytes. */\n  data?: string;\n  /** Required. The IANA standard MIME type of the source data. */\n  mimeType?: string;\n}\n\n/** A datatype containing media content.\n\n  Exactly one field within a Part should be set, representing the specific type\n  of content being conveyed. Using multiple fields within the same `Part`\n  instance is considered invalid.\n   */\nexport declare interface Part {\n  /** Metadata for a given video. */\n  videoMetadata?: VideoMetadata;\n  /** Indicates if the part is thought from the model. */\n  thought?: boolean;\n  /** Optional. Result of executing the [ExecutableCode]. */\n  codeExecutionResult?: CodeExecutionResult;\n  /** Optional. Code generated by the model that is meant to be executed. */\n  executableCode?: ExecutableCode;\n  /** Optional. URI based data. */\n  fileData?: FileData;\n  /** Optional. A predicted [FunctionCall] returned from the model that contains a string representing the [FunctionDeclaration.name] with the parameters and their values. */\n  functionCall?: FunctionCall;\n  /** Optional. The result output of a [FunctionCall] that contains a string representing the [FunctionDeclaration.name] and a structured JSON object containing any output from the function call. It is used as context to the model. */\n  functionResponse?: FunctionResponse;\n  /** Optional. Inlined bytes data. */\n  inlineData?: Blob;\n  /** Optional. Text part (can be code). */\n  text?: string;\n}\n/**\n * Creates a `Part` object from a `URI` string.\n */\nexport function createPartFromUri(uri: string, mimeType: string): Part {\n  return {\n    fileData: {\n      fileUri: uri,\n      mimeType: mimeType,\n    },\n  };\n}\n/**\n * Creates a `Part` object from a `text` string.\n */\nexport function createPartFromText(text: string): Part {\n  return {\n    text: text,\n  };\n}\n/**\n * Creates a `Part` object from a `FunctionCall` object.\n */\nexport function createPartFromFunctionCall(\n  name: string,\n  args: Record<string, unknown>,\n): Part {\n  return {\n    functionCall: {\n      name: name,\n      args: args,\n    },\n  };\n}\n/**\n * Creates a `Part` object from a `FunctionResponse` object.\n */\nexport function createPartFromFunctionResponse(\n  id: string,\n  name: string,\n  response: Record<string, unknown>,\n): Part {\n  return {\n    functionResponse: {\n      id: id,\n      name: name,\n      response: response,\n    },\n  };\n}\n/**\n * Creates a `Part` object from a `base64` encoded `string`.\n */\nexport function createPartFromBase64(data: string, mimeType: string): Part {\n  return {\n    inlineData: {\n      data: data,\n      mimeType: mimeType,\n    },\n  };\n}\n/**\n * Creates a `Part` object from the `outcome` and `output` of a `CodeExecutionResult` object.\n */\nexport function createPartFromCodeExecutionResult(\n  outcome: Outcome,\n  output: string,\n): Part {\n  return {\n    codeExecutionResult: {\n      outcome: outcome,\n      output: output,\n    },\n  };\n}\n/**\n * Creates a `Part` object from the `code` and `language` of an `ExecutableCode` object.\n */\nexport function createPartFromExecutableCode(\n  code: string,\n  language: Language,\n): Part {\n  return {\n    executableCode: {\n      code: code,\n      language: language,\n    },\n  };\n}\n\n/** Contains the multi-part content of a message. */\nexport declare interface Content {\n  /** List of parts that constitute a single message. Each part may have\n      a different IANA MIME type. */\n  parts?: Part[];\n  /** Optional. The producer of the content. Must be either 'user' or\n      'model'. Useful to set for multi-turn conversations, otherwise can be\n      empty. If role is not specified, SDK will determine the role. */\n  role?: string;\n}\nfunction _isPart(obj: unknown): obj is Part {\n  if (typeof obj === 'object' && obj !== null) {\n    return (\n      'fileData' in obj ||\n      'text' in obj ||\n      'functionCall' in obj ||\n      'functionResponse' in obj ||\n      'inlineData' in obj ||\n      'videoMetadata' in obj ||\n      'codeExecutionResult' in obj ||\n      'executableCode' in obj\n    );\n  }\n  return false;\n}\nfunction _toParts(partOrString: PartListUnion | string): Part[] {\n  const parts: Part[] = [];\n  if (typeof partOrString === 'string') {\n    parts.push(createPartFromText(partOrString));\n  } else if (_isPart(partOrString)) {\n    parts.push(partOrString);\n  } else if (Array.isArray(partOrString)) {\n    if (partOrString.length === 0) {\n      throw new Error('partOrString cannot be an empty array');\n    }\n    for (const part of partOrString) {\n      if (typeof part === 'string') {\n        parts.push(createPartFromText(part));\n      } else if (_isPart(part)) {\n        parts.push(part);\n      } else {\n        throw new Error('element in PartUnion must be a Part object or string');\n      }\n    }\n  } else {\n    throw new Error('partOrString must be a Part object, string, or array');\n  }\n  return parts;\n}\n/**\n * Creates a `Content` object with a user role from a `PartListUnion` object or `string`.\n */\nexport function createUserContent(\n  partOrString: PartListUnion | string,\n): Content {\n  return {\n    role: 'user',\n    parts: _toParts(partOrString),\n  };\n}\n\n/**\n * Creates a `Content` object with a model role from a `PartListUnion` object or `string`.\n */\nexport function createModelContent(\n  partOrString: PartListUnion | string,\n): Content {\n  return {\n    role: 'model',\n    parts: _toParts(partOrString),\n  };\n}\n/** HTTP options to be used in each of the requests. */\nexport declare interface HttpOptions {\n  /** The base URL for the AI platform service endpoint. */\n  baseUrl?: string;\n  /** Specifies the version of the API to use. */\n  apiVersion?: string;\n  /** Additional HTTP headers to be sent with the request. */\n  headers?: Record<string, string>;\n  /** Timeout for the request in milliseconds. */\n  timeout?: number;\n}\n\n/** Schema that defines the format of input and output data.\n\n  Represents a select subset of an OpenAPI 3.0 schema object.\n   */\nexport declare interface Schema {\n  /** Optional. Example of the object. Will only populated when the object is the root. */\n  example?: unknown;\n  /** Optional. Pattern of the Type.STRING to restrict a string to a regular expression. */\n  pattern?: string;\n  /** Optional. Default value of the data. */\n  default?: unknown;\n  /** Optional. Maximum length of the Type.STRING */\n  maxLength?: string;\n  /** Optional. SCHEMA FIELDS FOR TYPE STRING Minimum length of the Type.STRING */\n  minLength?: string;\n  /** Optional. Minimum number of the properties for Type.OBJECT. */\n  minProperties?: string;\n  /** Optional. Maximum number of the properties for Type.OBJECT. */\n  maxProperties?: string;\n  /** Optional. The value should be validated against any (one or more) of the subschemas in the list. */\n  anyOf?: Schema[];\n  /** Optional. The description of the data. */\n  description?: string;\n  /** Optional. Possible values of the element of primitive type with enum format. Examples: 1. We can define direction as : {type:STRING, format:enum, enum:[\"EAST\", NORTH\", \"SOUTH\", \"WEST\"]} 2. We can define apartment number as : {type:INTEGER, format:enum, enum:[\"101\", \"201\", \"301\"]} */\n  enum?: string[];\n  /** Optional. The format of the data. Supported formats: for NUMBER type: \"float\", \"double\" for INTEGER type: \"int32\", \"int64\" for STRING type: \"email\", \"byte\", etc */\n  format?: string;\n  /** Optional. SCHEMA FIELDS FOR TYPE ARRAY Schema of the elements of Type.ARRAY. */\n  items?: Schema;\n  /** Optional. Maximum number of the elements for Type.ARRAY. */\n  maxItems?: string;\n  /** Optional. Maximum value of the Type.INTEGER and Type.NUMBER */\n  maximum?: number;\n  /** Optional. Minimum number of the elements for Type.ARRAY. */\n  minItems?: string;\n  /** Optional. SCHEMA FIELDS FOR TYPE INTEGER and NUMBER Minimum value of the Type.INTEGER and Type.NUMBER */\n  minimum?: number;\n  /** Optional. Indicates if the value may be null. */\n  nullable?: boolean;\n  /** Optional. SCHEMA FIELDS FOR TYPE OBJECT Properties of Type.OBJECT. */\n  properties?: Record<string, Schema>;\n  /** Optional. The order of the properties. Not a standard field in open api spec. Only used to support the order of the properties. */\n  propertyOrdering?: string[];\n  /** Optional. Required properties of Type.OBJECT. */\n  required?: string[];\n  /** Optional. The title of the Schema. */\n  title?: string;\n  /** Optional. The type of the data. */\n  type?: Type;\n}\n\n/** Safety settings. */\nexport declare interface SafetySetting {\n  /** Determines if the harm block method uses probability or probability\n      and severity scores. */\n  method?: HarmBlockMethod;\n  /** Required. Harm category. */\n  category?: HarmCategory;\n  /** Required. The harm block threshold. */\n  threshold?: HarmBlockThreshold;\n}\n\n/** Defines a function that the model can generate JSON inputs for.\n\n  The inputs are based on `OpenAPI 3.0 specifications\n  <https://spec.openapis.org/oas/v3.0.3>`_.\n   */\nexport declare interface FunctionDeclaration {\n  /** Describes the output from the function in the OpenAPI JSON Schema\n      Object format. */\n  response?: Schema;\n  /** Optional. Description and purpose of the function. Model uses it to decide how and whether to call the function. */\n  description?: string;\n  /** Required. The name of the function to call. Must start with a letter or an underscore. Must be a-z, A-Z, 0-9, or contain underscores, dots and dashes, with a maximum length of 64. */\n  name?: string;\n  /** Optional. Describes the parameters to this function in JSON Schema Object format. Reflects the Open API 3.03 Parameter Object. string Key: the name of the parameter. Parameter names are case sensitive. Schema Value: the Schema defining the type used for the parameter. For function with no parameters, this can be left unset. Parameter names must start with a letter or an underscore and must only contain chars a-z, A-Z, 0-9, or underscores with a maximum length of 64. Example with 1 required and 1 optional parameter: type: OBJECT properties: param1: type: STRING param2: type: INTEGER required: - param1 */\n  parameters?: Schema;\n}\n\n/** Tool to support Google Search in Model. Powered by Google. */\nexport declare interface GoogleSearch {}\n\n/** Describes the options to customize dynamic retrieval. */\nexport declare interface DynamicRetrievalConfig {\n  /** The mode of the predictor to be used in dynamic retrieval. */\n  mode?: DynamicRetrievalConfigMode;\n  /** Optional. The threshold to be used in dynamic retrieval. If not set, a system default value is used. */\n  dynamicThreshold?: number;\n}\n\n/** Tool to retrieve public web data for grounding, powered by Google. */\nexport declare interface GoogleSearchRetrieval {\n  /** Specifies the dynamic retrieval configuration for the given source. */\n  dynamicRetrievalConfig?: DynamicRetrievalConfig;\n}\n\n/** Retrieve from Vertex AI Search datastore or engine for grounding. datastore and engine are mutually exclusive. See https://cloud.google.com/products/agent-builder */\nexport declare interface VertexAISearch {\n  /** Optional. Fully-qualified Vertex AI Search data store resource ID. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{dataStore}` */\n  datastore?: string;\n  /** Optional. Fully-qualified Vertex AI Search engine resource ID. Format: `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}` */\n  engine?: string;\n}\n\n/** The definition of the Rag resource. */\nexport declare interface VertexRagStoreRagResource {\n  /** Optional. RagCorpora resource name. Format: `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}` */\n  ragCorpus?: string;\n  /** Optional. rag_file_id. The files should be in the same rag_corpus set in rag_corpus field. */\n  ragFileIds?: string[];\n}\n\n/** Retrieve from Vertex RAG Store for grounding. */\nexport declare interface VertexRagStore {\n  /** Optional. Deprecated. Please use rag_resources instead. */\n  ragCorpora?: string[];\n  /** Optional. The representation of the rag source. It can be used to specify corpus only or ragfiles. Currently only support one corpus or multiple files from one corpus. In the future we may open up multiple corpora support. */\n  ragResources?: VertexRagStoreRagResource[];\n  /** Optional. Number of top k results to return from the selected corpora. */\n  similarityTopK?: number;\n  /** Optional. Only return results with vector distance smaller than the threshold. */\n  vectorDistanceThreshold?: number;\n}\n\n/** Defines a retrieval tool that model can call to access external knowledge. */\nexport declare interface Retrieval {\n  /** Optional. Deprecated. This option is no longer supported. */\n  disableAttribution?: boolean;\n  /** Set to use data source powered by Vertex AI Search. */\n  vertexAiSearch?: VertexAISearch;\n  /** Set to use data source powered by Vertex RAG store. User data is uploaded via the VertexRagDataService. */\n  vertexRagStore?: VertexRagStore;\n}\n\n/** Tool that executes code generated by the model, and automatically returns the result to the model. See also [ExecutableCode]and [CodeExecutionResult] which are input and output to this tool. */\nexport declare interface ToolCodeExecution {}\n\n/** Tool details of a tool that the model may use to generate a response. */\nexport declare interface Tool {\n  /** List of function declarations that the tool supports. */\n  functionDeclarations?: FunctionDeclaration[];\n  /** Optional. Retrieval tool type. System will always execute the provided retrieval tool(s) to get external knowledge to answer the prompt. Retrieval results are presented to the model for generation. */\n  retrieval?: Retrieval;\n  /** Optional. Google Search tool type. Specialized retrieval tool\n      that is powered by Google Search. */\n  googleSearch?: GoogleSearch;\n  /** Optional. GoogleSearchRetrieval tool type. Specialized retrieval tool that is powered by Google search. */\n  googleSearchRetrieval?: GoogleSearchRetrieval;\n  /** Optional. CodeExecution tool type. Enables the model to execute code as part of generation. This field is only used by the Gemini Developer API services. */\n  codeExecution?: ToolCodeExecution;\n}\n\n/** Function calling config. */\nexport declare interface FunctionCallingConfig {\n  /** Optional. Function calling mode. */\n  mode?: FunctionCallingConfigMode;\n  /** Optional. Function names to call. Only set when the Mode is ANY. Function names should match [FunctionDeclaration.name]. With mode set to ANY, model will predict a function call from the set of function names provided. */\n  allowedFunctionNames?: string[];\n}\n\n/** Tool config.\n\n  This config is shared for all tools provided in the request.\n   */\nexport declare interface ToolConfig {\n  /** Optional. Function calling config. */\n  functionCallingConfig?: FunctionCallingConfig;\n}\n\n/** The configuration for the prebuilt speaker to use. */\nexport declare interface PrebuiltVoiceConfig {\n  /** The name of the prebuilt voice to use.\n   */\n  voiceName?: string;\n}\n\n/** The configuration for the voice to use. */\nexport declare interface VoiceConfig {\n  /** The configuration for the speaker to use.\n   */\n  prebuiltVoiceConfig?: PrebuiltVoiceConfig;\n}\n\n/** The speech generation configuration. */\nexport declare interface SpeechConfig {\n  /** The configuration for the speaker to use.\n   */\n  voiceConfig?: VoiceConfig;\n}\n\n/** The thinking features configuration. */\nexport declare interface ThinkingConfig {\n  /** Indicates whether to include thoughts in the response. If true, thoughts are returned only if the model supports thought and thoughts are available.\n   */\n  includeThoughts?: boolean;\n  /** Indicates the thinking budget in tokens.\n   */\n  thinkingBudget?: number;\n}\n\n/** When automated routing is specified, the routing will be determined by the pretrained routing model and customer provided model routing preference. */\nexport declare interface GenerationConfigRoutingConfigAutoRoutingMode {\n  /** The model routing preference. */\n  modelRoutingPreference?:\n    | 'UNKNOWN'\n    | 'PRIORITIZE_QUALITY'\n    | 'BALANCED'\n    | 'PRIORITIZE_COST';\n}\n\n/** When manual routing is set, the specified model will be used directly. */\nexport declare interface GenerationConfigRoutingConfigManualRoutingMode {\n  /** The model name to use. Only the public LLM models are accepted. e.g. 'gemini-1.5-pro-001'. */\n  modelName?: string;\n}\n\n/** The configuration for routing the request to a specific model. */\nexport declare interface GenerationConfigRoutingConfig {\n  /** Automated routing. */\n  autoMode?: GenerationConfigRoutingConfigAutoRoutingMode;\n  /** Manual routing. */\n  manualMode?: GenerationConfigRoutingConfigManualRoutingMode;\n}\n\n/** Optional model configuration parameters.\n\n  For more information, see `Content generation parameters\n  <https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/content-generation-parameters>`_.\n   */\nexport declare interface GenerateContentConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Instructions for the model to steer it toward better performance.\n      For example, \"Answer as concisely as possible\" or \"Don't use technical\n      terms in your response\".\n       */\n  systemInstruction?: ContentUnion;\n  /** Value that controls the degree of randomness in token selection.\n      Lower temperatures are good for prompts that require a less open-ended or\n      creative response, while higher temperatures can lead to more diverse or\n      creative results.\n       */\n  temperature?: number;\n  /** Tokens are selected from the most to least probable until the sum\n      of their probabilities equals this value. Use a lower value for less\n      random responses and a higher value for more random responses.\n       */\n  topP?: number;\n  /** For each token selection step, the ``top_k`` tokens with the\n      highest probabilities are sampled. Then tokens are further filtered based\n      on ``top_p`` with the final token selected using temperature sampling. Use\n      a lower number for less random responses and a higher number for more\n      random responses.\n       */\n  topK?: number;\n  /** Number of response variations to return.\n   */\n  candidateCount?: number;\n  /** Maximum number of tokens that can be generated in the response.\n   */\n  maxOutputTokens?: number;\n  /** List of strings that tells the model to stop generating text if one\n      of the strings is encountered in the response.\n       */\n  stopSequences?: string[];\n  /** Whether to return the log probabilities of the tokens that were\n      chosen by the model at each step.\n       */\n  responseLogprobs?: boolean;\n  /** Number of top candidate tokens to return the log probabilities for\n      at each generation step.\n       */\n  logprobs?: number;\n  /** Positive values penalize tokens that already appear in the\n      generated text, increasing the probability of generating more diverse\n      content.\n       */\n  presencePenalty?: number;\n  /** Positive values penalize tokens that repeatedly appear in the\n      generated text, increasing the probability of generating more diverse\n      content.\n       */\n  frequencyPenalty?: number;\n  /** When ``seed`` is fixed to a specific number, the model makes a best\n      effort to provide the same response for repeated requests. By default, a\n      random number is used.\n       */\n  seed?: number;\n  /** Output response media type of the generated candidate text.\n   */\n  responseMimeType?: string;\n  /** Schema that the generated candidate text must adhere to.\n   */\n  responseSchema?: SchemaUnion;\n  /** Configuration for model router requests.\n   */\n  routingConfig?: GenerationConfigRoutingConfig;\n  /** Safety settings in the request to block unsafe content in the\n      response.\n       */\n  safetySettings?: SafetySetting[];\n  /** Code that enables the system to interact with external systems to\n      perform an action outside of the knowledge and scope of the model.\n       */\n  tools?: ToolListUnion;\n  /** Associates model output to a specific function call.\n   */\n  toolConfig?: ToolConfig;\n  /** Labels with user-defined metadata to break down billed charges. */\n  labels?: Record<string, string>;\n  /** Resource name of a context cache that can be used in subsequent\n      requests.\n       */\n  cachedContent?: string;\n  /** The requested modalities of the response. Represents the set of\n      modalities that the model can return.\n       */\n  responseModalities?: string[];\n  /** If specified, the media resolution specified will be used.\n   */\n  mediaResolution?: MediaResolution;\n  /** The speech generation configuration.\n   */\n  speechConfig?: SpeechConfigUnion;\n  /** If enabled, audio timestamp will be included in the request to the\n       model.\n       */\n  audioTimestamp?: boolean;\n  /** The thinking features configuration.\n   */\n  thinkingConfig?: ThinkingConfig;\n}\n\n/** Config for models.generate_content parameters. */\nexport declare interface GenerateContentParameters {\n  /** ID of the model to use. For a list of models, see `Google models\n    <https://cloud.google.com/vertex-ai/generative-ai/docs/learn/models>`_. */\n  model: string;\n  /** Content of the request.\n   */\n  contents: ContentListUnion;\n  /** Configuration that contains optional model parameters.\n   */\n  config?: GenerateContentConfig;\n}\n\n/** Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp */\nexport declare interface GoogleTypeDate {\n  /** Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. */\n  day?: number;\n  /** Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. */\n  month?: number;\n  /** Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. */\n  year?: number;\n}\n\n/** Source attributions for content. */\nexport declare interface Citation {\n  /** Output only. End index into the content. */\n  endIndex?: number;\n  /** Output only. License of the attribution. */\n  license?: string;\n  /** Output only. Publication date of the attribution. */\n  publicationDate?: GoogleTypeDate;\n  /** Output only. Start index into the content. */\n  startIndex?: number;\n  /** Output only. Title of the attribution. */\n  title?: string;\n  /** Output only. Url reference of the attribution. */\n  uri?: string;\n}\n\n/** Citation information when the model quotes another source. */\nexport declare interface CitationMetadata {\n  /** Contains citation information when the model directly quotes, at\n      length, from another source. Can include traditional websites and code\n      repositories.\n       */\n  citations?: Citation[];\n}\n\n/** Chunk from context retrieved by the retrieval tools. */\nexport declare interface GroundingChunkRetrievedContext {\n  /** Text of the attribution. */\n  text?: string;\n  /** Title of the attribution. */\n  title?: string;\n  /** URI reference of the attribution. */\n  uri?: string;\n}\n\n/** Chunk from the web. */\nexport declare interface GroundingChunkWeb {\n  /** Domain of the (original) URI. */\n  domain?: string;\n  /** Title of the chunk. */\n  title?: string;\n  /** URI reference of the chunk. */\n  uri?: string;\n}\n\n/** Grounding chunk. */\nexport declare interface GroundingChunk {\n  /** Grounding chunk from context retrieved by the retrieval tools. */\n  retrievedContext?: GroundingChunkRetrievedContext;\n  /** Grounding chunk from the web. */\n  web?: GroundingChunkWeb;\n}\n\n/** Segment of the content. */\nexport declare interface Segment {\n  /** Output only. End index in the given Part, measured in bytes. Offset from the start of the Part, exclusive, starting at zero. */\n  endIndex?: number;\n  /** Output only. The index of a Part object within its parent Content object. */\n  partIndex?: number;\n  /** Output only. Start index in the given Part, measured in bytes. Offset from the start of the Part, inclusive, starting at zero. */\n  startIndex?: number;\n  /** Output only. The text corresponding to the segment from the response. */\n  text?: string;\n}\n\n/** Grounding support. */\nexport declare interface GroundingSupport {\n  /** Confidence score of the support references. Ranges from 0 to 1. 1 is the most confident. This list must have the same size as the grounding_chunk_indices. */\n  confidenceScores?: number[];\n  /** A list of indices (into 'grounding_chunk') specifying the citations associated with the claim. For instance [1,3,4] means that grounding_chunk[1], grounding_chunk[3], grounding_chunk[4] are the retrieved content attributed to the claim. */\n  groundingChunkIndices?: number[];\n  /** Segment of the content this support belongs to. */\n  segment?: Segment;\n}\n\n/** Metadata related to retrieval in the grounding flow. */\nexport declare interface RetrievalMetadata {\n  /** Optional. Score indicating how likely information from Google Search could help answer the prompt. The score is in the range `[0, 1]`, where 0 is the least likely and 1 is the most likely. This score is only populated when Google Search grounding and dynamic retrieval is enabled. It will be compared to the threshold to determine whether to trigger Google Search. */\n  googleSearchDynamicRetrievalScore?: number;\n}\n\n/** Google search entry point. */\nexport declare interface SearchEntryPoint {\n  /** Optional. Web content snippet that can be embedded in a web page or an app webview. */\n  renderedContent?: string;\n  /** Optional. Base64 encoded JSON representing array of tuple. */\n  sdkBlob?: string;\n}\n\n/** Metadata returned to client when grounding is enabled. */\nexport declare interface GroundingMetadata {\n  /** List of supporting references retrieved from specified grounding source. */\n  groundingChunks?: GroundingChunk[];\n  /** Optional. List of grounding support. */\n  groundingSupports?: GroundingSupport[];\n  /** Optional. Output only. Retrieval metadata. */\n  retrievalMetadata?: RetrievalMetadata;\n  /** Optional. Queries executed by the retrieval tools. */\n  retrievalQueries?: string[];\n  /** Optional. Google search entry for the following-up web searches. */\n  searchEntryPoint?: SearchEntryPoint;\n  /** Optional. Web search queries for the following-up web search. */\n  webSearchQueries?: string[];\n}\n\n/** Candidate for the logprobs token and score. */\nexport declare interface LogprobsResultCandidate {\n  /** The candidate's log probability. */\n  logProbability?: number;\n  /** The candidate's token string value. */\n  token?: string;\n  /** The candidate's token id value. */\n  tokenId?: number;\n}\n\n/** Candidates with top log probabilities at each decoding step. */\nexport declare interface LogprobsResultTopCandidates {\n  /** Sorted by log probability in descending order. */\n  candidates?: LogprobsResultCandidate[];\n}\n\n/** Logprobs Result */\nexport declare interface LogprobsResult {\n  /** Length = total number of decoding steps. The chosen candidates may or may not be in top_candidates. */\n  chosenCandidates?: LogprobsResultCandidate[];\n  /** Length = total number of decoding steps. */\n  topCandidates?: LogprobsResultTopCandidates[];\n}\n\n/** Safety rating corresponding to the generated content. */\nexport declare interface SafetyRating {\n  /** Output only. Indicates whether the content was filtered out because of this rating. */\n  blocked?: boolean;\n  /** Output only. Harm category. */\n  category?: HarmCategory;\n  /** Output only. Harm probability levels in the content. */\n  probability?: HarmProbability;\n  /** Output only. Harm probability score. */\n  probabilityScore?: number;\n  /** Output only. Harm severity levels in the content. */\n  severity?: HarmSeverity;\n  /** Output only. Harm severity score. */\n  severityScore?: number;\n}\n\n/** A response candidate generated from the model. */\nexport declare interface Candidate {\n  /** Contains the multi-part content of the response.\n   */\n  content?: Content;\n  /** Source attribution of the generated content.\n   */\n  citationMetadata?: CitationMetadata;\n  /** Describes the reason the model stopped generating tokens.\n   */\n  finishMessage?: string;\n  /** Number of tokens for this candidate.\n   */\n  tokenCount?: number;\n  /** The reason why the model stopped generating tokens.\n      If empty, the model has not stopped generating the tokens.\n       */\n  finishReason?: FinishReason;\n  /** Output only. Average log probability score of the candidate. */\n  avgLogprobs?: number;\n  /** Output only. Metadata specifies sources used to ground generated content. */\n  groundingMetadata?: GroundingMetadata;\n  /** Output only. Index of the candidate. */\n  index?: number;\n  /** Output only. Log-likelihood scores for the response tokens and top tokens */\n  logprobsResult?: LogprobsResult;\n  /** Output only. List of ratings for the safety of a response candidate. There is at most one rating per category. */\n  safetyRatings?: SafetyRating[];\n}\n\n/** Content filter results for a prompt sent in the request. */\nexport class GenerateContentResponsePromptFeedback {\n  /** Output only. Blocked reason. */\n  blockReason?: BlockedReason;\n  /** Output only. A readable block reason message. */\n  blockReasonMessage?: string;\n  /** Output only. Safety ratings. */\n  safetyRatings?: SafetyRating[];\n}\n\n/** Represents token counting info for a single modality. */\nexport declare interface ModalityTokenCount {\n  /** The modality associated with this token count. */\n  modality?: MediaModality;\n  /** Number of tokens. */\n  tokenCount?: number;\n}\n\n/** Usage metadata about response(s). */\nexport class GenerateContentResponseUsageMetadata {\n  /** Output only. List of modalities of the cached content in the request input. */\n  cacheTokensDetails?: ModalityTokenCount[];\n  /** Output only. Number of tokens in the cached part in the input (the cached content). */\n  cachedContentTokenCount?: number;\n  /** Number of tokens in the response(s). */\n  candidatesTokenCount?: number;\n  /** Output only. List of modalities that were returned in the response. */\n  candidatesTokensDetails?: ModalityTokenCount[];\n  /** Number of tokens in the request. When `cached_content` is set, this is still the total effective prompt size meaning this includes the number of tokens in the cached content. */\n  promptTokenCount?: number;\n  /** Output only. List of modalities that were processed in the request input. */\n  promptTokensDetails?: ModalityTokenCount[];\n  /** Output only. Number of tokens present in thoughts output. */\n  thoughtsTokenCount?: number;\n  /** Output only. Number of tokens present in tool-use prompt(s). */\n  toolUsePromptTokenCount?: number;\n  /** Output only. List of modalities that were processed for tool-use request inputs. */\n  toolUsePromptTokensDetails?: ModalityTokenCount[];\n  /** Total token count for prompt, response candidates, and tool-use prompts (if present). */\n  totalTokenCount?: number;\n  /** Output only. Traffic type. This shows whether a request consumes Pay-As-You-Go or Provisioned Throughput quota. */\n  trafficType?: TrafficType;\n}\n\n/** Response message for PredictionService.GenerateContent. */\nexport class GenerateContentResponse {\n  /** Response variations returned by the model.\n   */\n  candidates?: Candidate[];\n  /** Timestamp when the request is made to the server.\n   */\n  createTime?: string;\n  /** Identifier for each response.\n   */\n  responseId?: string;\n  /** Output only. The model version used to generate the response. */\n  modelVersion?: string;\n  /** Output only. Content filter results for a prompt sent in the request. Note: Sent only in the first stream chunk. Only happens when no candidates were generated due to content violations. */\n  promptFeedback?: GenerateContentResponsePromptFeedback;\n  /** Usage metadata about the response(s). */\n  usageMetadata?: GenerateContentResponseUsageMetadata;\n  /**\n   * Returns the concatenation of all text parts from the first candidate in the response.\n   *\n   * @remarks\n   * If there are multiple candidates in the response, the text from the first\n   * one will be returned.\n   * If there are non-text parts in the response, the concatenation of all text\n   * parts will be returned, and a warning will be logged.\n   * If there are thought parts in the response, the concatenation of all text\n   * parts excluding the thought parts will be returned.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.models.generateContent({\n   *   model: 'gemini-2.0-flash',\n   *   contents:\n   *     'Why is the sky blue?',\n   * });\n   *\n   * console.debug(response.text);\n   * ```\n   */\n  get text(): string | undefined {\n    if (this.candidates?.[0]?.content?.parts?.length === 0) {\n      return undefined;\n    }\n    if (this.candidates && this.candidates.length > 1) {\n      console.warn(\n        'there are multiple candidates in the response, returning text from the first one.',\n      );\n    }\n    let text = '';\n    let anyTextPartText = false;\n    const nonTextParts = [];\n    for (const part of this.candidates?.[0]?.content?.parts ?? []) {\n      for (const [fieldName, fieldValue] of Object.entries(part)) {\n        if (\n          fieldName !== 'text' &&\n          fieldName !== 'thought' &&\n          (fieldValue !== null || fieldValue !== undefined)\n        ) {\n          nonTextParts.push(fieldName);\n        }\n      }\n      if (typeof part.text === 'string') {\n        if (typeof part.thought === 'boolean' && part.thought) {\n          continue;\n        }\n        anyTextPartText = true;\n        text += part.text;\n      }\n    }\n    if (nonTextParts.length > 0) {\n      console.warn(\n        `there are non-text parts ${nonTextParts} in the response, returning concatenation of all text parts. Please refer to the non text parts for a full response from model.`,\n      );\n    }\n    // part.text === '' is different from part.text is null\n    return anyTextPartText ? text : undefined;\n  }\n\n  /**\n   * Returns the function calls from the first candidate in the response.\n   *\n   * @remarks\n   * If there are multiple candidates in the response, the function calls from\n   * the first one will be returned.\n   * If there are no function calls in the response, undefined will be returned.\n   *\n   * @example\n   * ```ts\n   * const controlLightFunctionDeclaration: FunctionDeclaration = {\n   *   name: 'controlLight',\n   *   parameters: {\n   *   type: Type.OBJECT,\n   *   description: 'Set the brightness and color temperature of a room light.',\n   *   properties: {\n   *     brightness: {\n   *       type: Type.NUMBER,\n   *       description:\n   *         'Light level from 0 to 100. Zero is off and 100 is full brightness.',\n   *     },\n   *     colorTemperature: {\n   *       type: Type.STRING,\n   *       description:\n   *         'Color temperature of the light fixture which can be `daylight`, `cool` or `warm`.',\n   *     },\n   *   },\n   *   required: ['brightness', 'colorTemperature'],\n   *  };\n   *  const response = await ai.models.generateContent({\n   *     model: 'gemini-2.0-flash',\n   *     contents: 'Dim the lights so the room feels cozy and warm.',\n   *     config: {\n   *       tools: [{functionDeclarations: [controlLightFunctionDeclaration]}],\n   *       toolConfig: {\n   *         functionCallingConfig: {\n   *           mode: FunctionCallingConfigMode.ANY,\n   *           allowedFunctionNames: ['controlLight'],\n   *         },\n   *       },\n   *     },\n   *   });\n   *  console.debug(JSON.stringify(response.functionCalls));\n   * ```\n   */\n  get functionCalls(): FunctionCall[] | undefined {\n    if (this.candidates?.[0]?.content?.parts?.length === 0) {\n      return undefined;\n    }\n    if (this.candidates && this.candidates.length > 1) {\n      console.warn(\n        'there are multiple candidates in the response, returning function calls from the first one.',\n      );\n    }\n    const functionCalls = this.candidates?.[0]?.content?.parts\n      ?.filter((part) => part.functionCall)\n      .map((part) => part.functionCall)\n      .filter(\n        (functionCall): functionCall is FunctionCall =>\n          functionCall !== undefined,\n      );\n    if (functionCalls?.length === 0) {\n      return undefined;\n    }\n    return functionCalls;\n  }\n  /**\n   * Returns the first executable code from the first candidate in the response.\n   *\n   * @remarks\n   * If there are multiple candidates in the response, the executable code from\n   * the first one will be returned.\n   * If there are no executable code in the response, undefined will be\n   * returned.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.models.generateContent({\n   *   model: 'gemini-2.0-flash',\n   *   contents:\n   *     'What is the sum of the first 50 prime numbers? Generate and run code for the calculation, and make sure you get all 50.'\n   *   config: {\n   *     tools: [{codeExecution: {}}],\n   *   },\n   * });\n   *\n   * console.debug(response.executableCode);\n   * ```\n   */\n  get executableCode(): string | undefined {\n    if (this.candidates?.[0]?.content?.parts?.length === 0) {\n      return undefined;\n    }\n    if (this.candidates && this.candidates.length > 1) {\n      console.warn(\n        'there are multiple candidates in the response, returning executable code from the first one.',\n      );\n    }\n    const executableCode = this.candidates?.[0]?.content?.parts\n      ?.filter((part) => part.executableCode)\n      .map((part) => part.executableCode)\n      .filter(\n        (executableCode): executableCode is ExecutableCode =>\n          executableCode !== undefined,\n      );\n    if (executableCode?.length === 0) {\n      return undefined;\n    }\n\n    return executableCode?.[0]?.code;\n  }\n  /**\n   * Returns the first code execution result from the first candidate in the response.\n   *\n   * @remarks\n   * If there are multiple candidates in the response, the code execution result from\n   * the first one will be returned.\n   * If there are no code execution result in the response, undefined will be returned.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.models.generateContent({\n   *   model: 'gemini-2.0-flash',\n   *   contents:\n   *     'What is the sum of the first 50 prime numbers? Generate and run code for the calculation, and make sure you get all 50.'\n   *   config: {\n   *     tools: [{codeExecution: {}}],\n   *   },\n   * });\n   *\n   * console.debug(response.codeExecutionResult);\n   * ```\n   */\n  get codeExecutionResult(): string | undefined {\n    if (this.candidates?.[0]?.content?.parts?.length === 0) {\n      return undefined;\n    }\n    if (this.candidates && this.candidates.length > 1) {\n      console.warn(\n        'there are multiple candidates in the response, returning code execution result from the first one.',\n      );\n    }\n    const codeExecutionResult = this.candidates?.[0]?.content?.parts\n      ?.filter((part) => part.codeExecutionResult)\n      .map((part) => part.codeExecutionResult)\n      .filter(\n        (codeExecutionResult): codeExecutionResult is CodeExecutionResult =>\n          codeExecutionResult !== undefined,\n      );\n    if (codeExecutionResult?.length === 0) {\n      return undefined;\n    }\n    return codeExecutionResult?.[0]?.output;\n  }\n}\n\nexport /** Optional parameters for the embed_content method. */\ndeclare interface EmbedContentConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Type of task for which the embedding will be used.\n   */\n  taskType?: string;\n  /** Title for the text. Only applicable when TaskType is\n      `RETRIEVAL_DOCUMENT`.\n       */\n  title?: string;\n  /** Reduced dimension for the output embedding. If set,\n      excessive values in the output embedding are truncated from the end.\n      Supported by newer models since 2024 only. You cannot set this value if\n      using the earlier model (`models/embedding-001`).\n       */\n  outputDimensionality?: number;\n  /** Vertex API only. The MIME type of the input.\n   */\n  mimeType?: string;\n  /** Vertex API only. Whether to silently truncate inputs longer than\n      the max sequence length. If this option is set to false, oversized inputs\n      will lead to an INVALID_ARGUMENT error, similar to other text APIs.\n       */\n  autoTruncate?: boolean;\n}\n\n/** Parameters for the embed_content method. */\nexport declare interface EmbedContentParameters {\n  /** ID of the model to use. For a list of models, see `Google models\n    <https://cloud.google.com/vertex-ai/generative-ai/docs/learn/models>`_. */\n  model: string;\n  /** The content to embed. Only the `parts.text` fields will be counted.\n   */\n  contents: ContentListUnion;\n  /** Configuration that contains optional parameters.\n   */\n  config?: EmbedContentConfig;\n}\n\n/** Statistics of the input text associated with the result of content embedding. */\nexport declare interface ContentEmbeddingStatistics {\n  /** Vertex API only. If the input text was truncated due to having\n      a length longer than the allowed maximum input.\n       */\n  truncated?: boolean;\n  /** Vertex API only. Number of tokens of the input text.\n   */\n  tokenCount?: number;\n}\n\n/** The embedding generated from an input content. */\nexport declare interface ContentEmbedding {\n  /** A list of floats representing an embedding.\n   */\n  values?: number[];\n  /** Vertex API only. Statistics of the input text associated with this\n      embedding.\n       */\n  statistics?: ContentEmbeddingStatistics;\n}\n\n/** Request-level metadata for the Vertex Embed Content API. */\nexport declare interface EmbedContentMetadata {\n  /** Vertex API only. The total number of billable characters included\n      in the request.\n       */\n  billableCharacterCount?: number;\n}\n\n/** Response for the embed_content method. */\nexport class EmbedContentResponse {\n  /** The embeddings for each request, in the same order as provided in\n      the batch request.\n       */\n  embeddings?: ContentEmbedding[];\n  /** Vertex API only. Metadata about the request.\n   */\n  metadata?: EmbedContentMetadata;\n}\n\n/** The config for generating an images. */\nexport declare interface GenerateImagesConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Cloud Storage URI used to store the generated images.\n   */\n  outputGcsUri?: string;\n  /** Description of what to discourage in the generated images.\n   */\n  negativePrompt?: string;\n  /** Number of images to generate.\n   */\n  numberOfImages?: number;\n  /** Aspect ratio of the generated images.\n   */\n  aspectRatio?: string;\n  /** Controls how much the model adheres to the text prompt. Large\n      values increase output and prompt alignment, but may compromise image\n      quality.\n       */\n  guidanceScale?: number;\n  /** Random seed for image generation. This is not available when\n      ``add_watermark`` is set to true.\n       */\n  seed?: number;\n  /** Filter level for safety filtering.\n   */\n  safetyFilterLevel?: SafetyFilterLevel;\n  /** Allows generation of people by the model.\n   */\n  personGeneration?: PersonGeneration;\n  /** Whether to report the safety scores of each generated image and\n      the positive prompt in the response.\n       */\n  includeSafetyAttributes?: boolean;\n  /** Whether to include the Responsible AI filter reason if the image\n      is filtered out of the response.\n       */\n  includeRaiReason?: boolean;\n  /** Language of the text in the prompt.\n   */\n  language?: ImagePromptLanguage;\n  /** MIME type of the generated image.\n   */\n  outputMimeType?: string;\n  /** Compression quality of the generated image (for ``image/jpeg``\n      only).\n       */\n  outputCompressionQuality?: number;\n  /** Whether to add a watermark to the generated images.\n   */\n  addWatermark?: boolean;\n  /** Whether to use the prompt rewriting logic.\n   */\n  enhancePrompt?: boolean;\n}\n\n/** The parameters for generating images. */\nexport declare interface GenerateImagesParameters {\n  /** ID of the model to use. For a list of models, see `Google models\n    <https://cloud.google.com/vertex-ai/generative-ai/docs/learn/models>`_. */\n  model: string;\n  /** Text prompt that typically describes the images to output.\n   */\n  prompt: string;\n  /** Configuration for generating images.\n   */\n  config?: GenerateImagesConfig;\n}\n\n/** An image. */\nexport declare interface Image {\n  /** The Cloud Storage URI of the image. ``Image`` can contain a value\n      for this field or the ``image_bytes`` field but not both.\n       */\n  gcsUri?: string;\n  /** The image bytes data. ``Image`` can contain a value for this field\n      or the ``gcs_uri`` field but not both.\n       */\n  imageBytes?: string;\n  /** The MIME type of the image. */\n  mimeType?: string;\n}\n\n/** Safety attributes of a GeneratedImage or the user-provided prompt. */\nexport declare interface SafetyAttributes {\n  /** List of RAI categories.\n   */\n  categories?: string[];\n  /** List of scores of each categories.\n   */\n  scores?: number[];\n  /** Internal use only.\n   */\n  contentType?: string;\n}\n\n/** An output image. */\nexport declare interface GeneratedImage {\n  /** The output image data.\n   */\n  image?: Image;\n  /** Responsible AI filter reason if the image is filtered out of the\n      response.\n       */\n  raiFilteredReason?: string;\n  /** Safety attributes of the image. Lists of RAI categories and their\n      scores of each content.\n       */\n  safetyAttributes?: SafetyAttributes;\n  /** The rewritten prompt used for the image generation if the prompt\n      enhancer is enabled.\n       */\n  enhancedPrompt?: string;\n}\n\n/** The output images response. */\nexport class GenerateImagesResponse {\n  /** List of generated images.\n   */\n  generatedImages?: GeneratedImage[];\n  /** Safety attributes of the positive prompt. Only populated if\n      ``include_safety_attributes`` is set to True.\n       */\n  positivePromptSafetyAttributes?: SafetyAttributes;\n}\n\n/** Optional parameters for models.get method. */\nexport declare interface GetModelConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n}\n\nexport declare interface GetModelParameters {\n  model: string;\n  /** Optional parameters for the request. */\n  config?: GetModelConfig;\n}\n\n/** An endpoint where you deploy models. */\nexport declare interface Endpoint {\n  /** Resource name of the endpoint. */\n  name?: string;\n  /** ID of the model that's deployed to the endpoint. */\n  deployedModelId?: string;\n}\n\n/** A tuned machine learning model. */\nexport declare interface TunedModelInfo {\n  /** ID of the base model that you want to tune. */\n  baseModel?: string;\n  /** Date and time when the base model was created. */\n  createTime?: string;\n  /** Date and time when the base model was last updated. */\n  updateTime?: string;\n}\n\n/** A trained machine learning model. */\nexport declare interface Model {\n  /** Resource name of the model. */\n  name?: string;\n  /** Display name of the model. */\n  displayName?: string;\n  /** Description of the model. */\n  description?: string;\n  /** Version ID of the model. A new version is committed when a new\n      model version is uploaded or trained under an existing model ID. The\n      version ID is an auto-incrementing decimal number in string\n      representation. */\n  version?: string;\n  /** List of deployed models created from this base model. Note that a\n      model could have been deployed to endpoints in different locations. */\n  endpoints?: Endpoint[];\n  /** Labels with user-defined metadata to organize your models. */\n  labels?: Record<string, string>;\n  /** Information about the tuned model from the base model. */\n  tunedModelInfo?: TunedModelInfo;\n  /** The maximum number of input tokens that the model can handle. */\n  inputTokenLimit?: number;\n  /** The maximum number of output tokens that the model can generate. */\n  outputTokenLimit?: number;\n  /** List of actions that are supported by the model. */\n  supportedActions?: string[];\n}\n\n/** Generation config. */\nexport declare interface GenerationConfig {\n  /** Optional. If enabled, audio timestamp will be included in the request to the model. */\n  audioTimestamp?: boolean;\n  /** Optional. Number of candidates to generate. */\n  candidateCount?: number;\n  /** Optional. Frequency penalties. */\n  frequencyPenalty?: number;\n  /** Optional. Logit probabilities. */\n  logprobs?: number;\n  /** Optional. The maximum number of output tokens to generate per message. */\n  maxOutputTokens?: number;\n  /** Optional. If specified, the media resolution specified will be used. */\n  mediaResolution?: MediaResolution;\n  /** Optional. Positive penalties. */\n  presencePenalty?: number;\n  /** Optional. If true, export the logprobs results in response. */\n  responseLogprobs?: boolean;\n  /** Optional. Output response mimetype of the generated candidate text. Supported mimetype: - `text/plain`: (default) Text output. - `application/json`: JSON response in the candidates. The model needs to be prompted to output the appropriate response type, otherwise the behavior is undefined. This is a preview feature. */\n  responseMimeType?: string;\n  /** Optional. The `Schema` object allows the definition of input and output data types. These types can be objects, but also primitives and arrays. Represents a select subset of an [OpenAPI 3.0 schema object](https://spec.openapis.org/oas/v3.0.3#schema). If set, a compatible response_mime_type must also be set. Compatible mimetypes: `application/json`: Schema for JSON response. */\n  responseSchema?: Schema;\n  /** Optional. Routing configuration. */\n  routingConfig?: GenerationConfigRoutingConfig;\n  /** Optional. Seed. */\n  seed?: number;\n  /** Optional. Stop sequences. */\n  stopSequences?: string[];\n  /** Optional. Controls the randomness of predictions. */\n  temperature?: number;\n  /** Optional. If specified, top-k sampling will be used. */\n  topK?: number;\n  /** Optional. If specified, nucleus sampling will be used. */\n  topP?: number;\n}\n\n/** Config for the count_tokens method. */\nexport declare interface CountTokensConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Instructions for the model to steer it toward better performance.\n   */\n  systemInstruction?: ContentUnion;\n  /** Code that enables the system to interact with external systems to\n      perform an action outside of the knowledge and scope of the model.\n       */\n  tools?: Tool[];\n  /** Configuration that the model uses to generate the response. Not\n      supported by the Gemini Developer API.\n       */\n  generationConfig?: GenerationConfig;\n}\n\n/** Parameters for counting tokens. */\nexport declare interface CountTokensParameters {\n  /** ID of the model to use. For a list of models, see `Google models\n    <https://cloud.google.com/vertex-ai/generative-ai/docs/learn/models>`_. */\n  model: string;\n  /** Input content. */\n  contents: ContentListUnion;\n  /** Configuration for counting tokens. */\n  config?: CountTokensConfig;\n}\n\n/** Response for counting tokens. */\nexport class CountTokensResponse {\n  /** Total number of tokens. */\n  totalTokens?: number;\n  /** Number of tokens in the cached part of the prompt (the cached content). */\n  cachedContentTokenCount?: number;\n}\n\n/** Optional parameters for computing tokens. */\nexport declare interface ComputeTokensConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n}\n\n/** Parameters for computing tokens. */\nexport declare interface ComputeTokensParameters {\n  /** ID of the model to use. For a list of models, see `Google models\n    <https://cloud.google.com/vertex-ai/generative-ai/docs/learn/models>`_. */\n  model: string;\n  /** Input content. */\n  contents: ContentListUnion;\n  /** Optional parameters for the request.\n   */\n  config?: ComputeTokensConfig;\n}\n\n/** Tokens info with a list of tokens and the corresponding list of token ids. */\nexport declare interface TokensInfo {\n  /** Optional. Optional fields for the role from the corresponding Content. */\n  role?: string;\n  /** A list of token ids from the input. */\n  tokenIds?: string[];\n  /** A list of tokens from the input. */\n  tokens?: string[];\n}\n\n/** Response for computing tokens. */\nexport class ComputeTokensResponse {\n  /** Lists of tokens info from the input. A ComputeTokensRequest could have multiple instances with a prompt in each instance. We also need to return lists of tokens info for the request with multiple instances. */\n  tokensInfo?: TokensInfo[];\n}\n\n/** Configuration for generating videos. */\nexport declare interface GenerateVideosConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Number of output videos. */\n  numberOfVideos?: number;\n  /** The gcs bucket where to save the generated videos. */\n  outputGcsUri?: string;\n  /** Frames per second for video generation. */\n  fps?: number;\n  /** Duration of the clip for video generation in seconds. */\n  durationSeconds?: number;\n  /** The RNG seed. If RNG seed is exactly same for each request with unchanged inputs, the prediction results will be consistent. Otherwise, a random RNG seed will be used each time to produce a different result. */\n  seed?: number;\n  /** The aspect ratio for the generated video. 16:9 (landscape) and 9:16 (portrait) are supported. */\n  aspectRatio?: string;\n  /** The resolution for the generated video. 1280x720, 1920x1080 are supported. */\n  resolution?: string;\n  /** Whether allow to generate person videos, and restrict to specific ages. Supported values are: dont_allow, allow_adult. */\n  personGeneration?: string;\n  /** The pubsub topic where to publish the video generation progress. */\n  pubsubTopic?: string;\n  /** Optional field in addition to the text content. Negative prompts can be explicitly stated here to help generate the video. */\n  negativePrompt?: string;\n  /** Whether to use the prompt rewriting logic. */\n  enhancePrompt?: boolean;\n}\n\n/** Class that represents the parameters for generating an image. */\nexport declare interface GenerateVideosParameters {\n  /** ID of the model to use. For a list of models, see `Google models\n    <https://cloud.google.com/vertex-ai/generative-ai/docs/learn/models>`_. */\n  model: string;\n  /** The text prompt for generating the videos. Optional for image to video use cases. */\n  prompt?: string;\n  /** The input image for generating the videos.\n      Optional if prompt is provided. */\n  image?: Image;\n  /** Configuration for generating videos. */\n  config?: GenerateVideosConfig;\n}\n\n/** A generated video. */\nexport declare interface Video {\n  /** Path to another storage. */\n  uri?: string;\n  /** Video bytes. */\n  videoBytes?: string;\n  /** Video encoding, for example \"video/mp4\". */\n  mimeType?: string;\n}\n\n/** A generated video. */\nexport declare interface GeneratedVideo {\n  /** The output video */\n  video?: Video;\n}\n\n/** Response with generated videos. */\nexport class GenerateVideosResponse {\n  /** List of the generated videos */\n  generatedVideos?: GeneratedVideo[];\n  /** Returns if any videos were filtered due to RAI policies. */\n  raiMediaFilteredCount?: number;\n  /** Returns rai failure reasons if any. */\n  raiMediaFilteredReasons?: string[];\n}\n\n/** A video generation operation. */\nexport declare interface GenerateVideosOperation {\n  /** The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`. */\n  name?: string;\n  /** Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata.  Any method that returns a long-running operation should document the metadata type, if any. */\n  metadata?: Record<string, unknown>;\n  /** If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available. */\n  done?: boolean;\n  /** The error result of the operation in case of failure or cancellation. */\n  error?: Record<string, unknown>;\n  /** The generated videos. */\n  response?: GenerateVideosResponse;\n}\n\n/** Optional configuration for cached content creation. */\nexport declare interface CreateCachedContentConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** The TTL for this resource. The expiration time is computed: now + TTL. It is a duration string, with up to nine fractional digits, terminated by 's'. Example: \"3.5s\". */\n  ttl?: string;\n  /** Timestamp of when this resource is considered expired. Uses RFC 3339 format, Example: 2014-10-02T15:01:23Z. */\n  expireTime?: string;\n  /** The user-generated meaningful display name of the cached content.\n   */\n  displayName?: string;\n  /** The content to cache.\n   */\n  contents?: ContentListUnion;\n  /** Developer set system instruction.\n   */\n  systemInstruction?: ContentUnion;\n  /** A list of `Tools` the model may use to generate the next response.\n   */\n  tools?: Tool[];\n  /** Configuration for the tools to use. This config is shared for all tools.\n   */\n  toolConfig?: ToolConfig;\n}\n\n/** Parameters for caches.create method. */\nexport declare interface CreateCachedContentParameters {\n  /** ID of the model to use. Example: gemini-1.5-flash */\n  model: string;\n  /** Configuration that contains optional parameters.\n   */\n  config?: CreateCachedContentConfig;\n}\n\n/** Metadata on the usage of the cached content. */\nexport declare interface CachedContentUsageMetadata {\n  /** Duration of audio in seconds. */\n  audioDurationSeconds?: number;\n  /** Number of images. */\n  imageCount?: number;\n  /** Number of text characters. */\n  textCount?: number;\n  /** Total number of tokens that the cached content consumes. */\n  totalTokenCount?: number;\n  /** Duration of video in seconds. */\n  videoDurationSeconds?: number;\n}\n\n/** A resource used in LLM queries for users to explicitly specify what to cache. */\nexport declare interface CachedContent {\n  /** The server-generated resource name of the cached content. */\n  name?: string;\n  /** The user-generated meaningful display name of the cached content. */\n  displayName?: string;\n  /** The name of the publisher model to use for cached content. */\n  model?: string;\n  /** Creation time of the cache entry. */\n  createTime?: string;\n  /** When the cache entry was last updated in UTC time. */\n  updateTime?: string;\n  /** Expiration time of the cached content. */\n  expireTime?: string;\n  /** Metadata on the usage of the cached content. */\n  usageMetadata?: CachedContentUsageMetadata;\n}\n\n/** Optional parameters for caches.get method. */\nexport declare interface GetCachedContentConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n}\n\n/** Parameters for caches.get method. */\nexport declare interface GetCachedContentParameters {\n  /** The server-generated resource name of the cached content.\n   */\n  name: string;\n  /** Optional parameters for the request.\n   */\n  config?: GetCachedContentConfig;\n}\n\n/** Optional parameters for caches.delete method. */\nexport declare interface DeleteCachedContentConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n}\n\n/** Parameters for caches.delete method. */\nexport declare interface DeleteCachedContentParameters {\n  /** The server-generated resource name of the cached content.\n   */\n  name: string;\n  /** Optional parameters for the request.\n   */\n  config?: DeleteCachedContentConfig;\n}\n\n/** Empty response for caches.delete method. */\nexport class DeleteCachedContentResponse {}\n\n/** Optional parameters for caches.update method. */\nexport declare interface UpdateCachedContentConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** The TTL for this resource. The expiration time is computed: now + TTL. It is a duration string, with up to nine fractional digits, terminated by 's'. Example: \"3.5s\". */\n  ttl?: string;\n  /** Timestamp of when this resource is considered expired. Uses RFC 3339 format, Example: 2014-10-02T15:01:23Z. */\n  expireTime?: string;\n}\n\nexport declare interface UpdateCachedContentParameters {\n  /** The server-generated resource name of the cached content.\n   */\n  name: string;\n  /** Configuration that contains optional parameters.\n   */\n  config?: UpdateCachedContentConfig;\n}\n\n/** Config for caches.list method. */\nexport declare interface ListCachedContentsConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  pageSize?: number;\n  pageToken?: string;\n}\n\n/** Parameters for caches.list method. */\nexport declare interface ListCachedContentsParameters {\n  /** Configuration that contains optional parameters.\n   */\n  config?: ListCachedContentsConfig;\n}\n\nexport class ListCachedContentsResponse {\n  nextPageToken?: string;\n  /** List of cached contents.\n   */\n  cachedContents?: CachedContent[];\n}\n\n/** Used to override the default configuration. */\nexport declare interface ListFilesConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  pageSize?: number;\n  pageToken?: string;\n}\n\n/** Generates the parameters for the list method. */\nexport declare interface ListFilesParameters {\n  /** Used to override the default configuration. */\n  config?: ListFilesConfig;\n}\n\n/** Status of a File that uses a common error model. */\nexport declare interface FileStatus {\n  /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */\n  details?: Record<string, unknown>[];\n  /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */\n  message?: string;\n  /** The status code. 0 for OK, 1 for CANCELLED */\n  code?: number;\n}\n\n/** A file uploaded to the API. */\nexport declare interface File {\n  /** The `File` resource name. The ID (name excluding the \"files/\" prefix) can contain up to 40 characters that are lowercase alphanumeric or dashes (-). The ID cannot start or end with a dash. If the name is empty on create, a unique name will be generated. Example: `files/123-456` */\n  name?: string;\n  /** Optional. The human-readable display name for the `File`. The display name must be no more than 512 characters in length, including spaces. Example: 'Welcome Image' */\n  displayName?: string;\n  /** Output only. MIME type of the file. */\n  mimeType?: string;\n  /** Output only. Size of the file in bytes. */\n  sizeBytes?: string;\n  /** Output only. The timestamp of when the `File` was created. */\n  createTime?: string;\n  /** Output only. The timestamp of when the `File` will be deleted. Only set if the `File` is scheduled to expire. */\n  expirationTime?: string;\n  /** Output only. The timestamp of when the `File` was last updated. */\n  updateTime?: string;\n  /** Output only. SHA-256 hash of the uploaded bytes. The hash value is encoded in base64 format. */\n  sha256Hash?: string;\n  /** Output only. The URI of the `File`. */\n  uri?: string;\n  /** Output only. The URI of the `File`, only set for downloadable (generated) files. */\n  downloadUri?: string;\n  /** Output only. Processing state of the File. */\n  state?: FileState;\n  /** Output only. The source of the `File`. */\n  source?: FileSource;\n  /** Output only. Metadata for a video. */\n  videoMetadata?: Record<string, unknown>;\n  /** Output only. Error status if File processing failed. */\n  error?: FileStatus;\n}\n\n/** Response for the list files method. */\nexport class ListFilesResponse {\n  /** A token to retrieve next page of results. */\n  nextPageToken?: string;\n  /** The list of files. */\n  files?: File[];\n}\n\n/** Used to override the default configuration. */\nexport declare interface CreateFileConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n}\n\n/** Generates the parameters for the private _create method. */\nexport declare interface CreateFileParameters {\n  /** The file to be uploaded.\n            mime_type: (Required) The MIME type of the file. Must be provided.\n            name: (Optional) The name of the file in the destination (e.g.\n            'files/sample-image').\n            display_name: (Optional) The display name of the file.\n       */\n  file: File;\n  /** Used to override the default configuration. */\n  config?: CreateFileConfig;\n}\n\n/** A wrapper class for the http response. */\nexport class HttpResponse {\n  /** Used to retain the processed HTTP headers in the response. */\n  headers?: Record<string, string>;\n  /**\n   * The original http response.\n   */\n  responseInternal: Response;\n\n  constructor(response: Response) {\n    // Process the headers.\n    const headers: Record<string, string> = {};\n    for (const pair of response.headers.entries()) {\n      headers[pair[0]] = pair[1];\n    }\n    this.headers = headers;\n\n    // Keep the original response.\n    this.responseInternal = response;\n  }\n\n  json(): Promise<unknown> {\n    return this.responseInternal.json();\n  }\n}\n\n/** Callbacks for the live API. */\nexport interface LiveCallbacks {\n  /**\n   * Called when the websocket connection is established.\n   */\n  onopen?: (() => void) | null;\n  /**\n   * Called when a message is received from the server.\n   */\n  onmessage: (e: LiveServerMessage) => void;\n  /**\n   * Called when an error occurs.\n   */\n  onerror?: ((e: ErrorEvent) => void) | null;\n  /**\n   * Called when the websocket connection is closed.\n   */\n  onclose?: ((e: CloseEvent) => void) | null;\n}\n\n/** Parameters for the upload file method. */\nexport interface UploadFileParameters {\n  /** The string path to the file to be uploaded or a Blob object. */\n  file: string | globalThis.Blob;\n  /** Configuration that contains optional parameters. */\n  config?: UploadFileConfig;\n}\n/** Response for the create file method. */\nexport class CreateFileResponse {\n  /** Used to retain the full HTTP response. */\n  sdkHttpResponse?: HttpResponse;\n}\n\n/** Used to override the default configuration. */\nexport declare interface GetFileConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n}\n\n/** Generates the parameters for the get method. */\nexport declare interface GetFileParameters {\n  /** The name identifier for the file to retrieve. */\n  name: string;\n  /** Used to override the default configuration. */\n  config?: GetFileConfig;\n}\n\n/** Used to override the default configuration. */\nexport declare interface DeleteFileConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n}\n\n/** Generates the parameters for the get method. */\nexport declare interface DeleteFileParameters {\n  /** The name identifier for the file to be deleted. */\n  name: string;\n  /** Used to override the default configuration. */\n  config?: DeleteFileConfig;\n}\n\n/** Response for the delete file method. */\nexport class DeleteFileResponse {}\n\nexport declare interface GetOperationConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n}\n\n/** Parameters for the GET method. */\nexport declare interface GetOperationParameters {\n  /** The server-assigned name for the operation. */\n  operationName: string;\n  /** Used to override the default configuration. */\n  config?: GetOperationConfig;\n}\n\nexport declare interface FetchPredictOperationConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n}\n\n/** Parameters for the fetchPredictOperation method. */\nexport declare interface FetchPredictOperationParameters {\n  /** The server-assigned name for the operation. */\n  operationName: string;\n  resourceName: string;\n  /** Used to override the default configuration. */\n  config?: FetchPredictOperationConfig;\n}\n\nexport declare interface TestTableItem {\n  /** The name of the test. This is used to derive the replay id. */\n  name?: string;\n  /** The parameters to the test. Use pydantic models. */\n  parameters?: Record<string, unknown>;\n  /** Expects an exception for MLDev matching the string. */\n  exceptionIfMldev?: string;\n  /** Expects an exception for Vertex matching the string. */\n  exceptionIfVertex?: string;\n  /** Use if you don't want to use the default replay id which is derived from the test name. */\n  overrideReplayId?: string;\n  /** True if the parameters contain an unsupported union type. This test  will be skipped for languages that do not support the union type. */\n  hasUnion?: boolean;\n  /** When set to a reason string, this test will be skipped in the API mode. Use this flag for tests that can not be reproduced with the real API. E.g. a test that deletes a resource. */\n  skipInApiMode?: string;\n  /** Keys to ignore when comparing the request and response. This is useful for tests that are not deterministic. */\n  ignoreKeys?: string[];\n}\n\nexport declare interface TestTableFile {\n  comment?: string;\n  testMethod?: string;\n  parameterNames?: string[];\n  testTable?: TestTableItem[];\n}\n\n/** Represents a single request in a replay. */\nexport declare interface ReplayRequest {\n  method?: string;\n  url?: string;\n  headers?: Record<string, string>;\n  bodySegments?: Record<string, unknown>[];\n}\n\n/** Represents a single response in a replay. */\nexport class ReplayResponse {\n  statusCode?: number;\n  headers?: Record<string, string>;\n  bodySegments?: Record<string, unknown>[];\n  sdkResponseSegments?: Record<string, unknown>[];\n}\n\n/** Represents a single interaction, request and response in a replay. */\nexport declare interface ReplayInteraction {\n  request?: ReplayRequest;\n  response?: ReplayResponse;\n}\n\n/** Represents a recorded session. */\nexport declare interface ReplayFile {\n  replayId?: string;\n  interactions?: ReplayInteraction[];\n}\n\n/** Used to override the default configuration. */\nexport declare interface UploadFileConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** The name of the file in the destination (e.g., 'files/sample-image'. If not provided one will be generated. */\n  name?: string;\n  /** mime_type: The MIME type of the file. If not provided, it will be inferred from the file extension. */\n  mimeType?: string;\n  /** Optional display name of the file. */\n  displayName?: string;\n}\n\n/** Used to override the default configuration. */\nexport declare interface DownloadFileConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n}\n\n/** Configuration for upscaling an image.\n\n  For more information on this configuration, refer to\n  the `Imagen API reference documentation\n  <https://cloud.google.com/vertex-ai/generative-ai/docs/model-reference/imagen-api>`_.\n   */\nexport declare interface UpscaleImageConfig {\n  /** Used to override HTTP request options. */\n  httpOptions?: HttpOptions;\n  /** Whether to include a reason for filtered-out images in the\n      response. */\n  includeRaiReason?: boolean;\n  /** The image format that the output should be saved as. */\n  outputMimeType?: string;\n  /** The level of compression if the ``output_mime_type`` is\n      ``image/jpeg``. */\n  outputCompressionQuality?: number;\n}\n\n/** User-facing config UpscaleImageParameters. */\nexport declare interface UpscaleImageParameters {\n  /** The model to use. */\n  model: string;\n  /** The input image to upscale. */\n  image: Image;\n  /** The factor to upscale the image (x2 or x4). */\n  upscaleFactor: string;\n  /** Configuration for upscaling. */\n  config?: UpscaleImageConfig;\n}\n\n/** A raw reference image.\n\n  A raw reference image represents the base image to edit, provided by the user.\n  It can optionally be provided in addition to a mask reference image or\n  a style reference image.\n   */\nexport declare interface RawReferenceImage {\n  /** The reference image for the editing operation. */\n  referenceImage?: Image;\n  /** The id of the reference image. */\n  referenceId?: number;\n  /** The type of the reference image. Only set by the SDK. */\n  referenceType?: string;\n}\n\n/** Configuration for a Mask reference image. */\nexport declare interface MaskReferenceConfig {\n  /** Prompts the model to generate a mask instead of you needing to\n      provide one (unless MASK_MODE_USER_PROVIDED is used). */\n  maskMode?: MaskReferenceMode;\n  /** A list of up to 5 class ids to use for semantic segmentation.\n      Automatically creates an image mask based on specific objects. */\n  segmentationClasses?: number[];\n  /** Dilation percentage of the mask provided.\n      Float between 0 and 1. */\n  maskDilation?: number;\n}\n\n/** A mask reference image.\n\n  This encapsulates either a mask image provided by the user and configs for\n  the user provided mask, or only config parameters for the model to generate\n  a mask.\n\n  A mask image is an image whose non-zero values indicate where to edit the base\n  image. If the user provides a mask image, the mask must be in the same\n  dimensions as the raw image.\n   */\nexport declare interface MaskReferenceImage {\n  /** The reference image for the editing operation. */\n  referenceImage?: Image;\n  /** The id of the reference image. */\n  referenceId?: number;\n  /** The type of the reference image. Only set by the SDK. */\n  referenceType?: string;\n  /** Configuration for the mask reference image. */\n  config?: MaskReferenceConfig;\n}\n\n/** Configuration for a Control reference image. */\nexport declare interface ControlReferenceConfig {\n  /** The type of control reference image to use. */\n  controlType?: ControlReferenceType;\n  /** Defaults to False. When set to True, the control image will be\n      computed by the model based on the control type. When set to False,\n      the control image must be provided by the user. */\n  enableControlImageComputation?: boolean;\n}\n\n/** A control reference image.\n\n  The image of the control reference image is either a control image provided\n  by the user, or a regular image which the backend will use to generate a\n  control image of. In the case of the latter, the\n  enable_control_image_computation field in the config should be set to True.\n\n  A control image is an image that represents a sketch image of areas for the\n  model to fill in based on the prompt.\n   */\nexport declare interface ControlReferenceImage {\n  /** The reference image for the editing operation. */\n  referenceImage?: Image;\n  /** The id of the reference image. */\n  referenceId?: number;\n  /** The type of the reference image. Only set by the SDK. */\n  referenceType?: string;\n  /** Configuration for the control reference image. */\n  config?: ControlReferenceConfig;\n}\n\n/** Configuration for a Style reference image. */\nexport declare interface StyleReferenceConfig {\n  /** A text description of the style to use for the generated image. */\n  styleDescription?: string;\n}\n\n/** A style reference image.\n\n  This encapsulates a style reference image provided by the user, and\n  additionally optional config parameters for the style reference image.\n\n  A raw reference image can also be provided as a destination for the style to\n  be applied to.\n   */\nexport declare interface StyleReferenceImage {\n  /** The reference image for the editing operation. */\n  referenceImage?: Image;\n  /** The id of the reference image. */\n  referenceId?: number;\n  /** The type of the reference image. Only set by the SDK. */\n  referenceType?: string;\n  /** Configuration for the style reference image. */\n  config?: StyleReferenceConfig;\n}\n\n/** Configuration for a Subject reference image. */\nexport declare interface SubjectReferenceConfig {\n  /** The subject type of a subject reference image. */\n  subjectType?: SubjectReferenceType;\n  /** Subject description for the image. */\n  subjectDescription?: string;\n}\n\n/** A subject reference image.\n\n  This encapsulates a subject reference image provided by the user, and\n  additionally optional config parameters for the subject reference image.\n\n  A raw reference image can also be provided as a destination for the subject to\n  be applied to.\n   */\nexport declare interface SubjectReferenceImage {\n  /** The reference image for the editing operation. */\n  referenceImage?: Image;\n  /** The id of the reference image. */\n  referenceId?: number;\n  /** The type of the reference image. Only set by the SDK. */\n  referenceType?: string;\n  /** Configuration for the subject reference image. */\n  config?: SubjectReferenceConfig;\n}\n\n/** Sent in response to a `LiveGenerateContentSetup` message from the client. */\nexport declare interface LiveServerSetupComplete {}\n\n/** Incremental server update generated by the model in response to client messages.\n\n  Content is generated as quickly as possible, and not in real time. Clients\n  may choose to buffer and play it out in real time.\n   */\nexport declare interface LiveServerContent {\n  /** The content that the model has generated as part of the current conversation with the user. */\n  modelTurn?: Content;\n  /** If true, indicates that the model is done generating. Generation will only start in response to additional client messages. Can be set alongside `content`, indicating that the `content` is the last in the turn. */\n  turnComplete?: boolean;\n  /** If true, indicates that a client message has interrupted current model generation. If the client is playing out the content in realtime, this is a good signal to stop and empty the current queue. */\n  interrupted?: boolean;\n  /** If true, indicates that the model is done generating. When model is\n      interrupted while generating there will be no generation_complete message\n      in interrupted turn, it will go through interrupted > turn_complete.\n      When model assumes realtime playback there will be delay between\n      generation_complete and turn_complete that is caused by model\n      waiting for playback to finish. If true, indicates that the model\n      has finished generating all content. This is a signal to the client\n      that it can stop sending messages. */\n  generationComplete?: boolean;\n}\n\n/** Request for the client to execute the `function_calls` and return the responses with the matching `id`s. */\nexport declare interface LiveServerToolCall {\n  /** The function call to be executed. */\n  functionCalls?: FunctionCall[];\n}\n\n/** Notification for the client that a previously issued `ToolCallMessage` with the specified `id`s should have been not executed and should be cancelled.\n\n  If there were side-effects to those tool calls, clients may attempt to undo\n  the tool calls. This message occurs only in cases where the clients interrupt\n  server turns.\n   */\nexport declare interface LiveServerToolCallCancellation {\n  /** The ids of the tool calls to be cancelled. */\n  ids?: string[];\n}\n\n/** Usage metadata about response(s). */\nexport declare interface UsageMetadata {\n  /** Number of tokens in the prompt. When `cached_content` is set, this is still the total effective prompt size meaning this includes the number of tokens in the cached content. */\n  promptTokenCount?: number;\n  /** Number of tokens in the cached part of the prompt (the cached content). */\n  cachedContentTokenCount?: number;\n  /** Total number of tokens across all the generated response candidates. */\n  responseTokenCount?: number;\n  /** Number of tokens present in tool-use prompt(s). */\n  toolUsePromptTokenCount?: number;\n  /** Number of tokens of thoughts for thinking models. */\n  thoughtsTokenCount?: number;\n  /** Total token count for prompt, response candidates, and tool-use prompts(if present). */\n  totalTokenCount?: number;\n  /** List of modalities that were processed in the request input. */\n  promptTokensDetails?: ModalityTokenCount[];\n  /** List of modalities that were processed in the cache input. */\n  cacheTokensDetails?: ModalityTokenCount[];\n  /** List of modalities that were returned in the response. */\n  responseTokensDetails?: ModalityTokenCount[];\n  /** List of modalities that were processed in the tool-use prompt. */\n  toolUsePromptTokensDetails?: ModalityTokenCount[];\n  /** Traffic type. This shows whether a request consumes Pay-As-You-Go\n or Provisioned Throughput quota. */\n  trafficType?: TrafficType;\n}\n\n/** Server will not be able to service client soon. */\nexport declare interface LiveServerGoAway {\n  /** The remaining time before the connection will be terminated as ABORTED. The minimal time returned here is specified differently together with the rate limits for a given model. */\n  timeLeft?: string;\n}\n\n/** Update of the session resumption state.\n\n  Only sent if `session_resumption` was set in the connection config.\n   */\nexport declare interface LiveServerSessionResumptionUpdate {\n  /** New handle that represents state that can be resumed. Empty if `resumable`=false. */\n  newHandle?: string;\n  /** True if session can be resumed at this point. It might be not possible to resume session at some points. In that case we send update empty new_handle and resumable=false. Example of such case could be model executing function calls or just generating. Resuming session (using previous session token) in such state will result in some data loss. */\n  resumable?: boolean;\n  /** Index of last message sent by client that is included in state represented by this SessionResumptionToken. Only sent when `SessionResumptionConfig.transparent` is set.\n\nPresence of this index allows users to transparently reconnect and avoid issue of losing some part of realtime audio input/video. If client wishes to temporarily disconnect (for example as result of receiving GoAway) they can do it without losing state by buffering messages sent since last `SessionResmumptionTokenUpdate`. This field will enable them to limit buffering (avoid keeping all requests in RAM).\n\nNote: This should not be used for when resuming a session at some time later -- in those cases partial audio and video frames arelikely not needed. */\n  lastConsumedClientMessageIndex?: string;\n}\n\n/** Response message for API call. */\nexport declare interface LiveServerMessage {\n  /** Sent in response to a `LiveClientSetup` message from the client. */\n  setupComplete?: LiveServerSetupComplete;\n  /** Content generated by the model in response to client messages. */\n  serverContent?: LiveServerContent;\n  /** Request for the client to execute the `function_calls` and return the responses with the matching `id`s. */\n  toolCall?: LiveServerToolCall;\n  /** Notification for the client that a previously issued `ToolCallMessage` with the specified `id`s should have been not executed and should be cancelled. */\n  toolCallCancellation?: LiveServerToolCallCancellation;\n  /** Usage metadata about model response(s). */\n  usageMetadata?: UsageMetadata;\n  /** Server will disconnect soon. */\n  goAway?: LiveServerGoAway;\n  /** Update of the session resumption state. */\n  sessionResumptionUpdate?: LiveServerSessionResumptionUpdate;\n}\n\n/** Configures automatic detection of activity. */\nexport declare interface AutomaticActivityDetection {\n  /** If enabled, detected voice and text input count as activity. If disabled, the client must send activity signals. */\n  disabled?: boolean;\n  /** Determines how likely speech is to be detected. */\n  startOfSpeechSensitivity?: StartSensitivity;\n  /** Determines how likely detected speech is ended. */\n  endOfSpeechSensitivity?: EndSensitivity;\n  /** The required duration of detected speech before start-of-speech is committed. The lower this value the more sensitive the start-of-speech detection is and the shorter speech can be recognized. However, this also increases the probability of false positives. */\n  prefixPaddingMs?: number;\n  /** The required duration of detected non-speech (e.g. silence) before end-of-speech is committed. The larger this value, the longer speech gaps can be without interrupting the user's activity but this will increase the model's latency. */\n  silenceDurationMs?: number;\n}\n\n/** Marks the end of user activity.\n\n  This can only be sent if automatic (i.e. server-side) activity detection is\n  disabled.\n   */\nexport declare interface RealtimeInputConfig {\n  /** If not set, automatic activity detection is enabled by default. If automatic voice detection is disabled, the client must send activity signals. */\n  automaticActivityDetection?: AutomaticActivityDetection;\n  /** Defines what effect activity has. */\n  activityHandling?: ActivityHandling;\n  /** Defines which input is included in the user's turn. */\n  turnCoverage?: TurnCoverage;\n}\n\n/** Configuration of session resumption mechanism.\n\n  Included in `LiveConnectConfig.session_resumption`. If included server\n  will send `LiveServerSessionResumptionUpdate` messages.\n   */\nexport declare interface SessionResumptionConfig {\n  /** Session resumption handle of previous session (session to restore).\n\nIf not present new session will be started. */\n  handle?: string;\n  /** If set the server will send `last_consumed_client_message_index` in the `session_resumption_update` messages to allow for transparent reconnections. */\n  transparent?: boolean;\n}\n\n/** Context window will be truncated by keeping only suffix of it.\n\n  Context window will always be cut at start of USER role turn. System\n  instructions and `BidiGenerateContentSetup.prefix_turns` will not be\n  subject to the sliding window mechanism, they will always stay at the\n  beginning of context window.\n   */\nexport declare interface SlidingWindow {\n  /** Session reduction target -- how many tokens we should keep. Window shortening operation has some latency costs, so we should avoid running it on every turn. Should be < trigger_tokens. If not set, trigger_tokens/2 is assumed. */\n  targetTokens?: string;\n}\n\n/** Enables context window compression -- mechanism managing model context window so it does not exceed given length. */\nexport declare interface ContextWindowCompressionConfig {\n  /** Number of tokens (before running turn) that triggers context window compression mechanism. */\n  triggerTokens?: string;\n  /** Sliding window compression mechanism. */\n  slidingWindow?: SlidingWindow;\n}\n\n/** Message contains configuration that will apply for the duration of the streaming session. */\nexport declare interface LiveClientSetup {\n  /** \n      The fully qualified name of the publisher model or tuned model endpoint to\n      use.\n       */\n  model?: string;\n  /** The generation configuration for the session.\n      Note: only a subset of fields are supported.\n       */\n  generationConfig?: GenerationConfig;\n  /** The user provided system instructions for the model.\n      Note: only text should be used in parts and content in each part will be\n      in a separate paragraph. */\n  systemInstruction?: Content;\n  /**  A list of `Tools` the model may use to generate the next response.\n\n      A `Tool` is a piece of code that enables the system to interact with\n      external systems to perform an action, or set of actions, outside of\n      knowledge and scope of the model. */\n  tools?: ToolListUnion;\n  /** Configures the realtime input behavior in BidiGenerateContent. */\n  realtimeInputConfig?: RealtimeInputConfig;\n  /** Configures session resumption mechanism.\n\n          If included server will send SessionResumptionUpdate messages. */\n  sessionResumption?: SessionResumptionConfig;\n  /** Configures context window compression mechanism.\n\n      If included, server will compress context window to fit into given length. */\n  contextWindowCompression?: ContextWindowCompressionConfig;\n}\n\n/** Incremental update of the current conversation delivered from the client.\n\n  All the content here will unconditionally be appended to the conversation\n  history and used as part of the prompt to the model to generate content.\n\n  A message here will interrupt any current model generation.\n   */\nexport declare interface LiveClientContent {\n  /** The content appended to the current conversation with the model.\n\n      For single-turn queries, this is a single instance. For multi-turn\n      queries, this is a repeated field that contains conversation history and\n      latest request.\n       */\n  turns?: Content[];\n  /** If true, indicates that the server content generation should start with\n  the currently accumulated prompt. Otherwise, the server will await\n  additional messages before starting generation. */\n  turnComplete?: boolean;\n}\n\n/** Marks the start of user activity.\n\n  This can only be sent if automatic (i.e. server-side) activity detection is\n  disabled.\n   */\nexport declare interface ActivityStart {}\n\n/** Marks the end of user activity.\n\n  This can only be sent if automatic (i.e. server-side) activity detection is\n  disabled.\n   */\nexport declare interface ActivityEnd {}\n\n/** User input that is sent in real time.\n\n  This is different from `LiveClientContent` in a few ways:\n\n    - Can be sent continuously without interruption to model generation.\n    - If there is a need to mix data interleaved across the\n      `LiveClientContent` and the `LiveClientRealtimeInput`, server attempts to\n      optimize for best response, but there are no guarantees.\n    - End of turn is not explicitly specified, but is rather derived from user\n      activity (for example, end of speech).\n    - Even before the end of turn, the data is processed incrementally\n      to optimize for a fast start of the response from the model.\n    - Is always assumed to be the user's input (cannot be used to populate\n      conversation history).\n   */\nexport declare interface LiveClientRealtimeInput {\n  /** Inlined bytes data for media input. */\n  mediaChunks?: Blob[];\n  /** Marks the start of user activity. */\n  activityStart?: ActivityStart;\n  /** Marks the end of user activity. */\n  activityEnd?: ActivityEnd;\n}\n\n/** Client generated response to a `ToolCall` received from the server.\n\n  Individual `FunctionResponse` objects are matched to the respective\n  `FunctionCall` objects by the `id` field.\n\n  Note that in the unary and server-streaming GenerateContent APIs function\n  calling happens by exchanging the `Content` parts, while in the bidi\n  GenerateContent APIs function calling happens over this dedicated set of\n  messages.\n   */\nexport class LiveClientToolResponse {\n  /** The response to the function calls. */\n  functionResponses?: FunctionResponse[];\n}\n\n/** Messages sent by the client in the API call. */\nexport declare interface LiveClientMessage {\n  /** Message to be sent by the system when connecting to the API. SDK users should not send this message. */\n  setup?: LiveClientSetup;\n  /** Incremental update of the current conversation delivered from the client. */\n  clientContent?: LiveClientContent;\n  /** User input that is sent in real time. */\n  realtimeInput?: LiveClientRealtimeInput;\n  /** Response to a `ToolCallMessage` received from the server. */\n  toolResponse?: LiveClientToolResponse;\n}\n\n/** The audio transcription configuration in Setup. */\nexport declare interface AudioTranscriptionConfig {}\n\n/** Session config for the API connection. */\nexport declare interface LiveConnectConfig {\n  /** The generation configuration for the session. */\n  generationConfig?: GenerationConfig;\n  /** The requested modalities of the response. Represents the set of\n      modalities that the model can return. Defaults to AUDIO if not specified.\n       */\n  responseModalities?: Modality[];\n  /** The speech generation configuration.\n   */\n  speechConfig?: SpeechConfig;\n  /** The user provided system instructions for the model.\n      Note: only text should be used in parts and content in each part will be\n      in a separate paragraph. */\n  systemInstruction?: Content;\n  /** A list of `Tools` the model may use to generate the next response.\n\n      A `Tool` is a piece of code that enables the system to interact with\n      external systems to perform an action, or set of actions, outside of\n      knowledge and scope of the model. */\n  tools?: ToolListUnion;\n  /** Configures session resumption mechanism.\n\nIf included the server will send SessionResumptionUpdate messages. */\n  sessionResumption?: SessionResumptionConfig;\n  /** Configures the realtime input behavior in BidiGenerateContent. */\n  realtimeInputConfig?: RealtimeInputConfig;\n  /** Configures context window compression mechanism.\n\n      If included, server will compress context window to fit into given length. */\n  contextWindowCompression?: ContextWindowCompressionConfig;\n}\n\n/** Parameters for connecting to the live API. */\nexport declare interface LiveConnectParameters {\n  /** ID of the model to use. For a list of models, see `Google models\n    <https://cloud.google.com/vertex-ai/generative-ai/docs/learn/models>`_. */\n  model: string;\n  /** callbacks */\n  callbacks: LiveCallbacks;\n  /** Optional configuration parameters for the request.\n   */\n  config?: LiveConnectConfig;\n}\n\n/** Parameters for initializing a new chat session.\n\n  These parameters are used when creating a chat session with the\n  `chats.create()` method.\n   */\nexport declare interface CreateChatParameters {\n  /** The name of the model to use for the chat session.\n\n      For example: 'gemini-2.0-flash', 'gemini-1.5-pro', etc. See gemini API\n      docs to find the available models.\n       */\n  model: string;\n  /** Config for the entire chat session.\n\n      This config applies to all requests within the session\n      unless overridden by a per-request `config` in `SendMessageParameters`.\n       */\n  config?: GenerateContentConfig;\n  /** The initial conversation history for the chat session.\n\n      This allows you to start the chat with a pre-existing history. The history\n      must be a list of `Content` alternating between 'user' and 'model' roles.\n      It should start with a 'user' message.\n       */\n  history?: Content[];\n}\n\n/** Parameters for sending a message within a chat session.\n\n  These parameters are used with the `chat.sendMessage()` method.\n   */\nexport declare interface SendMessageParameters {\n  /** The message to send to the model.\n\n      The SDK will combine all parts into a single 'user' content to send to\n      the model.\n       */\n  message: PartListUnion;\n  /**  Config for this specific request.\n\n      Please note that the per-request config does not change the chat level\n      config, nor inherit from it. If you intend to use some values from the\n      chat's default config, you must explicitly copy them into this per-request\n      config.\n       */\n  config?: GenerateContentConfig;\n}\n\n/** Parameters for sending client content to the live API. */\nexport declare interface LiveSendClientContentParameters {\n  /** Client content to send to the session. */\n  turns?: ContentListUnion;\n  /** If true, indicates that the server content generation should start with\n  the currently accumulated prompt. Otherwise, the server will await\n  additional messages before starting generation. */\n  turnComplete?: boolean;\n}\n\n/** Parameters for sending realtime input to the live API. */\nexport declare interface LiveSendRealtimeInputParameters {\n  /** Realtime input to send to the session. */\n  media: Blob;\n  /** Marks the start of user activity. */\n  activityStart?: ActivityStart;\n  /** Marks the end of user activity. */\n  activityEnd?: ActivityEnd;\n}\n\n/** Parameters for sending tool responses to the live API. */\nexport class LiveSendToolResponseParameters {\n  /** Tool responses to send to the session. */\n  functionResponses: FunctionResponse[] | FunctionResponse = [];\n}\n\n/** Parameters for the get method of the operations module. */\nexport declare interface OperationGetParameters {\n  /** The operation to be retrieved. */\n  operation: GenerateVideosOperation;\n  /** Used to override the default configuration. */\n  config?: GetOperationConfig;\n}\n\nexport type PartUnion = Part | string;\n\nexport type PartListUnion = PartUnion[] | PartUnion;\n\nexport type ContentUnion = Content | PartUnion[] | PartUnion;\n\nexport type ContentListUnion = ContentUnion[] | ContentUnion;\n\nexport type SchemaUnion = Schema;\n\nexport type SpeechConfigUnion = SpeechConfig | string;\n\nexport type ToolListUnion = Tool[];\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport class BaseModule {}\n\nexport function formatMap(\n  templateString: string,\n  valueMap: Record<string, unknown>,\n): string {\n  // Use a regular expression to find all placeholders in the template string\n  const regex = /\\{([^}]+)\\}/g;\n\n  // Replace each placeholder with its corresponding value from the valueMap\n  return templateString.replace(regex, (match, key) => {\n    if (Object.prototype.hasOwnProperty.call(valueMap, key)) {\n      const value = valueMap[key];\n      // Convert the value to a string if it's not a string already\n      return value !== undefined && value !== null ? String(value) : '';\n    } else {\n      // Handle missing keys\n      throw new Error(`Key '${key}' not found in valueMap.`);\n    }\n  });\n}\n\nexport function setValueByPath(\n  data: Record<string, unknown>,\n  keys: string[],\n  value: unknown,\n): void {\n  for (let i = 0; i < keys.length - 1; i++) {\n    const key = keys[i];\n\n    if (key.endsWith('[]')) {\n      const keyName = key.slice(0, -2);\n      if (!(keyName in data)) {\n        if (Array.isArray(value)) {\n          data[keyName] = Array.from({length: value.length}, () => ({}));\n        } else {\n          throw new Error(`Value must be a list given an array path ${key}`);\n        }\n      }\n\n      if (Array.isArray(data[keyName])) {\n        const arrayData = data[keyName] as Array<unknown>;\n\n        if (Array.isArray(value)) {\n          for (let j = 0; j < arrayData.length; j++) {\n            const entry = arrayData[j] as Record<string, unknown>;\n            setValueByPath(entry, keys.slice(i + 1), value[j]);\n          }\n        } else {\n          for (const d of arrayData) {\n            setValueByPath(\n              d as Record<string, unknown>,\n              keys.slice(i + 1),\n              value,\n            );\n          }\n        }\n      }\n      return;\n    } else if (key.endsWith('[0]')) {\n      const keyName = key.slice(0, -3);\n      if (!(keyName in data)) {\n        data[keyName] = [{}];\n      }\n      const arrayData = (data as Record<string, unknown>)[keyName];\n      setValueByPath(\n        (arrayData as Array<Record<string, unknown>>)[0],\n        keys.slice(i + 1),\n        value,\n      );\n      return;\n    }\n\n    if (!data[key] || typeof data[key] !== 'object') {\n      data[key] = {};\n    }\n\n    data = data[key] as Record<string, unknown>;\n  }\n\n  const keyToSet = keys[keys.length - 1];\n  const existingData = data[keyToSet];\n\n  if (existingData !== undefined) {\n    if (\n      !value ||\n      (typeof value === 'object' && Object.keys(value).length === 0)\n    ) {\n      return;\n    }\n\n    if (value === existingData) {\n      return;\n    }\n\n    if (\n      typeof existingData === 'object' &&\n      typeof value === 'object' &&\n      existingData !== null &&\n      value !== null\n    ) {\n      Object.assign(existingData, value);\n    } else {\n      throw new Error(`Cannot set value for an existing key. Key: ${keyToSet}`);\n    }\n  } else {\n    data[keyToSet] = value;\n  }\n}\n\nexport function getValueByPath(data: unknown, keys: string[]): unknown {\n  try {\n    if (keys.length === 1 && keys[0] === '_self') {\n      return data;\n    }\n\n    for (let i = 0; i < keys.length; i++) {\n      if (typeof data !== 'object' || data === null) {\n        return undefined;\n      }\n\n      const key = keys[i];\n      if (key.endsWith('[]')) {\n        const keyName = key.slice(0, -2);\n        if (keyName in data) {\n          const arrayData = (data as Record<string, unknown>)[keyName];\n          if (!Array.isArray(arrayData)) {\n            return undefined;\n          }\n          return arrayData.map((d) => getValueByPath(d, keys.slice(i + 1)));\n        } else {\n          return undefined;\n        }\n      } else {\n        data = (data as Record<string, unknown>)[key];\n      }\n    }\n\n    return data;\n  } catch (error) {\n    if (error instanceof TypeError) {\n      return undefined;\n    }\n    throw error;\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ApiClient} from './_api_client';\nimport * as types from './types';\n\nexport function tModel(apiClient: ApiClient, model: string | unknown): string {\n  if (!model || typeof model !== 'string') {\n    throw new Error('model is required and must be a string');\n  }\n\n  if (apiClient.isVertexAI()) {\n    if (\n      model.startsWith('publishers/') ||\n      model.startsWith('projects/') ||\n      model.startsWith('models/')\n    ) {\n      return model;\n    } else if (model.indexOf('/') >= 0) {\n      const parts = model.split('/', 2);\n      return `publishers/${parts[0]}/models/${parts[1]}`;\n    } else {\n      return `publishers/google/models/${model}`;\n    }\n  } else {\n    if (model.startsWith('models/') || model.startsWith('tunedModels/')) {\n      return model;\n    } else {\n      return `models/${model}`;\n    }\n  }\n}\n\nexport function tCachesModel(\n  apiClient: ApiClient,\n  model: string | unknown,\n): string {\n  const transformedModel = tModel(apiClient, model as string);\n  if (!transformedModel) {\n    return '';\n  }\n\n  if (transformedModel.startsWith('publishers/') && apiClient.isVertexAI()) {\n    // vertex caches only support model name start with projects.\n    return `projects/${apiClient.getProject()}/locations/${apiClient.getLocation()}/${transformedModel}`;\n  } else if (transformedModel.startsWith('models/') && apiClient.isVertexAI()) {\n    return `projects/${apiClient.getProject()}/locations/${apiClient.getLocation()}/publishers/google/${transformedModel}`;\n  } else {\n    return transformedModel;\n  }\n}\n\nexport function tPart(\n  apiClient: ApiClient,\n  origin?: types.PartUnion | null,\n): types.Part {\n  if (origin === null || origin === undefined) {\n    throw new Error('PartUnion is required');\n  }\n  if (typeof origin === 'object') {\n    return origin;\n  }\n  if (typeof origin === 'string') {\n    return {text: origin};\n  }\n  throw new Error(`Unsupported part type: ${typeof origin}`);\n}\n\nexport function tParts(\n  apiClient: ApiClient,\n  origin?: types.PartListUnion | null,\n): types.Part[] {\n  if (\n    origin === null ||\n    origin === undefined ||\n    (Array.isArray(origin) && origin.length === 0)\n  ) {\n    throw new Error('PartListUnion is required');\n  }\n  if (Array.isArray(origin)) {\n    return origin.map((item) => tPart(apiClient, item as types.PartUnion)!);\n  }\n  return [tPart(apiClient, origin)!];\n}\n\nfunction _isContent(origin: unknown): boolean {\n  return (\n    origin !== null &&\n    origin !== undefined &&\n    typeof origin === 'object' &&\n    'parts' in origin &&\n    Array.isArray(origin.parts)\n  );\n}\n\nfunction _isFunctionCallPart(origin: unknown): boolean {\n  return (\n    origin !== null &&\n    origin !== undefined &&\n    typeof origin === 'object' &&\n    'functionCall' in origin\n  );\n}\n\nfunction _isUserPart(origin: unknown): boolean {\n  if (origin === null || origin === undefined) {\n    return false;\n  }\n  if (_isFunctionCallPart(origin)) {\n    return false;\n  }\n  return true;\n}\n\nfunction _areUserParts(origin: types.PartListUnion[]): boolean {\n  if (\n    origin === null ||\n    origin === undefined ||\n    (Array.isArray(origin) && origin.length === 0)\n  ) {\n    return false;\n  }\n  return origin.every(_isUserPart);\n}\n\nexport function tContent(\n  apiClient: ApiClient,\n  origin?: types.ContentUnion,\n): types.Content {\n  if (origin === null || origin === undefined) {\n    throw new Error('ContentUnion is required');\n  }\n  if (_isContent(origin)) {\n    // @ts-expect-error: _isContent is a utility function that checks if the\n    // origin is a Content.\n    return origin;\n  }\n\n  if (_isUserPart(origin)) {\n    return {\n      role: 'user',\n      parts: tParts(apiClient, origin as types.PartListUnion)!,\n    };\n  } else {\n    return {\n      role: 'model',\n      parts: tParts(apiClient, origin as types.PartListUnion)!,\n    };\n  }\n}\n\nexport function tContentsForEmbed(\n  apiClient: ApiClient,\n  origin: types.ContentListUnion,\n): types.ContentUnion[] {\n  if (!origin) {\n    return [];\n  }\n  if (apiClient.isVertexAI() && Array.isArray(origin)) {\n    return origin.flatMap((item) => {\n      const content = tContent(apiClient, item as types.ContentUnion);\n      if (\n        content.parts &&\n        content.parts.length > 0 &&\n        content.parts[0].text !== undefined\n      ) {\n        return [content.parts[0].text];\n      }\n      return [];\n    });\n  } else if (apiClient.isVertexAI()) {\n    const content = tContent(apiClient, origin as types.ContentUnion);\n    if (\n      content.parts &&\n      content.parts.length > 0 &&\n      content.parts[0].text !== undefined\n    ) {\n      return [content.parts[0].text];\n    }\n    return [];\n  }\n  if (Array.isArray(origin)) {\n    return origin.map(\n      (item) => tContent(apiClient, item as types.ContentUnion)!,\n    );\n  }\n  return [tContent(apiClient, origin as types.ContentUnion)!];\n}\n\nfunction _appendAccumulatedPartsAsContent(\n  apiClient: ApiClient,\n  result: types.Content[],\n  accumulatedParts: types.PartUnion[],\n) {\n  if (accumulatedParts.length === 0) {\n    return;\n  }\n  if (_areUserParts(accumulatedParts)) {\n    result.push({\n      role: 'user',\n      parts: tParts(apiClient, accumulatedParts),\n    });\n  } else {\n    result.push({\n      role: 'model',\n      parts: tParts(apiClient, accumulatedParts),\n    });\n  }\n  accumulatedParts.length = 0; // clear the array inplace\n}\n\nfunction _handleCurrentPart(\n  apiClient: ApiClient,\n  result: types.Content[],\n  accumulatedParts: types.PartUnion[],\n  currentPart: types.PartUnion,\n) {\n  if (_isUserPart(currentPart) === _areUserParts(accumulatedParts)) {\n    accumulatedParts.push(currentPart);\n  } else {\n    _appendAccumulatedPartsAsContent(apiClient, result, accumulatedParts);\n    accumulatedParts.length = 0;\n    accumulatedParts.push(currentPart);\n  }\n}\n\nexport function tContents(\n  apiClient: ApiClient,\n  origin?: types.ContentListUnion,\n): types.Content[] {\n  if (\n    origin === null ||\n    origin === undefined ||\n    (Array.isArray(origin) && origin.length === 0)\n  ) {\n    throw new Error('contents are required');\n  }\n  if (!Array.isArray(origin)) {\n    return [tContent(apiClient, origin)];\n  }\n\n  const result: types.Content[] = [];\n  const accumulatedParts: types.PartUnion[] = [];\n\n  for (const content of origin) {\n    if (_isContent(content)) {\n      _appendAccumulatedPartsAsContent(apiClient, result, accumulatedParts);\n      // @ts-expect-error: content is a Content here\n      result.push(content);\n    } else if (\n      typeof content === 'string' ||\n      (typeof content === 'object' && !Array.isArray(content))\n    ) {\n      // @ts-expect-error: content is a part here\n      _handleCurrentPart(apiClient, result, accumulatedParts, content);\n    } else if (Array.isArray(content)) {\n      // if there're consecutive user parts before the list,\n      // convert to UserContent and append to result\n      _appendAccumulatedPartsAsContent(apiClient, result, accumulatedParts);\n      result.push({\n        role: 'user',\n        parts: tParts(apiClient, content),\n      });\n    } else {\n      throw new Error(`Unsupported content type: ${typeof content}`);\n    }\n  }\n  _appendAccumulatedPartsAsContent(apiClient, result, accumulatedParts);\n\n  return result;\n}\n\nexport function processSchema(apiClient: ApiClient, schema: types.Schema) {\n  if (!apiClient.isVertexAI()) {\n    if ('default' in schema) {\n      throw new Error(\n        'Default value is not supported in the response schema for the Gemini API.',\n      );\n    }\n  }\n\n  if ('anyOf' in schema) {\n    if (schema['anyOf'] !== undefined) {\n      for (const subSchema of schema['anyOf']) {\n        processSchema(apiClient, subSchema);\n      }\n    }\n  }\n\n  if ('items' in schema) {\n    if (schema['items'] !== undefined) {\n      processSchema(apiClient, schema['items']);\n    }\n  }\n\n  if ('properties' in schema) {\n    if (schema['properties'] !== undefined) {\n      for (const subSchema of Object.values(schema['properties'])) {\n        processSchema(apiClient, subSchema);\n      }\n    }\n  }\n}\n\nexport function tSchema(\n  apiClient: ApiClient,\n  schema: types.Schema,\n): types.Schema {\n  processSchema(apiClient, schema);\n  return schema;\n}\n\nexport function tSpeechConfig(\n  apiClient: ApiClient,\n  speechConfig: types.SpeechConfigUnion,\n): types.SpeechConfig {\n  if (typeof speechConfig === 'object' && 'voiceConfig' in speechConfig) {\n    return speechConfig;\n  } else if (typeof speechConfig === 'string') {\n    return {\n      voiceConfig: {\n        prebuiltVoiceConfig: {\n          voiceName: speechConfig,\n        },\n      },\n    };\n  } else {\n    throw new Error(`Unsupported speechConfig type: ${typeof speechConfig}`);\n  }\n}\n\nexport function tTool(apiClient: ApiClient, tool: types.Tool): types.Tool {\n  return tool;\n}\n\nexport function tTools(\n  apiClient: ApiClient,\n  tool: types.Tool[] | unknown,\n): types.Tool[] {\n  if (!Array.isArray(tool)) {\n    throw new Error('tool is required and must be an array of Tools');\n  }\n  return tool;\n}\n\n/**\n * Prepends resource name with project, location, resource_prefix if needed.\n *\n * @param client The API client.\n * @param resourceName The resource name.\n * @param resourcePrefix The resource prefix.\n * @param splitsAfterPrefix The number of splits after the prefix.\n * @returns The completed resource name.\n *\n * Examples:\n *\n * ```\n * resource_name = '123'\n * resource_prefix = 'cachedContents'\n * splits_after_prefix = 1\n * client.vertexai = True\n * client.project = 'bar'\n * client.location = 'us-west1'\n * _resource_name(client, resource_name, resource_prefix, splits_after_prefix)\n * returns: 'projects/bar/locations/us-west1/cachedContents/123'\n * ```\n *\n * ```\n * resource_name = 'projects/foo/locations/us-central1/cachedContents/123'\n * resource_prefix = 'cachedContents'\n * splits_after_prefix = 1\n * client.vertexai = True\n * client.project = 'bar'\n * client.location = 'us-west1'\n * _resource_name(client, resource_name, resource_prefix, splits_after_prefix)\n * returns: 'projects/foo/locations/us-central1/cachedContents/123'\n * ```\n *\n * ```\n * resource_name = '123'\n * resource_prefix = 'cachedContents'\n * splits_after_prefix = 1\n * client.vertexai = False\n * _resource_name(client, resource_name, resource_prefix, splits_after_prefix)\n * returns 'cachedContents/123'\n * ```\n *\n * ```\n * resource_name = 'some/wrong/cachedContents/resource/name/123'\n * resource_prefix = 'cachedContents'\n * splits_after_prefix = 1\n * client.vertexai = False\n * # client.vertexai = True\n * _resource_name(client, resource_name, resource_prefix, splits_after_prefix)\n * -> 'some/wrong/resource/name/123'\n * ```\n */\nfunction resourceName(\n  client: ApiClient,\n  resourceName: string,\n  resourcePrefix: string,\n  splitsAfterPrefix: number = 1,\n): string {\n  const shouldAppendPrefix =\n    !resourceName.startsWith(`${resourcePrefix}/`) &&\n    resourceName.split('/').length === splitsAfterPrefix;\n  if (client.isVertexAI()) {\n    if (resourceName.startsWith('projects/')) {\n      return resourceName;\n    } else if (resourceName.startsWith('locations/')) {\n      return `projects/${client.getProject()}/${resourceName}`;\n    } else if (resourceName.startsWith(`${resourcePrefix}/`)) {\n      return `projects/${client.getProject()}/locations/${client.getLocation()}/${resourceName}`;\n    } else if (shouldAppendPrefix) {\n      return `projects/${client.getProject()}/locations/${client.getLocation()}/${resourcePrefix}/${resourceName}`;\n    } else {\n      return resourceName;\n    }\n  }\n  if (shouldAppendPrefix) {\n    return `${resourcePrefix}/${resourceName}`;\n  }\n  return resourceName;\n}\n\nexport function tCachedContentName(\n  apiClient: ApiClient,\n  name: string | unknown,\n): string {\n  if (typeof name !== 'string') {\n    throw new Error('name must be a string');\n  }\n  return resourceName(apiClient, name, 'cachedContents');\n}\n\nexport function tTuningJobStatus(\n  apiClient: ApiClient,\n  status: string | unknown,\n): string {\n  switch (status) {\n    case 'STATE_UNSPECIFIED':\n      return 'JOB_STATE_UNSPECIFIED';\n    case 'CREATING':\n      return 'JOB_STATE_RUNNING';\n    case 'ACTIVE':\n      return 'JOB_STATE_SUCCEEDED';\n    case 'FAILED':\n      return 'JOB_STATE_FAILED';\n    default:\n      return status as string;\n  }\n}\n\nexport function tBytes(\n  apiClient: ApiClient,\n  fromImageBytes: string | unknown,\n): string {\n  if (typeof fromImageBytes !== 'string') {\n    throw new Error('fromImageBytes must be a string');\n  }\n  // TODO(b/389133914): Remove dummy bytes converter.\n  return fromImageBytes;\n}\nexport function tFileName(\n  apiClient: ApiClient,\n  fromName: string | unknown,\n): string {\n  if (typeof fromName !== 'string') {\n    throw new Error('fromName must be a string');\n  }\n  // Remove the files/ prefx for MLdev urls to get the actual name of the file.\n  if (fromName.startsWith('files/')) {\n    return fromName.split('files/')[1];\n  }\n  return fromName;\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\nimport {ApiClient} from '../_api_client';\nimport * as common from '../_common';\nimport * as t from '../_transformers';\nimport * as types from '../types';\n\nexport function partToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Part,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['videoMetadata']) !== undefined) {\n    throw new Error('videoMetadata parameter is not supported in Gemini API.');\n  }\n\n  const fromThought = common.getValueByPath(fromObject, ['thought']);\n  if (fromThought != null) {\n    common.setValueByPath(toObject, ['thought'], fromThought);\n  }\n\n  const fromCodeExecutionResult = common.getValueByPath(fromObject, [\n    'codeExecutionResult',\n  ]);\n  if (fromCodeExecutionResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['codeExecutionResult'],\n      fromCodeExecutionResult,\n    );\n  }\n\n  const fromExecutableCode = common.getValueByPath(fromObject, [\n    'executableCode',\n  ]);\n  if (fromExecutableCode != null) {\n    common.setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n  }\n\n  const fromFileData = common.getValueByPath(fromObject, ['fileData']);\n  if (fromFileData != null) {\n    common.setValueByPath(toObject, ['fileData'], fromFileData);\n  }\n\n  const fromFunctionCall = common.getValueByPath(fromObject, ['functionCall']);\n  if (fromFunctionCall != null) {\n    common.setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n  }\n\n  const fromFunctionResponse = common.getValueByPath(fromObject, [\n    'functionResponse',\n  ]);\n  if (fromFunctionResponse != null) {\n    common.setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n  }\n\n  const fromInlineData = common.getValueByPath(fromObject, ['inlineData']);\n  if (fromInlineData != null) {\n    common.setValueByPath(toObject, ['inlineData'], fromInlineData);\n  }\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  return toObject;\n}\n\nexport function contentToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Content,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromParts = common.getValueByPath(fromObject, ['parts']);\n  if (fromParts != null) {\n    if (Array.isArray(fromParts)) {\n      common.setValueByPath(\n        toObject,\n        ['parts'],\n        fromParts.map((item) => {\n          return partToMldev(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(toObject, ['parts'], fromParts);\n    }\n  }\n\n  const fromRole = common.getValueByPath(fromObject, ['role']);\n  if (fromRole != null) {\n    common.setValueByPath(toObject, ['role'], fromRole);\n  }\n\n  return toObject;\n}\n\nexport function schemaToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Schema,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['example']) !== undefined) {\n    throw new Error('example parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['pattern']) !== undefined) {\n    throw new Error('pattern parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['default']) !== undefined) {\n    throw new Error('default parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['maxLength']) !== undefined) {\n    throw new Error('maxLength parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['minLength']) !== undefined) {\n    throw new Error('minLength parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['minProperties']) !== undefined) {\n    throw new Error('minProperties parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['maxProperties']) !== undefined) {\n    throw new Error('maxProperties parameter is not supported in Gemini API.');\n  }\n\n  const fromAnyOf = common.getValueByPath(fromObject, ['anyOf']);\n  if (fromAnyOf != null) {\n    common.setValueByPath(toObject, ['anyOf'], fromAnyOf);\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromEnum = common.getValueByPath(fromObject, ['enum']);\n  if (fromEnum != null) {\n    common.setValueByPath(toObject, ['enum'], fromEnum);\n  }\n\n  const fromFormat = common.getValueByPath(fromObject, ['format']);\n  if (fromFormat != null) {\n    common.setValueByPath(toObject, ['format'], fromFormat);\n  }\n\n  const fromItems = common.getValueByPath(fromObject, ['items']);\n  if (fromItems != null) {\n    common.setValueByPath(toObject, ['items'], fromItems);\n  }\n\n  const fromMaxItems = common.getValueByPath(fromObject, ['maxItems']);\n  if (fromMaxItems != null) {\n    common.setValueByPath(toObject, ['maxItems'], fromMaxItems);\n  }\n\n  const fromMaximum = common.getValueByPath(fromObject, ['maximum']);\n  if (fromMaximum != null) {\n    common.setValueByPath(toObject, ['maximum'], fromMaximum);\n  }\n\n  const fromMinItems = common.getValueByPath(fromObject, ['minItems']);\n  if (fromMinItems != null) {\n    common.setValueByPath(toObject, ['minItems'], fromMinItems);\n  }\n\n  const fromMinimum = common.getValueByPath(fromObject, ['minimum']);\n  if (fromMinimum != null) {\n    common.setValueByPath(toObject, ['minimum'], fromMinimum);\n  }\n\n  const fromNullable = common.getValueByPath(fromObject, ['nullable']);\n  if (fromNullable != null) {\n    common.setValueByPath(toObject, ['nullable'], fromNullable);\n  }\n\n  const fromProperties = common.getValueByPath(fromObject, ['properties']);\n  if (fromProperties != null) {\n    common.setValueByPath(toObject, ['properties'], fromProperties);\n  }\n\n  const fromPropertyOrdering = common.getValueByPath(fromObject, [\n    'propertyOrdering',\n  ]);\n  if (fromPropertyOrdering != null) {\n    common.setValueByPath(toObject, ['propertyOrdering'], fromPropertyOrdering);\n  }\n\n  const fromRequired = common.getValueByPath(fromObject, ['required']);\n  if (fromRequired != null) {\n    common.setValueByPath(toObject, ['required'], fromRequired);\n  }\n\n  const fromTitle = common.getValueByPath(fromObject, ['title']);\n  if (fromTitle != null) {\n    common.setValueByPath(toObject, ['title'], fromTitle);\n  }\n\n  const fromType = common.getValueByPath(fromObject, ['type']);\n  if (fromType != null) {\n    common.setValueByPath(toObject, ['type'], fromType);\n  }\n\n  return toObject;\n}\n\nexport function functionDeclarationToMldev(\n  apiClient: ApiClient,\n  fromObject: types.FunctionDeclaration,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['response']) !== undefined) {\n    throw new Error('response parameter is not supported in Gemini API.');\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromParameters = common.getValueByPath(fromObject, ['parameters']);\n  if (fromParameters != null) {\n    common.setValueByPath(toObject, ['parameters'], fromParameters);\n  }\n\n  return toObject;\n}\n\nexport function googleSearchToMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function dynamicRetrievalConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.DynamicRetrievalConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMode = common.getValueByPath(fromObject, ['mode']);\n  if (fromMode != null) {\n    common.setValueByPath(toObject, ['mode'], fromMode);\n  }\n\n  const fromDynamicThreshold = common.getValueByPath(fromObject, [\n    'dynamicThreshold',\n  ]);\n  if (fromDynamicThreshold != null) {\n    common.setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n  }\n\n  return toObject;\n}\n\nexport function googleSearchRetrievalToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GoogleSearchRetrieval,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDynamicRetrievalConfig = common.getValueByPath(fromObject, [\n    'dynamicRetrievalConfig',\n  ]);\n  if (fromDynamicRetrievalConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['dynamicRetrievalConfig'],\n      dynamicRetrievalConfigToMldev(apiClient, fromDynamicRetrievalConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function toolToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Tool,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionDeclarations = common.getValueByPath(fromObject, [\n    'functionDeclarations',\n  ]);\n  if (fromFunctionDeclarations != null) {\n    if (Array.isArray(fromFunctionDeclarations)) {\n      common.setValueByPath(\n        toObject,\n        ['functionDeclarations'],\n        fromFunctionDeclarations.map((item) => {\n          return functionDeclarationToMldev(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(\n        toObject,\n        ['functionDeclarations'],\n        fromFunctionDeclarations,\n      );\n    }\n  }\n\n  if (common.getValueByPath(fromObject, ['retrieval']) !== undefined) {\n    throw new Error('retrieval parameter is not supported in Gemini API.');\n  }\n\n  const fromGoogleSearch = common.getValueByPath(fromObject, ['googleSearch']);\n  if (fromGoogleSearch != null) {\n    common.setValueByPath(toObject, ['googleSearch'], googleSearchToMldev());\n  }\n\n  const fromGoogleSearchRetrieval = common.getValueByPath(fromObject, [\n    'googleSearchRetrieval',\n  ]);\n  if (fromGoogleSearchRetrieval != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleSearchRetrieval'],\n      googleSearchRetrievalToMldev(apiClient, fromGoogleSearchRetrieval),\n    );\n  }\n\n  const fromCodeExecution = common.getValueByPath(fromObject, [\n    'codeExecution',\n  ]);\n  if (fromCodeExecution != null) {\n    common.setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n  }\n\n  return toObject;\n}\n\nexport function functionCallingConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.FunctionCallingConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMode = common.getValueByPath(fromObject, ['mode']);\n  if (fromMode != null) {\n    common.setValueByPath(toObject, ['mode'], fromMode);\n  }\n\n  const fromAllowedFunctionNames = common.getValueByPath(fromObject, [\n    'allowedFunctionNames',\n  ]);\n  if (fromAllowedFunctionNames != null) {\n    common.setValueByPath(\n      toObject,\n      ['allowedFunctionNames'],\n      fromAllowedFunctionNames,\n    );\n  }\n\n  return toObject;\n}\n\nexport function toolConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ToolConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionCallingConfig = common.getValueByPath(fromObject, [\n    'functionCallingConfig',\n  ]);\n  if (fromFunctionCallingConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['functionCallingConfig'],\n      functionCallingConfigToMldev(apiClient, fromFunctionCallingConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function createCachedContentConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.CreateCachedContentConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTtl = common.getValueByPath(fromObject, ['ttl']);\n  if (parentObject !== undefined && fromTtl != null) {\n    common.setValueByPath(parentObject, ['ttl'], fromTtl);\n  }\n\n  const fromExpireTime = common.getValueByPath(fromObject, ['expireTime']);\n  if (parentObject !== undefined && fromExpireTime != null) {\n    common.setValueByPath(parentObject, ['expireTime'], fromExpireTime);\n  }\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (parentObject !== undefined && fromDisplayName != null) {\n    common.setValueByPath(parentObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromContents = common.getValueByPath(fromObject, ['contents']);\n  if (parentObject !== undefined && fromContents != null) {\n    if (Array.isArray(fromContents)) {\n      common.setValueByPath(\n        parentObject,\n        ['contents'],\n        t.tContents(\n          apiClient,\n          t.tContents(apiClient, fromContents).map((item) => {\n            return contentToMldev(apiClient, item);\n          }),\n        ),\n      );\n    } else {\n      common.setValueByPath(\n        parentObject,\n        ['contents'],\n        t.tContents(apiClient, fromContents),\n      );\n    }\n  }\n\n  const fromSystemInstruction = common.getValueByPath(fromObject, [\n    'systemInstruction',\n  ]);\n  if (parentObject !== undefined && fromSystemInstruction != null) {\n    common.setValueByPath(\n      parentObject,\n      ['systemInstruction'],\n      contentToMldev(apiClient, t.tContent(apiClient, fromSystemInstruction)),\n    );\n  }\n\n  const fromTools = common.getValueByPath(fromObject, ['tools']);\n  if (parentObject !== undefined && fromTools != null) {\n    if (Array.isArray(fromTools)) {\n      common.setValueByPath(\n        parentObject,\n        ['tools'],\n        fromTools.map((item) => {\n          return toolToMldev(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(parentObject, ['tools'], fromTools);\n    }\n  }\n\n  const fromToolConfig = common.getValueByPath(fromObject, ['toolConfig']);\n  if (parentObject !== undefined && fromToolConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['toolConfig'],\n      toolConfigToMldev(apiClient, fromToolConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function createCachedContentParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.CreateCachedContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['model'],\n      t.tCachesModel(apiClient, fromModel),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      createCachedContentConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function getCachedContentParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GetCachedContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'name'],\n      t.tCachedContentName(apiClient, fromName),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function deleteCachedContentParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.DeleteCachedContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'name'],\n      t.tCachedContentName(apiClient, fromName),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function updateCachedContentConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.UpdateCachedContentConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTtl = common.getValueByPath(fromObject, ['ttl']);\n  if (parentObject !== undefined && fromTtl != null) {\n    common.setValueByPath(parentObject, ['ttl'], fromTtl);\n  }\n\n  const fromExpireTime = common.getValueByPath(fromObject, ['expireTime']);\n  if (parentObject !== undefined && fromExpireTime != null) {\n    common.setValueByPath(parentObject, ['expireTime'], fromExpireTime);\n  }\n\n  return toObject;\n}\n\nexport function updateCachedContentParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.UpdateCachedContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'name'],\n      t.tCachedContentName(apiClient, fromName),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      updateCachedContentConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function listCachedContentsConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ListCachedContentsConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPageSize = common.getValueByPath(fromObject, ['pageSize']);\n  if (parentObject !== undefined && fromPageSize != null) {\n    common.setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n  }\n\n  const fromPageToken = common.getValueByPath(fromObject, ['pageToken']);\n  if (parentObject !== undefined && fromPageToken != null) {\n    common.setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n  }\n\n  return toObject;\n}\n\nexport function listCachedContentsParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ListCachedContentsParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      listCachedContentsConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function partToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Part,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideoMetadata = common.getValueByPath(fromObject, [\n    'videoMetadata',\n  ]);\n  if (fromVideoMetadata != null) {\n    common.setValueByPath(toObject, ['videoMetadata'], fromVideoMetadata);\n  }\n\n  const fromThought = common.getValueByPath(fromObject, ['thought']);\n  if (fromThought != null) {\n    common.setValueByPath(toObject, ['thought'], fromThought);\n  }\n\n  const fromCodeExecutionResult = common.getValueByPath(fromObject, [\n    'codeExecutionResult',\n  ]);\n  if (fromCodeExecutionResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['codeExecutionResult'],\n      fromCodeExecutionResult,\n    );\n  }\n\n  const fromExecutableCode = common.getValueByPath(fromObject, [\n    'executableCode',\n  ]);\n  if (fromExecutableCode != null) {\n    common.setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n  }\n\n  const fromFileData = common.getValueByPath(fromObject, ['fileData']);\n  if (fromFileData != null) {\n    common.setValueByPath(toObject, ['fileData'], fromFileData);\n  }\n\n  const fromFunctionCall = common.getValueByPath(fromObject, ['functionCall']);\n  if (fromFunctionCall != null) {\n    common.setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n  }\n\n  const fromFunctionResponse = common.getValueByPath(fromObject, [\n    'functionResponse',\n  ]);\n  if (fromFunctionResponse != null) {\n    common.setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n  }\n\n  const fromInlineData = common.getValueByPath(fromObject, ['inlineData']);\n  if (fromInlineData != null) {\n    common.setValueByPath(toObject, ['inlineData'], fromInlineData);\n  }\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  return toObject;\n}\n\nexport function contentToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Content,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromParts = common.getValueByPath(fromObject, ['parts']);\n  if (fromParts != null) {\n    if (Array.isArray(fromParts)) {\n      common.setValueByPath(\n        toObject,\n        ['parts'],\n        fromParts.map((item) => {\n          return partToVertex(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(toObject, ['parts'], fromParts);\n    }\n  }\n\n  const fromRole = common.getValueByPath(fromObject, ['role']);\n  if (fromRole != null) {\n    common.setValueByPath(toObject, ['role'], fromRole);\n  }\n\n  return toObject;\n}\n\nexport function schemaToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Schema,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromExample = common.getValueByPath(fromObject, ['example']);\n  if (fromExample != null) {\n    common.setValueByPath(toObject, ['example'], fromExample);\n  }\n\n  const fromPattern = common.getValueByPath(fromObject, ['pattern']);\n  if (fromPattern != null) {\n    common.setValueByPath(toObject, ['pattern'], fromPattern);\n  }\n\n  const fromDefault = common.getValueByPath(fromObject, ['default']);\n  if (fromDefault != null) {\n    common.setValueByPath(toObject, ['default'], fromDefault);\n  }\n\n  const fromMaxLength = common.getValueByPath(fromObject, ['maxLength']);\n  if (fromMaxLength != null) {\n    common.setValueByPath(toObject, ['maxLength'], fromMaxLength);\n  }\n\n  const fromMinLength = common.getValueByPath(fromObject, ['minLength']);\n  if (fromMinLength != null) {\n    common.setValueByPath(toObject, ['minLength'], fromMinLength);\n  }\n\n  const fromMinProperties = common.getValueByPath(fromObject, [\n    'minProperties',\n  ]);\n  if (fromMinProperties != null) {\n    common.setValueByPath(toObject, ['minProperties'], fromMinProperties);\n  }\n\n  const fromMaxProperties = common.getValueByPath(fromObject, [\n    'maxProperties',\n  ]);\n  if (fromMaxProperties != null) {\n    common.setValueByPath(toObject, ['maxProperties'], fromMaxProperties);\n  }\n\n  const fromAnyOf = common.getValueByPath(fromObject, ['anyOf']);\n  if (fromAnyOf != null) {\n    common.setValueByPath(toObject, ['anyOf'], fromAnyOf);\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromEnum = common.getValueByPath(fromObject, ['enum']);\n  if (fromEnum != null) {\n    common.setValueByPath(toObject, ['enum'], fromEnum);\n  }\n\n  const fromFormat = common.getValueByPath(fromObject, ['format']);\n  if (fromFormat != null) {\n    common.setValueByPath(toObject, ['format'], fromFormat);\n  }\n\n  const fromItems = common.getValueByPath(fromObject, ['items']);\n  if (fromItems != null) {\n    common.setValueByPath(toObject, ['items'], fromItems);\n  }\n\n  const fromMaxItems = common.getValueByPath(fromObject, ['maxItems']);\n  if (fromMaxItems != null) {\n    common.setValueByPath(toObject, ['maxItems'], fromMaxItems);\n  }\n\n  const fromMaximum = common.getValueByPath(fromObject, ['maximum']);\n  if (fromMaximum != null) {\n    common.setValueByPath(toObject, ['maximum'], fromMaximum);\n  }\n\n  const fromMinItems = common.getValueByPath(fromObject, ['minItems']);\n  if (fromMinItems != null) {\n    common.setValueByPath(toObject, ['minItems'], fromMinItems);\n  }\n\n  const fromMinimum = common.getValueByPath(fromObject, ['minimum']);\n  if (fromMinimum != null) {\n    common.setValueByPath(toObject, ['minimum'], fromMinimum);\n  }\n\n  const fromNullable = common.getValueByPath(fromObject, ['nullable']);\n  if (fromNullable != null) {\n    common.setValueByPath(toObject, ['nullable'], fromNullable);\n  }\n\n  const fromProperties = common.getValueByPath(fromObject, ['properties']);\n  if (fromProperties != null) {\n    common.setValueByPath(toObject, ['properties'], fromProperties);\n  }\n\n  const fromPropertyOrdering = common.getValueByPath(fromObject, [\n    'propertyOrdering',\n  ]);\n  if (fromPropertyOrdering != null) {\n    common.setValueByPath(toObject, ['propertyOrdering'], fromPropertyOrdering);\n  }\n\n  const fromRequired = common.getValueByPath(fromObject, ['required']);\n  if (fromRequired != null) {\n    common.setValueByPath(toObject, ['required'], fromRequired);\n  }\n\n  const fromTitle = common.getValueByPath(fromObject, ['title']);\n  if (fromTitle != null) {\n    common.setValueByPath(toObject, ['title'], fromTitle);\n  }\n\n  const fromType = common.getValueByPath(fromObject, ['type']);\n  if (fromType != null) {\n    common.setValueByPath(toObject, ['type'], fromType);\n  }\n\n  return toObject;\n}\n\nexport function functionDeclarationToVertex(\n  apiClient: ApiClient,\n  fromObject: types.FunctionDeclaration,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromResponse = common.getValueByPath(fromObject, ['response']);\n  if (fromResponse != null) {\n    common.setValueByPath(\n      toObject,\n      ['response'],\n      schemaToVertex(apiClient, fromResponse),\n    );\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromParameters = common.getValueByPath(fromObject, ['parameters']);\n  if (fromParameters != null) {\n    common.setValueByPath(toObject, ['parameters'], fromParameters);\n  }\n\n  return toObject;\n}\n\nexport function googleSearchToVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function dynamicRetrievalConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.DynamicRetrievalConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMode = common.getValueByPath(fromObject, ['mode']);\n  if (fromMode != null) {\n    common.setValueByPath(toObject, ['mode'], fromMode);\n  }\n\n  const fromDynamicThreshold = common.getValueByPath(fromObject, [\n    'dynamicThreshold',\n  ]);\n  if (fromDynamicThreshold != null) {\n    common.setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n  }\n\n  return toObject;\n}\n\nexport function googleSearchRetrievalToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GoogleSearchRetrieval,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDynamicRetrievalConfig = common.getValueByPath(fromObject, [\n    'dynamicRetrievalConfig',\n  ]);\n  if (fromDynamicRetrievalConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['dynamicRetrievalConfig'],\n      dynamicRetrievalConfigToVertex(apiClient, fromDynamicRetrievalConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function toolToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Tool,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionDeclarations = common.getValueByPath(fromObject, [\n    'functionDeclarations',\n  ]);\n  if (fromFunctionDeclarations != null) {\n    if (Array.isArray(fromFunctionDeclarations)) {\n      common.setValueByPath(\n        toObject,\n        ['functionDeclarations'],\n        fromFunctionDeclarations.map((item) => {\n          return functionDeclarationToVertex(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(\n        toObject,\n        ['functionDeclarations'],\n        fromFunctionDeclarations,\n      );\n    }\n  }\n\n  const fromRetrieval = common.getValueByPath(fromObject, ['retrieval']);\n  if (fromRetrieval != null) {\n    common.setValueByPath(toObject, ['retrieval'], fromRetrieval);\n  }\n\n  const fromGoogleSearch = common.getValueByPath(fromObject, ['googleSearch']);\n  if (fromGoogleSearch != null) {\n    common.setValueByPath(toObject, ['googleSearch'], googleSearchToVertex());\n  }\n\n  const fromGoogleSearchRetrieval = common.getValueByPath(fromObject, [\n    'googleSearchRetrieval',\n  ]);\n  if (fromGoogleSearchRetrieval != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleSearchRetrieval'],\n      googleSearchRetrievalToVertex(apiClient, fromGoogleSearchRetrieval),\n    );\n  }\n\n  const fromCodeExecution = common.getValueByPath(fromObject, [\n    'codeExecution',\n  ]);\n  if (fromCodeExecution != null) {\n    common.setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n  }\n\n  return toObject;\n}\n\nexport function functionCallingConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.FunctionCallingConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMode = common.getValueByPath(fromObject, ['mode']);\n  if (fromMode != null) {\n    common.setValueByPath(toObject, ['mode'], fromMode);\n  }\n\n  const fromAllowedFunctionNames = common.getValueByPath(fromObject, [\n    'allowedFunctionNames',\n  ]);\n  if (fromAllowedFunctionNames != null) {\n    common.setValueByPath(\n      toObject,\n      ['allowedFunctionNames'],\n      fromAllowedFunctionNames,\n    );\n  }\n\n  return toObject;\n}\n\nexport function toolConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ToolConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionCallingConfig = common.getValueByPath(fromObject, [\n    'functionCallingConfig',\n  ]);\n  if (fromFunctionCallingConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['functionCallingConfig'],\n      functionCallingConfigToVertex(apiClient, fromFunctionCallingConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function createCachedContentConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.CreateCachedContentConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTtl = common.getValueByPath(fromObject, ['ttl']);\n  if (parentObject !== undefined && fromTtl != null) {\n    common.setValueByPath(parentObject, ['ttl'], fromTtl);\n  }\n\n  const fromExpireTime = common.getValueByPath(fromObject, ['expireTime']);\n  if (parentObject !== undefined && fromExpireTime != null) {\n    common.setValueByPath(parentObject, ['expireTime'], fromExpireTime);\n  }\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (parentObject !== undefined && fromDisplayName != null) {\n    common.setValueByPath(parentObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromContents = common.getValueByPath(fromObject, ['contents']);\n  if (parentObject !== undefined && fromContents != null) {\n    if (Array.isArray(fromContents)) {\n      common.setValueByPath(\n        parentObject,\n        ['contents'],\n        t.tContents(\n          apiClient,\n          t.tContents(apiClient, fromContents).map((item) => {\n            return contentToVertex(apiClient, item);\n          }),\n        ),\n      );\n    } else {\n      common.setValueByPath(\n        parentObject,\n        ['contents'],\n        t.tContents(apiClient, fromContents),\n      );\n    }\n  }\n\n  const fromSystemInstruction = common.getValueByPath(fromObject, [\n    'systemInstruction',\n  ]);\n  if (parentObject !== undefined && fromSystemInstruction != null) {\n    common.setValueByPath(\n      parentObject,\n      ['systemInstruction'],\n      contentToVertex(apiClient, t.tContent(apiClient, fromSystemInstruction)),\n    );\n  }\n\n  const fromTools = common.getValueByPath(fromObject, ['tools']);\n  if (parentObject !== undefined && fromTools != null) {\n    if (Array.isArray(fromTools)) {\n      common.setValueByPath(\n        parentObject,\n        ['tools'],\n        fromTools.map((item) => {\n          return toolToVertex(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(parentObject, ['tools'], fromTools);\n    }\n  }\n\n  const fromToolConfig = common.getValueByPath(fromObject, ['toolConfig']);\n  if (parentObject !== undefined && fromToolConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['toolConfig'],\n      toolConfigToVertex(apiClient, fromToolConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function createCachedContentParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.CreateCachedContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['model'],\n      t.tCachesModel(apiClient, fromModel),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      createCachedContentConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function getCachedContentParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GetCachedContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'name'],\n      t.tCachedContentName(apiClient, fromName),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function deleteCachedContentParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.DeleteCachedContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'name'],\n      t.tCachedContentName(apiClient, fromName),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function updateCachedContentConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.UpdateCachedContentConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTtl = common.getValueByPath(fromObject, ['ttl']);\n  if (parentObject !== undefined && fromTtl != null) {\n    common.setValueByPath(parentObject, ['ttl'], fromTtl);\n  }\n\n  const fromExpireTime = common.getValueByPath(fromObject, ['expireTime']);\n  if (parentObject !== undefined && fromExpireTime != null) {\n    common.setValueByPath(parentObject, ['expireTime'], fromExpireTime);\n  }\n\n  return toObject;\n}\n\nexport function updateCachedContentParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.UpdateCachedContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'name'],\n      t.tCachedContentName(apiClient, fromName),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      updateCachedContentConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function listCachedContentsConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ListCachedContentsConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPageSize = common.getValueByPath(fromObject, ['pageSize']);\n  if (parentObject !== undefined && fromPageSize != null) {\n    common.setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n  }\n\n  const fromPageToken = common.getValueByPath(fromObject, ['pageToken']);\n  if (parentObject !== undefined && fromPageToken != null) {\n    common.setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n  }\n\n  return toObject;\n}\n\nexport function listCachedContentsParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ListCachedContentsParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      listCachedContentsConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function cachedContentFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.CachedContent,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(toObject, ['model'], fromModel);\n  }\n\n  const fromCreateTime = common.getValueByPath(fromObject, ['createTime']);\n  if (fromCreateTime != null) {\n    common.setValueByPath(toObject, ['createTime'], fromCreateTime);\n  }\n\n  const fromUpdateTime = common.getValueByPath(fromObject, ['updateTime']);\n  if (fromUpdateTime != null) {\n    common.setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n  }\n\n  const fromExpireTime = common.getValueByPath(fromObject, ['expireTime']);\n  if (fromExpireTime != null) {\n    common.setValueByPath(toObject, ['expireTime'], fromExpireTime);\n  }\n\n  const fromUsageMetadata = common.getValueByPath(fromObject, [\n    'usageMetadata',\n  ]);\n  if (fromUsageMetadata != null) {\n    common.setValueByPath(toObject, ['usageMetadata'], fromUsageMetadata);\n  }\n\n  return toObject;\n}\n\nexport function deleteCachedContentResponseFromMldev(): Record<\n  string,\n  unknown\n> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function listCachedContentsResponseFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.ListCachedContentsResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromNextPageToken = common.getValueByPath(fromObject, [\n    'nextPageToken',\n  ]);\n  if (fromNextPageToken != null) {\n    common.setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n  }\n\n  const fromCachedContents = common.getValueByPath(fromObject, [\n    'cachedContents',\n  ]);\n  if (fromCachedContents != null) {\n    if (Array.isArray(fromCachedContents)) {\n      common.setValueByPath(\n        toObject,\n        ['cachedContents'],\n        fromCachedContents.map((item) => {\n          return cachedContentFromMldev(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(toObject, ['cachedContents'], fromCachedContents);\n    }\n  }\n\n  return toObject;\n}\n\nexport function cachedContentFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.CachedContent,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(toObject, ['model'], fromModel);\n  }\n\n  const fromCreateTime = common.getValueByPath(fromObject, ['createTime']);\n  if (fromCreateTime != null) {\n    common.setValueByPath(toObject, ['createTime'], fromCreateTime);\n  }\n\n  const fromUpdateTime = common.getValueByPath(fromObject, ['updateTime']);\n  if (fromUpdateTime != null) {\n    common.setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n  }\n\n  const fromExpireTime = common.getValueByPath(fromObject, ['expireTime']);\n  if (fromExpireTime != null) {\n    common.setValueByPath(toObject, ['expireTime'], fromExpireTime);\n  }\n\n  const fromUsageMetadata = common.getValueByPath(fromObject, [\n    'usageMetadata',\n  ]);\n  if (fromUsageMetadata != null) {\n    common.setValueByPath(toObject, ['usageMetadata'], fromUsageMetadata);\n  }\n\n  return toObject;\n}\n\nexport function deleteCachedContentResponseFromVertex(): Record<\n  string,\n  unknown\n> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function listCachedContentsResponseFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.ListCachedContentsResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromNextPageToken = common.getValueByPath(fromObject, [\n    'nextPageToken',\n  ]);\n  if (fromNextPageToken != null) {\n    common.setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n  }\n\n  const fromCachedContents = common.getValueByPath(fromObject, [\n    'cachedContents',\n  ]);\n  if (fromCachedContents != null) {\n    if (Array.isArray(fromCachedContents)) {\n      common.setValueByPath(\n        toObject,\n        ['cachedContents'],\n        fromCachedContents.map((item) => {\n          return cachedContentFromVertex(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(toObject, ['cachedContents'], fromCachedContents);\n    }\n  }\n\n  return toObject;\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\nimport {ApiClient} from './_api_client';\nimport * as common from './_common';\nimport {BaseModule} from './_common';\nimport * as converters from './converters/_caches_converters';\nimport {PagedItem, Pager} from './pagers';\nimport * as types from './types';\n\nexport class Caches extends BaseModule {\n  constructor(private readonly apiClient: ApiClient) {\n    super();\n  }\n\n  /**\n   * Lists cached content configurations.\n   *\n   * @param params - The parameters for the list request.\n   * @return The paginated results of the list of cached contents.\n   *\n   * @example\n   * ```ts\n   * const cachedContents = await ai.caches.list({config: {'pageSize': 2}});\n   * for (const cachedContent of cachedContents) {\n   *   console.log(cachedContent);\n   * }\n   * ```\n   */\n  list = async (\n    params: types.ListCachedContentsParameters = {},\n  ): Promise<Pager<types.CachedContent>> => {\n    return new Pager<types.CachedContent>(\n      PagedItem.PAGED_ITEM_CACHED_CONTENTS,\n      (x: types.ListCachedContentsParameters) => this.listInternal(x),\n      await this.listInternal(params),\n      params,\n    );\n  };\n\n  /**\n   * Creates a cached contents resource.\n   *\n   * @remarks\n   * Context caching is only supported for specific models. See [Gemini\n   * Developer API reference] (https://ai.google.dev/gemini-api/docs/caching?lang=node/context-cac)\n   * and [Vertex AI reference] (https://cloud.google.com/vertex-ai/generative-ai/docs/context-cache/context-cache-overview#supported_models)\n   * for more information.\n   *\n   * @param params - The parameters for the create request.\n   * @return The created cached content.\n   *\n   * @example\n   * ```ts\n   * const contents = ...; // Initialize the content to cache.\n   * const response = await ai.caches.create({\n   *   model: 'gemini-1.5-flash',\n   *   config: {\n   *    'contents': contents,\n   *    'displayName': 'test cache',\n   *    'systemInstruction': 'What is the sum of the two pdfs?',\n   *    'ttl': '86400s',\n   *  }\n   * });\n   * ```\n   */\n  async create(\n    params: types.CreateCachedContentParameters,\n  ): Promise<types.CachedContent> {\n    let response: Promise<types.CachedContent>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.createCachedContentParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        'cachedContents',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.CachedContent>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.cachedContentFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.CachedContent;\n      });\n    } else {\n      const body = converters.createCachedContentParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        'cachedContents',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.CachedContent>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.cachedContentFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.CachedContent;\n      });\n    }\n  }\n\n  /**\n   * Gets cached content configurations.\n   *\n   * @param params - The parameters for the get request.\n   * @return The cached content.\n   *\n   * @example\n   * ```ts\n   * await ai.caches.get({name: 'gemini-1.5-flash'});\n   * ```\n   */\n  async get(\n    params: types.GetCachedContentParameters,\n  ): Promise<types.CachedContent> {\n    let response: Promise<types.CachedContent>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.getCachedContentParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{name}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.CachedContent>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.cachedContentFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.CachedContent;\n      });\n    } else {\n      const body = converters.getCachedContentParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{name}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.CachedContent>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.cachedContentFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.CachedContent;\n      });\n    }\n  }\n\n  /**\n   * Deletes cached content.\n   *\n   * @param params - The parameters for the delete request.\n   * @return The empty response returned by the API.\n   *\n   * @example\n   * ```ts\n   * await ai.caches.delete({name: 'gemini-1.5-flash'});\n   * ```\n   */\n  async delete(\n    params: types.DeleteCachedContentParameters,\n  ): Promise<types.DeleteCachedContentResponse> {\n    let response: Promise<types.DeleteCachedContentResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.deleteCachedContentParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{name}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'DELETE',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.DeleteCachedContentResponse>;\n\n      return response.then(() => {\n        const resp = converters.deleteCachedContentResponseFromVertex();\n        const typedResp = new types.DeleteCachedContentResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    } else {\n      const body = converters.deleteCachedContentParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{name}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'DELETE',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.DeleteCachedContentResponse>;\n\n      return response.then(() => {\n        const resp = converters.deleteCachedContentResponseFromMldev();\n        const typedResp = new types.DeleteCachedContentResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    }\n  }\n\n  /**\n   * Updates cached content configurations.\n   *\n   * @param params - The parameters for the update request.\n   * @return The updated cached content.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.caches.update({\n   *   name: 'gemini-1.5-flash',\n   *   config: {'ttl': '7600s'}\n   * });\n   * ```\n   */\n  async update(\n    params: types.UpdateCachedContentParameters,\n  ): Promise<types.CachedContent> {\n    let response: Promise<types.CachedContent>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.updateCachedContentParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{name}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'PATCH',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.CachedContent>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.cachedContentFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.CachedContent;\n      });\n    } else {\n      const body = converters.updateCachedContentParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{name}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'PATCH',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.CachedContent>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.cachedContentFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.CachedContent;\n      });\n    }\n  }\n\n  private async listInternal(\n    params: types.ListCachedContentsParameters,\n  ): Promise<types.ListCachedContentsResponse> {\n    let response: Promise<types.ListCachedContentsResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.listCachedContentsParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        'cachedContents',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.ListCachedContentsResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.listCachedContentsResponseFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.ListCachedContentsResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    } else {\n      const body = converters.listCachedContentsParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        'cachedContents',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.ListCachedContentsResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.listCachedContentsResponseFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.ListCachedContentsResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ApiClient} from './_api_client';\nimport * as t from './_transformers';\nimport {Models} from './models';\nimport * as types from './types';\n\n/**\n * Returns true if the response is valid, false otherwise.\n */\nfunction isValidResponse(response: types.GenerateContentResponse): boolean {\n  if (response.candidates == undefined || response.candidates.length === 0) {\n    return false;\n  }\n  const content = response.candidates[0]?.content;\n  if (content === undefined) {\n    return false;\n  }\n  return isValidContent(content);\n}\n\nfunction isValidContent(content: types.Content): boolean {\n  if (content.parts === undefined || content.parts.length === 0) {\n    return false;\n  }\n  for (const part of content.parts) {\n    if (part === undefined || Object.keys(part).length === 0) {\n      return false;\n    }\n    if (part.text !== undefined && part.text === '') {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates the history contains the correct roles.\n *\n * @remarks\n * Expects the history to start with a user turn and then alternate between\n * user and model turns.\n *\n * @throws Error if the history does not start with a user turn.\n * @throws Error if the history contains an invalid role.\n */\nfunction validateHistory(history: types.Content[]) {\n  // Empty history is valid.\n  if (history.length === 0) {\n    return;\n  }\n  if (history[0].role !== 'user') {\n    throw new Error('History must start with a user turn.');\n  }\n  for (const content of history) {\n    if (content.role !== 'user' && content.role !== 'model') {\n      throw new Error(`Role must be user or model, but got ${content.role}.`);\n    }\n  }\n}\n\n/**\n * Extracts the curated (valid) history from a comprehensive history.\n *\n * @remarks\n * The model may sometimes generate invalid or empty contents(e.g., due to safty\n * filters or recitation). Extracting valid turns from the history\n * ensures that subsequent requests could be accpeted by the model.\n */\nfunction extractCuratedHistory(\n  comprehensiveHistory: types.Content[],\n): types.Content[] {\n  if (comprehensiveHistory === undefined || comprehensiveHistory.length === 0) {\n    return [];\n  }\n  const curatedHistory: types.Content[] = [];\n  const length = comprehensiveHistory.length;\n  let i = 0;\n  let userInput = comprehensiveHistory[0];\n  while (i < length) {\n    if (comprehensiveHistory[i].role === 'user') {\n      userInput = comprehensiveHistory[i];\n      i++;\n    } else {\n      const modelOutput: types.Content[] = [];\n      let isValid = true;\n      while (i < length && comprehensiveHistory[i].role === 'model') {\n        modelOutput.push(comprehensiveHistory[i]);\n        if (isValid && !isValidContent(comprehensiveHistory[i])) {\n          isValid = false;\n        }\n        i++;\n      }\n      if (isValid) {\n        curatedHistory.push(userInput);\n        curatedHistory.push(...modelOutput);\n      }\n    }\n  }\n  return curatedHistory;\n}\n\n/**\n * A utility class to create a chat session.\n */\nexport class Chats {\n  private readonly modelsModule: Models;\n  private readonly apiClient: ApiClient;\n\n  constructor(modelsModule: Models, apiClient: ApiClient) {\n    this.modelsModule = modelsModule;\n    this.apiClient = apiClient;\n  }\n\n  /**\n   * Creates a new chat session.\n   *\n   * @remarks\n   * The config in the params will be used for all requests within the chat\n   * session unless overridden by a per-request `config` in\n   * @see {@link types.SendMessageParameters#config}.\n   *\n   * @param params - Parameters for creating a chat session.\n   * @returns A new chat session.\n   *\n   * @example\n   * ```ts\n   * const chat = ai.chats.create({\n   *   model: 'gemini-2.0-flash'\n   *   config: {\n   *     temperature: 0.5,\n   *     maxOutputTokens: 1024,\n   *   }\n   * });\n   * ```\n   */\n  create(params: types.CreateChatParameters) {\n    return new Chat(\n      this.apiClient,\n      this.modelsModule,\n      params.model,\n      params.config,\n      params.history,\n    );\n  }\n}\n\n/**\n * Chat session that enables sending messages to the model with previous\n * conversation context.\n *\n * @remarks\n * The session maintains all the turns between user and model.\n */\nexport class Chat {\n  // A promise to represent the current state of the message being sent to the\n  // model.\n  private sendPromise: Promise<void> = Promise.resolve();\n\n  constructor(\n    private readonly apiClient: ApiClient,\n    private readonly modelsModule: Models,\n    private readonly model: string,\n    private readonly config: types.GenerateContentConfig = {},\n    private history: types.Content[] = [],\n  ) {\n    validateHistory(history);\n  }\n\n  /**\n   * Sends a message to the model and returns the response.\n   *\n   * @remarks\n   * This method will wait for the previous message to be processed before\n   * sending the next message.\n   *\n   * @see {@link Chat#sendMessageStream} for streaming method.\n   * @param params - parameters for sending messages within a chat session.\n   * @returns The model's response.\n   *\n   * @example\n   * ```ts\n   * const chat = ai.chats.create({model: 'gemini-2.0-flash'});\n   * const response = await chat.sendMessage({\n   *   message: 'Why is the sky blue?'\n   * });\n   * console.log(response.text);\n   * ```\n   */\n  async sendMessage(\n    params: types.SendMessageParameters,\n  ): Promise<types.GenerateContentResponse> {\n    await this.sendPromise;\n    const inputContent = t.tContent(this.apiClient, params.message);\n    const responsePromise = this.modelsModule.generateContent({\n      model: this.model,\n      contents: this.getHistory(true).concat(inputContent),\n      config: params.config ?? this.config,\n    });\n    this.sendPromise = (async () => {\n      const response = await responsePromise;\n      const outputContent = response.candidates?.[0]?.content;\n      const modelOutput = outputContent ? [outputContent] : [];\n      this.recordHistory(inputContent, modelOutput);\n      return;\n    })();\n    await this.sendPromise;\n    return responsePromise;\n  }\n\n  /**\n   * Sends a message to the model and returns the response in chunks.\n   *\n   * @remarks\n   * This method will wait for the previous message to be processed before\n   * sending the next message.\n   *\n   * @see {@link Chat#sendMessage} for non-streaming method.\n   * @param params - parameters for sending the message.\n   * @return The model's response.\n   *\n   * @example\n   * ```ts\n   * const chat = ai.chats.create({model: 'gemini-2.0-flash'});\n   * const response = await chat.sendMessageStream({\n   *   message: 'Why is the sky blue?'\n   * });\n   * for await (const chunk of response) {\n   *   console.log(chunk.text);\n   * }\n   * ```\n   */\n  async sendMessageStream(\n    params: types.SendMessageParameters,\n  ): Promise<AsyncGenerator<types.GenerateContentResponse>> {\n    await this.sendPromise;\n    const inputContent = t.tContent(this.apiClient, params.message);\n    const streamResponse = this.modelsModule.generateContentStream({\n      model: this.model,\n      contents: this.getHistory(true).concat(inputContent),\n      config: params.config ?? this.config,\n    });\n    this.sendPromise = streamResponse.then(() => undefined);\n    const response = await streamResponse;\n    const result = this.processStreamResponse(response, inputContent);\n    return result;\n  }\n\n  /**\n   * Returns the chat history.\n   *\n   * @remarks\n   * The history is a list of contents alternating between user and model.\n   *\n   * There are two types of history:\n   * - The `curated history` contains only the valid turns between user and\n   * model, which will be included in the subsequent requests sent to the model.\n   * - The `comprehensive history` contains all turns, including invalid or\n   *   empty model outputs, providing a complete record of the history.\n   *\n   * The history is updated after receiving the response from the model,\n   * for streaming response, it means receiving the last chunk of the response.\n   *\n   * The `comprehensive history` is returned by default. To get the `curated\n   * history`, set the `curated` parameter to `true`.\n   *\n   * @param curated - whether to return the curated history or the comprehensive\n   *     history.\n   * @return History contents alternating between user and model for the entire\n   *     chat session.\n   */\n  getHistory(curated: boolean = false): types.Content[] {\n    return curated ? extractCuratedHistory(this.history) : this.history;\n  }\n\n  private async *processStreamResponse(\n    streamResponse: AsyncGenerator<types.GenerateContentResponse>,\n    inputContent: types.Content,\n  ) {\n    const outputContent: types.Content[] = [];\n    for await (const chunk of streamResponse) {\n      if (isValidResponse(chunk)) {\n        const content = chunk.candidates?.[0]?.content;\n        if (content !== undefined) {\n          outputContent.push(content);\n        }\n      }\n      yield chunk;\n    }\n    this.recordHistory(inputContent, outputContent);\n  }\n\n  private recordHistory(\n    userInput: types.Content,\n    modelOutput: types.Content[],\n  ) {\n    let outputContents: types.Content[] = [];\n    if (\n      modelOutput.length > 0 &&\n      modelOutput.every((content) => content.role === 'model')\n    ) {\n      outputContents = modelOutput;\n    } else {\n      // Appends an empty content when model returns empty response, so that the\n      // history is always alternating between user and model.\n      outputContents.push({\n        role: 'model',\n        parts: [],\n      } as types.Content);\n    }\n    this.history.push(userInput);\n    this.history.push(...outputContents);\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\nimport {ApiClient} from '../_api_client';\nimport * as common from '../_common';\nimport * as t from '../_transformers';\nimport * as types from '../types';\n\nexport function listFilesConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ListFilesConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPageSize = common.getValueByPath(fromObject, ['pageSize']);\n  if (parentObject !== undefined && fromPageSize != null) {\n    common.setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n  }\n\n  const fromPageToken = common.getValueByPath(fromObject, ['pageToken']);\n  if (parentObject !== undefined && fromPageToken != null) {\n    common.setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n  }\n\n  return toObject;\n}\n\nexport function listFilesParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ListFilesParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      listFilesConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function fileStatusToMldev(\n  apiClient: ApiClient,\n  fromObject: types.FileStatus,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDetails = common.getValueByPath(fromObject, ['details']);\n  if (fromDetails != null) {\n    common.setValueByPath(toObject, ['details'], fromDetails);\n  }\n\n  const fromMessage = common.getValueByPath(fromObject, ['message']);\n  if (fromMessage != null) {\n    common.setValueByPath(toObject, ['message'], fromMessage);\n  }\n\n  const fromCode = common.getValueByPath(fromObject, ['code']);\n  if (fromCode != null) {\n    common.setValueByPath(toObject, ['code'], fromCode);\n  }\n\n  return toObject;\n}\n\nexport function fileToMldev(\n  apiClient: ApiClient,\n  fromObject: types.File,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  const fromSizeBytes = common.getValueByPath(fromObject, ['sizeBytes']);\n  if (fromSizeBytes != null) {\n    common.setValueByPath(toObject, ['sizeBytes'], fromSizeBytes);\n  }\n\n  const fromCreateTime = common.getValueByPath(fromObject, ['createTime']);\n  if (fromCreateTime != null) {\n    common.setValueByPath(toObject, ['createTime'], fromCreateTime);\n  }\n\n  const fromExpirationTime = common.getValueByPath(fromObject, [\n    'expirationTime',\n  ]);\n  if (fromExpirationTime != null) {\n    common.setValueByPath(toObject, ['expirationTime'], fromExpirationTime);\n  }\n\n  const fromUpdateTime = common.getValueByPath(fromObject, ['updateTime']);\n  if (fromUpdateTime != null) {\n    common.setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n  }\n\n  const fromSha256Hash = common.getValueByPath(fromObject, ['sha256Hash']);\n  if (fromSha256Hash != null) {\n    common.setValueByPath(toObject, ['sha256Hash'], fromSha256Hash);\n  }\n\n  const fromUri = common.getValueByPath(fromObject, ['uri']);\n  if (fromUri != null) {\n    common.setValueByPath(toObject, ['uri'], fromUri);\n  }\n\n  const fromDownloadUri = common.getValueByPath(fromObject, ['downloadUri']);\n  if (fromDownloadUri != null) {\n    common.setValueByPath(toObject, ['downloadUri'], fromDownloadUri);\n  }\n\n  const fromState = common.getValueByPath(fromObject, ['state']);\n  if (fromState != null) {\n    common.setValueByPath(toObject, ['state'], fromState);\n  }\n\n  const fromSource = common.getValueByPath(fromObject, ['source']);\n  if (fromSource != null) {\n    common.setValueByPath(toObject, ['source'], fromSource);\n  }\n\n  const fromVideoMetadata = common.getValueByPath(fromObject, [\n    'videoMetadata',\n  ]);\n  if (fromVideoMetadata != null) {\n    common.setValueByPath(toObject, ['videoMetadata'], fromVideoMetadata);\n  }\n\n  const fromError = common.getValueByPath(fromObject, ['error']);\n  if (fromError != null) {\n    common.setValueByPath(\n      toObject,\n      ['error'],\n      fileStatusToMldev(apiClient, fromError),\n    );\n  }\n\n  return toObject;\n}\n\nexport function createFileParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.CreateFileParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFile = common.getValueByPath(fromObject, ['file']);\n  if (fromFile != null) {\n    common.setValueByPath(toObject, ['file'], fileToMldev(apiClient, fromFile));\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function getFileParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GetFileParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'file'],\n      t.tFileName(apiClient, fromName),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function deleteFileParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.DeleteFileParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'file'],\n      t.tFileName(apiClient, fromName),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function fileStatusFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.FileStatus,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDetails = common.getValueByPath(fromObject, ['details']);\n  if (fromDetails != null) {\n    common.setValueByPath(toObject, ['details'], fromDetails);\n  }\n\n  const fromMessage = common.getValueByPath(fromObject, ['message']);\n  if (fromMessage != null) {\n    common.setValueByPath(toObject, ['message'], fromMessage);\n  }\n\n  const fromCode = common.getValueByPath(fromObject, ['code']);\n  if (fromCode != null) {\n    common.setValueByPath(toObject, ['code'], fromCode);\n  }\n\n  return toObject;\n}\n\nexport function fileFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.File,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  const fromSizeBytes = common.getValueByPath(fromObject, ['sizeBytes']);\n  if (fromSizeBytes != null) {\n    common.setValueByPath(toObject, ['sizeBytes'], fromSizeBytes);\n  }\n\n  const fromCreateTime = common.getValueByPath(fromObject, ['createTime']);\n  if (fromCreateTime != null) {\n    common.setValueByPath(toObject, ['createTime'], fromCreateTime);\n  }\n\n  const fromExpirationTime = common.getValueByPath(fromObject, [\n    'expirationTime',\n  ]);\n  if (fromExpirationTime != null) {\n    common.setValueByPath(toObject, ['expirationTime'], fromExpirationTime);\n  }\n\n  const fromUpdateTime = common.getValueByPath(fromObject, ['updateTime']);\n  if (fromUpdateTime != null) {\n    common.setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n  }\n\n  const fromSha256Hash = common.getValueByPath(fromObject, ['sha256Hash']);\n  if (fromSha256Hash != null) {\n    common.setValueByPath(toObject, ['sha256Hash'], fromSha256Hash);\n  }\n\n  const fromUri = common.getValueByPath(fromObject, ['uri']);\n  if (fromUri != null) {\n    common.setValueByPath(toObject, ['uri'], fromUri);\n  }\n\n  const fromDownloadUri = common.getValueByPath(fromObject, ['downloadUri']);\n  if (fromDownloadUri != null) {\n    common.setValueByPath(toObject, ['downloadUri'], fromDownloadUri);\n  }\n\n  const fromState = common.getValueByPath(fromObject, ['state']);\n  if (fromState != null) {\n    common.setValueByPath(toObject, ['state'], fromState);\n  }\n\n  const fromSource = common.getValueByPath(fromObject, ['source']);\n  if (fromSource != null) {\n    common.setValueByPath(toObject, ['source'], fromSource);\n  }\n\n  const fromVideoMetadata = common.getValueByPath(fromObject, [\n    'videoMetadata',\n  ]);\n  if (fromVideoMetadata != null) {\n    common.setValueByPath(toObject, ['videoMetadata'], fromVideoMetadata);\n  }\n\n  const fromError = common.getValueByPath(fromObject, ['error']);\n  if (fromError != null) {\n    common.setValueByPath(\n      toObject,\n      ['error'],\n      fileStatusFromMldev(apiClient, fromError),\n    );\n  }\n\n  return toObject;\n}\n\nexport function listFilesResponseFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.ListFilesResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromNextPageToken = common.getValueByPath(fromObject, [\n    'nextPageToken',\n  ]);\n  if (fromNextPageToken != null) {\n    common.setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n  }\n\n  const fromFiles = common.getValueByPath(fromObject, ['files']);\n  if (fromFiles != null) {\n    if (Array.isArray(fromFiles)) {\n      common.setValueByPath(\n        toObject,\n        ['files'],\n        fromFiles.map((item) => {\n          return fileFromMldev(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(toObject, ['files'], fromFiles);\n    }\n  }\n\n  return toObject;\n}\n\nexport function createFileResponseFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.CreateFileResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromHttpHeaders = common.getValueByPath(fromObject, ['httpHeaders']);\n  if (fromHttpHeaders != null) {\n    common.setValueByPath(toObject, ['httpHeaders'], fromHttpHeaders);\n  }\n\n  return toObject;\n}\n\nexport function deleteFileResponseFromMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\nimport {ApiClient} from './_api_client';\nimport * as common from './_common';\nimport {BaseModule} from './_common';\nimport * as converters from './converters/_files_converters';\nimport {PagedItem, Pager} from './pagers';\nimport * as types from './types';\n\nexport class Files extends BaseModule {\n  constructor(private readonly apiClient: ApiClient) {\n    super();\n  }\n\n  /**\n   * Lists all current project files from the service.\n   *\n   * @param params - The parameters for the list request\n   * @return The paginated results of the list of files\n   *\n   * @example\n   * The following code prints the names of all files from the service, the\n   * size of each page is 10.\n   *\n   * ```ts\n   * const listResponse = await ai.files.list({config: {'pageSize': 10}});\n   * for await (const file of listResponse) {\n   *   console.log(file.name);\n   * }\n   * ```\n   */\n  list = async (\n    params: types.ListFilesParameters = {},\n  ): Promise<Pager<types.File>> => {\n    return new Pager<types.File>(\n      PagedItem.PAGED_ITEM_FILES,\n      (x: types.ListFilesParameters) => this.listInternal(x),\n      await this.listInternal(params),\n      params,\n    );\n  };\n\n  /**\n   * Uploads a file asynchronously to the Gemini API.\n   * This method is not available in Vertex AI.\n   * Supported upload sources:\n   * - Node.js: File path (string) or Blob object.\n   * - Browser: Blob object (e.g., File).\n   *\n   * @remarks\n   * The `mimeType` can be specified in the `config` parameter. If omitted:\n   *  - For file path (string) inputs, the `mimeType` will be inferred from the\n   *     file extension.\n   *  - For Blob object inputs, the `mimeType` will be set to the Blob's `type`\n   *     property.\n   * Somex eamples for file extension to mimeType mapping:\n   * .txt -> text/plain\n   * .json -> application/json\n   * .jpg  -> image/jpeg\n   * .png -> image/png\n   * .mp3 -> audio/mpeg\n   * .mp4 -> video/mp4\n   *\n   * This section can contain multiple paragraphs and code examples.\n   *\n   * @param params - Optional parameters specified in the\n   *        `types.UploadFileParameters` interface.\n   *         @see {@link types.UploadFileParameters#config} for the optional\n   *         config in the parameters.\n   * @return A promise that resolves to a `types.File` object.\n   * @throws An error if called on a Vertex AI client.\n   * @throws An error if the `mimeType` is not provided and can not be inferred,\n   * the `mimeType` can be provided in the `params.config` parameter.\n   * @throws An error occurs if a suitable upload location cannot be established.\n   *\n   * @example\n   * The following code uploads a file to Gemini API.\n   *\n   * ```ts\n   * const file = await ai.files.upload({file: 'file.txt', config: {\n   *   mimeType: 'text/plain',\n   * }});\n   * console.log(file.name);\n   * ```\n   */\n  async upload(params: types.UploadFileParameters): Promise<types.File> {\n    if (this.apiClient.isVertexAI()) {\n      throw new Error(\n        'Vertex AI does not support uploading files. You can share files through a GCS bucket.',\n      );\n    }\n\n    return this.apiClient\n      .uploadFile(params.file, params.config)\n      .then((response) => {\n        const file = converters.fileFromMldev(this.apiClient, response);\n        return file as types.File;\n      });\n  }\n\n  private async listInternal(\n    params: types.ListFilesParameters,\n  ): Promise<types.ListFilesResponse> {\n    let response: Promise<types.ListFilesResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      throw new Error(\n        'This method is only supported by the Gemini Developer API.',\n      );\n    } else {\n      const body = converters.listFilesParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap('files', body['_url'] as Record<string, unknown>);\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.ListFilesResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.listFilesResponseFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.ListFilesResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    }\n  }\n\n  private async createInternal(\n    params: types.CreateFileParameters,\n  ): Promise<types.CreateFileResponse> {\n    let response: Promise<types.CreateFileResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      throw new Error(\n        'This method is only supported by the Gemini Developer API.',\n      );\n    } else {\n      const body = converters.createFileParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        'upload/v1beta/files',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.CreateFileResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.createFileResponseFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.CreateFileResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    }\n  }\n\n  /**\n   * Retrieves the file information from the service.\n   *\n   * @param params - The parameters for the get request\n   * @return The Promise that resolves to the types.File object requested.\n   *\n   * @example\n   * ```ts\n   * const config: GetFileParameters = {\n   *   name: fileName,\n   * };\n   * file = await ai.files.get(config);\n   * console.log(file.name);\n   * ```\n   */\n  async get(params: types.GetFileParameters): Promise<types.File> {\n    let response: Promise<types.File>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      throw new Error(\n        'This method is only supported by the Gemini Developer API.',\n      );\n    } else {\n      const body = converters.getFileParametersToMldev(this.apiClient, params);\n      path = common.formatMap(\n        'files/{file}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.File>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.fileFromMldev(this.apiClient, apiResponse);\n\n        return resp as types.File;\n      });\n    }\n  }\n\n  /**\n   * Deletes a remotely stored file.\n   *\n   * @param params - The parameters for the delete request.\n   * @return The DeleteFileResponse, the response for the delete method.\n   *\n   * @example\n   * The following code deletes an example file named \"files/mehozpxf877d\".\n   *\n   * ```ts\n   * await ai.files.delete({name: file.name});\n   * ```\n   */\n  async delete(\n    params: types.DeleteFileParameters,\n  ): Promise<types.DeleteFileResponse> {\n    let response: Promise<types.DeleteFileResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      throw new Error(\n        'This method is only supported by the Gemini Developer API.',\n      );\n    } else {\n      const body = converters.deleteFileParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        'files/{file}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'DELETE',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.DeleteFileResponse>;\n\n      return response.then(() => {\n        const resp = converters.deleteFileResponseFromMldev();\n        const typedResp = new types.DeleteFileResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\nimport {ApiClient} from '../_api_client';\nimport * as common from '../_common';\nimport * as t from '../_transformers';\nimport * as types from '../types';\n\nexport function partToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Part,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['videoMetadata']) !== undefined) {\n    throw new Error('videoMetadata parameter is not supported in Gemini API.');\n  }\n\n  const fromThought = common.getValueByPath(fromObject, ['thought']);\n  if (fromThought != null) {\n    common.setValueByPath(toObject, ['thought'], fromThought);\n  }\n\n  const fromCodeExecutionResult = common.getValueByPath(fromObject, [\n    'codeExecutionResult',\n  ]);\n  if (fromCodeExecutionResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['codeExecutionResult'],\n      fromCodeExecutionResult,\n    );\n  }\n\n  const fromExecutableCode = common.getValueByPath(fromObject, [\n    'executableCode',\n  ]);\n  if (fromExecutableCode != null) {\n    common.setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n  }\n\n  const fromFileData = common.getValueByPath(fromObject, ['fileData']);\n  if (fromFileData != null) {\n    common.setValueByPath(toObject, ['fileData'], fromFileData);\n  }\n\n  const fromFunctionCall = common.getValueByPath(fromObject, ['functionCall']);\n  if (fromFunctionCall != null) {\n    common.setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n  }\n\n  const fromFunctionResponse = common.getValueByPath(fromObject, [\n    'functionResponse',\n  ]);\n  if (fromFunctionResponse != null) {\n    common.setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n  }\n\n  const fromInlineData = common.getValueByPath(fromObject, ['inlineData']);\n  if (fromInlineData != null) {\n    common.setValueByPath(toObject, ['inlineData'], fromInlineData);\n  }\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  return toObject;\n}\n\nexport function contentToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Content,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromParts = common.getValueByPath(fromObject, ['parts']);\n  if (fromParts != null) {\n    if (Array.isArray(fromParts)) {\n      common.setValueByPath(\n        toObject,\n        ['parts'],\n        fromParts.map((item) => {\n          return partToMldev(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(toObject, ['parts'], fromParts);\n    }\n  }\n\n  const fromRole = common.getValueByPath(fromObject, ['role']);\n  if (fromRole != null) {\n    common.setValueByPath(toObject, ['role'], fromRole);\n  }\n\n  return toObject;\n}\n\nexport function schemaToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Schema,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['example']) !== undefined) {\n    throw new Error('example parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['pattern']) !== undefined) {\n    throw new Error('pattern parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['default']) !== undefined) {\n    throw new Error('default parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['maxLength']) !== undefined) {\n    throw new Error('maxLength parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['minLength']) !== undefined) {\n    throw new Error('minLength parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['minProperties']) !== undefined) {\n    throw new Error('minProperties parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['maxProperties']) !== undefined) {\n    throw new Error('maxProperties parameter is not supported in Gemini API.');\n  }\n\n  const fromAnyOf = common.getValueByPath(fromObject, ['anyOf']);\n  if (fromAnyOf != null) {\n    common.setValueByPath(toObject, ['anyOf'], fromAnyOf);\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromEnum = common.getValueByPath(fromObject, ['enum']);\n  if (fromEnum != null) {\n    common.setValueByPath(toObject, ['enum'], fromEnum);\n  }\n\n  const fromFormat = common.getValueByPath(fromObject, ['format']);\n  if (fromFormat != null) {\n    common.setValueByPath(toObject, ['format'], fromFormat);\n  }\n\n  const fromItems = common.getValueByPath(fromObject, ['items']);\n  if (fromItems != null) {\n    common.setValueByPath(toObject, ['items'], fromItems);\n  }\n\n  const fromMaxItems = common.getValueByPath(fromObject, ['maxItems']);\n  if (fromMaxItems != null) {\n    common.setValueByPath(toObject, ['maxItems'], fromMaxItems);\n  }\n\n  const fromMaximum = common.getValueByPath(fromObject, ['maximum']);\n  if (fromMaximum != null) {\n    common.setValueByPath(toObject, ['maximum'], fromMaximum);\n  }\n\n  const fromMinItems = common.getValueByPath(fromObject, ['minItems']);\n  if (fromMinItems != null) {\n    common.setValueByPath(toObject, ['minItems'], fromMinItems);\n  }\n\n  const fromMinimum = common.getValueByPath(fromObject, ['minimum']);\n  if (fromMinimum != null) {\n    common.setValueByPath(toObject, ['minimum'], fromMinimum);\n  }\n\n  const fromNullable = common.getValueByPath(fromObject, ['nullable']);\n  if (fromNullable != null) {\n    common.setValueByPath(toObject, ['nullable'], fromNullable);\n  }\n\n  const fromProperties = common.getValueByPath(fromObject, ['properties']);\n  if (fromProperties != null) {\n    common.setValueByPath(toObject, ['properties'], fromProperties);\n  }\n\n  const fromPropertyOrdering = common.getValueByPath(fromObject, [\n    'propertyOrdering',\n  ]);\n  if (fromPropertyOrdering != null) {\n    common.setValueByPath(toObject, ['propertyOrdering'], fromPropertyOrdering);\n  }\n\n  const fromRequired = common.getValueByPath(fromObject, ['required']);\n  if (fromRequired != null) {\n    common.setValueByPath(toObject, ['required'], fromRequired);\n  }\n\n  const fromTitle = common.getValueByPath(fromObject, ['title']);\n  if (fromTitle != null) {\n    common.setValueByPath(toObject, ['title'], fromTitle);\n  }\n\n  const fromType = common.getValueByPath(fromObject, ['type']);\n  if (fromType != null) {\n    common.setValueByPath(toObject, ['type'], fromType);\n  }\n\n  return toObject;\n}\n\nexport function safetySettingToMldev(\n  apiClient: ApiClient,\n  fromObject: types.SafetySetting,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['method']) !== undefined) {\n    throw new Error('method parameter is not supported in Gemini API.');\n  }\n\n  const fromCategory = common.getValueByPath(fromObject, ['category']);\n  if (fromCategory != null) {\n    common.setValueByPath(toObject, ['category'], fromCategory);\n  }\n\n  const fromThreshold = common.getValueByPath(fromObject, ['threshold']);\n  if (fromThreshold != null) {\n    common.setValueByPath(toObject, ['threshold'], fromThreshold);\n  }\n\n  return toObject;\n}\n\nexport function functionDeclarationToMldev(\n  apiClient: ApiClient,\n  fromObject: types.FunctionDeclaration,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['response']) !== undefined) {\n    throw new Error('response parameter is not supported in Gemini API.');\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromParameters = common.getValueByPath(fromObject, ['parameters']);\n  if (fromParameters != null) {\n    common.setValueByPath(toObject, ['parameters'], fromParameters);\n  }\n\n  return toObject;\n}\n\nexport function googleSearchToMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function dynamicRetrievalConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.DynamicRetrievalConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMode = common.getValueByPath(fromObject, ['mode']);\n  if (fromMode != null) {\n    common.setValueByPath(toObject, ['mode'], fromMode);\n  }\n\n  const fromDynamicThreshold = common.getValueByPath(fromObject, [\n    'dynamicThreshold',\n  ]);\n  if (fromDynamicThreshold != null) {\n    common.setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n  }\n\n  return toObject;\n}\n\nexport function googleSearchRetrievalToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GoogleSearchRetrieval,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDynamicRetrievalConfig = common.getValueByPath(fromObject, [\n    'dynamicRetrievalConfig',\n  ]);\n  if (fromDynamicRetrievalConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['dynamicRetrievalConfig'],\n      dynamicRetrievalConfigToMldev(apiClient, fromDynamicRetrievalConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function toolToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Tool,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionDeclarations = common.getValueByPath(fromObject, [\n    'functionDeclarations',\n  ]);\n  if (fromFunctionDeclarations != null) {\n    if (Array.isArray(fromFunctionDeclarations)) {\n      common.setValueByPath(\n        toObject,\n        ['functionDeclarations'],\n        fromFunctionDeclarations.map((item) => {\n          return functionDeclarationToMldev(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(\n        toObject,\n        ['functionDeclarations'],\n        fromFunctionDeclarations,\n      );\n    }\n  }\n\n  if (common.getValueByPath(fromObject, ['retrieval']) !== undefined) {\n    throw new Error('retrieval parameter is not supported in Gemini API.');\n  }\n\n  const fromGoogleSearch = common.getValueByPath(fromObject, ['googleSearch']);\n  if (fromGoogleSearch != null) {\n    common.setValueByPath(toObject, ['googleSearch'], googleSearchToMldev());\n  }\n\n  const fromGoogleSearchRetrieval = common.getValueByPath(fromObject, [\n    'googleSearchRetrieval',\n  ]);\n  if (fromGoogleSearchRetrieval != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleSearchRetrieval'],\n      googleSearchRetrievalToMldev(apiClient, fromGoogleSearchRetrieval),\n    );\n  }\n\n  const fromCodeExecution = common.getValueByPath(fromObject, [\n    'codeExecution',\n  ]);\n  if (fromCodeExecution != null) {\n    common.setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n  }\n\n  return toObject;\n}\n\nexport function functionCallingConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.FunctionCallingConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMode = common.getValueByPath(fromObject, ['mode']);\n  if (fromMode != null) {\n    common.setValueByPath(toObject, ['mode'], fromMode);\n  }\n\n  const fromAllowedFunctionNames = common.getValueByPath(fromObject, [\n    'allowedFunctionNames',\n  ]);\n  if (fromAllowedFunctionNames != null) {\n    common.setValueByPath(\n      toObject,\n      ['allowedFunctionNames'],\n      fromAllowedFunctionNames,\n    );\n  }\n\n  return toObject;\n}\n\nexport function toolConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ToolConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionCallingConfig = common.getValueByPath(fromObject, [\n    'functionCallingConfig',\n  ]);\n  if (fromFunctionCallingConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['functionCallingConfig'],\n      functionCallingConfigToMldev(apiClient, fromFunctionCallingConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function prebuiltVoiceConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.PrebuiltVoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVoiceName = common.getValueByPath(fromObject, ['voiceName']);\n  if (fromVoiceName != null) {\n    common.setValueByPath(toObject, ['voiceName'], fromVoiceName);\n  }\n\n  return toObject;\n}\n\nexport function voiceConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.VoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPrebuiltVoiceConfig = common.getValueByPath(fromObject, [\n    'prebuiltVoiceConfig',\n  ]);\n  if (fromPrebuiltVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['prebuiltVoiceConfig'],\n      prebuiltVoiceConfigToMldev(apiClient, fromPrebuiltVoiceConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function speechConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.SpeechConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVoiceConfig = common.getValueByPath(fromObject, ['voiceConfig']);\n  if (fromVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['voiceConfig'],\n      voiceConfigToMldev(apiClient, fromVoiceConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function thinkingConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.ThinkingConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromIncludeThoughts = common.getValueByPath(fromObject, [\n    'includeThoughts',\n  ]);\n  if (fromIncludeThoughts != null) {\n    common.setValueByPath(toObject, ['includeThoughts'], fromIncludeThoughts);\n  }\n\n  const fromThinkingBudget = common.getValueByPath(fromObject, [\n    'thinkingBudget',\n  ]);\n  if (fromThinkingBudget != null) {\n    common.setValueByPath(toObject, ['thinkingBudget'], fromThinkingBudget);\n  }\n\n  return toObject;\n}\n\nexport function generateContentConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateContentConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromSystemInstruction = common.getValueByPath(fromObject, [\n    'systemInstruction',\n  ]);\n  if (parentObject !== undefined && fromSystemInstruction != null) {\n    common.setValueByPath(\n      parentObject,\n      ['systemInstruction'],\n      contentToMldev(apiClient, t.tContent(apiClient, fromSystemInstruction)),\n    );\n  }\n\n  const fromTemperature = common.getValueByPath(fromObject, ['temperature']);\n  if (fromTemperature != null) {\n    common.setValueByPath(toObject, ['temperature'], fromTemperature);\n  }\n\n  const fromTopP = common.getValueByPath(fromObject, ['topP']);\n  if (fromTopP != null) {\n    common.setValueByPath(toObject, ['topP'], fromTopP);\n  }\n\n  const fromTopK = common.getValueByPath(fromObject, ['topK']);\n  if (fromTopK != null) {\n    common.setValueByPath(toObject, ['topK'], fromTopK);\n  }\n\n  const fromCandidateCount = common.getValueByPath(fromObject, [\n    'candidateCount',\n  ]);\n  if (fromCandidateCount != null) {\n    common.setValueByPath(toObject, ['candidateCount'], fromCandidateCount);\n  }\n\n  const fromMaxOutputTokens = common.getValueByPath(fromObject, [\n    'maxOutputTokens',\n  ]);\n  if (fromMaxOutputTokens != null) {\n    common.setValueByPath(toObject, ['maxOutputTokens'], fromMaxOutputTokens);\n  }\n\n  const fromStopSequences = common.getValueByPath(fromObject, [\n    'stopSequences',\n  ]);\n  if (fromStopSequences != null) {\n    common.setValueByPath(toObject, ['stopSequences'], fromStopSequences);\n  }\n\n  const fromResponseLogprobs = common.getValueByPath(fromObject, [\n    'responseLogprobs',\n  ]);\n  if (fromResponseLogprobs != null) {\n    common.setValueByPath(toObject, ['responseLogprobs'], fromResponseLogprobs);\n  }\n\n  const fromLogprobs = common.getValueByPath(fromObject, ['logprobs']);\n  if (fromLogprobs != null) {\n    common.setValueByPath(toObject, ['logprobs'], fromLogprobs);\n  }\n\n  const fromPresencePenalty = common.getValueByPath(fromObject, [\n    'presencePenalty',\n  ]);\n  if (fromPresencePenalty != null) {\n    common.setValueByPath(toObject, ['presencePenalty'], fromPresencePenalty);\n  }\n\n  const fromFrequencyPenalty = common.getValueByPath(fromObject, [\n    'frequencyPenalty',\n  ]);\n  if (fromFrequencyPenalty != null) {\n    common.setValueByPath(toObject, ['frequencyPenalty'], fromFrequencyPenalty);\n  }\n\n  const fromSeed = common.getValueByPath(fromObject, ['seed']);\n  if (fromSeed != null) {\n    common.setValueByPath(toObject, ['seed'], fromSeed);\n  }\n\n  const fromResponseMimeType = common.getValueByPath(fromObject, [\n    'responseMimeType',\n  ]);\n  if (fromResponseMimeType != null) {\n    common.setValueByPath(toObject, ['responseMimeType'], fromResponseMimeType);\n  }\n\n  const fromResponseSchema = common.getValueByPath(fromObject, [\n    'responseSchema',\n  ]);\n  if (fromResponseSchema != null) {\n    common.setValueByPath(\n      toObject,\n      ['responseSchema'],\n      schemaToMldev(apiClient, t.tSchema(apiClient, fromResponseSchema)),\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['routingConfig']) !== undefined) {\n    throw new Error('routingConfig parameter is not supported in Gemini API.');\n  }\n\n  const fromSafetySettings = common.getValueByPath(fromObject, [\n    'safetySettings',\n  ]);\n  if (parentObject !== undefined && fromSafetySettings != null) {\n    if (Array.isArray(fromSafetySettings)) {\n      common.setValueByPath(\n        parentObject,\n        ['safetySettings'],\n        fromSafetySettings.map((item) => {\n          return safetySettingToMldev(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(\n        parentObject,\n        ['safetySettings'],\n        fromSafetySettings,\n      );\n    }\n  }\n\n  const fromTools = common.getValueByPath(fromObject, ['tools']);\n  if (parentObject !== undefined && fromTools != null) {\n    if (Array.isArray(fromTools)) {\n      common.setValueByPath(\n        parentObject,\n        ['tools'],\n        t.tTools(\n          apiClient,\n          t.tTools(apiClient, fromTools).map((item) => {\n            return toolToMldev(apiClient, t.tTool(apiClient, item));\n          }),\n        ),\n      );\n    } else {\n      common.setValueByPath(\n        parentObject,\n        ['tools'],\n        t.tTools(apiClient, fromTools),\n      );\n    }\n  }\n\n  const fromToolConfig = common.getValueByPath(fromObject, ['toolConfig']);\n  if (parentObject !== undefined && fromToolConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['toolConfig'],\n      toolConfigToMldev(apiClient, fromToolConfig),\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['labels']) !== undefined) {\n    throw new Error('labels parameter is not supported in Gemini API.');\n  }\n\n  const fromCachedContent = common.getValueByPath(fromObject, [\n    'cachedContent',\n  ]);\n  if (parentObject !== undefined && fromCachedContent != null) {\n    common.setValueByPath(\n      parentObject,\n      ['cachedContent'],\n      t.tCachedContentName(apiClient, fromCachedContent),\n    );\n  }\n\n  const fromResponseModalities = common.getValueByPath(fromObject, [\n    'responseModalities',\n  ]);\n  if (fromResponseModalities != null) {\n    common.setValueByPath(\n      toObject,\n      ['responseModalities'],\n      fromResponseModalities,\n    );\n  }\n\n  const fromMediaResolution = common.getValueByPath(fromObject, [\n    'mediaResolution',\n  ]);\n  if (fromMediaResolution != null) {\n    common.setValueByPath(toObject, ['mediaResolution'], fromMediaResolution);\n  }\n\n  const fromSpeechConfig = common.getValueByPath(fromObject, ['speechConfig']);\n  if (fromSpeechConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['speechConfig'],\n      speechConfigToMldev(\n        apiClient,\n        t.tSpeechConfig(apiClient, fromSpeechConfig),\n      ),\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['audioTimestamp']) !== undefined) {\n    throw new Error('audioTimestamp parameter is not supported in Gemini API.');\n  }\n\n  const fromThinkingConfig = common.getValueByPath(fromObject, [\n    'thinkingConfig',\n  ]);\n  if (fromThinkingConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['thinkingConfig'],\n      thinkingConfigToMldev(apiClient, fromThinkingConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateContentParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromContents = common.getValueByPath(fromObject, ['contents']);\n  if (fromContents != null) {\n    if (Array.isArray(fromContents)) {\n      common.setValueByPath(\n        toObject,\n        ['contents'],\n        t.tContents(\n          apiClient,\n          t.tContents(apiClient, fromContents).map((item) => {\n            return contentToMldev(apiClient, item);\n          }),\n        ),\n      );\n    } else {\n      common.setValueByPath(\n        toObject,\n        ['contents'],\n        t.tContents(apiClient, fromContents),\n      );\n    }\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['generationConfig'],\n      generateContentConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function embedContentConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.EmbedContentConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTaskType = common.getValueByPath(fromObject, ['taskType']);\n  if (parentObject !== undefined && fromTaskType != null) {\n    common.setValueByPath(\n      parentObject,\n      ['requests[]', 'taskType'],\n      fromTaskType,\n    );\n  }\n\n  const fromTitle = common.getValueByPath(fromObject, ['title']);\n  if (parentObject !== undefined && fromTitle != null) {\n    common.setValueByPath(parentObject, ['requests[]', 'title'], fromTitle);\n  }\n\n  const fromOutputDimensionality = common.getValueByPath(fromObject, [\n    'outputDimensionality',\n  ]);\n  if (parentObject !== undefined && fromOutputDimensionality != null) {\n    common.setValueByPath(\n      parentObject,\n      ['requests[]', 'outputDimensionality'],\n      fromOutputDimensionality,\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['mimeType']) !== undefined) {\n    throw new Error('mimeType parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['autoTruncate']) !== undefined) {\n    throw new Error('autoTruncate parameter is not supported in Gemini API.');\n  }\n\n  return toObject;\n}\n\nexport function embedContentParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.EmbedContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromContents = common.getValueByPath(fromObject, ['contents']);\n  if (fromContents != null) {\n    common.setValueByPath(\n      toObject,\n      ['requests[]', 'content'],\n      t.tContentsForEmbed(apiClient, fromContents),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      embedContentConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  const fromModelForEmbedContent = common.getValueByPath(fromObject, ['model']);\n  if (fromModelForEmbedContent !== undefined) {\n    common.setValueByPath(\n      toObject,\n      ['requests[]', 'model'],\n      t.tModel(apiClient, fromModelForEmbedContent),\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateImagesConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateImagesConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['outputGcsUri']) !== undefined) {\n    throw new Error('outputGcsUri parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['negativePrompt']) !== undefined) {\n    throw new Error('negativePrompt parameter is not supported in Gemini API.');\n  }\n\n  const fromNumberOfImages = common.getValueByPath(fromObject, [\n    'numberOfImages',\n  ]);\n  if (parentObject !== undefined && fromNumberOfImages != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'sampleCount'],\n      fromNumberOfImages,\n    );\n  }\n\n  const fromAspectRatio = common.getValueByPath(fromObject, ['aspectRatio']);\n  if (parentObject !== undefined && fromAspectRatio != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'aspectRatio'],\n      fromAspectRatio,\n    );\n  }\n\n  const fromGuidanceScale = common.getValueByPath(fromObject, [\n    'guidanceScale',\n  ]);\n  if (parentObject !== undefined && fromGuidanceScale != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'guidanceScale'],\n      fromGuidanceScale,\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['seed']) !== undefined) {\n    throw new Error('seed parameter is not supported in Gemini API.');\n  }\n\n  const fromSafetyFilterLevel = common.getValueByPath(fromObject, [\n    'safetyFilterLevel',\n  ]);\n  if (parentObject !== undefined && fromSafetyFilterLevel != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'safetySetting'],\n      fromSafetyFilterLevel,\n    );\n  }\n\n  const fromPersonGeneration = common.getValueByPath(fromObject, [\n    'personGeneration',\n  ]);\n  if (parentObject !== undefined && fromPersonGeneration != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'personGeneration'],\n      fromPersonGeneration,\n    );\n  }\n\n  const fromIncludeSafetyAttributes = common.getValueByPath(fromObject, [\n    'includeSafetyAttributes',\n  ]);\n  if (parentObject !== undefined && fromIncludeSafetyAttributes != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'includeSafetyAttributes'],\n      fromIncludeSafetyAttributes,\n    );\n  }\n\n  const fromIncludeRaiReason = common.getValueByPath(fromObject, [\n    'includeRaiReason',\n  ]);\n  if (parentObject !== undefined && fromIncludeRaiReason != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'includeRaiReason'],\n      fromIncludeRaiReason,\n    );\n  }\n\n  const fromLanguage = common.getValueByPath(fromObject, ['language']);\n  if (parentObject !== undefined && fromLanguage != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'language'],\n      fromLanguage,\n    );\n  }\n\n  const fromOutputMimeType = common.getValueByPath(fromObject, [\n    'outputMimeType',\n  ]);\n  if (parentObject !== undefined && fromOutputMimeType != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'outputOptions', 'mimeType'],\n      fromOutputMimeType,\n    );\n  }\n\n  const fromOutputCompressionQuality = common.getValueByPath(fromObject, [\n    'outputCompressionQuality',\n  ]);\n  if (parentObject !== undefined && fromOutputCompressionQuality != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'outputOptions', 'compressionQuality'],\n      fromOutputCompressionQuality,\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['addWatermark']) !== undefined) {\n    throw new Error('addWatermark parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['enhancePrompt']) !== undefined) {\n    throw new Error('enhancePrompt parameter is not supported in Gemini API.');\n  }\n\n  return toObject;\n}\n\nexport function generateImagesParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateImagesParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromPrompt = common.getValueByPath(fromObject, ['prompt']);\n  if (fromPrompt != null) {\n    common.setValueByPath(toObject, ['instances[0]', 'prompt'], fromPrompt);\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      generateImagesConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function getModelParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GetModelParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'name'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function countTokensConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.CountTokensConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['systemInstruction']) !== undefined) {\n    throw new Error(\n      'systemInstruction parameter is not supported in Gemini API.',\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['tools']) !== undefined) {\n    throw new Error('tools parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['generationConfig']) !== undefined) {\n    throw new Error(\n      'generationConfig parameter is not supported in Gemini API.',\n    );\n  }\n\n  return toObject;\n}\n\nexport function countTokensParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.CountTokensParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromContents = common.getValueByPath(fromObject, ['contents']);\n  if (fromContents != null) {\n    if (Array.isArray(fromContents)) {\n      common.setValueByPath(\n        toObject,\n        ['contents'],\n        t.tContents(\n          apiClient,\n          t.tContents(apiClient, fromContents).map((item) => {\n            return contentToMldev(apiClient, item);\n          }),\n        ),\n      );\n    } else {\n      common.setValueByPath(\n        toObject,\n        ['contents'],\n        t.tContents(apiClient, fromContents),\n      );\n    }\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      countTokensConfigToMldev(apiClient, fromConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function imageToMldev(\n  apiClient: ApiClient,\n  fromObject: types.Image,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  if (common.getValueByPath(fromObject, ['gcsUri']) !== undefined) {\n    throw new Error('gcsUri parameter is not supported in Gemini API.');\n  }\n\n  const fromImageBytes = common.getValueByPath(fromObject, ['imageBytes']);\n  if (fromImageBytes != null) {\n    common.setValueByPath(\n      toObject,\n      ['bytesBase64Encoded'],\n      t.tBytes(apiClient, fromImageBytes),\n    );\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function generateVideosConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromNumberOfVideos = common.getValueByPath(fromObject, [\n    'numberOfVideos',\n  ]);\n  if (parentObject !== undefined && fromNumberOfVideos != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'sampleCount'],\n      fromNumberOfVideos,\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['outputGcsUri']) !== undefined) {\n    throw new Error('outputGcsUri parameter is not supported in Gemini API.');\n  }\n\n  if (common.getValueByPath(fromObject, ['fps']) !== undefined) {\n    throw new Error('fps parameter is not supported in Gemini API.');\n  }\n\n  const fromDurationSeconds = common.getValueByPath(fromObject, [\n    'durationSeconds',\n  ]);\n  if (parentObject !== undefined && fromDurationSeconds != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'durationSeconds'],\n      fromDurationSeconds,\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['seed']) !== undefined) {\n    throw new Error('seed parameter is not supported in Gemini API.');\n  }\n\n  const fromAspectRatio = common.getValueByPath(fromObject, ['aspectRatio']);\n  if (parentObject !== undefined && fromAspectRatio != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'aspectRatio'],\n      fromAspectRatio,\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['resolution']) !== undefined) {\n    throw new Error('resolution parameter is not supported in Gemini API.');\n  }\n\n  const fromPersonGeneration = common.getValueByPath(fromObject, [\n    'personGeneration',\n  ]);\n  if (parentObject !== undefined && fromPersonGeneration != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'personGeneration'],\n      fromPersonGeneration,\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['pubsubTopic']) !== undefined) {\n    throw new Error('pubsubTopic parameter is not supported in Gemini API.');\n  }\n\n  const fromNegativePrompt = common.getValueByPath(fromObject, [\n    'negativePrompt',\n  ]);\n  if (parentObject !== undefined && fromNegativePrompt != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'negativePrompt'],\n      fromNegativePrompt,\n    );\n  }\n\n  if (common.getValueByPath(fromObject, ['enhancePrompt']) !== undefined) {\n    throw new Error('enhancePrompt parameter is not supported in Gemini API.');\n  }\n\n  return toObject;\n}\n\nexport function generateVideosParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromPrompt = common.getValueByPath(fromObject, ['prompt']);\n  if (fromPrompt != null) {\n    common.setValueByPath(toObject, ['instances[0]', 'prompt'], fromPrompt);\n  }\n\n  const fromImage = common.getValueByPath(fromObject, ['image']);\n  if (fromImage != null) {\n    common.setValueByPath(\n      toObject,\n      ['instances[0]', 'image'],\n      imageToMldev(apiClient, fromImage),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      generateVideosConfigToMldev(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function partToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Part,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideoMetadata = common.getValueByPath(fromObject, [\n    'videoMetadata',\n  ]);\n  if (fromVideoMetadata != null) {\n    common.setValueByPath(toObject, ['videoMetadata'], fromVideoMetadata);\n  }\n\n  const fromThought = common.getValueByPath(fromObject, ['thought']);\n  if (fromThought != null) {\n    common.setValueByPath(toObject, ['thought'], fromThought);\n  }\n\n  const fromCodeExecutionResult = common.getValueByPath(fromObject, [\n    'codeExecutionResult',\n  ]);\n  if (fromCodeExecutionResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['codeExecutionResult'],\n      fromCodeExecutionResult,\n    );\n  }\n\n  const fromExecutableCode = common.getValueByPath(fromObject, [\n    'executableCode',\n  ]);\n  if (fromExecutableCode != null) {\n    common.setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n  }\n\n  const fromFileData = common.getValueByPath(fromObject, ['fileData']);\n  if (fromFileData != null) {\n    common.setValueByPath(toObject, ['fileData'], fromFileData);\n  }\n\n  const fromFunctionCall = common.getValueByPath(fromObject, ['functionCall']);\n  if (fromFunctionCall != null) {\n    common.setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n  }\n\n  const fromFunctionResponse = common.getValueByPath(fromObject, [\n    'functionResponse',\n  ]);\n  if (fromFunctionResponse != null) {\n    common.setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n  }\n\n  const fromInlineData = common.getValueByPath(fromObject, ['inlineData']);\n  if (fromInlineData != null) {\n    common.setValueByPath(toObject, ['inlineData'], fromInlineData);\n  }\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  return toObject;\n}\n\nexport function contentToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Content,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromParts = common.getValueByPath(fromObject, ['parts']);\n  if (fromParts != null) {\n    if (Array.isArray(fromParts)) {\n      common.setValueByPath(\n        toObject,\n        ['parts'],\n        fromParts.map((item) => {\n          return partToVertex(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(toObject, ['parts'], fromParts);\n    }\n  }\n\n  const fromRole = common.getValueByPath(fromObject, ['role']);\n  if (fromRole != null) {\n    common.setValueByPath(toObject, ['role'], fromRole);\n  }\n\n  return toObject;\n}\n\nexport function schemaToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Schema,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromExample = common.getValueByPath(fromObject, ['example']);\n  if (fromExample != null) {\n    common.setValueByPath(toObject, ['example'], fromExample);\n  }\n\n  const fromPattern = common.getValueByPath(fromObject, ['pattern']);\n  if (fromPattern != null) {\n    common.setValueByPath(toObject, ['pattern'], fromPattern);\n  }\n\n  const fromDefault = common.getValueByPath(fromObject, ['default']);\n  if (fromDefault != null) {\n    common.setValueByPath(toObject, ['default'], fromDefault);\n  }\n\n  const fromMaxLength = common.getValueByPath(fromObject, ['maxLength']);\n  if (fromMaxLength != null) {\n    common.setValueByPath(toObject, ['maxLength'], fromMaxLength);\n  }\n\n  const fromMinLength = common.getValueByPath(fromObject, ['minLength']);\n  if (fromMinLength != null) {\n    common.setValueByPath(toObject, ['minLength'], fromMinLength);\n  }\n\n  const fromMinProperties = common.getValueByPath(fromObject, [\n    'minProperties',\n  ]);\n  if (fromMinProperties != null) {\n    common.setValueByPath(toObject, ['minProperties'], fromMinProperties);\n  }\n\n  const fromMaxProperties = common.getValueByPath(fromObject, [\n    'maxProperties',\n  ]);\n  if (fromMaxProperties != null) {\n    common.setValueByPath(toObject, ['maxProperties'], fromMaxProperties);\n  }\n\n  const fromAnyOf = common.getValueByPath(fromObject, ['anyOf']);\n  if (fromAnyOf != null) {\n    common.setValueByPath(toObject, ['anyOf'], fromAnyOf);\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromEnum = common.getValueByPath(fromObject, ['enum']);\n  if (fromEnum != null) {\n    common.setValueByPath(toObject, ['enum'], fromEnum);\n  }\n\n  const fromFormat = common.getValueByPath(fromObject, ['format']);\n  if (fromFormat != null) {\n    common.setValueByPath(toObject, ['format'], fromFormat);\n  }\n\n  const fromItems = common.getValueByPath(fromObject, ['items']);\n  if (fromItems != null) {\n    common.setValueByPath(toObject, ['items'], fromItems);\n  }\n\n  const fromMaxItems = common.getValueByPath(fromObject, ['maxItems']);\n  if (fromMaxItems != null) {\n    common.setValueByPath(toObject, ['maxItems'], fromMaxItems);\n  }\n\n  const fromMaximum = common.getValueByPath(fromObject, ['maximum']);\n  if (fromMaximum != null) {\n    common.setValueByPath(toObject, ['maximum'], fromMaximum);\n  }\n\n  const fromMinItems = common.getValueByPath(fromObject, ['minItems']);\n  if (fromMinItems != null) {\n    common.setValueByPath(toObject, ['minItems'], fromMinItems);\n  }\n\n  const fromMinimum = common.getValueByPath(fromObject, ['minimum']);\n  if (fromMinimum != null) {\n    common.setValueByPath(toObject, ['minimum'], fromMinimum);\n  }\n\n  const fromNullable = common.getValueByPath(fromObject, ['nullable']);\n  if (fromNullable != null) {\n    common.setValueByPath(toObject, ['nullable'], fromNullable);\n  }\n\n  const fromProperties = common.getValueByPath(fromObject, ['properties']);\n  if (fromProperties != null) {\n    common.setValueByPath(toObject, ['properties'], fromProperties);\n  }\n\n  const fromPropertyOrdering = common.getValueByPath(fromObject, [\n    'propertyOrdering',\n  ]);\n  if (fromPropertyOrdering != null) {\n    common.setValueByPath(toObject, ['propertyOrdering'], fromPropertyOrdering);\n  }\n\n  const fromRequired = common.getValueByPath(fromObject, ['required']);\n  if (fromRequired != null) {\n    common.setValueByPath(toObject, ['required'], fromRequired);\n  }\n\n  const fromTitle = common.getValueByPath(fromObject, ['title']);\n  if (fromTitle != null) {\n    common.setValueByPath(toObject, ['title'], fromTitle);\n  }\n\n  const fromType = common.getValueByPath(fromObject, ['type']);\n  if (fromType != null) {\n    common.setValueByPath(toObject, ['type'], fromType);\n  }\n\n  return toObject;\n}\n\nexport function safetySettingToVertex(\n  apiClient: ApiClient,\n  fromObject: types.SafetySetting,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMethod = common.getValueByPath(fromObject, ['method']);\n  if (fromMethod != null) {\n    common.setValueByPath(toObject, ['method'], fromMethod);\n  }\n\n  const fromCategory = common.getValueByPath(fromObject, ['category']);\n  if (fromCategory != null) {\n    common.setValueByPath(toObject, ['category'], fromCategory);\n  }\n\n  const fromThreshold = common.getValueByPath(fromObject, ['threshold']);\n  if (fromThreshold != null) {\n    common.setValueByPath(toObject, ['threshold'], fromThreshold);\n  }\n\n  return toObject;\n}\n\nexport function functionDeclarationToVertex(\n  apiClient: ApiClient,\n  fromObject: types.FunctionDeclaration,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromResponse = common.getValueByPath(fromObject, ['response']);\n  if (fromResponse != null) {\n    common.setValueByPath(\n      toObject,\n      ['response'],\n      schemaToVertex(apiClient, fromResponse),\n    );\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromParameters = common.getValueByPath(fromObject, ['parameters']);\n  if (fromParameters != null) {\n    common.setValueByPath(toObject, ['parameters'], fromParameters);\n  }\n\n  return toObject;\n}\n\nexport function googleSearchToVertex(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function dynamicRetrievalConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.DynamicRetrievalConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMode = common.getValueByPath(fromObject, ['mode']);\n  if (fromMode != null) {\n    common.setValueByPath(toObject, ['mode'], fromMode);\n  }\n\n  const fromDynamicThreshold = common.getValueByPath(fromObject, [\n    'dynamicThreshold',\n  ]);\n  if (fromDynamicThreshold != null) {\n    common.setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n  }\n\n  return toObject;\n}\n\nexport function googleSearchRetrievalToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GoogleSearchRetrieval,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDynamicRetrievalConfig = common.getValueByPath(fromObject, [\n    'dynamicRetrievalConfig',\n  ]);\n  if (fromDynamicRetrievalConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['dynamicRetrievalConfig'],\n      dynamicRetrievalConfigToVertex(apiClient, fromDynamicRetrievalConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function toolToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Tool,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionDeclarations = common.getValueByPath(fromObject, [\n    'functionDeclarations',\n  ]);\n  if (fromFunctionDeclarations != null) {\n    if (Array.isArray(fromFunctionDeclarations)) {\n      common.setValueByPath(\n        toObject,\n        ['functionDeclarations'],\n        fromFunctionDeclarations.map((item) => {\n          return functionDeclarationToVertex(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(\n        toObject,\n        ['functionDeclarations'],\n        fromFunctionDeclarations,\n      );\n    }\n  }\n\n  const fromRetrieval = common.getValueByPath(fromObject, ['retrieval']);\n  if (fromRetrieval != null) {\n    common.setValueByPath(toObject, ['retrieval'], fromRetrieval);\n  }\n\n  const fromGoogleSearch = common.getValueByPath(fromObject, ['googleSearch']);\n  if (fromGoogleSearch != null) {\n    common.setValueByPath(toObject, ['googleSearch'], googleSearchToVertex());\n  }\n\n  const fromGoogleSearchRetrieval = common.getValueByPath(fromObject, [\n    'googleSearchRetrieval',\n  ]);\n  if (fromGoogleSearchRetrieval != null) {\n    common.setValueByPath(\n      toObject,\n      ['googleSearchRetrieval'],\n      googleSearchRetrievalToVertex(apiClient, fromGoogleSearchRetrieval),\n    );\n  }\n\n  const fromCodeExecution = common.getValueByPath(fromObject, [\n    'codeExecution',\n  ]);\n  if (fromCodeExecution != null) {\n    common.setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n  }\n\n  return toObject;\n}\n\nexport function functionCallingConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.FunctionCallingConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromMode = common.getValueByPath(fromObject, ['mode']);\n  if (fromMode != null) {\n    common.setValueByPath(toObject, ['mode'], fromMode);\n  }\n\n  const fromAllowedFunctionNames = common.getValueByPath(fromObject, [\n    'allowedFunctionNames',\n  ]);\n  if (fromAllowedFunctionNames != null) {\n    common.setValueByPath(\n      toObject,\n      ['allowedFunctionNames'],\n      fromAllowedFunctionNames,\n    );\n  }\n\n  return toObject;\n}\n\nexport function toolConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ToolConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionCallingConfig = common.getValueByPath(fromObject, [\n    'functionCallingConfig',\n  ]);\n  if (fromFunctionCallingConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['functionCallingConfig'],\n      functionCallingConfigToVertex(apiClient, fromFunctionCallingConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function prebuiltVoiceConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.PrebuiltVoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVoiceName = common.getValueByPath(fromObject, ['voiceName']);\n  if (fromVoiceName != null) {\n    common.setValueByPath(toObject, ['voiceName'], fromVoiceName);\n  }\n\n  return toObject;\n}\n\nexport function voiceConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.VoiceConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPrebuiltVoiceConfig = common.getValueByPath(fromObject, [\n    'prebuiltVoiceConfig',\n  ]);\n  if (fromPrebuiltVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['prebuiltVoiceConfig'],\n      prebuiltVoiceConfigToVertex(apiClient, fromPrebuiltVoiceConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function speechConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.SpeechConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVoiceConfig = common.getValueByPath(fromObject, ['voiceConfig']);\n  if (fromVoiceConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['voiceConfig'],\n      voiceConfigToVertex(apiClient, fromVoiceConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function thinkingConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ThinkingConfig,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromIncludeThoughts = common.getValueByPath(fromObject, [\n    'includeThoughts',\n  ]);\n  if (fromIncludeThoughts != null) {\n    common.setValueByPath(toObject, ['includeThoughts'], fromIncludeThoughts);\n  }\n\n  const fromThinkingBudget = common.getValueByPath(fromObject, [\n    'thinkingBudget',\n  ]);\n  if (fromThinkingBudget != null) {\n    common.setValueByPath(toObject, ['thinkingBudget'], fromThinkingBudget);\n  }\n\n  return toObject;\n}\n\nexport function generateContentConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateContentConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromSystemInstruction = common.getValueByPath(fromObject, [\n    'systemInstruction',\n  ]);\n  if (parentObject !== undefined && fromSystemInstruction != null) {\n    common.setValueByPath(\n      parentObject,\n      ['systemInstruction'],\n      contentToVertex(apiClient, t.tContent(apiClient, fromSystemInstruction)),\n    );\n  }\n\n  const fromTemperature = common.getValueByPath(fromObject, ['temperature']);\n  if (fromTemperature != null) {\n    common.setValueByPath(toObject, ['temperature'], fromTemperature);\n  }\n\n  const fromTopP = common.getValueByPath(fromObject, ['topP']);\n  if (fromTopP != null) {\n    common.setValueByPath(toObject, ['topP'], fromTopP);\n  }\n\n  const fromTopK = common.getValueByPath(fromObject, ['topK']);\n  if (fromTopK != null) {\n    common.setValueByPath(toObject, ['topK'], fromTopK);\n  }\n\n  const fromCandidateCount = common.getValueByPath(fromObject, [\n    'candidateCount',\n  ]);\n  if (fromCandidateCount != null) {\n    common.setValueByPath(toObject, ['candidateCount'], fromCandidateCount);\n  }\n\n  const fromMaxOutputTokens = common.getValueByPath(fromObject, [\n    'maxOutputTokens',\n  ]);\n  if (fromMaxOutputTokens != null) {\n    common.setValueByPath(toObject, ['maxOutputTokens'], fromMaxOutputTokens);\n  }\n\n  const fromStopSequences = common.getValueByPath(fromObject, [\n    'stopSequences',\n  ]);\n  if (fromStopSequences != null) {\n    common.setValueByPath(toObject, ['stopSequences'], fromStopSequences);\n  }\n\n  const fromResponseLogprobs = common.getValueByPath(fromObject, [\n    'responseLogprobs',\n  ]);\n  if (fromResponseLogprobs != null) {\n    common.setValueByPath(toObject, ['responseLogprobs'], fromResponseLogprobs);\n  }\n\n  const fromLogprobs = common.getValueByPath(fromObject, ['logprobs']);\n  if (fromLogprobs != null) {\n    common.setValueByPath(toObject, ['logprobs'], fromLogprobs);\n  }\n\n  const fromPresencePenalty = common.getValueByPath(fromObject, [\n    'presencePenalty',\n  ]);\n  if (fromPresencePenalty != null) {\n    common.setValueByPath(toObject, ['presencePenalty'], fromPresencePenalty);\n  }\n\n  const fromFrequencyPenalty = common.getValueByPath(fromObject, [\n    'frequencyPenalty',\n  ]);\n  if (fromFrequencyPenalty != null) {\n    common.setValueByPath(toObject, ['frequencyPenalty'], fromFrequencyPenalty);\n  }\n\n  const fromSeed = common.getValueByPath(fromObject, ['seed']);\n  if (fromSeed != null) {\n    common.setValueByPath(toObject, ['seed'], fromSeed);\n  }\n\n  const fromResponseMimeType = common.getValueByPath(fromObject, [\n    'responseMimeType',\n  ]);\n  if (fromResponseMimeType != null) {\n    common.setValueByPath(toObject, ['responseMimeType'], fromResponseMimeType);\n  }\n\n  const fromResponseSchema = common.getValueByPath(fromObject, [\n    'responseSchema',\n  ]);\n  if (fromResponseSchema != null) {\n    common.setValueByPath(\n      toObject,\n      ['responseSchema'],\n      schemaToVertex(apiClient, t.tSchema(apiClient, fromResponseSchema)),\n    );\n  }\n\n  const fromRoutingConfig = common.getValueByPath(fromObject, [\n    'routingConfig',\n  ]);\n  if (fromRoutingConfig != null) {\n    common.setValueByPath(toObject, ['routingConfig'], fromRoutingConfig);\n  }\n\n  const fromSafetySettings = common.getValueByPath(fromObject, [\n    'safetySettings',\n  ]);\n  if (parentObject !== undefined && fromSafetySettings != null) {\n    if (Array.isArray(fromSafetySettings)) {\n      common.setValueByPath(\n        parentObject,\n        ['safetySettings'],\n        fromSafetySettings.map((item) => {\n          return safetySettingToVertex(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(\n        parentObject,\n        ['safetySettings'],\n        fromSafetySettings,\n      );\n    }\n  }\n\n  const fromTools = common.getValueByPath(fromObject, ['tools']);\n  if (parentObject !== undefined && fromTools != null) {\n    if (Array.isArray(fromTools)) {\n      common.setValueByPath(\n        parentObject,\n        ['tools'],\n        t.tTools(\n          apiClient,\n          t.tTools(apiClient, fromTools).map((item) => {\n            return toolToVertex(apiClient, t.tTool(apiClient, item));\n          }),\n        ),\n      );\n    } else {\n      common.setValueByPath(\n        parentObject,\n        ['tools'],\n        t.tTools(apiClient, fromTools),\n      );\n    }\n  }\n\n  const fromToolConfig = common.getValueByPath(fromObject, ['toolConfig']);\n  if (parentObject !== undefined && fromToolConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['toolConfig'],\n      toolConfigToVertex(apiClient, fromToolConfig),\n    );\n  }\n\n  const fromLabels = common.getValueByPath(fromObject, ['labels']);\n  if (parentObject !== undefined && fromLabels != null) {\n    common.setValueByPath(parentObject, ['labels'], fromLabels);\n  }\n\n  const fromCachedContent = common.getValueByPath(fromObject, [\n    'cachedContent',\n  ]);\n  if (parentObject !== undefined && fromCachedContent != null) {\n    common.setValueByPath(\n      parentObject,\n      ['cachedContent'],\n      t.tCachedContentName(apiClient, fromCachedContent),\n    );\n  }\n\n  const fromResponseModalities = common.getValueByPath(fromObject, [\n    'responseModalities',\n  ]);\n  if (fromResponseModalities != null) {\n    common.setValueByPath(\n      toObject,\n      ['responseModalities'],\n      fromResponseModalities,\n    );\n  }\n\n  const fromMediaResolution = common.getValueByPath(fromObject, [\n    'mediaResolution',\n  ]);\n  if (fromMediaResolution != null) {\n    common.setValueByPath(toObject, ['mediaResolution'], fromMediaResolution);\n  }\n\n  const fromSpeechConfig = common.getValueByPath(fromObject, ['speechConfig']);\n  if (fromSpeechConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['speechConfig'],\n      speechConfigToVertex(\n        apiClient,\n        t.tSpeechConfig(apiClient, fromSpeechConfig),\n      ),\n    );\n  }\n\n  const fromAudioTimestamp = common.getValueByPath(fromObject, [\n    'audioTimestamp',\n  ]);\n  if (fromAudioTimestamp != null) {\n    common.setValueByPath(toObject, ['audioTimestamp'], fromAudioTimestamp);\n  }\n\n  const fromThinkingConfig = common.getValueByPath(fromObject, [\n    'thinkingConfig',\n  ]);\n  if (fromThinkingConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['thinkingConfig'],\n      thinkingConfigToVertex(apiClient, fromThinkingConfig),\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateContentParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromContents = common.getValueByPath(fromObject, ['contents']);\n  if (fromContents != null) {\n    if (Array.isArray(fromContents)) {\n      common.setValueByPath(\n        toObject,\n        ['contents'],\n        t.tContents(\n          apiClient,\n          t.tContents(apiClient, fromContents).map((item) => {\n            return contentToVertex(apiClient, item);\n          }),\n        ),\n      );\n    } else {\n      common.setValueByPath(\n        toObject,\n        ['contents'],\n        t.tContents(apiClient, fromContents),\n      );\n    }\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['generationConfig'],\n      generateContentConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function embedContentConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.EmbedContentConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTaskType = common.getValueByPath(fromObject, ['taskType']);\n  if (parentObject !== undefined && fromTaskType != null) {\n    common.setValueByPath(\n      parentObject,\n      ['instances[]', 'task_type'],\n      fromTaskType,\n    );\n  }\n\n  const fromTitle = common.getValueByPath(fromObject, ['title']);\n  if (parentObject !== undefined && fromTitle != null) {\n    common.setValueByPath(parentObject, ['instances[]', 'title'], fromTitle);\n  }\n\n  const fromOutputDimensionality = common.getValueByPath(fromObject, [\n    'outputDimensionality',\n  ]);\n  if (parentObject !== undefined && fromOutputDimensionality != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'outputDimensionality'],\n      fromOutputDimensionality,\n    );\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (parentObject !== undefined && fromMimeType != null) {\n    common.setValueByPath(\n      parentObject,\n      ['instances[]', 'mimeType'],\n      fromMimeType,\n    );\n  }\n\n  const fromAutoTruncate = common.getValueByPath(fromObject, ['autoTruncate']);\n  if (parentObject !== undefined && fromAutoTruncate != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'autoTruncate'],\n      fromAutoTruncate,\n    );\n  }\n\n  return toObject;\n}\n\nexport function embedContentParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.EmbedContentParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromContents = common.getValueByPath(fromObject, ['contents']);\n  if (fromContents != null) {\n    common.setValueByPath(\n      toObject,\n      ['instances[]', 'content'],\n      t.tContentsForEmbed(apiClient, fromContents),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      embedContentConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateImagesConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateImagesConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromOutputGcsUri = common.getValueByPath(fromObject, ['outputGcsUri']);\n  if (parentObject !== undefined && fromOutputGcsUri != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'storageUri'],\n      fromOutputGcsUri,\n    );\n  }\n\n  const fromNegativePrompt = common.getValueByPath(fromObject, [\n    'negativePrompt',\n  ]);\n  if (parentObject !== undefined && fromNegativePrompt != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'negativePrompt'],\n      fromNegativePrompt,\n    );\n  }\n\n  const fromNumberOfImages = common.getValueByPath(fromObject, [\n    'numberOfImages',\n  ]);\n  if (parentObject !== undefined && fromNumberOfImages != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'sampleCount'],\n      fromNumberOfImages,\n    );\n  }\n\n  const fromAspectRatio = common.getValueByPath(fromObject, ['aspectRatio']);\n  if (parentObject !== undefined && fromAspectRatio != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'aspectRatio'],\n      fromAspectRatio,\n    );\n  }\n\n  const fromGuidanceScale = common.getValueByPath(fromObject, [\n    'guidanceScale',\n  ]);\n  if (parentObject !== undefined && fromGuidanceScale != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'guidanceScale'],\n      fromGuidanceScale,\n    );\n  }\n\n  const fromSeed = common.getValueByPath(fromObject, ['seed']);\n  if (parentObject !== undefined && fromSeed != null) {\n    common.setValueByPath(parentObject, ['parameters', 'seed'], fromSeed);\n  }\n\n  const fromSafetyFilterLevel = common.getValueByPath(fromObject, [\n    'safetyFilterLevel',\n  ]);\n  if (parentObject !== undefined && fromSafetyFilterLevel != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'safetySetting'],\n      fromSafetyFilterLevel,\n    );\n  }\n\n  const fromPersonGeneration = common.getValueByPath(fromObject, [\n    'personGeneration',\n  ]);\n  if (parentObject !== undefined && fromPersonGeneration != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'personGeneration'],\n      fromPersonGeneration,\n    );\n  }\n\n  const fromIncludeSafetyAttributes = common.getValueByPath(fromObject, [\n    'includeSafetyAttributes',\n  ]);\n  if (parentObject !== undefined && fromIncludeSafetyAttributes != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'includeSafetyAttributes'],\n      fromIncludeSafetyAttributes,\n    );\n  }\n\n  const fromIncludeRaiReason = common.getValueByPath(fromObject, [\n    'includeRaiReason',\n  ]);\n  if (parentObject !== undefined && fromIncludeRaiReason != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'includeRaiReason'],\n      fromIncludeRaiReason,\n    );\n  }\n\n  const fromLanguage = common.getValueByPath(fromObject, ['language']);\n  if (parentObject !== undefined && fromLanguage != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'language'],\n      fromLanguage,\n    );\n  }\n\n  const fromOutputMimeType = common.getValueByPath(fromObject, [\n    'outputMimeType',\n  ]);\n  if (parentObject !== undefined && fromOutputMimeType != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'outputOptions', 'mimeType'],\n      fromOutputMimeType,\n    );\n  }\n\n  const fromOutputCompressionQuality = common.getValueByPath(fromObject, [\n    'outputCompressionQuality',\n  ]);\n  if (parentObject !== undefined && fromOutputCompressionQuality != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'outputOptions', 'compressionQuality'],\n      fromOutputCompressionQuality,\n    );\n  }\n\n  const fromAddWatermark = common.getValueByPath(fromObject, ['addWatermark']);\n  if (parentObject !== undefined && fromAddWatermark != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'addWatermark'],\n      fromAddWatermark,\n    );\n  }\n\n  const fromEnhancePrompt = common.getValueByPath(fromObject, [\n    'enhancePrompt',\n  ]);\n  if (parentObject !== undefined && fromEnhancePrompt != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'enhancePrompt'],\n      fromEnhancePrompt,\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateImagesParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateImagesParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromPrompt = common.getValueByPath(fromObject, ['prompt']);\n  if (fromPrompt != null) {\n    common.setValueByPath(toObject, ['instances[0]', 'prompt'], fromPrompt);\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      generateImagesConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function getModelParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GetModelParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'name'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function countTokensConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.CountTokensConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromSystemInstruction = common.getValueByPath(fromObject, [\n    'systemInstruction',\n  ]);\n  if (parentObject !== undefined && fromSystemInstruction != null) {\n    common.setValueByPath(\n      parentObject,\n      ['systemInstruction'],\n      contentToVertex(apiClient, t.tContent(apiClient, fromSystemInstruction)),\n    );\n  }\n\n  const fromTools = common.getValueByPath(fromObject, ['tools']);\n  if (parentObject !== undefined && fromTools != null) {\n    if (Array.isArray(fromTools)) {\n      common.setValueByPath(\n        parentObject,\n        ['tools'],\n        fromTools.map((item) => {\n          return toolToVertex(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(parentObject, ['tools'], fromTools);\n    }\n  }\n\n  const fromGenerationConfig = common.getValueByPath(fromObject, [\n    'generationConfig',\n  ]);\n  if (parentObject !== undefined && fromGenerationConfig != null) {\n    common.setValueByPath(\n      parentObject,\n      ['generationConfig'],\n      fromGenerationConfig,\n    );\n  }\n\n  return toObject;\n}\n\nexport function countTokensParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.CountTokensParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromContents = common.getValueByPath(fromObject, ['contents']);\n  if (fromContents != null) {\n    if (Array.isArray(fromContents)) {\n      common.setValueByPath(\n        toObject,\n        ['contents'],\n        t.tContents(\n          apiClient,\n          t.tContents(apiClient, fromContents).map((item) => {\n            return contentToVertex(apiClient, item);\n          }),\n        ),\n      );\n    } else {\n      common.setValueByPath(\n        toObject,\n        ['contents'],\n        t.tContents(apiClient, fromContents),\n      );\n    }\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      countTokensConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function computeTokensParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.ComputeTokensParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromContents = common.getValueByPath(fromObject, ['contents']);\n  if (fromContents != null) {\n    if (Array.isArray(fromContents)) {\n      common.setValueByPath(\n        toObject,\n        ['contents'],\n        t.tContents(\n          apiClient,\n          t.tContents(apiClient, fromContents).map((item) => {\n            return contentToVertex(apiClient, item);\n          }),\n        ),\n      );\n    } else {\n      common.setValueByPath(\n        toObject,\n        ['contents'],\n        t.tContents(apiClient, fromContents),\n      );\n    }\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function imageToVertex(\n  apiClient: ApiClient,\n  fromObject: types.Image,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGcsUri = common.getValueByPath(fromObject, ['gcsUri']);\n  if (fromGcsUri != null) {\n    common.setValueByPath(toObject, ['gcsUri'], fromGcsUri);\n  }\n\n  const fromImageBytes = common.getValueByPath(fromObject, ['imageBytes']);\n  if (fromImageBytes != null) {\n    common.setValueByPath(\n      toObject,\n      ['bytesBase64Encoded'],\n      t.tBytes(apiClient, fromImageBytes),\n    );\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function generateVideosConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosConfig,\n  parentObject: Record<string, unknown>,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromNumberOfVideos = common.getValueByPath(fromObject, [\n    'numberOfVideos',\n  ]);\n  if (parentObject !== undefined && fromNumberOfVideos != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'sampleCount'],\n      fromNumberOfVideos,\n    );\n  }\n\n  const fromOutputGcsUri = common.getValueByPath(fromObject, ['outputGcsUri']);\n  if (parentObject !== undefined && fromOutputGcsUri != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'storageUri'],\n      fromOutputGcsUri,\n    );\n  }\n\n  const fromFps = common.getValueByPath(fromObject, ['fps']);\n  if (parentObject !== undefined && fromFps != null) {\n    common.setValueByPath(parentObject, ['parameters', 'fps'], fromFps);\n  }\n\n  const fromDurationSeconds = common.getValueByPath(fromObject, [\n    'durationSeconds',\n  ]);\n  if (parentObject !== undefined && fromDurationSeconds != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'durationSeconds'],\n      fromDurationSeconds,\n    );\n  }\n\n  const fromSeed = common.getValueByPath(fromObject, ['seed']);\n  if (parentObject !== undefined && fromSeed != null) {\n    common.setValueByPath(parentObject, ['parameters', 'seed'], fromSeed);\n  }\n\n  const fromAspectRatio = common.getValueByPath(fromObject, ['aspectRatio']);\n  if (parentObject !== undefined && fromAspectRatio != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'aspectRatio'],\n      fromAspectRatio,\n    );\n  }\n\n  const fromResolution = common.getValueByPath(fromObject, ['resolution']);\n  if (parentObject !== undefined && fromResolution != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'resolution'],\n      fromResolution,\n    );\n  }\n\n  const fromPersonGeneration = common.getValueByPath(fromObject, [\n    'personGeneration',\n  ]);\n  if (parentObject !== undefined && fromPersonGeneration != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'personGeneration'],\n      fromPersonGeneration,\n    );\n  }\n\n  const fromPubsubTopic = common.getValueByPath(fromObject, ['pubsubTopic']);\n  if (parentObject !== undefined && fromPubsubTopic != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'pubsubTopic'],\n      fromPubsubTopic,\n    );\n  }\n\n  const fromNegativePrompt = common.getValueByPath(fromObject, [\n    'negativePrompt',\n  ]);\n  if (parentObject !== undefined && fromNegativePrompt != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'negativePrompt'],\n      fromNegativePrompt,\n    );\n  }\n\n  const fromEnhancePrompt = common.getValueByPath(fromObject, [\n    'enhancePrompt',\n  ]);\n  if (parentObject !== undefined && fromEnhancePrompt != null) {\n    common.setValueByPath(\n      parentObject,\n      ['parameters', 'enhancePrompt'],\n      fromEnhancePrompt,\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateVideosParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'model'],\n      t.tModel(apiClient, fromModel),\n    );\n  }\n\n  const fromPrompt = common.getValueByPath(fromObject, ['prompt']);\n  if (fromPrompt != null) {\n    common.setValueByPath(toObject, ['instances[0]', 'prompt'], fromPrompt);\n  }\n\n  const fromImage = common.getValueByPath(fromObject, ['image']);\n  if (fromImage != null) {\n    common.setValueByPath(\n      toObject,\n      ['instances[0]', 'image'],\n      imageToVertex(apiClient, fromImage),\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(\n      toObject,\n      ['config'],\n      generateVideosConfigToVertex(apiClient, fromConfig, toObject),\n    );\n  }\n\n  return toObject;\n}\n\nexport function partFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.Part,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromThought = common.getValueByPath(fromObject, ['thought']);\n  if (fromThought != null) {\n    common.setValueByPath(toObject, ['thought'], fromThought);\n  }\n\n  const fromCodeExecutionResult = common.getValueByPath(fromObject, [\n    'codeExecutionResult',\n  ]);\n  if (fromCodeExecutionResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['codeExecutionResult'],\n      fromCodeExecutionResult,\n    );\n  }\n\n  const fromExecutableCode = common.getValueByPath(fromObject, [\n    'executableCode',\n  ]);\n  if (fromExecutableCode != null) {\n    common.setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n  }\n\n  const fromFileData = common.getValueByPath(fromObject, ['fileData']);\n  if (fromFileData != null) {\n    common.setValueByPath(toObject, ['fileData'], fromFileData);\n  }\n\n  const fromFunctionCall = common.getValueByPath(fromObject, ['functionCall']);\n  if (fromFunctionCall != null) {\n    common.setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n  }\n\n  const fromFunctionResponse = common.getValueByPath(fromObject, [\n    'functionResponse',\n  ]);\n  if (fromFunctionResponse != null) {\n    common.setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n  }\n\n  const fromInlineData = common.getValueByPath(fromObject, ['inlineData']);\n  if (fromInlineData != null) {\n    common.setValueByPath(toObject, ['inlineData'], fromInlineData);\n  }\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  return toObject;\n}\n\nexport function contentFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.Content,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromParts = common.getValueByPath(fromObject, ['parts']);\n  if (fromParts != null) {\n    if (Array.isArray(fromParts)) {\n      common.setValueByPath(\n        toObject,\n        ['parts'],\n        fromParts.map((item) => {\n          return partFromMldev(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(toObject, ['parts'], fromParts);\n    }\n  }\n\n  const fromRole = common.getValueByPath(fromObject, ['role']);\n  if (fromRole != null) {\n    common.setValueByPath(toObject, ['role'], fromRole);\n  }\n\n  return toObject;\n}\n\nexport function citationMetadataFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.CitationMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromCitations = common.getValueByPath(fromObject, ['citationSources']);\n  if (fromCitations != null) {\n    common.setValueByPath(toObject, ['citations'], fromCitations);\n  }\n\n  return toObject;\n}\n\nexport function candidateFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.Candidate,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromContent = common.getValueByPath(fromObject, ['content']);\n  if (fromContent != null) {\n    common.setValueByPath(\n      toObject,\n      ['content'],\n      contentFromMldev(apiClient, fromContent),\n    );\n  }\n\n  const fromCitationMetadata = common.getValueByPath(fromObject, [\n    'citationMetadata',\n  ]);\n  if (fromCitationMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['citationMetadata'],\n      citationMetadataFromMldev(apiClient, fromCitationMetadata),\n    );\n  }\n\n  const fromTokenCount = common.getValueByPath(fromObject, ['tokenCount']);\n  if (fromTokenCount != null) {\n    common.setValueByPath(toObject, ['tokenCount'], fromTokenCount);\n  }\n\n  const fromFinishReason = common.getValueByPath(fromObject, ['finishReason']);\n  if (fromFinishReason != null) {\n    common.setValueByPath(toObject, ['finishReason'], fromFinishReason);\n  }\n\n  const fromAvgLogprobs = common.getValueByPath(fromObject, ['avgLogprobs']);\n  if (fromAvgLogprobs != null) {\n    common.setValueByPath(toObject, ['avgLogprobs'], fromAvgLogprobs);\n  }\n\n  const fromGroundingMetadata = common.getValueByPath(fromObject, [\n    'groundingMetadata',\n  ]);\n  if (fromGroundingMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['groundingMetadata'],\n      fromGroundingMetadata,\n    );\n  }\n\n  const fromIndex = common.getValueByPath(fromObject, ['index']);\n  if (fromIndex != null) {\n    common.setValueByPath(toObject, ['index'], fromIndex);\n  }\n\n  const fromLogprobsResult = common.getValueByPath(fromObject, [\n    'logprobsResult',\n  ]);\n  if (fromLogprobsResult != null) {\n    common.setValueByPath(toObject, ['logprobsResult'], fromLogprobsResult);\n  }\n\n  const fromSafetyRatings = common.getValueByPath(fromObject, [\n    'safetyRatings',\n  ]);\n  if (fromSafetyRatings != null) {\n    common.setValueByPath(toObject, ['safetyRatings'], fromSafetyRatings);\n  }\n\n  return toObject;\n}\n\nexport function generateContentResponseFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateContentResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromCandidates = common.getValueByPath(fromObject, ['candidates']);\n  if (fromCandidates != null) {\n    if (Array.isArray(fromCandidates)) {\n      common.setValueByPath(\n        toObject,\n        ['candidates'],\n        fromCandidates.map((item) => {\n          return candidateFromMldev(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(toObject, ['candidates'], fromCandidates);\n    }\n  }\n\n  const fromModelVersion = common.getValueByPath(fromObject, ['modelVersion']);\n  if (fromModelVersion != null) {\n    common.setValueByPath(toObject, ['modelVersion'], fromModelVersion);\n  }\n\n  const fromPromptFeedback = common.getValueByPath(fromObject, [\n    'promptFeedback',\n  ]);\n  if (fromPromptFeedback != null) {\n    common.setValueByPath(toObject, ['promptFeedback'], fromPromptFeedback);\n  }\n\n  const fromUsageMetadata = common.getValueByPath(fromObject, [\n    'usageMetadata',\n  ]);\n  if (fromUsageMetadata != null) {\n    common.setValueByPath(toObject, ['usageMetadata'], fromUsageMetadata);\n  }\n\n  return toObject;\n}\n\nexport function contentEmbeddingStatisticsFromMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function contentEmbeddingFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.ContentEmbedding,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromValues = common.getValueByPath(fromObject, ['values']);\n  if (fromValues != null) {\n    common.setValueByPath(toObject, ['values'], fromValues);\n  }\n\n  return toObject;\n}\n\nexport function embedContentMetadataFromMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function embedContentResponseFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.EmbedContentResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromEmbeddings = common.getValueByPath(fromObject, ['embeddings']);\n  if (fromEmbeddings != null) {\n    if (Array.isArray(fromEmbeddings)) {\n      common.setValueByPath(\n        toObject,\n        ['embeddings'],\n        fromEmbeddings.map((item) => {\n          return contentEmbeddingFromMldev(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(toObject, ['embeddings'], fromEmbeddings);\n    }\n  }\n\n  const fromMetadata = common.getValueByPath(fromObject, ['metadata']);\n  if (fromMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['metadata'],\n      embedContentMetadataFromMldev(),\n    );\n  }\n\n  return toObject;\n}\n\nexport function imageFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.Image,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromImageBytes = common.getValueByPath(fromObject, [\n    'bytesBase64Encoded',\n  ]);\n  if (fromImageBytes != null) {\n    common.setValueByPath(\n      toObject,\n      ['imageBytes'],\n      t.tBytes(apiClient, fromImageBytes),\n    );\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function safetyAttributesFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.SafetyAttributes,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromCategories = common.getValueByPath(fromObject, [\n    'safetyAttributes',\n    'categories',\n  ]);\n  if (fromCategories != null) {\n    common.setValueByPath(toObject, ['categories'], fromCategories);\n  }\n\n  const fromScores = common.getValueByPath(fromObject, [\n    'safetyAttributes',\n    'scores',\n  ]);\n  if (fromScores != null) {\n    common.setValueByPath(toObject, ['scores'], fromScores);\n  }\n\n  const fromContentType = common.getValueByPath(fromObject, ['contentType']);\n  if (fromContentType != null) {\n    common.setValueByPath(toObject, ['contentType'], fromContentType);\n  }\n\n  return toObject;\n}\n\nexport function generatedImageFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.GeneratedImage,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromImage = common.getValueByPath(fromObject, ['_self']);\n  if (fromImage != null) {\n    common.setValueByPath(\n      toObject,\n      ['image'],\n      imageFromMldev(apiClient, fromImage),\n    );\n  }\n\n  const fromRaiFilteredReason = common.getValueByPath(fromObject, [\n    'raiFilteredReason',\n  ]);\n  if (fromRaiFilteredReason != null) {\n    common.setValueByPath(\n      toObject,\n      ['raiFilteredReason'],\n      fromRaiFilteredReason,\n    );\n  }\n\n  const fromSafetyAttributes = common.getValueByPath(fromObject, ['_self']);\n  if (fromSafetyAttributes != null) {\n    common.setValueByPath(\n      toObject,\n      ['safetyAttributes'],\n      safetyAttributesFromMldev(apiClient, fromSafetyAttributes),\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateImagesResponseFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateImagesResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGeneratedImages = common.getValueByPath(fromObject, [\n    'predictions',\n  ]);\n  if (fromGeneratedImages != null) {\n    if (Array.isArray(fromGeneratedImages)) {\n      common.setValueByPath(\n        toObject,\n        ['generatedImages'],\n        fromGeneratedImages.map((item) => {\n          return generatedImageFromMldev(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(toObject, ['generatedImages'], fromGeneratedImages);\n    }\n  }\n\n  const fromPositivePromptSafetyAttributes = common.getValueByPath(fromObject, [\n    'positivePromptSafetyAttributes',\n  ]);\n  if (fromPositivePromptSafetyAttributes != null) {\n    common.setValueByPath(\n      toObject,\n      ['positivePromptSafetyAttributes'],\n      safetyAttributesFromMldev(apiClient, fromPositivePromptSafetyAttributes),\n    );\n  }\n\n  return toObject;\n}\n\nexport function endpointFromMldev(): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  return toObject;\n}\n\nexport function tunedModelInfoFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.TunedModelInfo,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromBaseModel = common.getValueByPath(fromObject, ['baseModel']);\n  if (fromBaseModel != null) {\n    common.setValueByPath(toObject, ['baseModel'], fromBaseModel);\n  }\n\n  const fromCreateTime = common.getValueByPath(fromObject, ['createTime']);\n  if (fromCreateTime != null) {\n    common.setValueByPath(toObject, ['createTime'], fromCreateTime);\n  }\n\n  const fromUpdateTime = common.getValueByPath(fromObject, ['updateTime']);\n  if (fromUpdateTime != null) {\n    common.setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n  }\n\n  return toObject;\n}\n\nexport function modelFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.Model,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromVersion = common.getValueByPath(fromObject, ['version']);\n  if (fromVersion != null) {\n    common.setValueByPath(toObject, ['version'], fromVersion);\n  }\n\n  const fromTunedModelInfo = common.getValueByPath(fromObject, ['_self']);\n  if (fromTunedModelInfo != null) {\n    common.setValueByPath(\n      toObject,\n      ['tunedModelInfo'],\n      tunedModelInfoFromMldev(apiClient, fromTunedModelInfo),\n    );\n  }\n\n  const fromInputTokenLimit = common.getValueByPath(fromObject, [\n    'inputTokenLimit',\n  ]);\n  if (fromInputTokenLimit != null) {\n    common.setValueByPath(toObject, ['inputTokenLimit'], fromInputTokenLimit);\n  }\n\n  const fromOutputTokenLimit = common.getValueByPath(fromObject, [\n    'outputTokenLimit',\n  ]);\n  if (fromOutputTokenLimit != null) {\n    common.setValueByPath(toObject, ['outputTokenLimit'], fromOutputTokenLimit);\n  }\n\n  const fromSupportedActions = common.getValueByPath(fromObject, [\n    'supportedGenerationMethods',\n  ]);\n  if (fromSupportedActions != null) {\n    common.setValueByPath(toObject, ['supportedActions'], fromSupportedActions);\n  }\n\n  return toObject;\n}\n\nexport function countTokensResponseFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.CountTokensResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTotalTokens = common.getValueByPath(fromObject, ['totalTokens']);\n  if (fromTotalTokens != null) {\n    common.setValueByPath(toObject, ['totalTokens'], fromTotalTokens);\n  }\n\n  const fromCachedContentTokenCount = common.getValueByPath(fromObject, [\n    'cachedContentTokenCount',\n  ]);\n  if (fromCachedContentTokenCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['cachedContentTokenCount'],\n      fromCachedContentTokenCount,\n    );\n  }\n\n  return toObject;\n}\n\nexport function videoFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.Video,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromUri = common.getValueByPath(fromObject, ['video', 'uri']);\n  if (fromUri != null) {\n    common.setValueByPath(toObject, ['uri'], fromUri);\n  }\n\n  const fromVideoBytes = common.getValueByPath(fromObject, [\n    'video',\n    'encodedVideo',\n  ]);\n  if (fromVideoBytes != null) {\n    common.setValueByPath(\n      toObject,\n      ['videoBytes'],\n      t.tBytes(apiClient, fromVideoBytes),\n    );\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['encoding']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function generatedVideoFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.GeneratedVideo,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideo = common.getValueByPath(fromObject, ['_self']);\n  if (fromVideo != null) {\n    common.setValueByPath(\n      toObject,\n      ['video'],\n      videoFromMldev(apiClient, fromVideo),\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateVideosResponseFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGeneratedVideos = common.getValueByPath(fromObject, [\n    'generatedSamples',\n  ]);\n  if (fromGeneratedVideos != null) {\n    if (Array.isArray(fromGeneratedVideos)) {\n      common.setValueByPath(\n        toObject,\n        ['generatedVideos'],\n        fromGeneratedVideos.map((item) => {\n          return generatedVideoFromMldev(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(toObject, ['generatedVideos'], fromGeneratedVideos);\n    }\n  }\n\n  const fromRaiMediaFilteredCount = common.getValueByPath(fromObject, [\n    'raiMediaFilteredCount',\n  ]);\n  if (fromRaiMediaFilteredCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['raiMediaFilteredCount'],\n      fromRaiMediaFilteredCount,\n    );\n  }\n\n  const fromRaiMediaFilteredReasons = common.getValueByPath(fromObject, [\n    'raiMediaFilteredReasons',\n  ]);\n  if (fromRaiMediaFilteredReasons != null) {\n    common.setValueByPath(\n      toObject,\n      ['raiMediaFilteredReasons'],\n      fromRaiMediaFilteredReasons,\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateVideosOperationFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosOperation,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromMetadata = common.getValueByPath(fromObject, ['metadata']);\n  if (fromMetadata != null) {\n    common.setValueByPath(toObject, ['metadata'], fromMetadata);\n  }\n\n  const fromDone = common.getValueByPath(fromObject, ['done']);\n  if (fromDone != null) {\n    common.setValueByPath(toObject, ['done'], fromDone);\n  }\n\n  const fromError = common.getValueByPath(fromObject, ['error']);\n  if (fromError != null) {\n    common.setValueByPath(toObject, ['error'], fromError);\n  }\n\n  const fromResponse = common.getValueByPath(fromObject, [\n    'response',\n    'generateVideoResponse',\n  ]);\n  if (fromResponse != null) {\n    common.setValueByPath(\n      toObject,\n      ['response'],\n      generateVideosResponseFromMldev(apiClient, fromResponse),\n    );\n  }\n\n  const fromResult = common.getValueByPath(fromObject, [\n    'response',\n    'generateVideoResponse',\n  ]);\n  if (fromResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['result'],\n      generateVideosResponseFromMldev(apiClient, fromResult),\n    );\n  }\n\n  return toObject;\n}\n\nexport function partFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Part,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideoMetadata = common.getValueByPath(fromObject, [\n    'videoMetadata',\n  ]);\n  if (fromVideoMetadata != null) {\n    common.setValueByPath(toObject, ['videoMetadata'], fromVideoMetadata);\n  }\n\n  const fromThought = common.getValueByPath(fromObject, ['thought']);\n  if (fromThought != null) {\n    common.setValueByPath(toObject, ['thought'], fromThought);\n  }\n\n  const fromCodeExecutionResult = common.getValueByPath(fromObject, [\n    'codeExecutionResult',\n  ]);\n  if (fromCodeExecutionResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['codeExecutionResult'],\n      fromCodeExecutionResult,\n    );\n  }\n\n  const fromExecutableCode = common.getValueByPath(fromObject, [\n    'executableCode',\n  ]);\n  if (fromExecutableCode != null) {\n    common.setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n  }\n\n  const fromFileData = common.getValueByPath(fromObject, ['fileData']);\n  if (fromFileData != null) {\n    common.setValueByPath(toObject, ['fileData'], fromFileData);\n  }\n\n  const fromFunctionCall = common.getValueByPath(fromObject, ['functionCall']);\n  if (fromFunctionCall != null) {\n    common.setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n  }\n\n  const fromFunctionResponse = common.getValueByPath(fromObject, [\n    'functionResponse',\n  ]);\n  if (fromFunctionResponse != null) {\n    common.setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n  }\n\n  const fromInlineData = common.getValueByPath(fromObject, ['inlineData']);\n  if (fromInlineData != null) {\n    common.setValueByPath(toObject, ['inlineData'], fromInlineData);\n  }\n\n  const fromText = common.getValueByPath(fromObject, ['text']);\n  if (fromText != null) {\n    common.setValueByPath(toObject, ['text'], fromText);\n  }\n\n  return toObject;\n}\n\nexport function contentFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Content,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromParts = common.getValueByPath(fromObject, ['parts']);\n  if (fromParts != null) {\n    if (Array.isArray(fromParts)) {\n      common.setValueByPath(\n        toObject,\n        ['parts'],\n        fromParts.map((item) => {\n          return partFromVertex(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(toObject, ['parts'], fromParts);\n    }\n  }\n\n  const fromRole = common.getValueByPath(fromObject, ['role']);\n  if (fromRole != null) {\n    common.setValueByPath(toObject, ['role'], fromRole);\n  }\n\n  return toObject;\n}\n\nexport function citationMetadataFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.CitationMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromCitations = common.getValueByPath(fromObject, ['citations']);\n  if (fromCitations != null) {\n    common.setValueByPath(toObject, ['citations'], fromCitations);\n  }\n\n  return toObject;\n}\n\nexport function candidateFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Candidate,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromContent = common.getValueByPath(fromObject, ['content']);\n  if (fromContent != null) {\n    common.setValueByPath(\n      toObject,\n      ['content'],\n      contentFromVertex(apiClient, fromContent),\n    );\n  }\n\n  const fromCitationMetadata = common.getValueByPath(fromObject, [\n    'citationMetadata',\n  ]);\n  if (fromCitationMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['citationMetadata'],\n      citationMetadataFromVertex(apiClient, fromCitationMetadata),\n    );\n  }\n\n  const fromFinishMessage = common.getValueByPath(fromObject, [\n    'finishMessage',\n  ]);\n  if (fromFinishMessage != null) {\n    common.setValueByPath(toObject, ['finishMessage'], fromFinishMessage);\n  }\n\n  const fromFinishReason = common.getValueByPath(fromObject, ['finishReason']);\n  if (fromFinishReason != null) {\n    common.setValueByPath(toObject, ['finishReason'], fromFinishReason);\n  }\n\n  const fromAvgLogprobs = common.getValueByPath(fromObject, ['avgLogprobs']);\n  if (fromAvgLogprobs != null) {\n    common.setValueByPath(toObject, ['avgLogprobs'], fromAvgLogprobs);\n  }\n\n  const fromGroundingMetadata = common.getValueByPath(fromObject, [\n    'groundingMetadata',\n  ]);\n  if (fromGroundingMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['groundingMetadata'],\n      fromGroundingMetadata,\n    );\n  }\n\n  const fromIndex = common.getValueByPath(fromObject, ['index']);\n  if (fromIndex != null) {\n    common.setValueByPath(toObject, ['index'], fromIndex);\n  }\n\n  const fromLogprobsResult = common.getValueByPath(fromObject, [\n    'logprobsResult',\n  ]);\n  if (fromLogprobsResult != null) {\n    common.setValueByPath(toObject, ['logprobsResult'], fromLogprobsResult);\n  }\n\n  const fromSafetyRatings = common.getValueByPath(fromObject, [\n    'safetyRatings',\n  ]);\n  if (fromSafetyRatings != null) {\n    common.setValueByPath(toObject, ['safetyRatings'], fromSafetyRatings);\n  }\n\n  return toObject;\n}\n\nexport function generateContentResponseFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateContentResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromCandidates = common.getValueByPath(fromObject, ['candidates']);\n  if (fromCandidates != null) {\n    if (Array.isArray(fromCandidates)) {\n      common.setValueByPath(\n        toObject,\n        ['candidates'],\n        fromCandidates.map((item) => {\n          return candidateFromVertex(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(toObject, ['candidates'], fromCandidates);\n    }\n  }\n\n  const fromCreateTime = common.getValueByPath(fromObject, ['createTime']);\n  if (fromCreateTime != null) {\n    common.setValueByPath(toObject, ['createTime'], fromCreateTime);\n  }\n\n  const fromResponseId = common.getValueByPath(fromObject, ['responseId']);\n  if (fromResponseId != null) {\n    common.setValueByPath(toObject, ['responseId'], fromResponseId);\n  }\n\n  const fromModelVersion = common.getValueByPath(fromObject, ['modelVersion']);\n  if (fromModelVersion != null) {\n    common.setValueByPath(toObject, ['modelVersion'], fromModelVersion);\n  }\n\n  const fromPromptFeedback = common.getValueByPath(fromObject, [\n    'promptFeedback',\n  ]);\n  if (fromPromptFeedback != null) {\n    common.setValueByPath(toObject, ['promptFeedback'], fromPromptFeedback);\n  }\n\n  const fromUsageMetadata = common.getValueByPath(fromObject, [\n    'usageMetadata',\n  ]);\n  if (fromUsageMetadata != null) {\n    common.setValueByPath(toObject, ['usageMetadata'], fromUsageMetadata);\n  }\n\n  return toObject;\n}\n\nexport function contentEmbeddingStatisticsFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.ContentEmbeddingStatistics,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTruncated = common.getValueByPath(fromObject, ['truncated']);\n  if (fromTruncated != null) {\n    common.setValueByPath(toObject, ['truncated'], fromTruncated);\n  }\n\n  const fromTokenCount = common.getValueByPath(fromObject, ['token_count']);\n  if (fromTokenCount != null) {\n    common.setValueByPath(toObject, ['tokenCount'], fromTokenCount);\n  }\n\n  return toObject;\n}\n\nexport function contentEmbeddingFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.ContentEmbedding,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromValues = common.getValueByPath(fromObject, ['values']);\n  if (fromValues != null) {\n    common.setValueByPath(toObject, ['values'], fromValues);\n  }\n\n  const fromStatistics = common.getValueByPath(fromObject, ['statistics']);\n  if (fromStatistics != null) {\n    common.setValueByPath(\n      toObject,\n      ['statistics'],\n      contentEmbeddingStatisticsFromVertex(apiClient, fromStatistics),\n    );\n  }\n\n  return toObject;\n}\n\nexport function embedContentMetadataFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.EmbedContentMetadata,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromBillableCharacterCount = common.getValueByPath(fromObject, [\n    'billableCharacterCount',\n  ]);\n  if (fromBillableCharacterCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['billableCharacterCount'],\n      fromBillableCharacterCount,\n    );\n  }\n\n  return toObject;\n}\n\nexport function embedContentResponseFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.EmbedContentResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromEmbeddings = common.getValueByPath(fromObject, [\n    'predictions[]',\n    'embeddings',\n  ]);\n  if (fromEmbeddings != null) {\n    if (Array.isArray(fromEmbeddings)) {\n      common.setValueByPath(\n        toObject,\n        ['embeddings'],\n        fromEmbeddings.map((item) => {\n          return contentEmbeddingFromVertex(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(toObject, ['embeddings'], fromEmbeddings);\n    }\n  }\n\n  const fromMetadata = common.getValueByPath(fromObject, ['metadata']);\n  if (fromMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['metadata'],\n      embedContentMetadataFromVertex(apiClient, fromMetadata),\n    );\n  }\n\n  return toObject;\n}\n\nexport function imageFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Image,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGcsUri = common.getValueByPath(fromObject, ['gcsUri']);\n  if (fromGcsUri != null) {\n    common.setValueByPath(toObject, ['gcsUri'], fromGcsUri);\n  }\n\n  const fromImageBytes = common.getValueByPath(fromObject, [\n    'bytesBase64Encoded',\n  ]);\n  if (fromImageBytes != null) {\n    common.setValueByPath(\n      toObject,\n      ['imageBytes'],\n      t.tBytes(apiClient, fromImageBytes),\n    );\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function safetyAttributesFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.SafetyAttributes,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromCategories = common.getValueByPath(fromObject, [\n    'safetyAttributes',\n    'categories',\n  ]);\n  if (fromCategories != null) {\n    common.setValueByPath(toObject, ['categories'], fromCategories);\n  }\n\n  const fromScores = common.getValueByPath(fromObject, [\n    'safetyAttributes',\n    'scores',\n  ]);\n  if (fromScores != null) {\n    common.setValueByPath(toObject, ['scores'], fromScores);\n  }\n\n  const fromContentType = common.getValueByPath(fromObject, ['contentType']);\n  if (fromContentType != null) {\n    common.setValueByPath(toObject, ['contentType'], fromContentType);\n  }\n\n  return toObject;\n}\n\nexport function generatedImageFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.GeneratedImage,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromImage = common.getValueByPath(fromObject, ['_self']);\n  if (fromImage != null) {\n    common.setValueByPath(\n      toObject,\n      ['image'],\n      imageFromVertex(apiClient, fromImage),\n    );\n  }\n\n  const fromRaiFilteredReason = common.getValueByPath(fromObject, [\n    'raiFilteredReason',\n  ]);\n  if (fromRaiFilteredReason != null) {\n    common.setValueByPath(\n      toObject,\n      ['raiFilteredReason'],\n      fromRaiFilteredReason,\n    );\n  }\n\n  const fromSafetyAttributes = common.getValueByPath(fromObject, ['_self']);\n  if (fromSafetyAttributes != null) {\n    common.setValueByPath(\n      toObject,\n      ['safetyAttributes'],\n      safetyAttributesFromVertex(apiClient, fromSafetyAttributes),\n    );\n  }\n\n  const fromEnhancedPrompt = common.getValueByPath(fromObject, ['prompt']);\n  if (fromEnhancedPrompt != null) {\n    common.setValueByPath(toObject, ['enhancedPrompt'], fromEnhancedPrompt);\n  }\n\n  return toObject;\n}\n\nexport function generateImagesResponseFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateImagesResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGeneratedImages = common.getValueByPath(fromObject, [\n    'predictions',\n  ]);\n  if (fromGeneratedImages != null) {\n    if (Array.isArray(fromGeneratedImages)) {\n      common.setValueByPath(\n        toObject,\n        ['generatedImages'],\n        fromGeneratedImages.map((item) => {\n          return generatedImageFromVertex(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(toObject, ['generatedImages'], fromGeneratedImages);\n    }\n  }\n\n  const fromPositivePromptSafetyAttributes = common.getValueByPath(fromObject, [\n    'positivePromptSafetyAttributes',\n  ]);\n  if (fromPositivePromptSafetyAttributes != null) {\n    common.setValueByPath(\n      toObject,\n      ['positivePromptSafetyAttributes'],\n      safetyAttributesFromVertex(apiClient, fromPositivePromptSafetyAttributes),\n    );\n  }\n\n  return toObject;\n}\n\nexport function endpointFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Endpoint,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['endpoint']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromDeployedModelId = common.getValueByPath(fromObject, [\n    'deployedModelId',\n  ]);\n  if (fromDeployedModelId != null) {\n    common.setValueByPath(toObject, ['deployedModelId'], fromDeployedModelId);\n  }\n\n  return toObject;\n}\n\nexport function tunedModelInfoFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.TunedModelInfo,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromBaseModel = common.getValueByPath(fromObject, [\n    'labels',\n    'google-vertex-llm-tuning-base-model-id',\n  ]);\n  if (fromBaseModel != null) {\n    common.setValueByPath(toObject, ['baseModel'], fromBaseModel);\n  }\n\n  const fromCreateTime = common.getValueByPath(fromObject, ['createTime']);\n  if (fromCreateTime != null) {\n    common.setValueByPath(toObject, ['createTime'], fromCreateTime);\n  }\n\n  const fromUpdateTime = common.getValueByPath(fromObject, ['updateTime']);\n  if (fromUpdateTime != null) {\n    common.setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n  }\n\n  return toObject;\n}\n\nexport function modelFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Model,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromDisplayName = common.getValueByPath(fromObject, ['displayName']);\n  if (fromDisplayName != null) {\n    common.setValueByPath(toObject, ['displayName'], fromDisplayName);\n  }\n\n  const fromDescription = common.getValueByPath(fromObject, ['description']);\n  if (fromDescription != null) {\n    common.setValueByPath(toObject, ['description'], fromDescription);\n  }\n\n  const fromVersion = common.getValueByPath(fromObject, ['versionId']);\n  if (fromVersion != null) {\n    common.setValueByPath(toObject, ['version'], fromVersion);\n  }\n\n  const fromEndpoints = common.getValueByPath(fromObject, ['deployedModels']);\n  if (fromEndpoints != null) {\n    if (Array.isArray(fromEndpoints)) {\n      common.setValueByPath(\n        toObject,\n        ['endpoints'],\n        fromEndpoints.map((item) => {\n          return endpointFromVertex(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(toObject, ['endpoints'], fromEndpoints);\n    }\n  }\n\n  const fromLabels = common.getValueByPath(fromObject, ['labels']);\n  if (fromLabels != null) {\n    common.setValueByPath(toObject, ['labels'], fromLabels);\n  }\n\n  const fromTunedModelInfo = common.getValueByPath(fromObject, ['_self']);\n  if (fromTunedModelInfo != null) {\n    common.setValueByPath(\n      toObject,\n      ['tunedModelInfo'],\n      tunedModelInfoFromVertex(apiClient, fromTunedModelInfo),\n    );\n  }\n\n  return toObject;\n}\n\nexport function countTokensResponseFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.CountTokensResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTotalTokens = common.getValueByPath(fromObject, ['totalTokens']);\n  if (fromTotalTokens != null) {\n    common.setValueByPath(toObject, ['totalTokens'], fromTotalTokens);\n  }\n\n  return toObject;\n}\n\nexport function computeTokensResponseFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.ComputeTokensResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTokensInfo = common.getValueByPath(fromObject, ['tokensInfo']);\n  if (fromTokensInfo != null) {\n    common.setValueByPath(toObject, ['tokensInfo'], fromTokensInfo);\n  }\n\n  return toObject;\n}\n\nexport function videoFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Video,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromUri = common.getValueByPath(fromObject, ['gcsUri']);\n  if (fromUri != null) {\n    common.setValueByPath(toObject, ['uri'], fromUri);\n  }\n\n  const fromVideoBytes = common.getValueByPath(fromObject, [\n    'bytesBase64Encoded',\n  ]);\n  if (fromVideoBytes != null) {\n    common.setValueByPath(\n      toObject,\n      ['videoBytes'],\n      t.tBytes(apiClient, fromVideoBytes),\n    );\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function generatedVideoFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.GeneratedVideo,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideo = common.getValueByPath(fromObject, ['_self']);\n  if (fromVideo != null) {\n    common.setValueByPath(\n      toObject,\n      ['video'],\n      videoFromVertex(apiClient, fromVideo),\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateVideosResponseFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGeneratedVideos = common.getValueByPath(fromObject, ['videos']);\n  if (fromGeneratedVideos != null) {\n    if (Array.isArray(fromGeneratedVideos)) {\n      common.setValueByPath(\n        toObject,\n        ['generatedVideos'],\n        fromGeneratedVideos.map((item) => {\n          return generatedVideoFromVertex(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(toObject, ['generatedVideos'], fromGeneratedVideos);\n    }\n  }\n\n  const fromRaiMediaFilteredCount = common.getValueByPath(fromObject, [\n    'raiMediaFilteredCount',\n  ]);\n  if (fromRaiMediaFilteredCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['raiMediaFilteredCount'],\n      fromRaiMediaFilteredCount,\n    );\n  }\n\n  const fromRaiMediaFilteredReasons = common.getValueByPath(fromObject, [\n    'raiMediaFilteredReasons',\n  ]);\n  if (fromRaiMediaFilteredReasons != null) {\n    common.setValueByPath(\n      toObject,\n      ['raiMediaFilteredReasons'],\n      fromRaiMediaFilteredReasons,\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateVideosOperationFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosOperation,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromMetadata = common.getValueByPath(fromObject, ['metadata']);\n  if (fromMetadata != null) {\n    common.setValueByPath(toObject, ['metadata'], fromMetadata);\n  }\n\n  const fromDone = common.getValueByPath(fromObject, ['done']);\n  if (fromDone != null) {\n    common.setValueByPath(toObject, ['done'], fromDone);\n  }\n\n  const fromError = common.getValueByPath(fromObject, ['error']);\n  if (fromError != null) {\n    common.setValueByPath(toObject, ['error'], fromError);\n  }\n\n  const fromResponse = common.getValueByPath(fromObject, ['response']);\n  if (fromResponse != null) {\n    common.setValueByPath(\n      toObject,\n      ['response'],\n      generateVideosResponseFromVertex(apiClient, fromResponse),\n    );\n  }\n\n  const fromResult = common.getValueByPath(fromObject, ['response']);\n  if (fromResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['result'],\n      generateVideosResponseFromVertex(apiClient, fromResult),\n    );\n  }\n\n  return toObject;\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ApiClient} from '../_api_client';\nimport * as common from '../_common';\nimport * as types from '../types';\nimport {\n  contentFromMldev,\n  contentFromVertex,\n  contentToMldev,\n  contentToVertex,\n  toolToMldev,\n  toolToVertex,\n} from './_models_converters';\n\n/**\n * Converters for live client.\n */\n\nexport function liveConnectParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveConnectParameters,\n): types.LiveClientMessage {\n  const toObject: Record<string, unknown> = {};\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig !== undefined && fromConfig !== null) {\n    common.setValueByPath(\n      toObject,\n      ['setup'],\n      liveConnectConfigToMldev(apiClient, fromConfig),\n    );\n  }\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel !== undefined) {\n    common.setValueByPath(toObject, ['setup', 'model'], fromModel);\n  }\n\n  return toObject;\n}\n\nexport function liveConnectParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveConnectParameters,\n): types.LiveClientMessage {\n  const toObject: Record<string, unknown> = {};\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig !== undefined && fromConfig !== null) {\n    common.setValueByPath(\n      toObject,\n      ['setup'],\n      liveConnectConfigToVertex(apiClient, fromConfig),\n    );\n  }\n\n  const fromModel = common.getValueByPath(fromObject, ['model']);\n  if (fromModel !== undefined) {\n    common.setValueByPath(toObject, ['setup', 'model'], fromModel);\n  }\n\n  return toObject;\n}\n\nexport function liveServerMessageFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveServerMessage,\n): types.LiveServerMessage {\n  const toObject: Record<string, unknown> = {};\n\n  const fromSetupComplete = common.getValueByPath(fromObject, [\n    'setupComplete',\n  ]);\n  if (fromSetupComplete !== undefined) {\n    common.setValueByPath(toObject, ['setupComplete'], fromSetupComplete);\n  }\n\n  const fromServerContent = common.getValueByPath(fromObject, [\n    'serverContent',\n  ]);\n  if (fromServerContent !== undefined && fromServerContent !== null) {\n    common.setValueByPath(\n      toObject,\n      ['serverContent'],\n      liveServerContentFromMldev(apiClient, fromServerContent),\n    );\n  }\n\n  const fromToolCall = common.getValueByPath(fromObject, ['toolCall']);\n  if (fromToolCall !== undefined && fromToolCall !== null) {\n    common.setValueByPath(\n      toObject,\n      ['toolCall'],\n      liveServerToolCallFromMldev(apiClient, fromToolCall),\n    );\n  }\n\n  const fromToolCallCancellation = common.getValueByPath(fromObject, [\n    'toolCallCancellation',\n  ]);\n  if (\n    fromToolCallCancellation !== undefined &&\n    fromToolCallCancellation !== null\n  ) {\n    common.setValueByPath(\n      toObject,\n      ['toolCallCancellation'],\n      liveServerToolCallCancellationFromMldev(\n        apiClient,\n        fromToolCallCancellation,\n      ),\n    );\n  }\n\n  const fromUsageMetadata = common.getValueByPath(fromObject, [\n    'usageMetadata',\n  ]);\n  if (fromUsageMetadata != undefined && fromUsageMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['usageMetadata'],\n      usageMetadataFromMldev(apiClient, fromUsageMetadata),\n    );\n  }\n\n  const fromGoAway = common.getValueByPath(fromObject, ['goAway']);\n  if (fromGoAway !== undefined && fromGoAway !== null) {\n    common.setValueByPath(\n      toObject,\n      ['goAway'],\n      liveServerGoAwayFromMldev(fromGoAway),\n    );\n  }\n\n  const fromSessionResumptionUpdate = common.getValueByPath(fromObject, [\n    'sessionResumptionUpdate',\n  ]);\n  if (\n    fromSessionResumptionUpdate !== undefined &&\n    fromSessionResumptionUpdate !== null\n  ) {\n    common.setValueByPath(\n      toObject,\n      ['sessionResumptionUpdate'],\n      liveServerSessionResumptionUpdateFromMldev(fromSessionResumptionUpdate),\n    );\n  }\n\n  return toObject;\n}\n\nexport function liveServerMessageFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveServerMessage,\n): types.LiveServerMessage {\n  const toObject: Record<string, unknown> = {};\n\n  const fromSetupComplete = common.getValueByPath(fromObject, [\n    'setupComplete',\n  ]);\n  if (fromSetupComplete !== undefined) {\n    common.setValueByPath(toObject, ['setupComplete'], fromSetupComplete);\n  }\n\n  const fromServerContent = common.getValueByPath(fromObject, [\n    'serverContent',\n  ]);\n  if (fromServerContent !== undefined && fromServerContent !== null) {\n    common.setValueByPath(\n      toObject,\n      ['serverContent'],\n      liveServerContentFromVertex(apiClient, fromServerContent),\n    );\n  }\n\n  const fromToolCall = common.getValueByPath(fromObject, ['toolCall']);\n  if (fromToolCall !== undefined && fromToolCall !== null) {\n    common.setValueByPath(\n      toObject,\n      ['toolCall'],\n      liveServerToolCallFromVertex(apiClient, fromToolCall),\n    );\n  }\n\n  const fromToolCallCancellation = common.getValueByPath(fromObject, [\n    'toolCallCancellation',\n  ]);\n  if (\n    fromToolCallCancellation !== undefined &&\n    fromToolCallCancellation !== null\n  ) {\n    common.setValueByPath(\n      toObject,\n      ['toolCallCancellation'],\n      liveServerToolCallCancellationFromVertex(\n        apiClient,\n        fromToolCallCancellation,\n      ),\n    );\n  }\n\n  const fromGoAway = common.getValueByPath(fromObject, ['goAway']);\n  if (fromGoAway !== undefined && fromGoAway !== null) {\n    common.setValueByPath(\n      toObject,\n      ['goAway'],\n      liveServerGoAwayFromVertex(fromGoAway),\n    );\n  }\n\n  const fromSessionResumptionUpdate = common.getValueByPath(fromObject, [\n    'sessionResumptionUpdate',\n  ]);\n  if (\n    fromSessionResumptionUpdate !== undefined &&\n    fromSessionResumptionUpdate !== null\n  ) {\n    common.setValueByPath(\n      toObject,\n      ['sessionResumptionUpdate'],\n      liveServerSessionResumptionUpdateFromVertex(fromSessionResumptionUpdate),\n    );\n  }\n\n  const fromUsageMetadata = common.getValueByPath(fromObject, [\n    'usageMetadata',\n  ]);\n  if (fromUsageMetadata != undefined && fromUsageMetadata != null) {\n    common.setValueByPath(\n      toObject,\n      ['usageMetadata'],\n      usageMetadataFromVertex(apiClient, fromUsageMetadata),\n    );\n  }\n\n  return toObject;\n}\n\nfunction slidingWindowToMldev(\n  fromObject: types.SlidingWindow,\n): types.SlidingWindow {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTargetTokens = common.getValueByPath(fromObject, ['targetTokens']);\n  if (fromTargetTokens !== undefined && fromTargetTokens !== null) {\n    common.setValueByPath(toObject, ['targetTokens'], fromTargetTokens);\n  }\n\n  return toObject;\n}\n\nfunction slidingWindowToVertex(\n  fromObject: types.SlidingWindow,\n): types.SlidingWindow {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTargetTokens = common.getValueByPath(fromObject, ['targetTokens']);\n  if (fromTargetTokens !== undefined && fromTargetTokens !== null) {\n    common.setValueByPath(toObject, ['targetTokens'], fromTargetTokens);\n  }\n\n  return toObject;\n}\n\nfunction contextWindowCompressionToMldev(\n  fromObject: types.ContextWindowCompressionConfig,\n): types.ContextWindowCompressionConfig {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTriggerTokens = common.getValueByPath(fromObject, [\n    'triggerTokens',\n  ]);\n  if (fromTriggerTokens !== undefined && fromTriggerTokens !== null) {\n    common.setValueByPath(toObject, ['triggerTokens'], fromTriggerTokens);\n  }\n\n  const fromSlidingWindow = common.getValueByPath(fromObject, [\n    'slidingWindow',\n  ]);\n  if (fromSlidingWindow !== undefined && fromSlidingWindow !== null) {\n    common.setValueByPath(\n      toObject,\n      ['slidingWindow'],\n      slidingWindowToMldev(fromSlidingWindow),\n    );\n  }\n\n  return toObject;\n}\n\nfunction contextWindowCompressionToVertex(\n  fromObject: types.ContextWindowCompressionConfig,\n): types.ContextWindowCompressionConfig {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTriggerTokens = common.getValueByPath(fromObject, [\n    'triggerTokens',\n  ]);\n  if (fromTriggerTokens !== undefined && fromTriggerTokens !== null) {\n    common.setValueByPath(toObject, ['triggerTokens'], fromTriggerTokens);\n  }\n\n  const fromSlidingWindow = common.getValueByPath(fromObject, [\n    'slidingWindow',\n  ]);\n  if (fromSlidingWindow !== undefined && fromSlidingWindow !== null) {\n    common.setValueByPath(\n      toObject,\n      ['slidingWindow'],\n      slidingWindowToVertex(fromSlidingWindow),\n    );\n  }\n\n  return toObject;\n}\n\nfunction automaticActivityDetectionToMldev(\n  fromObject: types.AutomaticActivityDetection,\n): types.AutomaticActivityDetection {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDisabled = common.getValueByPath(fromObject, ['disabled']);\n  if (fromDisabled !== undefined && fromDisabled !== null) {\n    common.setValueByPath(toObject, ['disabled'], fromDisabled);\n  }\n\n  const fromStartOfSpeechSensitivity = common.getValueByPath(fromObject, [\n    'startOfSpeechSensitivity',\n  ]);\n  if (\n    fromStartOfSpeechSensitivity !== undefined &&\n    fromStartOfSpeechSensitivity !== null\n  ) {\n    common.setValueByPath(\n      toObject,\n      ['startOfSpeechSensitivity'],\n      fromStartOfSpeechSensitivity,\n    );\n  }\n\n  const fromEndOfSpeechSensitivity = common.getValueByPath(fromObject, [\n    'endOfSpeechSensitivity',\n  ]);\n  if (\n    fromEndOfSpeechSensitivity !== undefined &&\n    fromEndOfSpeechSensitivity !== null\n  ) {\n    common.setValueByPath(\n      toObject,\n      ['endOfSpeechSensitivity'],\n      fromEndOfSpeechSensitivity,\n    );\n  }\n\n  const fromPrefixPaddingMs = common.getValueByPath(fromObject, [\n    'prefixPaddingMs',\n  ]);\n  if (fromPrefixPaddingMs !== undefined && fromPrefixPaddingMs !== null) {\n    common.setValueByPath(toObject, ['prefixPaddingMs'], fromPrefixPaddingMs);\n  }\n\n  const fromSilenceDurationMs = common.getValueByPath(fromObject, [\n    'silenceDurationMs',\n  ]);\n  if (fromSilenceDurationMs !== undefined && fromSilenceDurationMs !== null) {\n    common.setValueByPath(\n      toObject,\n      ['silenceDurationMs'],\n      fromSilenceDurationMs,\n    );\n  }\n\n  return toObject;\n}\n\nfunction automaticActivityDetectionToVertex(\n  fromObject: types.AutomaticActivityDetection,\n): types.AutomaticActivityDetection {\n  const toObject: Record<string, unknown> = {};\n\n  const fromDisabled = common.getValueByPath(fromObject, ['disabled']);\n  if (fromDisabled !== undefined && fromDisabled !== null) {\n    common.setValueByPath(toObject, ['disabled'], fromDisabled);\n  }\n\n  const fromStartOfSpeechSensitivity = common.getValueByPath(fromObject, [\n    'startOfSpeechSensitivity',\n  ]);\n  if (\n    fromStartOfSpeechSensitivity !== undefined &&\n    fromStartOfSpeechSensitivity !== null\n  ) {\n    common.setValueByPath(\n      toObject,\n      ['startOfSpeechSensitivity'],\n      fromStartOfSpeechSensitivity,\n    );\n  }\n\n  const fromEndOfSpeechSensitivity = common.getValueByPath(fromObject, [\n    'endOfSpeechSensitivity',\n  ]);\n  if (\n    fromEndOfSpeechSensitivity !== undefined &&\n    fromEndOfSpeechSensitivity !== null\n  ) {\n    common.setValueByPath(\n      toObject,\n      ['endOfSpeechSensitivity'],\n      fromEndOfSpeechSensitivity,\n    );\n  }\n\n  const fromPrefixPaddingMs = common.getValueByPath(fromObject, [\n    'prefixPaddingMs',\n  ]);\n  if (fromPrefixPaddingMs !== undefined && fromPrefixPaddingMs !== null) {\n    common.setValueByPath(toObject, ['prefixPaddingMs'], fromPrefixPaddingMs);\n  }\n\n  const fromSilenceDurationMs = common.getValueByPath(fromObject, [\n    'silenceDurationMs',\n  ]);\n  if (fromSilenceDurationMs !== undefined && fromSilenceDurationMs !== null) {\n    common.setValueByPath(\n      toObject,\n      ['silenceDurationMs'],\n      fromSilenceDurationMs,\n    );\n  }\n\n  return toObject;\n}\n\nfunction realtimeInputConfigToMldev(\n  fromObject: types.RealtimeInputConfig,\n): types.RealtimeInputConfig {\n  const toObject: Record<string, unknown> = {};\n\n  const fromAutomaticActivityDetection = common.getValueByPath(fromObject, [\n    'automaticActivityDetection',\n  ]);\n  if (\n    fromAutomaticActivityDetection !== undefined &&\n    fromAutomaticActivityDetection !== null\n  ) {\n    common.setValueByPath(\n      toObject,\n      ['automaticActivityDetection'],\n      automaticActivityDetectionToMldev(fromAutomaticActivityDetection),\n    );\n  }\n\n  const fromActivityHandling = common.getValueByPath(fromObject, [\n    'activityHandling',\n  ]);\n  if (fromActivityHandling !== undefined && fromActivityHandling !== null) {\n    common.setValueByPath(toObject, ['activityHandling'], fromActivityHandling);\n  }\n\n  const fromTurnCoverage = common.getValueByPath(fromObject, ['turnCoverage']);\n  if (fromTurnCoverage !== undefined && fromTurnCoverage !== null) {\n    common.setValueByPath(toObject, ['turnCoverage'], fromTurnCoverage);\n  }\n\n  return toObject;\n}\n\nfunction realtimeInputConfigToVertex(\n  fromObject: types.RealtimeInputConfig,\n): types.RealtimeInputConfig {\n  const toObject: Record<string, unknown> = {};\n\n  const fromAutomaticActivityDetection = common.getValueByPath(fromObject, [\n    'automaticActivityDetection',\n  ]);\n  if (\n    fromAutomaticActivityDetection !== undefined &&\n    fromAutomaticActivityDetection !== null\n  ) {\n    common.setValueByPath(\n      toObject,\n      ['automaticActivityDetection'],\n      automaticActivityDetectionToVertex(fromAutomaticActivityDetection),\n    );\n  }\n\n  const fromActivityHandling = common.getValueByPath(fromObject, [\n    'activityHandling',\n  ]);\n  if (fromActivityHandling !== undefined && fromActivityHandling !== null) {\n    common.setValueByPath(toObject, ['activityHandling'], fromActivityHandling);\n  }\n\n  const fromTurnCoverage = common.getValueByPath(fromObject, ['turnCoverage']);\n  if (fromTurnCoverage !== undefined && fromTurnCoverage !== null) {\n    common.setValueByPath(toObject, ['turnCoverage'], fromTurnCoverage);\n  }\n\n  return toObject;\n}\n\nfunction liveConnectConfigToMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveConnectConfig,\n): types.LiveClientSetup {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGenerationConfig = common.getValueByPath(fromObject, [\n    'generationConfig',\n  ]);\n  if (fromGenerationConfig !== undefined) {\n    common.setValueByPath(toObject, ['generationConfig'], fromGenerationConfig);\n  }\n\n  const fromResponseModalities = common.getValueByPath(fromObject, [\n    'responseModalities',\n  ]);\n  if (fromResponseModalities !== undefined) {\n    common.setValueByPath(\n      toObject,\n      ['generationConfig', 'responseModalities'],\n      fromResponseModalities,\n    );\n  }\n\n  const fromSpeechConfig = common.getValueByPath(fromObject, ['speechConfig']);\n  if (fromSpeechConfig !== undefined) {\n    common.setValueByPath(\n      toObject,\n      ['generationConfig', 'speechConfig'],\n      fromSpeechConfig,\n    );\n  }\n\n  const fromSystemInstruction = common.getValueByPath(fromObject, [\n    'systemInstruction',\n  ]);\n  if (fromSystemInstruction !== undefined && fromSystemInstruction !== null) {\n    common.setValueByPath(\n      toObject,\n      ['systemInstruction'],\n      contentToMldev(apiClient, fromSystemInstruction),\n    );\n  }\n\n  const fromTools = common.getValueByPath(fromObject, ['tools']);\n  if (\n    fromTools !== undefined &&\n    fromTools !== null &&\n    Array.isArray(fromTools)\n  ) {\n    common.setValueByPath(\n      toObject,\n      ['tools'],\n      fromTools.map((item: types.Tool) => {\n        return toolToMldev(apiClient, item);\n      }),\n    );\n  }\n\n  const fromSessionResumption = common.getValueByPath(fromObject, [\n    'sessionResumption',\n  ]);\n  if (fromSessionResumption !== undefined && fromSessionResumption !== null) {\n    common.setValueByPath(\n      toObject,\n      ['sessionResumption'],\n      liveClientSessionResumptionConfigToMldev(fromSessionResumption),\n    );\n  }\n\n  const fromContextWindowCompression = common.getValueByPath(fromObject, [\n    'contextWindowCompression',\n  ]);\n  if (\n    fromContextWindowCompression !== undefined &&\n    fromContextWindowCompression !== null\n  ) {\n    common.setValueByPath(\n      toObject,\n      ['contextWindowCompression'],\n      contextWindowCompressionToMldev(fromContextWindowCompression),\n    );\n  }\n\n  const fromRealtimeInputConfig = common.getValueByPath(fromObject, [\n    'realtimeInputConfig',\n  ]);\n  if (\n    fromRealtimeInputConfig !== undefined &&\n    fromRealtimeInputConfig !== null\n  ) {\n    common.setValueByPath(\n      toObject,\n      ['realtimeInputConfig'],\n      realtimeInputConfigToMldev(fromRealtimeInputConfig),\n    );\n  }\n\n  return toObject;\n}\n\nfunction liveConnectConfigToVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveConnectConfig,\n): types.LiveClientSetup {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGenerationConfig = common.getValueByPath(fromObject, [\n    'generationConfig',\n  ]);\n  if (fromGenerationConfig !== undefined) {\n    common.setValueByPath(toObject, ['generationConfig'], fromGenerationConfig);\n  }\n\n  const fromResponseModalities = common.getValueByPath(fromObject, [\n    'responseModalities',\n  ]);\n  if (fromResponseModalities !== undefined) {\n    common.setValueByPath(\n      toObject,\n      ['generationConfig', 'responseModalities'],\n      fromResponseModalities,\n    );\n  } else {\n    // Set default to AUDIO to align with MLDev API.\n    common.setValueByPath(\n      toObject,\n      ['generationConfig', 'responseModalities'],\n      ['AUDIO'],\n    );\n  }\n\n  const fromSpeechConfig = common.getValueByPath(fromObject, ['speechConfig']);\n  if (fromSpeechConfig !== undefined) {\n    common.setValueByPath(\n      toObject,\n      ['generationConfig', 'speechConfig'],\n      fromSpeechConfig,\n    );\n  }\n\n  const fromSystemInstruction = common.getValueByPath(fromObject, [\n    'systemInstruction',\n  ]);\n  if (fromSystemInstruction !== undefined && fromSystemInstruction !== null) {\n    common.setValueByPath(\n      toObject,\n      ['systemInstruction'],\n      contentToVertex(apiClient, fromSystemInstruction),\n    );\n  }\n\n  const fromTools = common.getValueByPath(fromObject, ['tools']);\n  if (\n    fromTools !== undefined &&\n    fromTools !== null &&\n    Array.isArray(fromTools)\n  ) {\n    common.setValueByPath(\n      toObject,\n      ['tools'],\n      fromTools.map((item: types.Tool) => {\n        return toolToVertex(apiClient, item);\n      }),\n    );\n  }\n\n  const fromSessionResumption = common.getValueByPath(fromObject, [\n    'sessionResumption',\n  ]);\n  if (fromSessionResumption !== undefined && fromSessionResumption !== null) {\n    common.setValueByPath(\n      toObject,\n      ['sessionResumption'],\n      liveClientSessionResumptionConfigToVertex(fromSessionResumption),\n    );\n  }\n\n  const fromContextWindowCompression = common.getValueByPath(fromObject, [\n    'contextWindowCompression',\n  ]);\n  if (\n    fromContextWindowCompression !== undefined &&\n    fromContextWindowCompression !== null\n  ) {\n    common.setValueByPath(\n      toObject,\n      ['contextWindowCompression'],\n      contextWindowCompressionToVertex(fromContextWindowCompression),\n    );\n  }\n\n  const fromRealtimeInputConfig = common.getValueByPath(fromObject, [\n    'realtimeInputConfig',\n  ]);\n  if (\n    fromRealtimeInputConfig !== undefined &&\n    fromRealtimeInputConfig !== null\n  ) {\n    common.setValueByPath(\n      toObject,\n      ['realtimeInputConfig'],\n      realtimeInputConfigToVertex(fromRealtimeInputConfig),\n    );\n  }\n\n  return toObject;\n}\n\nfunction liveServerContentFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveServerContent,\n): types.LiveServerContent {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModelTurn = common.getValueByPath(fromObject, ['modelTurn']);\n  if (fromModelTurn !== undefined && fromModelTurn !== null) {\n    common.setValueByPath(\n      toObject,\n      ['modelTurn'],\n      contentFromMldev(apiClient, fromModelTurn),\n    );\n  }\n\n  const fromTurnComplete = common.getValueByPath(fromObject, ['turnComplete']);\n  if (fromTurnComplete !== undefined) {\n    common.setValueByPath(toObject, ['turnComplete'], fromTurnComplete);\n  }\n\n  const fromInterrupted = common.getValueByPath(fromObject, ['interrupted']);\n  if (fromInterrupted !== undefined) {\n    common.setValueByPath(toObject, ['interrupted'], fromInterrupted);\n  }\n\n  const fromGenerationComplete = common.getValueByPath(fromObject, [\n    'generationComplete',\n  ]);\n  if (fromGenerationComplete != null) {\n    common.setValueByPath(\n      toObject,\n      ['generationComplete'],\n      fromGenerationComplete,\n    );\n  }\n\n  return toObject;\n}\n\nfunction liveServerContentFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveServerContent,\n): types.LiveServerContent {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModelTurn = common.getValueByPath(fromObject, ['modelTurn']);\n  if (fromModelTurn !== undefined && fromModelTurn !== null) {\n    common.setValueByPath(\n      toObject,\n      ['modelTurn'],\n      contentFromVertex(apiClient, fromModelTurn),\n    );\n  }\n\n  const fromTurnComplete = common.getValueByPath(fromObject, ['turnComplete']);\n  if (fromTurnComplete !== undefined) {\n    common.setValueByPath(toObject, ['turnComplete'], fromTurnComplete);\n  }\n\n  const fromInterrupted = common.getValueByPath(fromObject, ['interrupted']);\n  if (fromInterrupted !== undefined) {\n    common.setValueByPath(toObject, ['interrupted'], fromInterrupted);\n  }\n\n  const fromGenerationComplete = common.getValueByPath(fromObject, [\n    'generationComplete',\n  ]);\n  if (fromGenerationComplete != null) {\n    common.setValueByPath(\n      toObject,\n      ['generationComplete'],\n      fromGenerationComplete,\n    );\n  }\n  return toObject;\n}\n\nfunction functionCallFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.FunctionCall,\n): types.FunctionCall {\n  const toObject: Record<string, unknown> = {};\n\n  const fromId = common.getValueByPath(fromObject, ['id']);\n  if (fromId !== undefined) {\n    common.setValueByPath(toObject, ['id'], fromId);\n  }\n\n  const fromArgs = common.getValueByPath(fromObject, ['args']);\n  if (fromArgs !== undefined) {\n    common.setValueByPath(toObject, ['args'], fromArgs);\n  }\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName !== undefined) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  return toObject;\n}\n\nfunction functionCallFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.FunctionCall,\n): types.FunctionCall {\n  const toObject: Record<string, unknown> = {};\n\n  const fromArgs = common.getValueByPath(fromObject, ['args']);\n  if (fromArgs !== undefined) {\n    common.setValueByPath(toObject, ['args'], fromArgs);\n  }\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName !== undefined) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  return toObject;\n}\n\nfunction liveServerToolCallFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveServerToolCall,\n): types.LiveServerToolCall {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionCalls = common.getValueByPath(fromObject, [\n    'functionCalls',\n  ]);\n  if (\n    fromFunctionCalls !== undefined &&\n    fromFunctionCalls !== null &&\n    Array.isArray(fromFunctionCalls)\n  ) {\n    common.setValueByPath(\n      toObject,\n      ['functionCalls'],\n      fromFunctionCalls.map((item: types.FunctionCall) => {\n        return functionCallFromMldev(apiClient, item);\n      }),\n    );\n  }\n\n  return toObject;\n}\n\nfunction liveServerToolCallFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveServerToolCall,\n): types.LiveServerToolCall {\n  const toObject: Record<string, unknown> = {};\n\n  const fromFunctionCalls = common.getValueByPath(fromObject, [\n    'functionCalls',\n  ]);\n  if (\n    fromFunctionCalls !== undefined &&\n    fromFunctionCalls !== null &&\n    Array.isArray(fromFunctionCalls)\n  ) {\n    common.setValueByPath(\n      toObject,\n      ['functionCalls'],\n      fromFunctionCalls.map((item: types.FunctionCall) => {\n        return functionCallFromVertex(apiClient, item);\n      }),\n    );\n  }\n\n  return toObject;\n}\n\nfunction liveServerToolCallCancellationFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.LiveServerToolCallCancellation,\n): types.LiveServerToolCallCancellation {\n  const toObject: Record<string, unknown> = {};\n\n  const fromIds = common.getValueByPath(fromObject, ['ids']);\n  if (fromIds !== undefined) {\n    common.setValueByPath(toObject, ['ids'], fromIds);\n  }\n\n  return toObject;\n}\n\nfunction liveServerToolCallCancellationFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.LiveServerToolCallCancellation,\n): types.LiveServerToolCallCancellation {\n  const toObject: Record<string, unknown> = {};\n\n  const fromIds = common.getValueByPath(fromObject, ['ids']);\n  if (fromIds !== undefined) {\n    common.setValueByPath(toObject, ['ids'], fromIds);\n  }\n\n  return toObject;\n}\n\nfunction liveServerGoAwayFromMldev(\n  fromObject: types.LiveServerGoAway,\n): types.LiveServerGoAway {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTimeLeft = common.getValueByPath(fromObject, ['timeLeft']);\n  if (fromTimeLeft !== undefined) {\n    common.setValueByPath(toObject, ['timeLeft'], fromTimeLeft);\n  }\n\n  return toObject;\n}\n\nfunction liveServerGoAwayFromVertex(\n  fromObject: types.LiveServerGoAway,\n): types.LiveServerGoAway {\n  const toObject: Record<string, unknown> = {};\n\n  const fromTimeLeft = common.getValueByPath(fromObject, ['timeLeft']);\n  if (fromTimeLeft !== undefined) {\n    common.setValueByPath(toObject, ['timeLeft'], fromTimeLeft);\n  }\n\n  return toObject;\n}\n\nfunction liveServerSessionResumptionUpdateFromMldev(\n  fromObject: types.LiveServerSessionResumptionUpdate,\n): types.LiveServerSessionResumptionUpdate {\n  const toObject: Record<string, unknown> = {};\n\n  const fromNewHandle = common.getValueByPath(fromObject, ['newHandle']);\n  if (fromNewHandle !== undefined) {\n    common.setValueByPath(toObject, ['newHandle'], fromNewHandle);\n  }\n\n  const fromResumable = common.getValueByPath(fromObject, ['resumable']);\n  if (fromResumable !== undefined) {\n    common.setValueByPath(toObject, ['resumable'], fromResumable);\n  }\n\n  const fromLastConsumedClientMessageIndex = common.getValueByPath(fromObject, [\n    'lastConsumedClientMessageIndex',\n  ]);\n  if (fromLastConsumedClientMessageIndex !== undefined) {\n    common.setValueByPath(\n      toObject,\n      ['lastConsumedClientMessageIndex'],\n      fromLastConsumedClientMessageIndex,\n    );\n  }\n\n  return toObject;\n}\n\nfunction liveServerSessionResumptionUpdateFromVertex(\n  fromObject: types.LiveServerSessionResumptionUpdate,\n): types.LiveServerSessionResumptionUpdate {\n  const toObject: Record<string, unknown> = {};\n\n  const fromNewHandle = common.getValueByPath(fromObject, ['newHandle']);\n  if (fromNewHandle !== undefined) {\n    common.setValueByPath(toObject, ['newHandle'], fromNewHandle);\n  }\n\n  const fromResumable = common.getValueByPath(fromObject, ['resumable']);\n  if (fromResumable !== undefined) {\n    common.setValueByPath(toObject, ['resumable'], fromResumable);\n  }\n\n  const fromLastConsumedClientMessageIndex = common.getValueByPath(fromObject, [\n    'lastConsumedClientMessageIndex',\n  ]);\n  if (fromLastConsumedClientMessageIndex !== undefined) {\n    common.setValueByPath(\n      toObject,\n      ['lastConsumedClientMessageIndex'],\n      fromLastConsumedClientMessageIndex,\n    );\n  }\n\n  return toObject;\n}\n\nfunction liveClientSessionResumptionConfigToMldev(\n  fromObject: types.SessionResumptionConfig,\n): types.SessionResumptionConfig {\n  const toObject: Record<string, unknown> = {};\n\n  const fromHandle = common.getValueByPath(fromObject, ['handle']);\n  if (fromHandle !== undefined) {\n    common.setValueByPath(toObject, ['handle'], fromHandle);\n  }\n\n  if (common.getValueByPath(fromObject, ['transparent']) !== undefined) {\n    throw new Error('transparent parameter is not supported in Gemini API.');\n  }\n\n  return toObject;\n}\n\nfunction liveClientSessionResumptionConfigToVertex(\n  fromObject: types.SessionResumptionConfig,\n): types.SessionResumptionConfig {\n  const toObject: Record<string, unknown> = {};\n\n  const fromHandle = common.getValueByPath(fromObject, ['handle']);\n  if (fromHandle !== undefined) {\n    common.setValueByPath(toObject, ['handle'], fromHandle);\n  }\n\n  const fromTransparent = common.getValueByPath(fromObject, ['transparent']);\n  if (fromTransparent !== undefined) {\n    common.setValueByPath(toObject, ['transparent'], fromTransparent);\n  }\n\n  return toObject;\n}\n\nexport function modalityTokenCountFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.ModalityTokenCount,\n): types.ModalityTokenCount {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModality = common.getValueByPath(fromObject, ['modality']);\n  if (fromModality != null) {\n    common.setValueByPath(toObject, ['modality'], fromModality);\n  }\n\n  const fromTokenCount = common.getValueByPath(fromObject, ['tokenCount']);\n  if (fromTokenCount != null) {\n    common.setValueByPath(toObject, ['tokenCount'], fromTokenCount);\n  }\n\n  return toObject;\n}\n\nexport function usageMetadataFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.UsageMetadata,\n): types.UsageMetadata {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPromptTokenCount = common.getValueByPath(fromObject, [\n    'promptTokenCount',\n  ]);\n  if (fromPromptTokenCount != null) {\n    common.setValueByPath(toObject, ['promptTokenCount'], fromPromptTokenCount);\n  }\n\n  const fromCachedContentTokenCount = common.getValueByPath(fromObject, [\n    'cachedContentTokenCount',\n  ]);\n  if (fromCachedContentTokenCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['cachedContentTokenCount'],\n      fromCachedContentTokenCount,\n    );\n  }\n\n  const fromResponseTokenCount = common.getValueByPath(fromObject, [\n    'responseTokenCount',\n  ]);\n  if (fromResponseTokenCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['responseTokenCount'],\n      fromResponseTokenCount,\n    );\n  }\n\n  const fromToolUsePromptTokenCount = common.getValueByPath(fromObject, [\n    'toolUsePromptTokenCount',\n  ]);\n  if (fromToolUsePromptTokenCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['toolUsePromptTokenCount'],\n      fromToolUsePromptTokenCount,\n    );\n  }\n\n  const fromThoughtsTokenCount = common.getValueByPath(fromObject, [\n    'thoughtsTokenCount',\n  ]);\n  if (fromThoughtsTokenCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['thoughtsTokenCount'],\n      fromThoughtsTokenCount,\n    );\n  }\n\n  const fromTotalTokenCount = common.getValueByPath(fromObject, [\n    'totalTokenCount',\n  ]);\n  if (fromTotalTokenCount != null) {\n    common.setValueByPath(toObject, ['totalTokenCount'], fromTotalTokenCount);\n  }\n\n  const fromPromptTokensDetails = common.getValueByPath(fromObject, [\n    'promptTokensDetails',\n  ]);\n  if (fromPromptTokensDetails != null) {\n    if (Array.isArray(fromPromptTokensDetails)) {\n      common.setValueByPath(\n        toObject,\n        ['promptTokensDetails'],\n        fromPromptTokensDetails.map((item) => {\n          return modalityTokenCountFromMldev(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(\n        toObject,\n        ['promptTokensDetails'],\n        fromPromptTokensDetails,\n      );\n    }\n  }\n\n  const fromCacheTokensDetails = common.getValueByPath(fromObject, [\n    'cacheTokensDetails',\n  ]);\n  if (fromCacheTokensDetails != null) {\n    if (Array.isArray(fromCacheTokensDetails)) {\n      common.setValueByPath(\n        toObject,\n        ['cacheTokensDetails'],\n        fromCacheTokensDetails.map((item) => {\n          return modalityTokenCountFromMldev(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(\n        toObject,\n        ['cacheTokensDetails'],\n        fromCacheTokensDetails,\n      );\n    }\n  }\n\n  const fromResponseTokensDetails = common.getValueByPath(fromObject, [\n    'responseTokensDetails',\n  ]);\n  if (fromResponseTokensDetails != null) {\n    if (Array.isArray(fromResponseTokensDetails)) {\n      common.setValueByPath(\n        toObject,\n        ['responseTokensDetails'],\n        fromResponseTokensDetails.map((item) => {\n          return modalityTokenCountFromMldev(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(\n        toObject,\n        ['responseTokensDetails'],\n        fromResponseTokensDetails,\n      );\n    }\n  }\n\n  const fromToolUsePromptTokensDetails = common.getValueByPath(fromObject, [\n    'toolUsePromptTokensDetails',\n  ]);\n  if (fromToolUsePromptTokensDetails != null) {\n    if (Array.isArray(fromToolUsePromptTokensDetails)) {\n      common.setValueByPath(\n        toObject,\n        ['toolUsePromptTokensDetails'],\n        fromToolUsePromptTokensDetails.map((item) => {\n          return modalityTokenCountFromMldev(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(\n        toObject,\n        ['toolUsePromptTokensDetails'],\n        fromToolUsePromptTokensDetails,\n      );\n    }\n  }\n\n  return toObject;\n}\n\nexport function modalityTokenCountFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.ModalityTokenCount,\n): types.ModalityTokenCount {\n  const toObject: Record<string, unknown> = {};\n\n  const fromModality = common.getValueByPath(fromObject, ['modality']);\n  if (fromModality != null) {\n    common.setValueByPath(toObject, ['modality'], fromModality);\n  }\n\n  const fromTokenCount = common.getValueByPath(fromObject, ['tokenCount']);\n  if (fromTokenCount != null) {\n    common.setValueByPath(toObject, ['tokenCount'], fromTokenCount);\n  }\n\n  return toObject;\n}\n\nexport function usageMetadataFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.UsageMetadata,\n): types.UsageMetadata {\n  const toObject: Record<string, unknown> = {};\n\n  const fromPromptTokenCount = common.getValueByPath(fromObject, [\n    'promptTokenCount',\n  ]);\n  if (fromPromptTokenCount != null) {\n    common.setValueByPath(toObject, ['promptTokenCount'], fromPromptTokenCount);\n  }\n\n  const fromCachedContentTokenCount = common.getValueByPath(fromObject, [\n    'cachedContentTokenCount',\n  ]);\n  if (fromCachedContentTokenCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['cachedContentTokenCount'],\n      fromCachedContentTokenCount,\n    );\n  }\n\n  const fromResponseTokenCount = common.getValueByPath(fromObject, [\n    'candidatesTokenCount',\n  ]);\n  if (fromResponseTokenCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['responseTokenCount'],\n      fromResponseTokenCount,\n    );\n  }\n\n  const fromToolUsePromptTokenCount = common.getValueByPath(fromObject, [\n    'toolUsePromptTokenCount',\n  ]);\n  if (fromToolUsePromptTokenCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['toolUsePromptTokenCount'],\n      fromToolUsePromptTokenCount,\n    );\n  }\n\n  const fromThoughtsTokenCount = common.getValueByPath(fromObject, [\n    'thoughtsTokenCount',\n  ]);\n  if (fromThoughtsTokenCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['thoughtsTokenCount'],\n      fromThoughtsTokenCount,\n    );\n  }\n\n  const fromTotalTokenCount = common.getValueByPath(fromObject, [\n    'totalTokenCount',\n  ]);\n  if (fromTotalTokenCount != null) {\n    common.setValueByPath(toObject, ['totalTokenCount'], fromTotalTokenCount);\n  }\n\n  const fromPromptTokensDetails = common.getValueByPath(fromObject, [\n    'promptTokensDetails',\n  ]);\n  if (fromPromptTokensDetails != null) {\n    if (Array.isArray(fromPromptTokensDetails)) {\n      common.setValueByPath(\n        toObject,\n        ['promptTokensDetails'],\n        fromPromptTokensDetails.map((item) => {\n          return modalityTokenCountFromVertex(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(\n        toObject,\n        ['promptTokensDetails'],\n        fromPromptTokensDetails,\n      );\n    }\n  }\n\n  const fromCacheTokensDetails = common.getValueByPath(fromObject, [\n    'cacheTokensDetails',\n  ]);\n  if (fromCacheTokensDetails != null) {\n    if (Array.isArray(fromCacheTokensDetails)) {\n      common.setValueByPath(\n        toObject,\n        ['cacheTokensDetails'],\n        fromCacheTokensDetails.map((item) => {\n          return modalityTokenCountFromVertex(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(\n        toObject,\n        ['cacheTokensDetails'],\n        fromCacheTokensDetails,\n      );\n    }\n  }\n\n  const fromToolUsePromptTokensDetails = common.getValueByPath(fromObject, [\n    'toolUsePromptTokensDetails',\n  ]);\n  if (fromToolUsePromptTokensDetails != null) {\n    if (Array.isArray(fromToolUsePromptTokensDetails)) {\n      common.setValueByPath(\n        toObject,\n        ['toolUsePromptTokensDetails'],\n        fromToolUsePromptTokensDetails.map((item) => {\n          return modalityTokenCountFromVertex(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(\n        toObject,\n        ['toolUsePromptTokensDetails'],\n        fromToolUsePromptTokensDetails,\n      );\n    }\n  }\n\n  const fromResponseTokensDetails = common.getValueByPath(fromObject, [\n    'candidatesTokensDetails',\n  ]);\n  if (fromResponseTokensDetails != null) {\n    if (Array.isArray(fromResponseTokensDetails)) {\n      common.setValueByPath(\n        toObject,\n        ['responseTokensDetails'],\n        fromResponseTokensDetails.map((item) => {\n          return modalityTokenCountFromVertex(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(\n        toObject,\n        ['responseTokensDetails'],\n        fromResponseTokensDetails,\n      );\n    }\n  }\n\n  const fromTrafficType = common.getValueByPath(fromObject, ['trafficType']);\n  if (fromTrafficType != null) {\n    common.setValueByPath(toObject, ['trafficType'], fromTrafficType);\n  }\n\n  return toObject;\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Live client.\n *\n * @experimental\n */\n\nimport {ApiClient} from './_api_client';\nimport {Auth} from './_auth';\nimport * as t from './_transformers';\nimport {WebSocket, WebSocketCallbacks, WebSocketFactory} from './_websocket';\nimport * as converters from './converters/_live_converters';\nimport {contentToMldev, contentToVertex} from './converters/_models_converters';\nimport * as types from './types';\n\nconst FUNCTION_RESPONSE_REQUIRES_ID =\n  'FunctionResponse request must have an `id` field from the response of a ToolCall.FunctionalCalls in Google AI.';\n\n/**\n * Handles incoming messages from the WebSocket.\n *\n * @remarks\n * This function is responsible for parsing incoming messages, transforming them\n * into LiveServerMessages, and then calling the onmessage callback. Note that\n * the first message which is received from the server is a setupComplete\n * message.\n *\n * @param apiClient The ApiClient instance.\n * @param onmessage The user-provided onmessage callback (if any).\n * @param event The MessageEvent from the WebSocket.\n */\nasync function handleWebSocketMessage(\n  apiClient: ApiClient,\n  onmessage: (msg: types.LiveServerMessage) => void,\n  event: MessageEvent,\n): Promise<void> {\n  let serverMessage: types.LiveServerMessage;\n  let data: types.LiveServerMessage;\n  if (event.data instanceof Blob) {\n    data = JSON.parse(await event.data.text()) as types.LiveServerMessage;\n  } else {\n    data = JSON.parse(event.data) as types.LiveServerMessage;\n  }\n  if (apiClient.isVertexAI()) {\n    serverMessage = converters.liveServerMessageFromVertex(apiClient, data);\n  } else {\n    serverMessage = converters.liveServerMessageFromMldev(apiClient, data);\n  }\n\n  onmessage(serverMessage);\n}\n\n/**\n   Live class encapsulates the configuration for live interaction with the\n   Generative Language API. It embeds ApiClient for general API settings.\n\n   @experimental\n  */\nexport class Live {\n  constructor(\n    private readonly apiClient: ApiClient,\n    private readonly auth: Auth,\n    private readonly webSocketFactory: WebSocketFactory,\n  ) {}\n\n  /**\n     Establishes a connection to the specified model with the given\n     configuration and returns a Session object representing that connection.\n\n     @experimental\n\n     @remarks\n     If using the Gemini API, Live is currently only supported behind API\n     version `v1alpha`. Ensure that the API version is set to `v1alpha` when\n     initializing the SDK if relying on the Gemini API.\n\n     @param params - The parameters for establishing a connection to the model.\n     @return A live session.\n\n     @example\n     ```ts\n     const session = await ai.live.connect({\n       model: 'gemini-2.0-flash-exp',\n       config: {\n         responseModalities: [Modality.AUDIO],\n       },\n       callbacks: {\n         onopen: () => {\n           console.log('Connected to the socket.');\n         },\n         onmessage: (e: MessageEvent) => {\n           console.log('Received message from the server: %s\\n', debug(e.data));\n         },\n         onerror: (e: ErrorEvent) => {\n           console.log('Error occurred: %s\\n', debug(e.error));\n         },\n         onclose: (e: CloseEvent) => {\n           console.log('Connection closed.');\n         },\n       },\n     });\n     ```\n    */\n  async connect(params: types.LiveConnectParameters): Promise<Session> {\n    const websocketBaseUrl = this.apiClient.getWebsocketBaseUrl();\n    const apiVersion = this.apiClient.getApiVersion();\n    let url: string;\n    const headers = mapToHeaders(this.apiClient.getDefaultHeaders());\n    if (this.apiClient.isVertexAI()) {\n      url = `${websocketBaseUrl}/ws/google.cloud.aiplatform.${\n        apiVersion\n      }.LlmBidiService/BidiGenerateContent`;\n      await this.auth.addAuthHeaders(headers);\n    } else {\n      const apiKey = this.apiClient.getApiKey();\n      url = `${websocketBaseUrl}/ws/google.ai.generativelanguage.${\n        apiVersion\n      }.GenerativeService.BidiGenerateContent?key=${apiKey}`;\n    }\n\n    let onopenResolve: (value: unknown) => void = () => {};\n    const onopenPromise = new Promise((resolve: (value: unknown) => void) => {\n      onopenResolve = resolve;\n    });\n\n    const callbacks: types.LiveCallbacks = params.callbacks;\n\n    const onopenAwaitedCallback = function () {\n      callbacks?.onopen?.();\n      onopenResolve({});\n    };\n\n    const apiClient = this.apiClient;\n\n    const websocketCallbacks: WebSocketCallbacks = {\n      onopen: onopenAwaitedCallback,\n      onmessage: (event: MessageEvent) => {\n        void handleWebSocketMessage(apiClient, callbacks.onmessage, event);\n      },\n      onerror:\n        callbacks?.onerror ??\n        function (e: ErrorEvent) {\n          void e;\n        },\n      onclose:\n        callbacks?.onclose ??\n        function (e: CloseEvent) {\n          void e;\n        },\n    };\n\n    const conn = this.webSocketFactory.create(\n      url,\n      headersToMap(headers),\n      websocketCallbacks,\n    );\n    conn.connect();\n    // Wait for the websocket to open before sending requests.\n    await onopenPromise;\n\n    let transformedModel = t.tModel(this.apiClient, params.model);\n    if (\n      this.apiClient.isVertexAI() &&\n      transformedModel.startsWith('publishers/')\n    ) {\n      const project = this.apiClient.getProject();\n      const location = this.apiClient.getLocation();\n      transformedModel =\n        `projects/${project}/locations/${location}/` + transformedModel;\n    }\n\n    let clientMessage: types.LiveClientMessage = {};\n    const liveConnectParameters: types.LiveConnectParameters = {\n      model: transformedModel,\n      config: params.config,\n      callbacks: params.callbacks,\n    };\n    if (this.apiClient.isVertexAI()) {\n      clientMessage = converters.liveConnectParametersToVertex(\n        this.apiClient,\n        liveConnectParameters,\n      );\n    } else {\n      clientMessage = converters.liveConnectParametersToMldev(\n        this.apiClient,\n        liveConnectParameters,\n      );\n    }\n    conn.send(JSON.stringify(clientMessage));\n    return new Session(conn, this.apiClient);\n  }\n}\n\nconst defaultLiveSendClientContentParamerters: types.LiveSendClientContentParameters =\n  {\n    turnComplete: true,\n  };\n\n/**\n   Represents a connection to the API.\n\n   @experimental\n  */\nexport class Session {\n  constructor(\n    readonly conn: WebSocket,\n    private readonly apiClient: ApiClient,\n  ) {}\n\n  private tLiveClientContent(\n    apiClient: ApiClient,\n    params: types.LiveSendClientContentParameters,\n  ): types.LiveClientMessage {\n    if (params.turns !== null && params.turns !== undefined) {\n      let contents: types.Content[] = [];\n      try {\n        contents = t.tContents(\n          apiClient,\n          params.turns as types.ContentListUnion,\n        );\n        if (apiClient.isVertexAI()) {\n          contents = contents.map((item) => contentToVertex(apiClient, item));\n        } else {\n          contents = contents.map((item) => contentToMldev(apiClient, item));\n        }\n      } catch {\n        throw new Error(\n          `Failed to parse client content \"turns\", type: '${typeof params.turns}'`,\n        );\n      }\n      return {\n        clientContent: {turns: contents, turnComplete: params.turnComplete},\n      };\n    }\n\n    return {\n      clientContent: {turnComplete: params.turnComplete},\n    };\n  }\n\n  private tLiveClientRealtimeInput(\n    apiClient: ApiClient,\n    params: types.LiveSendRealtimeInputParameters,\n  ): types.LiveClientMessage {\n    let clientMessage: types.LiveClientMessage = {};\n    if (!('media' in params) || !params.media) {\n      throw new Error(\n        `Failed to convert realtime input \"media\", type: '${typeof params.media}'`,\n      );\n    }\n\n    // LiveClientRealtimeInput\n    clientMessage = {\n      realtimeInput: {\n        mediaChunks: [params.media],\n        activityStart: params.activityStart,\n        activityEnd: params.activityEnd,\n      },\n    };\n    return clientMessage;\n  }\n\n  private tLiveClienttToolResponse(\n    apiClient: ApiClient,\n    params: types.LiveSendToolResponseParameters,\n  ): types.LiveClientMessage {\n    let functionResponses: types.FunctionResponse[] = [];\n\n    if (params.functionResponses == null) {\n      throw new Error('functionResponses is required.');\n    }\n\n    if (!Array.isArray(params.functionResponses)) {\n      functionResponses = [params.functionResponses];\n    } else {\n      functionResponses = params.functionResponses;\n    }\n\n    if (functionResponses.length === 0) {\n      throw new Error('functionResponses is required.');\n    }\n\n    for (const functionResponse of functionResponses) {\n      if (\n        typeof functionResponse !== 'object' ||\n        functionResponse === null ||\n        !('name' in functionResponse) ||\n        !('response' in functionResponse)\n      ) {\n        throw new Error(\n          `Could not parse function response, type '${typeof functionResponse}'.`,\n        );\n      }\n      if (!apiClient.isVertexAI() && !('id' in functionResponse)) {\n        throw new Error(FUNCTION_RESPONSE_REQUIRES_ID);\n      }\n    }\n\n    const clientMessage: types.LiveClientMessage = {\n      toolResponse: {functionResponses: functionResponses},\n    };\n    return clientMessage;\n  }\n\n  /**\n    Send a message over the established connection.\n\n    @param params - Contains two **optional** properties, `turns` and\n        `turnComplete`.\n\n      - `turns` will be converted to a `Content[]`\n      - `turnComplete: true` [default] indicates that you are done sending\n        content and expect a response. If `turnComplete: false`, the server\n        will wait for additional messages before starting generation.\n\n    @experimental\n\n    @remarks\n    There are two ways to send messages to the live API:\n    `sendClientContent` and `sendRealtimeInput`.\n\n    `sendClientContent` messages are added to the model context **in order**.\n    Having a conversation using `sendClientContent` messages is roughly\n    equivalent to using the `Chat.sendMessageStream`, except that the state of\n    the `chat` history is stored on the API server instead of locally.\n\n    Because of `sendClientContent`'s order guarantee, the model cannot respons\n    as quickly to `sendClientContent` messages as to `sendRealtimeInput`\n    messages. This makes the biggest difference when sending objects that have\n    significant preprocessing time (typically images).\n\n    The `sendClientContent` message sends a `Content[]`\n    which has more options than the `Blob` sent by `sendRealtimeInput`.\n\n    So the main use-cases for `sendClientContent` over `sendRealtimeInput` are:\n\n    - Sending anything that can't be represented as a `Blob` (text,\n    `sendClientContent({turns=\"Hello?\"}`)).\n    - Managing turns when not using audio input and voice activity detection.\n      (`sendClientContent({turnComplete:true})` or the short form\n    `sendClientContent()`)\n    - Prefilling a conversation context\n      ```\n      sendClientContent({\n          turns: [\n            Content({role:user, parts:...}),\n            Content({role:user, parts:...}),\n            ...\n          ]\n      })\n      ```\n    @experimental\n   */\n  sendClientContent(params: types.LiveSendClientContentParameters) {\n    params = {\n      ...defaultLiveSendClientContentParamerters,\n      ...params,\n    };\n\n    const clientMessage: types.LiveClientMessage = this.tLiveClientContent(\n      this.apiClient,\n      params,\n    );\n    this.conn.send(JSON.stringify(clientMessage));\n  }\n\n  /**\n    Send a realtime message over the established connection.\n\n    @param params - Contains one property, `media`.\n\n      - `media` will be converted to a `Blob`\n\n    @experimental\n\n    @remarks\n    Use `sendRealtimeInput` for realtime audio chunks and video frames (images).\n\n    With `sendRealtimeInput` the api will respond to audio automatically\n    based on voice activity detection (VAD).\n\n    `sendRealtimeInput` is optimized for responsivness at the expense of\n    deterministic ordering guarantees. Audio and video tokens are to the\n    context when they become available.\n\n    Note: The Call signature expects a `Blob` object, but only a subset\n    of audio and image mimetypes are allowed.\n   */\n  sendRealtimeInput(params: types.LiveSendRealtimeInputParameters) {\n    if (params.media == null) {\n      throw new Error('Media is required.');\n    }\n\n    const clientMessage: types.LiveClientMessage =\n      this.tLiveClientRealtimeInput(this.apiClient, params);\n    this.conn.send(JSON.stringify(clientMessage));\n  }\n\n  /**\n    Send a function response message over the established connection.\n\n    @param params - Contains property `functionResponses`.\n\n      - `functionResponses` will be converted to a `functionResponses[]`\n\n    @remarks\n    Use `sendFunctionResponse` to reply to `LiveServerToolCall` from the server.\n\n    Use {@link types.LiveConnectConfig#tools} to configure the callable functions.\n\n    @experimental\n   */\n  sendToolResponse(params: types.LiveSendToolResponseParameters) {\n    if (params.functionResponses == null) {\n      throw new Error('Tool response parameters are required.');\n    }\n\n    const clientMessage: types.LiveClientMessage =\n      this.tLiveClienttToolResponse(this.apiClient, params);\n    this.conn.send(JSON.stringify(clientMessage));\n  }\n\n  /**\n     Terminates the WebSocket connection.\n\n     @experimental\n\n     @example\n     ```ts\n     const session = await ai.live.connect({\n       model: 'gemini-2.0-flash-exp',\n       config: {\n         responseModalities: [Modality.AUDIO],\n       }\n     });\n\n     session.close();\n     ```\n   */\n  close() {\n    this.conn.close();\n  }\n}\n\n// Converts an headers object to a \"map\" object as expected by the WebSocket\n// constructor. We use this as the Auth interface works with Headers objects\n// while the WebSocket constructor takes a map.\nfunction headersToMap(headers: Headers): Record<string, string> {\n  const headerMap: Record<string, string> = {};\n  headers.forEach((value, key) => {\n    headerMap[key] = value;\n  });\n  return headerMap;\n}\n\n// Converts a \"map\" object to a headers object. We use this as the Auth\n// interface works with Headers objects while the API client default headers\n// returns a map.\nfunction mapToHeaders(map: Record<string, string>): Headers {\n  const headers = new Headers();\n  for (const [key, value] of Object.entries(map)) {\n    headers.append(key, value);\n  }\n  return headers;\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\nimport {ApiClient} from './_api_client';\nimport * as common from './_common';\nimport {BaseModule} from './_common';\nimport * as converters from './converters/_models_converters';\nimport * as types from './types';\n\nexport class Models extends BaseModule {\n  constructor(private readonly apiClient: ApiClient) {\n    super();\n  }\n\n  /**\n   * Makes an API request to generate content with a given model.\n   *\n   * For the `model` parameter, supported formats for Vertex AI API include:\n   * - The Gemini model ID, for example: 'gemini-2.0-flash'\n   * - The full resource name starts with 'projects/', for example:\n   *  'projects/my-project-id/locations/us-central1/publishers/google/models/gemini-2.0-flash'\n   * - The partial resource name with 'publishers/', for example:\n   *  'publishers/google/models/gemini-2.0-flash' or\n   *  'publishers/meta/models/llama-3.1-405b-instruct-maas'\n   * - `/` separated publisher and model name, for example:\n   * 'google/gemini-2.0-flash' or 'meta/llama-3.1-405b-instruct-maas'\n   *\n   * For the `model` parameter, supported formats for Gemini API include:\n   * - The Gemini model ID, for example: 'gemini-2.0-flash'\n   * - The model name starts with 'models/', for example:\n   *  'models/gemini-2.0-flash'\n   * - For tuned models, the model name starts with 'tunedModels/',\n   * for example:\n   * 'tunedModels/1234567890123456789'\n   *\n   * Some models support multimodal input and output.\n   *\n   * @param params - The parameters for generating content.\n   * @return The response from generating content.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.models.generateContent({\n   *   model: 'gemini-2.0-flash',\n   *   contents: 'why is the sky blue?',\n   *   config: {\n   *     candidateCount: 2,\n   *   }\n   * });\n   * console.log(response);\n   * ```\n   */\n  generateContent = async (\n    params: types.GenerateContentParameters,\n  ): Promise<types.GenerateContentResponse> => {\n    return await this.generateContentInternal(params);\n  };\n\n  /**\n   * Makes an API request to generate content with a given model and yields the\n   * response in chunks.\n   *\n   * For the `model` parameter, supported formats for Vertex AI API include:\n   * - The Gemini model ID, for example: 'gemini-2.0-flash'\n   * - The full resource name starts with 'projects/', for example:\n   *  'projects/my-project-id/locations/us-central1/publishers/google/models/gemini-2.0-flash'\n   * - The partial resource name with 'publishers/', for example:\n   *  'publishers/google/models/gemini-2.0-flash' or\n   *  'publishers/meta/models/llama-3.1-405b-instruct-maas'\n   * - `/` separated publisher and model name, for example:\n   * 'google/gemini-2.0-flash' or 'meta/llama-3.1-405b-instruct-maas'\n   *\n   * For the `model` parameter, supported formats for Gemini API include:\n   * - The Gemini model ID, for example: 'gemini-2.0-flash'\n   * - The model name starts with 'models/', for example:\n   *  'models/gemini-2.0-flash'\n   * - For tuned models, the model name starts with 'tunedModels/',\n   * for example:\n   *  'tunedModels/1234567890123456789'\n   *\n   * Some models support multimodal input and output.\n   *\n   * @param params - The parameters for generating content with streaming response.\n   * @return The response from generating content.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.models.generateContentStream({\n   *   model: 'gemini-2.0-flash',\n   *   contents: 'why is the sky blue?',\n   *   config: {\n   *     maxOutputTokens: 200,\n   *   }\n   * });\n   * for await (const chunk of response) {\n   *   console.log(chunk);\n   * }\n   * ```\n   */\n  generateContentStream = async (\n    params: types.GenerateContentParameters,\n  ): Promise<AsyncGenerator<types.GenerateContentResponse>> => {\n    return await this.generateContentStreamInternal(params);\n  };\n\n  /**\n   * Generates an image based on a text description and configuration.\n   *\n   * @param model - The model to use.\n   * @param prompt - A text description of the image to generate.\n   * @param [config] - The config for image generation.\n   * @return The response from the API.\n   *\n   * @example\n   * ```ts\n   * const response = await client.models.generateImages({\n   *  model: 'imagen-3.0-generate-002',\n   *  prompt: 'Robot holding a red skateboard',\n   *  config: {\n   *    numberOfImages: 1,\n   *    includeRaiReason: true,\n   *  },\n   * });\n   * console.log(response?.generatedImages?.[0]?.image?.imageBytes);\n   * ```\n   */\n  generateImages = async (\n    params: types.GenerateImagesParameters,\n  ): Promise<types.GenerateImagesResponse> => {\n    return await this.generateImagesInternal(params).then((apiResponse) => {\n      let positivePromptSafetyAttributes;\n      const generatedImages = [];\n\n      if (apiResponse?.generatedImages) {\n        for (const generatedImage of apiResponse.generatedImages) {\n          if (\n            generatedImage &&\n            generatedImage?.safetyAttributes &&\n            generatedImage?.safetyAttributes?.contentType === 'Positive Prompt'\n          ) {\n            positivePromptSafetyAttributes = generatedImage?.safetyAttributes;\n          } else {\n            generatedImages.push(generatedImage);\n          }\n        }\n      }\n      let response: types.GenerateImagesResponse;\n\n      if (positivePromptSafetyAttributes) {\n        response = {\n          generatedImages: generatedImages,\n          positivePromptSafetyAttributes: positivePromptSafetyAttributes,\n        };\n      } else {\n        response = {\n          generatedImages: generatedImages,\n        };\n      }\n      return response;\n    });\n  };\n\n  private async generateContentInternal(\n    params: types.GenerateContentParameters,\n  ): Promise<types.GenerateContentResponse> {\n    let response: Promise<types.GenerateContentResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.generateContentParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:generateContent',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.GenerateContentResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.generateContentResponseFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.GenerateContentResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    } else {\n      const body = converters.generateContentParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:generateContent',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.GenerateContentResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.generateContentResponseFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.GenerateContentResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    }\n  }\n\n  private async generateContentStreamInternal(\n    params: types.GenerateContentParameters,\n  ): Promise<AsyncGenerator<types.GenerateContentResponse>> {\n    let response: Promise<AsyncGenerator<types.GenerateContentResponse>>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.generateContentParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:streamGenerateContent?alt=sse',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      const apiClient = this.apiClient;\n      response = apiClient.requestStream({\n        path: path,\n        queryParams: queryParams,\n        body: JSON.stringify(body),\n        httpMethod: 'POST',\n        httpOptions: params.config?.httpOptions,\n      }) as Promise<AsyncGenerator<types.GenerateContentResponse>>;\n\n      return response.then(async function* (\n        apiResponse: AsyncGenerator<types.GenerateContentResponse>,\n      ) {\n        for await (const chunk of apiResponse) {\n          const resp = converters.generateContentResponseFromVertex(\n            apiClient,\n            chunk,\n          );\n          const typedResp = new types.GenerateContentResponse();\n          Object.assign(typedResp, resp);\n          yield typedResp;\n        }\n      });\n    } else {\n      const body = converters.generateContentParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:streamGenerateContent?alt=sse',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      const apiClient = this.apiClient;\n      response = apiClient.requestStream({\n        path: path,\n        queryParams: queryParams,\n        body: JSON.stringify(body),\n        httpMethod: 'POST',\n        httpOptions: params.config?.httpOptions,\n      }) as Promise<AsyncGenerator<types.GenerateContentResponse>>;\n\n      return response.then(async function* (\n        apiResponse: AsyncGenerator<types.GenerateContentResponse>,\n      ) {\n        for await (const chunk of apiResponse) {\n          const resp = converters.generateContentResponseFromMldev(\n            apiClient,\n            chunk,\n          );\n          const typedResp = new types.GenerateContentResponse();\n          Object.assign(typedResp, resp);\n          yield typedResp;\n        }\n      });\n    }\n  }\n\n  /**\n   * Calculates embeddings for the given contents. Only text is supported.\n   *\n   * @param params - The parameters for embedding contents.\n   * @return The response from the API.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.models.embedContent({\n   *  model: 'text-embedding-004',\n   *  contents: [\n   *    'What is your name?',\n   *    'What is your favorite color?',\n   *  ],\n   *  config: {\n   *    outputDimensionality: 64,\n   *  },\n   * });\n   * console.log(response);\n   * ```\n   */\n  async embedContent(\n    params: types.EmbedContentParameters,\n  ): Promise<types.EmbedContentResponse> {\n    let response: Promise<types.EmbedContentResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.embedContentParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:predict',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.EmbedContentResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.embedContentResponseFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.EmbedContentResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    } else {\n      const body = converters.embedContentParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:batchEmbedContents',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.EmbedContentResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.embedContentResponseFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.EmbedContentResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    }\n  }\n\n  /**\n   * Generates an image based on a text description and configuration.\n   *\n   * @param params - The parameters for generating images.\n   * @return The response from the API.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.models.generateImages({\n   *  model: 'imagen-3.0-generate-002',\n   *  prompt: 'Robot holding a red skateboard',\n   *  config: {\n   *    numberOfImages: 1,\n   *    includeRaiReason: true,\n   *  },\n   * });\n   * console.log(response?.generatedImages?.[0]?.image?.imageBytes);\n   * ```\n   */\n  private async generateImagesInternal(\n    params: types.GenerateImagesParameters,\n  ): Promise<types.GenerateImagesResponse> {\n    let response: Promise<types.GenerateImagesResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.generateImagesParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:predict',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.GenerateImagesResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.generateImagesResponseFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.GenerateImagesResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    } else {\n      const body = converters.generateImagesParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:predict',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.GenerateImagesResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.generateImagesResponseFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.GenerateImagesResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    }\n  }\n\n  /**\n   * Fetches information about a model by name.\n   *\n   * @example\n   * ```ts\n   * const modelInfo = await ai.models.get({model: 'gemini-2.0-flash'});\n   * ```\n   */\n  async get(params: types.GetModelParameters): Promise<types.Model> {\n    let response: Promise<types.Model>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.getModelParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{name}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.Model>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.modelFromVertex(this.apiClient, apiResponse);\n\n        return resp as types.Model;\n      });\n    } else {\n      const body = converters.getModelParametersToMldev(this.apiClient, params);\n      path = common.formatMap(\n        '{name}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.Model>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.modelFromMldev(this.apiClient, apiResponse);\n\n        return resp as types.Model;\n      });\n    }\n  }\n\n  /**\n   * Counts the number of tokens in the given contents. Multimodal input is\n   * supported for Gemini models.\n   *\n   * @param params - The parameters for counting tokens.\n   * @return The response from the API.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.models.countTokens({\n   *  model: 'gemini-2.0-flash',\n   *  contents: 'The quick brown fox jumps over the lazy dog.'\n   * });\n   * console.log(response);\n   * ```\n   */\n  async countTokens(\n    params: types.CountTokensParameters,\n  ): Promise<types.CountTokensResponse> {\n    let response: Promise<types.CountTokensResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.countTokensParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:countTokens',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.CountTokensResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.countTokensResponseFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.CountTokensResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    } else {\n      const body = converters.countTokensParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:countTokens',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.CountTokensResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.countTokensResponseFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.CountTokensResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    }\n  }\n\n  /**\n   * Given a list of contents, returns a corresponding TokensInfo containing\n   * the list of tokens and list of token ids.\n   *\n   * This method is not supported by the Gemini Developer API.\n   *\n   * @param params - The parameters for computing tokens.\n   * @return The response from the API.\n   *\n   * @example\n   * ```ts\n   * const response = await ai.models.computeTokens({\n   *  model: 'gemini-2.0-flash',\n   *  contents: 'What is your name?'\n   * });\n   * console.log(response);\n   * ```\n   */\n  async computeTokens(\n    params: types.ComputeTokensParameters,\n  ): Promise<types.ComputeTokensResponse> {\n    let response: Promise<types.ComputeTokensResponse>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.computeTokensParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:computeTokens',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.ComputeTokensResponse>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.computeTokensResponseFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n        const typedResp = new types.ComputeTokensResponse();\n        Object.assign(typedResp, resp);\n        return typedResp;\n      });\n    } else {\n      throw new Error('This method is only supported by the Vertex AI.');\n    }\n  }\n\n  /**\n   *  Generates videos based on a text description and configuration.\n   *\n   * @param params - The parameters for generating videos.\n   * @return A Promise<GenerateVideosOperation> which allows you to track the progress and eventually retrieve the generated videos using the operations.get method.\n   *\n   * @example\n   * ```ts\n   * const operation = await ai.models.generateVideos({\n   *  model: 'veo-2.0-generate-001',\n   *  prompt: 'A neon hologram of a cat driving at top speed',\n   *  config: {\n   *    numberOfVideos: 1\n   * });\n   *\n   * while (!operation.done) {\n   *   await new Promise(resolve => setTimeout(resolve, 10000));\n   *   operation = await ai.operations.getVideosOperation({operation: operation});\n   * }\n   *\n   * console.log(operation.response?.generatedVideos?.[0]?.video?.uri);\n   * ```\n   */\n\n  async generateVideos(\n    params: types.GenerateVideosParameters,\n  ): Promise<types.GenerateVideosOperation> {\n    let response: Promise<types.GenerateVideosOperation>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.generateVideosParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:predictLongRunning',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.GenerateVideosOperation>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.generateVideosOperationFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.GenerateVideosOperation;\n      });\n    } else {\n      const body = converters.generateVideosParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{model}:predictLongRunning',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.GenerateVideosOperation>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.generateVideosOperationFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.GenerateVideosOperation;\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\nimport {ApiClient} from '../_api_client';\nimport * as common from '../_common';\nimport * as t from '../_transformers';\nimport * as types from '../types';\n\nexport function getOperationParametersToMldev(\n  apiClient: ApiClient,\n  fromObject: types.GetOperationParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromOperationName = common.getValueByPath(fromObject, [\n    'operationName',\n  ]);\n  if (fromOperationName != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'operationName'],\n      fromOperationName,\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function getOperationParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.GetOperationParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromOperationName = common.getValueByPath(fromObject, [\n    'operationName',\n  ]);\n  if (fromOperationName != null) {\n    common.setValueByPath(\n      toObject,\n      ['_url', 'operationName'],\n      fromOperationName,\n    );\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function fetchPredictOperationParametersToVertex(\n  apiClient: ApiClient,\n  fromObject: types.FetchPredictOperationParameters,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromOperationName = common.getValueByPath(fromObject, [\n    'operationName',\n  ]);\n  if (fromOperationName != null) {\n    common.setValueByPath(toObject, ['operationName'], fromOperationName);\n  }\n\n  const fromResourceName = common.getValueByPath(fromObject, ['resourceName']);\n  if (fromResourceName != null) {\n    common.setValueByPath(toObject, ['_url', 'resourceName'], fromResourceName);\n  }\n\n  const fromConfig = common.getValueByPath(fromObject, ['config']);\n  if (fromConfig != null) {\n    common.setValueByPath(toObject, ['config'], fromConfig);\n  }\n\n  return toObject;\n}\n\nexport function videoFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.Video,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromUri = common.getValueByPath(fromObject, ['video', 'uri']);\n  if (fromUri != null) {\n    common.setValueByPath(toObject, ['uri'], fromUri);\n  }\n\n  const fromVideoBytes = common.getValueByPath(fromObject, [\n    'video',\n    'encodedVideo',\n  ]);\n  if (fromVideoBytes != null) {\n    common.setValueByPath(\n      toObject,\n      ['videoBytes'],\n      t.tBytes(apiClient, fromVideoBytes),\n    );\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['encoding']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function generatedVideoFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.GeneratedVideo,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideo = common.getValueByPath(fromObject, ['_self']);\n  if (fromVideo != null) {\n    common.setValueByPath(\n      toObject,\n      ['video'],\n      videoFromMldev(apiClient, fromVideo),\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateVideosResponseFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGeneratedVideos = common.getValueByPath(fromObject, [\n    'generatedSamples',\n  ]);\n  if (fromGeneratedVideos != null) {\n    if (Array.isArray(fromGeneratedVideos)) {\n      common.setValueByPath(\n        toObject,\n        ['generatedVideos'],\n        fromGeneratedVideos.map((item) => {\n          return generatedVideoFromMldev(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(toObject, ['generatedVideos'], fromGeneratedVideos);\n    }\n  }\n\n  const fromRaiMediaFilteredCount = common.getValueByPath(fromObject, [\n    'raiMediaFilteredCount',\n  ]);\n  if (fromRaiMediaFilteredCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['raiMediaFilteredCount'],\n      fromRaiMediaFilteredCount,\n    );\n  }\n\n  const fromRaiMediaFilteredReasons = common.getValueByPath(fromObject, [\n    'raiMediaFilteredReasons',\n  ]);\n  if (fromRaiMediaFilteredReasons != null) {\n    common.setValueByPath(\n      toObject,\n      ['raiMediaFilteredReasons'],\n      fromRaiMediaFilteredReasons,\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateVideosOperationFromMldev(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosOperation,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromMetadata = common.getValueByPath(fromObject, ['metadata']);\n  if (fromMetadata != null) {\n    common.setValueByPath(toObject, ['metadata'], fromMetadata);\n  }\n\n  const fromDone = common.getValueByPath(fromObject, ['done']);\n  if (fromDone != null) {\n    common.setValueByPath(toObject, ['done'], fromDone);\n  }\n\n  const fromError = common.getValueByPath(fromObject, ['error']);\n  if (fromError != null) {\n    common.setValueByPath(toObject, ['error'], fromError);\n  }\n\n  const fromResponse = common.getValueByPath(fromObject, [\n    'response',\n    'generateVideoResponse',\n  ]);\n  if (fromResponse != null) {\n    common.setValueByPath(\n      toObject,\n      ['response'],\n      generateVideosResponseFromMldev(apiClient, fromResponse),\n    );\n  }\n\n  const fromResult = common.getValueByPath(fromObject, [\n    'response',\n    'generateVideoResponse',\n  ]);\n  if (fromResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['result'],\n      generateVideosResponseFromMldev(apiClient, fromResult),\n    );\n  }\n\n  return toObject;\n}\n\nexport function videoFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.Video,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromUri = common.getValueByPath(fromObject, ['gcsUri']);\n  if (fromUri != null) {\n    common.setValueByPath(toObject, ['uri'], fromUri);\n  }\n\n  const fromVideoBytes = common.getValueByPath(fromObject, [\n    'bytesBase64Encoded',\n  ]);\n  if (fromVideoBytes != null) {\n    common.setValueByPath(\n      toObject,\n      ['videoBytes'],\n      t.tBytes(apiClient, fromVideoBytes),\n    );\n  }\n\n  const fromMimeType = common.getValueByPath(fromObject, ['mimeType']);\n  if (fromMimeType != null) {\n    common.setValueByPath(toObject, ['mimeType'], fromMimeType);\n  }\n\n  return toObject;\n}\n\nexport function generatedVideoFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.GeneratedVideo,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromVideo = common.getValueByPath(fromObject, ['_self']);\n  if (fromVideo != null) {\n    common.setValueByPath(\n      toObject,\n      ['video'],\n      videoFromVertex(apiClient, fromVideo),\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateVideosResponseFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosResponse,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromGeneratedVideos = common.getValueByPath(fromObject, ['videos']);\n  if (fromGeneratedVideos != null) {\n    if (Array.isArray(fromGeneratedVideos)) {\n      common.setValueByPath(\n        toObject,\n        ['generatedVideos'],\n        fromGeneratedVideos.map((item) => {\n          return generatedVideoFromVertex(apiClient, item);\n        }),\n      );\n    } else {\n      common.setValueByPath(toObject, ['generatedVideos'], fromGeneratedVideos);\n    }\n  }\n\n  const fromRaiMediaFilteredCount = common.getValueByPath(fromObject, [\n    'raiMediaFilteredCount',\n  ]);\n  if (fromRaiMediaFilteredCount != null) {\n    common.setValueByPath(\n      toObject,\n      ['raiMediaFilteredCount'],\n      fromRaiMediaFilteredCount,\n    );\n  }\n\n  const fromRaiMediaFilteredReasons = common.getValueByPath(fromObject, [\n    'raiMediaFilteredReasons',\n  ]);\n  if (fromRaiMediaFilteredReasons != null) {\n    common.setValueByPath(\n      toObject,\n      ['raiMediaFilteredReasons'],\n      fromRaiMediaFilteredReasons,\n    );\n  }\n\n  return toObject;\n}\n\nexport function generateVideosOperationFromVertex(\n  apiClient: ApiClient,\n  fromObject: types.GenerateVideosOperation,\n): Record<string, unknown> {\n  const toObject: Record<string, unknown> = {};\n\n  const fromName = common.getValueByPath(fromObject, ['name']);\n  if (fromName != null) {\n    common.setValueByPath(toObject, ['name'], fromName);\n  }\n\n  const fromMetadata = common.getValueByPath(fromObject, ['metadata']);\n  if (fromMetadata != null) {\n    common.setValueByPath(toObject, ['metadata'], fromMetadata);\n  }\n\n  const fromDone = common.getValueByPath(fromObject, ['done']);\n  if (fromDone != null) {\n    common.setValueByPath(toObject, ['done'], fromDone);\n  }\n\n  const fromError = common.getValueByPath(fromObject, ['error']);\n  if (fromError != null) {\n    common.setValueByPath(toObject, ['error'], fromError);\n  }\n\n  const fromResponse = common.getValueByPath(fromObject, ['response']);\n  if (fromResponse != null) {\n    common.setValueByPath(\n      toObject,\n      ['response'],\n      generateVideosResponseFromVertex(apiClient, fromResponse),\n    );\n  }\n\n  const fromResult = common.getValueByPath(fromObject, ['response']);\n  if (fromResult != null) {\n    common.setValueByPath(\n      toObject,\n      ['result'],\n      generateVideosResponseFromVertex(apiClient, fromResult),\n    );\n  }\n\n  return toObject;\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\n\nimport {ApiClient} from './_api_client';\nimport * as common from './_common';\nimport {BaseModule} from './_common';\nimport * as converters from './converters/_operations_converters';\nimport * as types from './types';\n\nexport class Operations extends BaseModule {\n  constructor(private readonly apiClient: ApiClient) {\n    super();\n  }\n\n  /**\n   * Gets the status of a long-running operation.\n   *\n   * @param parameters The parameters for the get operation request.\n   * @return The updated Operation object, with the latest status or result.\n   */\n  async getVideosOperation(\n    parameters: types.OperationGetParameters,\n  ): Promise<types.GenerateVideosOperation> {\n    const operation = parameters.operation;\n    const config = parameters.config;\n\n    if (operation.name === undefined || operation.name === '') {\n      throw new Error('Operation name is required.');\n    }\n\n    if (this.apiClient.isVertexAI()) {\n      const resourceName = operation.name.split('/operations/')[0];\n      var httpOptions: types.HttpOptions | undefined = undefined;\n\n      if (config && 'httpOptions' in config) {\n        httpOptions = config.httpOptions;\n      }\n\n      return this.fetchPredictVideosOperationInternal({\n        operationName: operation.name,\n        resourceName: resourceName,\n        config: {httpOptions: httpOptions},\n      });\n    } else {\n      return this.getVideosOperationInternal({\n        operationName: operation.name,\n        config: config,\n      });\n    }\n  }\n\n  private async getVideosOperationInternal(\n    params: types.GetOperationParameters,\n  ): Promise<types.GenerateVideosOperation> {\n    let response: Promise<types.GenerateVideosOperation>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.getOperationParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{operationName}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.GenerateVideosOperation>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.generateVideosOperationFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.GenerateVideosOperation;\n      });\n    } else {\n      const body = converters.getOperationParametersToMldev(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{operationName}',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'GET',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.GenerateVideosOperation>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.generateVideosOperationFromMldev(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.GenerateVideosOperation;\n      });\n    }\n  }\n\n  private async fetchPredictVideosOperationInternal(\n    params: types.FetchPredictOperationParameters,\n  ): Promise<types.GenerateVideosOperation> {\n    let response: Promise<types.GenerateVideosOperation>;\n    let path: string = '';\n    let queryParams: Record<string, string> = {};\n    if (this.apiClient.isVertexAI()) {\n      const body = converters.fetchPredictOperationParametersToVertex(\n        this.apiClient,\n        params,\n      );\n      path = common.formatMap(\n        '{resourceName}:fetchPredictOperation',\n        body['_url'] as Record<string, unknown>,\n      );\n      queryParams = body['_query'] as Record<string, string>;\n      delete body['config'];\n      delete body['_url'];\n      delete body['_query'];\n\n      response = this.apiClient\n        .request({\n          path: path,\n          queryParams: queryParams,\n          body: JSON.stringify(body),\n          httpMethod: 'POST',\n          httpOptions: params.config?.httpOptions,\n        })\n        .then((httpResponse) => {\n          return httpResponse.json();\n        }) as Promise<types.GenerateVideosOperation>;\n\n      return response.then((apiResponse) => {\n        const resp = converters.generateVideosOperationFromVertex(\n          this.apiClient,\n          apiResponse,\n        );\n\n        return resp as types.GenerateVideosOperation;\n      });\n    } else {\n      throw new Error('This method is only supported by the Vertex AI.');\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {Auth} from './_auth';\nimport * as common from './_common';\nimport {Uploader} from './_uploader';\nimport {File, HttpOptions, HttpResponse, UploadFileConfig} from './types';\n\nconst CONTENT_TYPE_HEADER = 'Content-Type';\nconst SERVER_TIMEOUT_HEADER = 'X-Server-Timeout';\nconst USER_AGENT_HEADER = 'User-Agent';\nconst GOOGLE_API_CLIENT_HEADER = 'x-goog-api-client';\nexport const SDK_VERSION = '0.8.0'; // x-release-please-version\nconst LIBRARY_LABEL = `google-genai-sdk/${SDK_VERSION}`;\nconst VERTEX_AI_API_DEFAULT_VERSION = 'v1beta1';\nconst GOOGLE_AI_API_DEFAULT_VERSION = 'v1beta';\nconst responseLineRE = /^data: (.*)(?:\\n\\n|\\r\\r|\\r\\n\\r\\n)/;\n\n/**\n * Client errors raised by the GenAI API.\n */\nexport class ClientError extends Error {\n  constructor(message: string, stackTrace?: string) {\n    if (stackTrace) {\n      super(message, {cause: stackTrace});\n    } else {\n      super(message, {cause: new Error().stack});\n    }\n    this.message = message;\n    this.name = 'ClientError';\n  }\n}\n\n/**\n * Server errors raised by the GenAI API.\n */\nexport class ServerError extends Error {\n  constructor(message: string, stackTrace?: string) {\n    if (stackTrace) {\n      super(message, {cause: stackTrace});\n    } else {\n      super(message, {cause: new Error().stack});\n    }\n    this.message = message;\n    this.name = 'ServerError';\n  }\n}\n\n/**\n * Options for initializing the ApiClient. The ApiClient uses the parameters\n * for authentication purposes as well as to infer if SDK should send the\n * request to Vertex AI or Gemini API.\n */\nexport interface ApiClientInitOptions {\n  /**\n   * The object used for adding authentication headers to API requests.\n   */\n  auth: Auth;\n  /**\n   * The uploader to use for uploading files. This field is required for\n   * creating a client, will be set through the Node_client or Web_client.\n   */\n  uploader: Uploader;\n  /**\n   * Optional. The Google Cloud project ID for Vertex AI users.\n   * It is not the numeric project name.\n   * If not provided, SDK will try to resolve it from runtime environment.\n   */\n  project?: string;\n  /**\n   * Optional. The Google Cloud project location for Vertex AI users.\n   * If not provided, SDK will try to resolve it from runtime environment.\n   */\n  location?: string;\n  /**\n   * The API Key. This is required for Gemini API users.\n   */\n  apiKey?: string;\n  /**\n   * Optional. Set to true if you intend to call Vertex AI endpoints.\n   * If unset, default SDK behavior is to call Gemini API.\n   */\n  vertexai?: boolean;\n  /**\n   * Optional. The API version for the endpoint.\n   * If unset, SDK will choose a default api version.\n   */\n  apiVersion?: string;\n  /**\n   * Optional. A set of customizable configuration for HTTP requests.\n   */\n  httpOptions?: HttpOptions;\n  /**\n   * Optional. An extra string to append at the end of the User-Agent header.\n   *\n   * This can be used to e.g specify the runtime and its version.\n   */\n  userAgentExtra?: string;\n}\n\n/**\n * Represents the necessary information to send a request to an API endpoint.\n * This interface defines the structure for constructing and executing HTTP\n * requests.\n */\nexport interface HttpRequest {\n  /**\n   * URL path from the modules, this path is appended to the base API URL to\n   * form the complete request URL.\n   *\n   * If you wish to set full URL, use httpOptions.baseUrl instead. Example to\n   * set full URL in the request:\n   *\n   * const request: HttpRequest = {\n   *   path: '',\n   *   httpOptions: {\n   *     baseUrl: 'https://<custom-full-url>',\n   *     apiVersion: '',\n   *   },\n   *   httpMethod: 'GET',\n   * };\n   *\n   * The result URL will be: https://<custom-full-url>\n   *\n   */\n  path: string;\n  /**\n   * Optional query parameters to be appended to the request URL.\n   */\n  queryParams?: Record<string, string>;\n  /**\n   * Optional request body in json string or Blob format, GET request doesn't\n   * need a request body.\n   */\n  body?: string | Blob;\n  /**\n   * The HTTP method to be used for the request.\n   */\n  httpMethod: 'GET' | 'POST' | 'PATCH' | 'DELETE';\n  /**\n   * Optional set of customizable configuration for HTTP requests.\n   */\n  httpOptions?: HttpOptions;\n}\n\n/**\n * The ApiClient class is used to send requests to the Gemini API or Vertex AI\n * endpoints.\n */\nexport class ApiClient {\n  readonly clientOptions: ApiClientInitOptions;\n\n  constructor(opts: ApiClientInitOptions) {\n    this.clientOptions = {\n      ...opts,\n      project: opts.project,\n      location: opts.location,\n      apiKey: opts.apiKey,\n      vertexai: opts.vertexai,\n    };\n\n    const initHttpOptions: HttpOptions = {};\n\n    if (this.clientOptions.vertexai) {\n      initHttpOptions.apiVersion =\n        this.clientOptions.apiVersion ?? VERTEX_AI_API_DEFAULT_VERSION;\n      // Assume that proj/api key validation occurs before they are passed in.\n      if (this.getProject() || this.getLocation()) {\n        initHttpOptions.baseUrl = `https://${this.clientOptions.location}-aiplatform.googleapis.com/`;\n        this.clientOptions.apiKey = undefined; // unset API key.\n      } else {\n        initHttpOptions.baseUrl = `https://aiplatform.googleapis.com/`;\n        this.clientOptions.project = undefined; // unset project.\n        this.clientOptions.location = undefined; // unset location.\n      }\n    } else {\n      initHttpOptions.apiVersion =\n        this.clientOptions.apiVersion ?? GOOGLE_AI_API_DEFAULT_VERSION;\n      initHttpOptions.baseUrl = `https://generativelanguage.googleapis.com/`;\n    }\n\n    initHttpOptions.headers = this.getDefaultHeaders();\n\n    this.clientOptions.httpOptions = initHttpOptions;\n\n    if (opts.httpOptions) {\n      this.clientOptions.httpOptions = this.patchHttpOptions(\n        initHttpOptions,\n        opts.httpOptions,\n      );\n    }\n  }\n\n  isVertexAI(): boolean {\n    return this.clientOptions.vertexai ?? false;\n  }\n\n  getProject() {\n    return this.clientOptions.project;\n  }\n\n  getLocation() {\n    return this.clientOptions.location;\n  }\n\n  getApiVersion() {\n    if (\n      this.clientOptions.httpOptions &&\n      this.clientOptions.httpOptions.apiVersion !== undefined\n    ) {\n      return this.clientOptions.httpOptions.apiVersion;\n    }\n    throw new Error('API version is not set.');\n  }\n\n  getBaseUrl() {\n    if (\n      this.clientOptions.httpOptions &&\n      this.clientOptions.httpOptions.baseUrl !== undefined\n    ) {\n      return this.clientOptions.httpOptions.baseUrl;\n    }\n    throw new Error('Base URL is not set.');\n  }\n\n  getRequestUrl() {\n    return this.getRequestUrlInternal(this.clientOptions.httpOptions);\n  }\n\n  getHeaders() {\n    if (\n      this.clientOptions.httpOptions &&\n      this.clientOptions.httpOptions.headers !== undefined\n    ) {\n      return this.clientOptions.httpOptions.headers;\n    } else {\n      throw new Error('Headers are not set.');\n    }\n  }\n\n  private getRequestUrlInternal(httpOptions?: HttpOptions) {\n    if (\n      !httpOptions ||\n      httpOptions.baseUrl === undefined ||\n      httpOptions.apiVersion === undefined\n    ) {\n      throw new Error('HTTP options are not correctly set.');\n    }\n    const baseUrl = httpOptions.baseUrl.endsWith('/')\n      ? httpOptions.baseUrl.slice(0, -1)\n      : httpOptions.baseUrl;\n    const urlElement: Array<string> = [baseUrl];\n    if (httpOptions.apiVersion && httpOptions.apiVersion !== '') {\n      urlElement.push(httpOptions.apiVersion);\n    }\n    return urlElement.join('/');\n  }\n\n  getBaseResourcePath() {\n    return `projects/${this.clientOptions.project}/locations/${\n      this.clientOptions.location\n    }`;\n  }\n\n  getApiKey() {\n    return this.clientOptions.apiKey;\n  }\n\n  getWebsocketBaseUrl() {\n    const baseUrl = this.getBaseUrl();\n    const urlParts = new URL(baseUrl);\n    urlParts.protocol = 'wss';\n    return urlParts.toString();\n  }\n\n  setBaseUrl(url: string) {\n    if (this.clientOptions.httpOptions) {\n      this.clientOptions.httpOptions.baseUrl = url;\n    } else {\n      throw new Error('HTTP options are not correctly set.');\n    }\n  }\n\n  private constructUrl(\n    path: string,\n    httpOptions: HttpOptions,\n    prependProjectLocation: boolean,\n  ): URL {\n    const urlElement: Array<string> = [this.getRequestUrlInternal(httpOptions)];\n    if (prependProjectLocation) {\n      urlElement.push(this.getBaseResourcePath());\n    }\n    if (path !== '') {\n      urlElement.push(path);\n    }\n    const url = new URL(`${urlElement.join('/')}`);\n\n    return url;\n  }\n\n  private shouldPrependVertexProjectPath(request: HttpRequest): boolean {\n    if (this.clientOptions.apiKey) {\n      return false;\n    }\n    if (!this.clientOptions.vertexai) {\n      return false;\n    }\n    if (request.path.startsWith('projects/')) {\n      // Assume the path already starts with\n      // `projects/<project>/location/<location>`.\n      return false;\n    }\n    if (\n      request.httpMethod === 'GET' &&\n      request.path.startsWith('publishers/google/models')\n    ) {\n      // These paths are used by Vertex's models.get and models.list\n      // calls. For base models Vertex does not accept a project/location\n      // prefix (for tuned model the prefix is required).\n      return false;\n    }\n    return true;\n  }\n\n  async request(request: HttpRequest): Promise<HttpResponse> {\n    let patchedHttpOptions = this.clientOptions.httpOptions!;\n    if (request.httpOptions) {\n      patchedHttpOptions = this.patchHttpOptions(\n        this.clientOptions.httpOptions!,\n        request.httpOptions,\n      );\n    }\n\n    const prependProjectLocation = this.shouldPrependVertexProjectPath(request);\n    const url = this.constructUrl(\n      request.path,\n      patchedHttpOptions,\n      prependProjectLocation,\n    );\n    if (request.queryParams) {\n      for (const [key, value] of Object.entries(request.queryParams)) {\n        url.searchParams.append(key, String(value));\n      }\n    }\n    let requestInit: RequestInit = {};\n    if (request.httpMethod === 'GET') {\n      if (request.body && request.body !== '{}') {\n        throw new Error(\n          'Request body should be empty for GET request, but got non empty request body',\n        );\n      }\n    } else {\n      requestInit.body = request.body;\n    }\n    requestInit = await this.includeExtraHttpOptionsToRequestInit(\n      requestInit,\n      patchedHttpOptions,\n    );\n    return this.unaryApiCall(url, requestInit, request.httpMethod);\n  }\n\n  private patchHttpOptions(\n    baseHttpOptions: HttpOptions,\n    requestHttpOptions: HttpOptions,\n  ): HttpOptions {\n    const patchedHttpOptions = JSON.parse(\n      JSON.stringify(baseHttpOptions),\n    ) as HttpOptions;\n\n    for (const [key, value] of Object.entries(requestHttpOptions)) {\n      // Records compile to objects.\n      if (typeof value === 'object') {\n        // @ts-expect-error TS2345TS7053: Element implicitly has an 'any' type\n        // because expression of type 'string' can't be used to index type\n        // 'HttpOptions'.\n        patchedHttpOptions[key] = {...patchedHttpOptions[key], ...value};\n      } else if (value !== undefined) {\n        // @ts-expect-error TS2345TS7053: Element implicitly has an 'any' type\n        // because expression of type 'string' can't be used to index type\n        // 'HttpOptions'.\n        patchedHttpOptions[key] = value;\n      }\n    }\n    return patchedHttpOptions;\n  }\n\n  async requestStream(\n    request: HttpRequest,\n    // TODO: b/407059430 - Replace with HttpResponse.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): Promise<any> {\n    let patchedHttpOptions = this.clientOptions.httpOptions!;\n    if (request.httpOptions) {\n      patchedHttpOptions = this.patchHttpOptions(\n        this.clientOptions.httpOptions!,\n        request.httpOptions,\n      );\n    }\n\n    const prependProjectLocation = this.shouldPrependVertexProjectPath(request);\n    const url = this.constructUrl(\n      request.path,\n      patchedHttpOptions,\n      prependProjectLocation,\n    );\n    if (!url.searchParams.has('alt') || url.searchParams.get('alt') !== 'sse') {\n      url.searchParams.set('alt', 'sse');\n    }\n    let requestInit: RequestInit = {};\n    requestInit.body = request.body;\n    requestInit = await this.includeExtraHttpOptionsToRequestInit(\n      requestInit,\n      patchedHttpOptions,\n    );\n    return this.streamApiCall(url, requestInit, request.httpMethod);\n  }\n\n  private async includeExtraHttpOptionsToRequestInit(\n    requestInit: RequestInit,\n    httpOptions: HttpOptions,\n  ): Promise<RequestInit> {\n    if (httpOptions && httpOptions.timeout && httpOptions.timeout > 0) {\n      const abortController = new AbortController();\n      const signal = abortController.signal;\n      setTimeout(() => abortController.abort(), httpOptions.timeout);\n      requestInit.signal = signal;\n    }\n    requestInit.headers = await this.getHeadersInternal(httpOptions);\n    return requestInit;\n  }\n\n  private async unaryApiCall(\n    url: URL,\n    requestInit: RequestInit,\n    httpMethod: 'GET' | 'POST' | 'PATCH' | 'DELETE',\n  ): Promise<HttpResponse> {\n    return this.apiCall(url.toString(), {\n      ...requestInit,\n      method: httpMethod,\n    })\n      .then(async (response) => {\n        await throwErrorIfNotOK(response);\n        return new HttpResponse(response);\n      })\n      .catch((e) => {\n        if (e instanceof Error) {\n          throw e;\n        } else {\n          throw new Error(JSON.stringify(e));\n        }\n      });\n  }\n\n  private async streamApiCall(\n    url: URL,\n    requestInit: RequestInit,\n    httpMethod: 'GET' | 'POST' | 'PATCH' | 'DELETE',\n    // TODO: b/407059430 - Replace with HttpResponse.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): Promise<AsyncGenerator<any>> {\n    return this.apiCall(url.toString(), {\n      ...requestInit,\n      method: httpMethod,\n    })\n      .then(async (response) => {\n        await throwErrorIfNotOK(response);\n        return this.processStreamResponse(response);\n      })\n      .catch((e) => {\n        if (e instanceof Error) {\n          throw e;\n        } else {\n          throw new Error(JSON.stringify(e));\n        }\n      });\n  }\n\n  async *processStreamResponse(\n    response: Response,\n    // TODO: b/407059430 - Replace with HttpResponse.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): AsyncGenerator<any> {\n    const reader = response?.body?.getReader();\n    const decoder = new TextDecoder('utf-8');\n    if (!reader) {\n      throw new Error('Response body is empty');\n    }\n\n    try {\n      let buffer = '';\n      while (true) {\n        const {done, value} = await reader.read();\n        if (done) {\n          if (buffer.trim().length > 0) {\n            throw new Error('Incomplete JSON segment at the end');\n          }\n          break;\n        }\n        const chunkString = decoder.decode(value);\n        buffer += chunkString;\n        let match = buffer.match(responseLineRE);\n        while (match) {\n          const processedChunkString = match[1];\n          try {\n            const chunkData = JSON.parse(processedChunkString);\n            yield chunkData;\n            buffer = buffer.slice(match[0].length);\n            match = buffer.match(responseLineRE);\n          } catch (e) {\n            throw new Error(\n              `exception parsing stream chunk ${processedChunkString}. ${e}`,\n            );\n          }\n        }\n      }\n    } finally {\n      reader.releaseLock();\n    }\n  }\n  private async apiCall(\n    url: string,\n    requestInit: RequestInit,\n  ): Promise<Response> {\n    return fetch(url, requestInit).catch((e) => {\n      throw new Error(`exception ${e} sending request`);\n    });\n  }\n\n  getDefaultHeaders(): Record<string, string> {\n    const headers: Record<string, string> = {};\n\n    const versionHeaderValue =\n      LIBRARY_LABEL + ' ' + this.clientOptions.userAgentExtra;\n\n    headers[USER_AGENT_HEADER] = versionHeaderValue;\n    headers[GOOGLE_API_CLIENT_HEADER] = versionHeaderValue;\n    headers[CONTENT_TYPE_HEADER] = 'application/json';\n\n    return headers;\n  }\n\n  private async getHeadersInternal(\n    httpOptions: HttpOptions | undefined,\n  ): Promise<Headers> {\n    const headers = new Headers();\n    if (httpOptions && httpOptions.headers) {\n      for (const [key, value] of Object.entries(httpOptions.headers)) {\n        headers.append(key, value);\n      }\n      // Append a timeout header if it is set, note that the timeout option is\n      // in milliseconds but the header is in seconds.\n      if (httpOptions.timeout && httpOptions.timeout > 0) {\n        headers.append(\n          SERVER_TIMEOUT_HEADER,\n          String(Math.ceil(httpOptions.timeout / 1000)),\n        );\n      }\n    }\n    await this.clientOptions.auth.addAuthHeaders(headers);\n    return headers;\n  }\n\n  /**\n   * Uploads a file asynchronously using Gemini API only, this is not supported\n   * in Vertex AI.\n   *\n   * @param file The string path to the file to be uploaded or a Blob object.\n   * @param config Optional parameters specified in the `UploadFileConfig`\n   *     interface. @see {@link UploadFileConfig}\n   * @return A promise that resolves to a `File` object.\n   * @throws An error if called on a Vertex AI client.\n   * @throws An error if the `mimeType` is not provided and can not be inferred,\n   */\n  async uploadFile(\n    file: string | Blob,\n    config?: UploadFileConfig,\n  ): Promise<File> {\n    const fileToUpload: File = {};\n    if (config != null) {\n      fileToUpload.mimeType = config.mimeType;\n      fileToUpload.name = config.name;\n      fileToUpload.displayName = config.displayName;\n    }\n\n    if (fileToUpload.name && !fileToUpload.name.startsWith('files/')) {\n      fileToUpload.name = `files/${fileToUpload.name}`;\n    }\n\n    const uploader = this.clientOptions.uploader;\n    const fileStat = await uploader.stat(file);\n    fileToUpload.sizeBytes = String(fileStat.size);\n    const mimeType = config?.mimeType ?? fileStat.type;\n    if (mimeType === undefined || mimeType === '') {\n      throw new Error(\n        'Can not determine mimeType. Please provide mimeType in the config.',\n      );\n    }\n    fileToUpload.mimeType = mimeType;\n\n    const uploadUrl = await this.fetchUploadUrl(fileToUpload, config);\n    return uploader.upload(file, uploadUrl, this);\n  }\n\n  private async fetchUploadUrl(\n    file: File,\n    config?: UploadFileConfig,\n  ): Promise<string> {\n    let httpOptions: HttpOptions = {};\n    if (config?.httpOptions) {\n      httpOptions = config.httpOptions;\n    } else {\n      httpOptions = {\n        apiVersion: '', // api-version is set in the path.\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Goog-Upload-Protocol': 'resumable',\n          'X-Goog-Upload-Command': 'start',\n          'X-Goog-Upload-Header-Content-Length': `${file.sizeBytes}`,\n          'X-Goog-Upload-Header-Content-Type': `${file.mimeType}`,\n        },\n      };\n    }\n\n    const body: Record<string, File> = {\n      'file': file,\n    };\n    const httpResponse = await this.request({\n      path: common.formatMap(\n        'upload/v1beta/files',\n        body['_url'] as Record<string, unknown>,\n      ),\n      body: JSON.stringify(body),\n      httpMethod: 'POST',\n      httpOptions,\n    });\n\n    if (!httpResponse || !httpResponse?.headers) {\n      throw new Error(\n        'Server did not return an HttpResponse or the returned HttpResponse did not have headers.',\n      );\n    }\n\n    const uploadUrl: string | undefined =\n      httpResponse?.headers?.['x-goog-upload-url'];\n    if (uploadUrl === undefined) {\n      throw new Error(\n        'Failed to get upload url. Server did not return the x-google-upload-url in the headers',\n      );\n    }\n    return uploadUrl;\n  }\n}\n\nasync function throwErrorIfNotOK(response: Response | undefined) {\n  if (response === undefined) {\n    throw new ServerError('response is undefined');\n  }\n  if (!response.ok) {\n    const status: number = response.status;\n    const statusText: string = response.statusText;\n    let errorBody: Record<string, unknown>;\n    if (response.headers.get('content-type')?.includes('application/json')) {\n      errorBody = await response.json();\n    } else {\n      errorBody = {\n        error: {\n          message: 'exception parsing response',\n          code: response.status,\n          status: response.statusText,\n        },\n      };\n    }\n    const errorMessage = `got status: ${status} ${statusText}. ${JSON.stringify(\n      errorBody,\n    )}`;\n    if (status >= 400 && status < 500) {\n      const clientError = new ClientError(errorMessage);\n      throw clientError;\n    } else if (status >= 500 && status < 600) {\n      const serverError = new ServerError(errorMessage);\n      throw serverError;\n    }\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {ApiClient} from '../_api_client';\nimport {FileStat, Uploader} from '../_uploader';\nimport {getBlobStat, uploadBlob} from '../cross/_cross_uploader';\nimport {File} from '../types';\n\nexport class BrowserUploader implements Uploader {\n  async upload(\n    file: string | Blob,\n    uploadUrl: string,\n    apiClient: ApiClient,\n  ): Promise<File> {\n    if (typeof file === 'string') {\n      throw new Error('File path is not supported in browser uploader.');\n    }\n\n    return await uploadBlob(file, uploadUrl, apiClient);\n  }\n\n  async stat(file: string | Blob): Promise<FileStat> {\n    if (typeof file === 'string') {\n      throw new Error('File path is not supported in browser uploader.');\n    } else {\n      return await getBlobStat(file);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {ApiClient} from '../_api_client';\nimport {FileStat, Uploader} from '../_uploader';\nimport {File, HttpResponse} from '../types';\n\nimport {crossError} from './_cross_error';\n\nexport const MAX_CHUNK_SIZE = 1024 * 1024 * 8; // bytes\nexport class CrossUploader implements Uploader {\n  async upload(\n    file: string | Blob,\n    uploadUrl: string,\n    apiClient: ApiClient,\n  ): Promise<File> {\n    if (typeof file === 'string') {\n      throw crossError();\n    } else {\n      return uploadBlob(file, uploadUrl, apiClient);\n    }\n  }\n\n  async stat(file: string | Blob): Promise<FileStat> {\n    if (typeof file === 'string') {\n      throw crossError();\n    } else {\n      return getBlobStat(file);\n    }\n  }\n}\n\nexport async function uploadBlob(\n  file: Blob,\n  uploadUrl: string,\n  apiClient: ApiClient,\n): Promise<File> {\n  let fileSize = 0;\n  let offset = 0;\n  let response: HttpResponse = new HttpResponse(new Response());\n  let uploadCommand = 'upload';\n  fileSize = file.size;\n  while (offset < fileSize) {\n    const chunkSize = Math.min(MAX_CHUNK_SIZE, fileSize - offset);\n    const chunk = file.slice(offset, offset + chunkSize);\n    if (offset + chunkSize >= fileSize) {\n      uploadCommand += ', finalize';\n    }\n    response = await apiClient.request({\n      path: '',\n      body: chunk,\n      httpMethod: 'POST',\n      httpOptions: {\n        apiVersion: '',\n        baseUrl: uploadUrl,\n        headers: {\n          'X-Goog-Upload-Command': uploadCommand,\n          'X-Goog-Upload-Offset': String(offset),\n          'Content-Length': String(chunkSize),\n        },\n      },\n    });\n    offset += chunkSize;\n    // The `x-goog-upload-status` header field can be `active`, `final` and\n    //`cancelled` in resposne.\n    if (response?.headers?.['x-goog-upload-status'] !== 'active') {\n      break;\n    }\n    // TODO(b/401391430) Investigate why the upload status is not finalized\n    // even though all content has been uploaded.\n    if (fileSize <= offset) {\n      throw new Error(\n        'All content has been uploaded, but the upload status is not finalized.',\n      );\n    }\n  }\n  const responseJson = (await response?.json()) as Record<\n    string,\n    File | unknown\n  >;\n  if (response?.headers?.['x-goog-upload-status'] !== 'final') {\n    throw new Error('Failed to upload file: Upload status is not finalized.');\n  }\n  return responseJson['file'] as File;\n}\n\nexport async function getBlobStat(file: Blob): Promise<FileStat> {\n  const fileStat: FileStat = {size: file.size, type: file.type};\n  return fileStat;\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  WebSocketCallbacks,\n  WebSocketFactory,\n  WebSocket as Ws,\n} from '../_websocket';\n\n// TODO((b/401271082): re-enable lint once BrowserWebSocketFactory is\n// implemented.\n/*  eslint-disable @typescript-eslint/no-unused-vars */\nexport class BrowserWebSocketFactory implements WebSocketFactory {\n  create(\n    url: string,\n    headers: Record<string, string>,\n    callbacks: WebSocketCallbacks,\n  ): Ws {\n    return new BrowserWebSocket(url, headers, callbacks);\n  }\n}\n\nexport class BrowserWebSocket implements Ws {\n  private ws?: WebSocket;\n\n  constructor(\n    private readonly url: string,\n    private readonly headers: Record<string, string>,\n    private readonly callbacks: WebSocketCallbacks,\n  ) {}\n\n  connect(): void {\n    this.ws = new WebSocket(this.url);\n\n    this.ws.onopen = this.callbacks.onopen;\n    this.ws.onerror = this.callbacks.onerror;\n    this.ws.onclose = this.callbacks.onclose;\n    this.ws.onmessage = this.callbacks.onmessage;\n  }\n\n  send(message: string) {\n    if (this.ws === undefined) {\n      throw new Error('WebSocket is not connected');\n    }\n\n    this.ws.send(message);\n  }\n\n  close() {\n    if (this.ws === undefined) {\n      throw new Error('WebSocket is not connected');\n    }\n\n    this.ws.close();\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {Auth} from '../_auth';\n\nexport const GOOGLE_API_KEY_HEADER = 'x-goog-api-key';\n// TODO(b/395122533): We need a secure client side authentication mechanism.\nexport class WebAuth implements Auth {\n  constructor(private readonly apiKey: string) {}\n\n  async addAuthHeaders(headers: Headers): Promise<void> {\n    if (headers.get(GOOGLE_API_KEY_HEADER) !== null) {\n      return;\n    }\n    headers.append(GOOGLE_API_KEY_HEADER, this.apiKey);\n  }\n}\n","/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {ApiClient} from '../_api_client';\nimport {Caches} from '../caches';\nimport {Chats} from '../chats';\nimport {GoogleGenAIOptions} from '../client';\nimport {Files} from '../files';\nimport {Live} from '../live';\nimport {Models} from '../models';\nimport {Operations} from '../operations';\n\nimport {BrowserUploader} from './_browser_uploader';\nimport {BrowserWebSocketFactory} from './_browser_websocket';\nimport {WebAuth} from './_web_auth';\n\nconst LANGUAGE_LABEL_PREFIX = 'gl-node/';\n\n/**\n * The Google GenAI SDK.\n *\n * @remarks\n * Provides access to the GenAI features through either the {@link\n * https://cloud.google.com/vertex-ai/docs/reference/rest | Gemini API} or\n * the {@link https://cloud.google.com/vertex-ai/docs/reference/rest | Vertex AI\n * API}.\n *\n * The {@link GoogleGenAIOptions.vertexai} value determines which of the API\n * services to use.\n *\n * When using the Gemini API, a {@link GoogleGenAIOptions.apiKey} must also be\n * set. When using Vertex AI, currently only {@link GoogleGenAIOptions.apiKey}\n * is supported via Express mode. {@link GoogleGenAIOptions.project} and {@link\n * GoogleGenAIOptions.location} should not be set.\n *\n * @example\n * Initializing the SDK for using the Gemini API:\n * ```ts\n * import {GoogleGenAI} from '@google/genai';\n * const ai = new GoogleGenAI({apiKey: 'GEMINI_API_KEY'});\n * ```\n *\n * @example\n * Initializing the SDK for using the Vertex AI API:\n * ```ts\n * import {GoogleGenAI} from '@google/genai';\n * const ai = new GoogleGenAI({\n *   vertexai: true,\n *   project: 'PROJECT_ID',\n *   location: 'PROJECT_LOCATION'\n * });\n * ```\n *\n */\nexport class GoogleGenAI {\n  protected readonly apiClient: ApiClient;\n  private readonly apiKey?: string;\n  public readonly vertexai: boolean;\n  private readonly apiVersion?: string;\n  readonly models: Models;\n  readonly live: Live;\n  readonly chats: Chats;\n  readonly caches: Caches;\n  readonly files: Files;\n  readonly operations: Operations;\n\n  constructor(options: GoogleGenAIOptions) {\n    if (options.apiKey == null) {\n      throw new Error('An API Key must be set when running in a browser');\n    }\n    // Web client only supports API key mode for Vertex AI.\n    if (options.project || options.location) {\n      throw new Error(\n        'Vertex AI project based authentication is not supported on browser runtimes. Please do not provide a project or location.',\n      );\n    }\n    this.vertexai = options.vertexai ?? false;\n\n    this.apiKey = options.apiKey;\n    this.apiVersion = options.apiVersion;\n    const auth = new WebAuth(this.apiKey);\n    this.apiClient = new ApiClient({\n      auth: auth,\n      apiVersion: this.apiVersion,\n      apiKey: this.apiKey,\n      vertexai: this.vertexai,\n      httpOptions: options.httpOptions,\n      userAgentExtra: LANGUAGE_LABEL_PREFIX + 'web',\n      uploader: new BrowserUploader(),\n    });\n    this.models = new Models(this.apiClient);\n    this.live = new Live(this.apiClient, auth, new BrowserWebSocketFactory());\n    this.chats = new Chats(this.models, this.apiClient);\n    this.caches = new Caches(this.apiClient);\n    this.files = new Files(this.apiClient);\n    this.operations = new Operations(this.apiClient);\n  }\n}\n","export const config = {\r\n    SpeechKey: \"1bbb95ae6838448a9c723fb36b2ddcfb\",\r\n    SpeechRegion: \"eastus\",\r\n    options: {\r\n        enableRetry: true,\r\n        retryOnError: true,\r\n        maxRetries: 3\r\n    }\r\n};\r\n\r\n\r\n\r\n","var _path, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId21(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 901 859\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D48282\",\n    d: \"M686.103 417.914c3 1.883 1.03 2.384-.77 3.352-12.385 6.657-24.707 13.43-37.062 20.14-35.617 19.35-73.176 34.076-111.612 46.672-12.63 4.139-25.432 7.747-38.878 7.896-10.67.118-21.343.012-32.804-.245-10.492-.138-20.195-.024-29.897.09-.734.065-1.467.13-3.037.204-3.949-.005-7.062-.052-10.174-.024-5.329.05-10.657.145-15.985.221-.438-.088-.876-.176-1.93-.558-6.758-1.54-12.892-2.827-19.054-3.964-.537-.1-1.255.783-1.89 1.21a63.86 63.86 0 00-2.08-1.135 21.1 21.1 0 00-3.037-.654c-.431-.049-.862-.098-1.796-.524-2.723-.743-4.943-1.109-7.164-1.475-10.367-2.877-21.011-5.018-31.04-8.794-17.702-6.664-35.155-14.037-52.473-21.66-13.892-6.114-27.587-12.73-41.07-19.703-10.083-5.213-19.711-11.312-29.487-17.11-1.68-.996-4.435-2.036-.918-4.422 6.43.493 12.288 1.068 18.125.899 22.596-.654 45.19-2.289 67.776-2.153 26.408.159 52.824 1.473 79.205 2.889 16.239.871 32.45 2.58 48.613 4.446 15.285 1.764 30.452 1.793 45.735-.023 17.973-2.136 35.99-4.018 54.035-5.387 15.4-1.168 30.867-1.436 46.303-2.14 5.472-.25 10.953-1.04 16.404-.846 22.747.809 45.484 1.884 68.224 2.9 4.144.184 8.283.794 12.42.76 5.108-.043 10.212-.553 15.318-.862z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E18888\",\n    d: \"M685.941 417.588c-4.944.635-10.048 1.145-15.156 1.188-4.137.034-8.276-.576-12.42-.76-22.74-1.016-45.477-2.091-68.224-2.9-5.45-.194-10.932.596-16.404.846-15.436.704-30.903.972-46.303 2.14-18.045 1.369-36.062 3.25-54.035 5.387-15.283 1.816-30.45 1.787-45.735.023-16.162-1.865-32.374-3.575-48.613-4.446-26.38-1.416-52.797-2.73-79.205-2.889-22.586-.136-45.18 1.5-67.776 2.153-5.837.169-11.695-.406-17.777-.93a2450.744 2450.744 0 0155.982-22.384c10.954-4.226 22.084-7.994 33.065-12.15 24.873-9.415 49.747-18.828 74.533-28.464 16.323-6.346 33.231-8.984 50.504-7.111 6.305.683 12.374 4.31 18.33 7.071 2.456 1.139 4.106 1.307 6.5-.051 4.201-2.385 8.55-4.68 13.103-6.238 10.692-3.659 21.9-3.436 32.448-.498 18.21 5.073 36.245 10.954 53.987 17.49 30.517 11.244 60.792 23.152 91.09 34.982 14.076 5.496 27.97 11.462 42.106 17.541zM383.427 492.973c.218-.492.936-1.374 1.473-1.275 6.162 1.137 12.296 2.424 18.725 3.89-6.402-.705-13.092-1.627-20.198-2.615zM435.535 495.894c9.247-.19 18.95-.303 29.006-.228-9.281.226-18.916.265-29.006.228zM406.111 496.596c5.1-.452 10.429-.548 15.758-.597 3.112-.028 6.225.02 9.812.093-2.014.357-4.498.864-6.99.906a230.917 230.917 0 01-18.58-.402zM369.114 489.456c2.04.03 4.26.396 6.663 1.072-2.038-.038-4.26-.387-6.663-1.072zM378.034 491.44c.685-.194 1.511-.067 2.605.227-.643.144-1.554.12-2.605-.226z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId21);\nexport default __webpack_public_path__ + \"static/media/viseme_id_21.26f49166ad23e76f53edc1ffbb04807e.svg\";\nexport { ForwardRef as ReactComponent };","import viseme_id_0 from \"./cartoonVisemes/viseme_id_0.svg\";\r\nimport viseme_id_1 from \"./cartoonVisemes/viseme_id_1.svg\";\r\nimport viseme_id_2 from \"./cartoonVisemes/viseme_id_2.svg\";\r\nimport viseme_id_3 from \"./cartoonVisemes/viseme_id_3.svg\";\r\nimport viseme_id_4 from \"./cartoonVisemes/viseme_id_4.svg\";\r\nimport viseme_id_5 from \"./cartoonVisemes/viseme_id_5.svg\";\r\nimport viseme_id_6 from \"./cartoonVisemes/viseme_id_6.svg\";\r\nimport viseme_id_7 from \"./cartoonVisemes/viseme_id_7.svg\";\r\nimport viseme_id_8 from \"./cartoonVisemes/viseme_id_8.svg\";\r\nimport viseme_id_9 from \"./cartoonVisemes/viseme_id_9.svg\";\r\nimport viseme_id_10 from \"./cartoonVisemes/viseme_id_10.svg\";\r\nimport viseme_id_11 from \"./cartoonVisemes/viseme_id_11.svg\";\r\nimport viseme_id_12 from \"./cartoonVisemes/viseme_id_12.svg\";\r\nimport viseme_id_13 from \"./cartoonVisemes/viseme_id_13.svg\";\r\nimport viseme_id_14 from \"./cartoonVisemes/viseme_id_14.svg\";\r\nimport viseme_id_15 from \"./cartoonVisemes/viseme_id_15.svg\";\r\nimport viseme_id_16 from \"./cartoonVisemes/viseme_id_16.svg\";\r\nimport viseme_id_17 from \"./cartoonVisemes/viseme_id_17.svg\";\r\nimport viseme_id_18 from \"./cartoonVisemes/viseme_id_18.svg\";\r\nimport viseme_id_19 from \"./cartoonVisemes/viseme_id_19.svg\";\r\nimport viseme_id_20 from \"./cartoonVisemes/viseme_id_20.svg\";\r\nimport viseme_id_21 from \"./cartoonVisemes/viseme_id_21.svg\";\r\n\r\n\r\nexport const cartoonVisemes = {\r\n    0: viseme_id_0,\r\n    1: viseme_id_1,\r\n    2: viseme_id_2,\r\n    3: viseme_id_3,\r\n    4: viseme_id_4,\r\n    5: viseme_id_5,\r\n    6: viseme_id_6,\r\n    7: viseme_id_7,\r\n    8: viseme_id_8,\r\n    9: viseme_id_9,\r\n    10: viseme_id_10,\r\n    11: viseme_id_11,\r\n    12: viseme_id_12,\r\n    13: viseme_id_13,\r\n    14: viseme_id_14,\r\n    15: viseme_id_15,\r\n    16: viseme_id_16,\r\n    17: viseme_id_17,\r\n    18: viseme_id_18,\r\n    19: viseme_id_19,\r\n    20: viseme_id_20,\r\n    21: viseme_id_21\r\n};\r\n","var _path, _path2, _path3, _path4, _path5, _path6, _path7;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId0(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512 488\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D38282\",\n    d: \"M295.372 285.742c-2.137.418-4.274.837-7.147 1.113-20.568-.046-40.4.05-60.591.032-15.745-4.46-31.131-8.807-46.518-13.154-3.506-1.535-7.011-3.069-11.059-5.024-9.085-4.828-17.63-9.235-26.173-13.642 0 0 .079-.003.062-.309-5.363-3.43-10.71-6.554-16.058-9.677 0 0 .067-.012.099-.311-1.967-1.795-3.965-3.29-5.963-4.785-.4-1.092-.8-2.184-.657-3.586 1.51-.463 2.48-.616 3.796-.502 2.288.545 4.22.984 6.17 1.07 8.588.385 17.18.813 25.774.944 7.438.113 14.885-.047 22.322-.282 6.84-.217 13.671-.696 20.719-.66 8.126.893 16.043 1.838 23.955 1.797 28.896-.147 57.79-.623 87.17-.915 14.923.085 29.362.14 43.8.095 1.602-.005 3.203-.586 5.28-.91 8.474.221 16.47.504 24.468.605.724.009 1.462-1.153 2.52-1.68 1.392.438 2.457.785 3.522 1.133-.105.593-.21 1.186-.834 2.076-1.012.855-1.504 1.413-1.996 1.971 0 0 .002-.08-.32-.166-6.752 3.734-13.226 7.482-19.586 11.413-2.18 1.347-4.077 3.152-6.103 4.748 0 0 .018-.088-.303-.163-1.773 1.009-3.225 2.091-4.677 3.174 0 0 0-.082-.298-.152-.574.27-.85.608-1.128.947 0 0-.085.108-.534.05-1.985 1.009-3.522 2.077-5.059 3.146 0 0 .004-.08-.287-.166-.778.337-1.265.759-1.752 1.18 0 0 .016-.11-.304-.18a570.775 570.775 0 00-19.633 9.016c-2.328 1.122-4.527 2.51-6.785 3.778-1.172.407-2.344.815-4.184 1.207-7.681 2.245-14.694 4.507-21.708 6.769z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F8E3E2\",\n    d: \"M390.85 236.727c-1.052.02-2.117-.328-3.752-1.012-14.015-6.141-27.365-12.178-40.929-17.693-18.647-7.583-37.314-15.165-56.25-21.974-10.664-3.834-21.747-5.333-31.94 2.502-1.111.855-4.182.207-5.733-.743-5.809-3.559-11.985-5.172-18.628-3.95-6.192 1.139-12.483 2.3-18.366 4.45-12.5 4.571-24.817 9.665-37.113 14.776-17.82 7.408-35.553 15.021-53.324 22.546-.969.154-1.937.307-3.271.496 4.728-2.639 9.662-5.69 14.945-7.916 17.207-7.25 34.504-14.29 51.841-21.226 11.257-4.503 22.444-9.351 34.03-12.813 10.588-3.163 21.661-4.798 31.67 2.729.738.556 2.576.658 3.257.133 9.94-7.661 21.044-6.466 31.582-2.901 17.357 5.871 34.372 12.79 51.401 19.59 14.97 5.977 29.784 12.346 44.608 18.68 2.156.922 3.98 2.62 5.971 4.326z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E2D1D5\",\n    d: \"M227.991 287c19.833-.095 39.666-.19 59.817-.116-6.888.75-14.085 1.542-21.303 1.843-7.01.292-14.043.183-21.063.055-5.544-.102-11.081-.5-17.04-1.062-.417-.296-.41-.72-.41-.72z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F8E3E2\",\n    d: \"M227.634 286.887c.357.114.35.537.345.748-6.397-1.063-12.872-2.028-19.161-3.69-7.798-2.061-15.467-4.624-23.13-7.157-1.449-.48-2.61-1.83-4.238-2.917 15.053 4.209 30.44 8.556 46.184 13.016zM362.396 257.073c1.654-1.533 3.551-3.338 5.73-4.685 6.361-3.931 12.835-7.68 19.627-11.411-8.086 5.403-16.536 10.718-25.357 16.096zM144.016 255.403c8.412 4.071 16.956 8.478 25.725 13.114-4.96-2.076-10.222-4.225-15.305-6.737-3.556-1.757-6.868-4.01-10.42-6.377zM321.623 277.818c1.899-1.32 4.098-2.708 6.426-3.83a515.76 515.76 0 0119.689-9.008c-4.67 2.923-9.622 5.95-14.79 8.548-3.498 1.759-7.3 2.916-11.325 4.29zM295.755 285.791a509.775 509.775 0 0120.946-6.768 509.839 509.839 0 01-20.946 6.768zM128.017 245.41a224.969 224.969 0 0115.93 9.387c-5.255-2.79-10.528-5.924-15.93-9.387zM122.058 240.35c1.964 1.13 3.962 2.625 5.923 4.454-1.987-1.14-3.938-2.614-5.923-4.454zM357.396 260.088c1.1-1.024 2.552-2.106 4.37-3.105-1.096 1.071-2.556 2.06-4.37 3.105zM350.386 264.079c1.176-1.01 2.713-2.078 4.644-3.13-1.165 1.034-2.724 2.053-4.644 3.13zM388.382 241.072c.143-.489.635-1.047 1.332-1.835-.192.436-.587 1.101-1.332 1.835zM348.31 265.078c.163-.347.65-.77 1.468-1.103-.16.402-.652.716-1.468 1.103zM355.954 260.97c-.059-.367.218-.706.833-.974.06.382-.22.692-.833.974z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08888\",\n    d: \"M125.163 235.897c17.423-7.793 35.157-15.406 52.976-22.814 12.296-5.111 24.612-10.205 37.113-14.776 5.883-2.15 12.174-3.311 18.366-4.45 6.643-1.222 12.82.391 18.628 3.95 1.55.95 4.622 1.598 5.733.743 10.193-7.835 21.276-6.336 31.94-2.502 18.936 6.81 37.603 14.391 56.25 21.974 13.564 5.515 26.914 11.552 40.603 17.602-.489.864-1.227 2.026-1.951 2.017-7.998-.101-15.994-.384-24.922-.606-7.7.001-14.471-.006-21.241-.022-9.194-.02-18.388-.046-27.907-.342-2.474-.433-4.626-.78-6.77-.727-12.862.32-25.721 1.01-38.583 1.048-21.82.065-43.641-.26-65.462-.422-6.836.363-13.667.842-20.507 1.059-7.437.235-14.884.395-22.322.282-8.595-.131-17.186-.559-25.775-.943-1.948-.087-3.88-.526-6.169-1.07z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#A54C4C\",\n    d: \"M200.148 236.97c21.609-.239 43.43.087 65.25.022 12.862-.039 25.721-.729 38.584-1.048 2.143-.053 4.295.294 6.692.938.25.482.114.909.114.909-28.895.352-57.79.828-86.685.975-7.912.04-15.829-.904-23.955-1.796z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#C26D6D\",\n    d: \"M311.273 237.85c-.485-.06-.35-.486-.273-.697 9.27-.186 18.464-.16 27.658-.14 6.77.016 13.54.023 20.765.034-1.147.313-2.748.894-4.35.899-14.438.046-28.877-.01-43.8-.095z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId0);\nexport default __webpack_public_path__ + \"static/media/viseme_id_0.4eca0b846461fbb2c961d68671dbdeef.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId1(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512 487\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D38382\",\n    d: \"M342.972 301.383c.093.259.02.454-.786.56-1.078.714-1.593 1.454-2.108 2.194 0 0-.046-.118-.277-.259-1.007.537-1.784 1.214-2.562 1.892a42.055 42.055 0 01-2.975 2.3c-.783.537-1.037.804-1.29 1.07 0 0 .037-.1-.259-.188-1.091.67-1.886 1.43-2.681 2.188 0 0 .002-.08-.283-.135-.543.273-.801.602-1.06.93 0 0-.132.159-.617.033-6.258 2.85-12.03 5.827-17.8 8.804-1.178.708-2.355 1.417-4.18 2.12-1.92.138-3.288.027-4.455.459-18.745 6.938-38.067 8.717-57.857 6.773-5.6-.55-11.237-.716-16.856-1.057-5.175-1.353-10.35-2.706-16.054-4.435-6.686-3.099-12.843-5.822-19-8.545 0 0 .08-.02.045-.324-3.151-1.806-6.267-3.307-9.384-4.808 0 0-.071.062-.224-.308-.582-.435-1.012-.5-1.441-.566 0 0 .07-.006.099-.305-.358-.453-.746-.608-1.134-.762a18.642 18.642 0 01-1.986-1.362c-1.597-1.129-2.778-1.85-3.959-2.573 0 0 .069-.008.077-.33-1.692-1.442-3.393-2.562-5.094-3.681 0 0 .09.033.156-.277-2.671-2.435-5.407-4.56-8.144-6.684 0 0 .069-.04.11-.345-.35-.435-.743-.564-1.136-.693 0 0 .073-.01.222-.312-2.31-2.422-4.77-4.542-7.23-6.662 0 0 .048-.053.2-.361-3.953-5.44-8.058-10.57-12.297-16.008-4.061-5.666-7.99-11.024-12.254-16.277-.406.329-.474.554-.543.779 0 0-.112-.021.177-.38-2.54-5.434-5.371-10.507-8.476-16.073 1.975-.995 3.667-1.848 5.356-2.361.007.792.016 1.245-.208 1.951-.158 1.075-.405 2.209.042 2.672 4.492 4.655 8.812 9.54 13.752 13.68 5.15 4.317 10.928 7.886 16.605 12.04 18.494 12.078 37.957 21.401 59.387 27.3 6.364 1.317 12.398 2.477 18.776 3.848 14.406 2.988 28.49 3.177 43.007.572 5.437-.888 10.493-1.642 15.469-2.758 1.158-.26 2.04-1.749 3.173-2.937.503-.697.883-1.13 1.212-1.188 1.11.961 2.403 2.21 3.406 2.009 3.07-.615 6.027-1.786 9.407-2.773 10.003-4.384 19.729-8.525 29.205-13.177 4.813-2.363 9.175-5.645 14.1-8.54 10.069-8.02 19.88-15.89 29.403-24.095 1.978-1.704 2.89-4.645 4.66-7.075 4.368.837 2.216 3.401 1.312 4.84-7.235 11.524-14.684 22.914-22.02 34.375-1.004 1.569-1.745 3.306-2.608 4.966 0 0 .023-.065-.294-.17-2.755 2.39-5.194 4.885-7.915 7.564-1.109 1.653-1.936 3.122-2.762 4.59 0 0-.115-.109-.391-.23-3.104 2.753-5.93 5.63-8.758 8.505z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E5E4\",\n    d: \"M125.015 235.074l-5.36 2.701c3.106 5.566 5.936 10.64 8.486 16.016-3.355-4.33-6.426-8.964-9.503-13.594-1.54-2.314-.663-3.684 1.563-4.973 9.001-5.209 17.861-10.664 26.895-15.814 15.965-9.102 31.869-18.33 48.08-26.978 14.793-7.891 30.817-10.96 47.53-9.298 3.347.333 6.438 2.744 9.8 3.573 2.044.504 4.453.103 6.572-.41 3.667-.887 7.175-2.848 10.858-3.19 23.525-2.178 43.865 6.82 63.374 18.582 7.125 4.296 14.366 8.4 21.328 12.937-.702.358-1.178.37-1.989.286-3.054-1.702-5.795-3.273-8.49-4.92-16.785-10.256-33.774-20.115-53.361-24.103-11.19-2.279-22.36-3.754-32.816 3.155-1.327.877-4.243.649-5.729-.234-6.582-3.91-13.725-5.819-21.061-4.458-9.912 1.839-20.519 3.067-29.238 7.608-26.062 13.574-51.35 28.634-76.94 43.114z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E1E0\",\n    d: \"M352.984 215.009l1.785-.048c6.234 3.426 12.126 6.838 17.984 10.309 5.08 3.01 9.982 6.362 15.23 9.04 3.592 1.835 3.741 4.029 2.176 7.08-7.276 14.183-15.707 27.593-26.76 39.592.556-1.518 1.297-3.255 2.3-4.824 7.337-11.461 14.786-22.851 22.021-34.375.904-1.439 3.056-4.003-1.332-4.83-.39.066-.403.023-.44-.285-.316-.612-.594-.916-1.101-1.447-10.774-6.888-21.319-13.55-31.863-20.212z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCD2D3\",\n    d: \"M227.124 329.438c5.421-.03 11.059.135 16.658.686 19.79 1.944 39.112.165 57.857-6.773 1.167-.432 2.535-.321 4.122-.346-10.147 4.659-21.024 7.441-32.45 7.999-5.23.255-10.471 1.108-15.676.9-10.116-.403-20.21-1.365-30.51-2.466z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E5E4\",\n    d: \"M140.885 270.035c4.106 5.13 8.211 10.26 12.173 15.733-4.736-4.797-9.328-9.936-13.629-15.418.68-.334 1.068-.325 1.456-.315z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E1E0\",\n    d: \"M140.752 269.726c-.255.3-.643.29-1.322.276-3.674-4.723-7.057-9.441-10.486-14.965-.067-1.1-.088-1.396-.11-1.692 3.929 5.357 7.857 10.715 11.918 16.38zM192.012 316.42c6.017 2.39 12.174 5.113 18.456 8.112a301.815 301.815 0 01-18.456-8.113z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCD2D3\",\n    d: \"M310.634 320.84a271.046 271.046 0 0117.356-8.933c-5.397 3.045-11.196 6.023-17.356 8.933z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E1E0\",\n    d: \"M355.165 288.334c2.439-2.495 4.878-4.99 7.662-7.362-1.782 2.695-3.909 5.267-6.533 7.862-.724-.13-.935-.305-1.13-.5z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E5E4\",\n    d: \"M343.296 301.21c2.503-2.703 5.33-5.579 8.489-8.277-2.501 2.819-5.333 5.46-8.49 8.276zM161.01 294.417c2.61 1.814 5.346 3.94 8 6.419-2.68-1.8-5.276-3.954-8-6.419zM152.912 286.441a52.76 52.76 0 017.15 6.349c-2.473-1.778-4.78-3.89-7.15-6.349z\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E1E0\",\n    d: \"M182.765 311.257c2.885 1.2 6.001 2.7 9.161 4.547-2.947-1.185-5.938-2.715-9.16-4.547z\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E5E4\",\n    d: \"M169.023 301.371c1.55.816 3.25 1.936 4.942 3.412-1.603-.798-3.197-1.954-4.942-3.412zM354.883 288.518c.476.01.687.185 1.09.446-.967 1.374-2.111 2.64-3.554 4.026.528-1.35 1.355-2.819 2.464-4.472zM173.993 305.378c1.076.423 2.257 1.145 3.567 2.149-1.067-.43-2.264-1.14-3.567-2.149z\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCD2D3\",\n    d: \"M330.366 311.08c.463-.699 1.258-1.457 2.4-2.109-.459.754-1.263 1.401-2.4 2.108z\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E5E4\",\n    d: \"M337.515 305.663a7.124 7.124 0 012.323-1.733c-.505.671-1.277 1.15-2.323 1.733zM340.38 304.019c.213-.622.728-1.362 1.636-2.079-.183.67-.759 1.315-1.636 2.079z\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCD2D3\",\n    d: \"M333.252 309.046c-.025-.172.229-.44.708-.874.007.148-.211.464-.708.874z\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E1E0\",\n    d: \"M179.92 309.284c.3-.116.689.039 1.047.527-.34.137-.65-.06-1.046-.527zM180.996 310.39c.301-.243.731-.178 1.282.222-.304.252-.729.17-1.282-.222z\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E5E4\",\n    d: \"M159.944 293.327c.306-.13.699 0 1.04.473-.353.158-.654-.029-1.04-.473z\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCD2D3\",\n    d: \"M329.017 311.973c-.067-.366.19-.695.773-.967.068.373-.19.688-.773.967z\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E5E4\",\n    d: \"M128.498 253.449c.358.192.38.488.426 1.228-.325.433-.608.289-.896-.218-.004-.456.064-.681.47-1.01z\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F18A8B\",\n    d: \"M351.986 268.142c-4.566 2.866-8.928 6.148-13.741 8.511-9.476 4.652-19.202 8.793-29.508 12.977-4.608.084-8.533.337-12.459.589-.38.433-.76.866-1.584 1.387-6.002.25-11.56.413-17.613.586-.823.031-1.152.053-1.924.037-5.418-.14-10.398-.387-15.368-.265-1.814.045-3.627 1.476-5.404 1.402-5.806-.242-11.595-.886-17.833-1.42-2.364-.153-4.285-.285-6.208-.367-5.416-.232-10.997-2.443-16.086 1.32-21.098-5.74-40.56-15.064-58.805-27.396 4.963-3.626 9.617-7.205 14.774-9.774 21.842-10.881 45.247-12.474 69.14-11.262 9.764.495 19.568.088 29.35.303 13.942.305 28.056-.418 41.776 1.54 16.005 2.285 30.54 9.092 41.493 21.832z\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#811918\",\n    d: \"M352.345 268.112c-11.312-12.71-25.847-19.517-41.852-21.802-13.72-1.958-27.834-1.235-41.777-1.54-9.78-.215-19.585.192-29.348-.303-23.894-1.212-47.299.38-69.14 11.262-5.158 2.57-9.812 6.148-14.948 9.516-5.754-3.642-11.532-7.21-16.682-11.528-4.94-4.14-9.26-9.025-13.752-13.68-.447-.463-.2-1.597.354-2.69 6.758-1.84 12.923-3.284 19.01-5 33.297-9.387 66.93-16.435 101.784-16.242 27.822.154 55.713-.816 82.997 6.12 18.712 4.757 37.33 9.882 56.25 14.91.42-.01.582-.084.744-.159 0 0 .012.043.034.034-1.382 2.363-2.293 5.304-4.27 7.008-9.524 8.205-19.335 16.075-29.404 24.094z\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08788\",\n    d: \"M384.982 237.068c-18.66-4.96-37.279-10.086-55.991-14.843-27.284-6.936-55.175-5.966-82.997-6.12-34.854-.193-68.487 6.855-101.784 16.242-6.087 1.716-12.252 3.16-18.777 4.747-.405-.435-.414-.888-.42-1.68 25.592-14.82 50.88-29.88 76.94-43.454 8.72-4.541 19.327-5.77 29.239-7.608 7.336-1.361 14.48.548 21.061 4.458 1.486.883 4.402 1.111 5.73.234 10.454-6.91 21.625-5.434 32.815-3.155 19.587 3.988 36.576 13.847 53.362 24.104 2.694 1.646 5.435 3.217 8.489 4.92 10.88 6.758 21.424 13.42 32.18 20.714.192.902.172 1.172.153 1.441z\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCF6F6\",\n    d: \"M236.994 291.99c5.796.49 11.585 1.134 17.391 1.376 1.777.074 3.59-1.357 5.404-1.402 4.97-.122 9.95.126 15.437.6.605 1.057.699 1.742.776 2.74-.024.932-.031 1.554-.039 2.176-14.108 2.602-28.191 2.413-42.536-.894 1-1.886 2.284-3.24 3.567-4.595z\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FAF1EF\",\n    d: \"M276.373 297.477c-.402-.619-.395-1.24-.096-2.363.628-1.31.963-2.122 1.298-2.933 5.559-.162 11.117-.325 16.996-.31-.688 1.1-1.571 2.589-2.73 2.848-4.975 1.116-10.031 1.87-15.468 2.758zM236.552 291.947c-.841 1.398-2.125 2.753-3.47 4.426-6.094-.84-12.128-1.999-18.492-3.316 4.757-3.921 10.338-1.71 15.754-1.478 1.923.082 3.844.214 6.208.368z\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E1E0\",\n    d: \"M296.227 290.594c3.977-.627 7.902-.88 12.13-.932-2.697 1.155-5.655 2.326-8.724 2.94-1.003.202-2.296-1.047-3.406-2.008z\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D38382\",\n    d: \"M385.241 237.134c-.24-.335-.22-.605-.183-1.28.296-.102.574.202.89.814-.125.383-.287.458-.707.466zM277.081 292.192c.16.8-.176 1.611-.787 2.611-.369-.497-.463-1.182-.625-2.202.26-.356.589-.378 1.412-.41z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId1);\nexport default __webpack_public_path__ + \"static/media/viseme_id_1.97ebb94b8a9f8700e9f5008b53f71f96.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId2(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 910 865\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D48282\",\n    d: \"M687.045 415.875c3.96.855 3.571 3.333 1.999 5.914-5.208 8.549-10.257 17.214-15.87 25.493-9.267 13.666-18.797 27.16-28.485 40.53-3.65 5.039-7.875 9.698-12.139 14.248-12.345 13.173-24.468 26.587-37.38 39.187-14.506 14.154-31.475 25.057-49.2 34.874-13.641 7.556-27.624 14.138-42.926 17.326-10.771 2.244-21.647 4.224-32.575 5.408-9.673 1.048-19.578 1.86-29.212.962-19.526-1.82-38.889-5.235-57.294-12.395-18.953-7.373-37.235-16.304-53.555-28.48-12.445-9.285-24.849-18.963-35.617-30.07-13.436-13.86-25.836-28.864-37.482-44.281-15.406-20.397-29.653-41.67-44.375-62.582-.45-.639-.643-1.458-.73-2.793 2.076-.83 3.926-1.059 5.849-.953 16.58 17.706 35.546 32.007 55.7 44.812.902.572 2.14.618 3.343 1.223 7.36 5.575 14.332 11.262 21.89 16.016 21.804 13.714 43.507 27.663 67.363 37.717 1.713.722 3.752.669 5.645.972.007-.004.02-.017.244.054 2.751 1.027 5.277 1.981 8.023 3.204 1.865 1.026 3.446 2 5.165 2.508 9.178 2.717 18.39 5.318 27.982 8.065a5510.234 5510.234 0 0036.071 4.209c.654.01 1.028.007 1.452.013.05.009.029.11.253.274.576.288.928.412 1.652.413 2.512-.262 4.67-.267 6.789-.563 9.597-1.344 19.182-2.77 29.048-4.17.646-.029 1.014-.055 1.77-.125 8.907-2.698 17.468-5.234 25.91-8.116 1.503-.513 2.517-2.462 4.045-3.804 1.012-.358 1.735-.66 2.539-.625 3.731-.873 7.382-2.082 11.408-3.315 1.326-.306 2.342-.457 3.216-.892 13.344-6.633 27.05-12.652 39.899-20.139 14.57-8.49 28.37-18.303 42.859-27.64 1.465-.824 2.64-1.468 3.678-2.286 20.35-16.014 40.683-32.047 61.306-48.194.771-.744 1.257-1.372 1.742-2z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08787\",\n    d: \"M217.98 417.928c-1.85.229-3.7.458-5.8.92.237-.824.432-2.347 1.26-2.869 7.663-4.838 15.277-9.789 23.205-14.164 23.259-12.836 46.401-25.922 70.07-37.963 22.343-11.367 45.114-21.944 68.051-32.066 13.262-5.852 27.38-9.285 42.161-8.8 9.575.313 18.6 2.502 26.891 7.363 3.837 2.25 7.481 3.214 11.635.489 13.274-8.71 27.94-7.416 42.737-5.952 19.183 1.898 36.842 8.396 53.743 17.148 25.383 13.145 50.664 26.489 75.871 39.968 15.649 8.367 31.1 17.104 46.596 25.756 4.2 2.344 8.236 4.98 12.496 7.8-.336.944-.822 1.572-1.928 2.154a1995.19 1995.19 0 01-29.513-7.92c-49.022-13.557-98.856-21.706-149.81-21.676-41.986.024-83.986.053-125.951 1.158-21.417.564-43.102 1.759-64.077 5.758-32.808 6.255-65.117 15.13-97.637 22.896z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F28A8B\",\n    d: \"M380.04 521.993c-2.525-.955-5.05-1.91-7.83-3.075a29.815 29.815 0 00-.666-.53l.444.619c-1.887-.307-3.926-.254-5.639-.976-23.856-10.054-45.56-24.003-67.363-37.717-7.558-4.754-14.53-10.441-21.702-16.295 12.17-10.993 26.817-16.493 41.387-22.217 34.212-13.439 69.898-13.74 105.816-12.166 11.955.523 24.027 2.375 35.84 1.319 26.824-2.4 53.593-3.059 80.28.168 30.402 3.677 57.176 15.81 79.359 37.33-14.135 9.238-27.935 19.05-42.506 27.541-12.85 7.487-26.555 13.506-39.899 20.14-.874.434-1.89.585-3.637.93-4.22 1.02-7.644 1.98-11.069 2.939-.722.302-1.445.604-2.763.71-6.733-.436-12.942-1.37-18.995-.76-10.615 1.071-11.367-1.365-11.041 12.977-.369.025-.737.051-1.445-.355-.412-1.426-.473-2.42-.56-3.412-.6-6.948-1.386-7.835-8.446-8.046-6.799-.203-13.612.06-20.41-.17-5.172-.176-7.711 1.788-7.575 7.18.076 2.965-.473 5.947-.74 8.92-.373.003-.747.005-1.402-.471-.4-4.135-.308-7.817-.752-11.434-.167-1.361-1.564-3.668-2.429-3.681-10.93-.166-21.868-.028-32.8.166-.84.015-1.662 1.03-2.807 1.39-1.678-1.035-2.998-2.527-4.407-2.616a349.88 349.88 0 00-22.23-.712c-1.337 0-2.675 1.498-4.013 2.304z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#801918\",\n    d: \"M620.319 468.354c-22.536-21.42-49.31-33.554-79.712-37.23-26.687-3.228-53.456-2.569-80.28-.17-11.813 1.057-23.885-.795-35.84-1.318-35.918-1.574-71.604-1.273-105.816 12.166-14.57 5.724-29.217 11.224-41.51 21.903-1.268-.012-2.506-.058-3.408-.63-20.154-12.805-39.12-27.106-55.7-44.812 32.447-8.1 64.756-16.976 97.564-23.231 20.975-3.999 42.66-5.194 64.077-5.758 41.965-1.105 83.965-1.134 125.95-1.158 50.955-.03 100.789 8.12 149.811 21.676 9.62 2.66 19.26 5.252 29.227 8.037-20.002 16.192-40.335 32.225-60.685 48.24-1.039.817-2.213 1.461-3.678 2.285z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEFBFA\",\n    d: \"M411.006 523.207c.83-.55 1.651-1.565 2.49-1.58 10.933-.194 21.87-.332 32.801-.166.865.013 2.262 2.32 2.429 3.681.444 3.617.351 7.299.472 11.422-11.798-.897-23.598-2.261-35.79-4.132-1.063-3.413-1.733-6.319-2.402-9.225zM450.93 537.056c.217-2.982.766-5.964.69-8.929-.136-5.392 2.403-7.356 7.576-7.18 6.797.23 13.61-.033 20.409.17 7.06.211 7.846 1.098 8.447 8.046.086.992.147 1.986.282 3.416-9.527 1.832-19.112 3.257-28.709 4.6-2.118.297-4.277.302-7.012.387-.947-.17-1.3-.285-1.653-.4 0 0 .021-.101-.03-.11z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF7F6\",\n    d: \"M410.69 523.017c.985 3.096 1.655 6.002 2.324 9.31-9.199-2.24-18.41-4.841-27.588-7.558-1.719-.509-3.3-1.482-5.165-2.508 1.117-1.074 2.455-2.572 3.793-2.572 7.412 0 14.832.24 22.229.712 1.41.09 2.73 1.58 4.407 2.616zM490.443 532.885c-.713-14.297.039-11.86 10.654-12.932 6.053-.61 12.262.324 18.706.816-.933 1.538-1.947 3.487-3.45 4-8.442 2.882-17.003 5.418-25.91 8.116zM522.937 520.34c3.343-1.297 6.767-2.256 10.612-3.254-3.23 1.172-6.88 2.381-10.612 3.254z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F28A8B\",\n    d: \"M451.184 537.33c.129-.05.482.067 1.058.358-.13.054-.482-.07-1.058-.358z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D48282\",\n    d: \"M371.994 519.003a24.45 24.45 0 01-.45-.615c.137.107.275.213.44.459.03.139.017.152.01.156z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId2);\nexport default __webpack_public_path__ + \"static/media/viseme_id_2.47e9964d97d2fc4a7e032d99ff4f73da.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId3(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 509 490\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08788\",\n    d: \"M276.275 188.991s.368-.064.626.265c.57.464.881.6 1.193.737 0 0-.106-.015-.012.268.702.846 1.254 1.487 1.926 1.957 14.935 10.442 28.13 22.711 39.28 37.16 1.792 2.322 3.88 4.415 5.831 6.614 0 0-.101-.01-.16.24-.101.447-.142.647-.504 1.007-2.376.695-4.411 1.576-6.488 1.69-4.743.26-9.507.145-14.607.153-6.521-4.445-12.504-9.17-18.933-13.179-5.414-3.375-11.058-7.335-17.104-8.567-19.429-3.96-37.247-1.114-51.292 14.947-2.823 3.229-7.77 4.599-12.224 6.792-6.665-.42-12.846-.807-19.058-1.567.459-1.6.734-2.976 1.471-4.03 12.048-17.216 26.556-31.923 44.512-43.012 4.782-2.953 10.191-3.89 15.306-1.38 5.566 2.733 10.092 4.233 16.272.22 3.322-2.157 9.226-.339 13.965-.315z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E2E2\",\n    d: \"M276.045 188.643c-4.51.324-10.413-1.494-13.735.663-6.18 4.013-10.706 2.513-16.272-.22-5.115-2.51-10.524-1.573-15.306 1.38-17.956 11.089-32.464 25.796-44.512 43.013-.737 1.053-1.012 2.43-1.492 4.424.17 1.411.215 2.114.507 2.69 9.057 17.894 20.864 33.616 36.806 45.975 17.307 13.416 40.058 14.608 59.015 3.338 1.498-.89 3.299-1.27 4.98-1.872.02.015.056.051.056.051-7.41 6.663-16.45 9.835-26.042 10.824-24.424 2.52-42.038-9.597-56.348-27.732-6.081-7.706-11.48-15.957-17.064-24.046-4.853-7.03-5.051-11.757-.205-18.063 11.776-15.322 25.197-28.981 41.51-39.57 7.69-4.99 15.518-3.84 23.55-.77 1.808.692 4.396.603 6.19-.154 6.09-2.57 12.063-2.051 18.362.07zM325.067 235.615c-1.899-1.822-3.987-3.915-5.779-6.236-11.15-14.45-24.345-26.72-39.28-37.161-.672-.47-1.224-1.111-1.916-2.009 4.289 2.229 9.102 4.262 12.953 7.457 12.4 10.285 23.786 21.62 33.03 34.925.516.742.636 1.758.992 3.024zM324.057 242.05c-2.116 3.58-4.232 7.16-6.685 10.863-.338.121-.357.1-.406-.27 2.318-3.789 4.684-7.208 7.061-10.62l.03.027zM305.064 269.056c-2.124 2.592-4.247 5.184-6.697 7.882-.327.105-.35.08-.412-.278 2.311-2.787 4.686-5.216 7.073-7.635l.036.031zM310.089 263.081c-1.464 1.916-2.928 3.832-4.709 5.862-.316.113-.34.092-.397-.276 1.641-2.128 3.339-3.89 5.053-5.634l.053.048zM292.755 282.577c-1.666 1.48-3.333 2.96-5.361 4.45-.362.008-.381-.016-.39-.356a31.79 31.79 0 015.18-4.5c.175.156.571.406.571.406zM317.045 253.044c-1.113 1.92-2.235 3.83-3.687 5.863-.329.122-.344.106-.387-.255 1.319-2.12 2.681-3.88 4.044-5.638l.03.03z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E2E2\",\n    d: \"M324.776 237.078c.041-.2.082-.399.204-.892-.023 1.66-.129 3.616-.578 5.717-.345.147-.365.13-.438-.243.222-1.775.517-3.179.812-4.582zM313.037 259.037c-.765 1.28-1.538 2.553-2.63 3.935-.318.11-.353.077-.465-.29.95-1.469 2.011-2.569 3.072-3.669l.023.024zM296.062 279.055c-.43.653-.86 1.307-1.658 1.973-.367.012-.388-.01-.416-.345.658-.78 1.343-1.223 2.04-1.658l.034.03zM298.052 277.055c-.466.62-.944 1.227-1.706 1.917-.284.083-.306.062-.336-.289.65-.79 1.329-1.228 2.008-1.666l.034.038zM294.047 281.051c-.293.406-.595.8-1.095 1.36-.197.166-.593-.084-.613-.509.545-.578 1.111-.731 1.677-.884l.03.033zM287.045 287.048a2.748 2.748 0 01-.707.962c-.246.075-.282.039-.3-.264.314-.446.644-.59.975-.735l.032.037zM278.013 189.728c-.23.129-.543-.008-.946-.386.227-.12.545 0 .946.386z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D38281\",\n    d: \"M287.005 286.67c-.323.486-.653.63-.987 1.061-1.663.905-3.464 1.285-4.962 2.175-18.957 11.27-41.708 10.078-59.015-3.338-15.942-12.359-27.75-28.08-36.806-45.974-.292-.577-.336-1.28-.475-2.318 6.201-.008 12.382.379 19.255 1.042 5.72 3.426 11.037 6.204 15.695 9.83 4.696 3.655 8.388 8.628 13.173 12.133 4.013 2.94 8.752 5.645 13.544 6.624 13.098 2.678 24.57-.64 33.608-11.219 6.504-7.61 13.897-14.256 23.67-17.574 4.755-.038 9.519.077 14.262-.183 2.077-.114 4.112-.995 6.488-1.69.026 1.242-.269 2.646-.501 4.413-2.304 3.783-4.67 7.202-6.988 10.992-1.314 2.129-2.676 3.888-3.995 6.008-1.018 1.461-2.08 2.561-3.046 4.013-1.603 2.113-3.3 3.874-4.954 5.992-2.33 2.787-4.705 5.216-7.016 8.003-.616.795-1.295 1.234-1.957 2.014-.667.786-1.352 1.23-2.01 2.009-.538.488-1.104.64-1.824 1.062-1.825 1.708-3.496 3.147-5.16 4.926z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#801918\",\n    d: \"M303.36 239.082c-9.428 3.348-16.821 9.993-23.325 17.604-9.039 10.578-20.51 13.897-33.608 11.22-4.792-.98-9.53-3.685-13.544-6.625-4.785-3.505-8.477-8.478-13.173-12.134-4.658-3.625-9.974-6.403-15.21-9.796 3.76-2.47 8.708-3.84 11.531-7.068 14.045-16.06 31.863-18.907 51.292-14.947 6.046 1.232 11.69 5.192 17.104 8.567 6.43 4.009 12.412 8.734 18.933 13.179z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId3);\nexport default __webpack_public_path__ + \"static/media/viseme_id_3.23fa4a12cd57681366e7643e95050a64.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId4(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 510 489\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D28383\",\n    d: \"M295.179 314.828c-3.114.732-6.227 1.465-10.206 2.182-2.692.04-4.568-.16-6.336.188-18.561 3.638-36.644 1.425-54.481-4.216-5.486-1.735-11.017-3.326-16.527-4.984 0 0-.298.106-.428-.335-6.581-4.079-13.02-7.738-19.486-11.344-3.237-1.805-6.528-3.514-9.794-5.266 0 0 .077-.031.113-.346-1.27-1.092-2.576-1.868-3.882-2.644-2.883-2.665-5.766-5.33-9.023-8.454-2.984-2.487-5.594-4.515-8.204-6.542 0 0 .066-.062.082-.346-.354-.414-.724-.544-1.094-.674 0 0 .073-.033.092-.322-.352-.418-.722-.548-1.092-.678 0 0 .074-.034.093-.322-.352-.418-.722-.548-1.093-.678 0 0 .074-.034.093-.321-.352-.419-.722-.55-1.093-.68 0 0 .073-.032.09-.319-.351-.42-.72-.554-1.088-.687 0 0 .073-.032.138-.37-1.001-1.098-2.068-1.855-3.135-2.613 0 0 .062-.048.063-.322-.355-.416-.71-.559-1.067-.701 0 0 .071-.019.07-.296-.358-.42-.714-.562-1.069-.704 0 0 .07-.02.068-.297-.357-.419-.712-.56-1.068-.703 0 0 .07-.02.069-.296-.358-.42-.714-.562-1.07-.704 0 0 .07.03.131-.299-2.665-2.442-5.392-4.555-8.12-6.668 0 0 .066-.063.084-.347-.352-.415-.723-.546-1.093-.677 0 0 .07-.03.068-.305-.358-.419-.715-.562-1.072-.705 0 0 .071-.018.061-.291-.36-.419-.712-.565-1.063-.71 0 0 .076.038.105-.282-4.151-4.222-8.332-8.123-12.868-12.355 4.261-1.27 8.054-2.402 11.798-3.188-1.188 1.135-2.327 1.924-3.38 2.655 1.277.45 2.376.838 3.706 1.476 12.47 6.446 24.709 12.642 37.178 19.056 2.397 1.381 4.473 2.816 6.771 3.58.997.332 2.453-.715 3.71-.912.01.225.03.674.002 1.065.806 1.31 1.465 2.587 2.501 3.09 5.472 2.658 11.039 5.12 16.884 7.845 5.488 1.94 10.632 3.79 15.847 5.412 32.691 10.164 65 9.51 97.21-3.583 5.343-2.221 10.253-4.6 15.318-6.583 3.144-1.23 3.892-3.18 3.35-6.08 4.198-.585 8.08-1.241 11.956-1.92.061-.01.072-.302.443-.521a2401.952 2401.952 0 0036.73-20.99c1.923.285 3.643.84 5.612 1.475.065-1.103.13-2.194.55-3.27 1.438.539 2.522 1.061 3.709 1.633l-1.908 3.606s.01-.13-.29-.129c-2.816 3.089-5.331 6.177-7.847 9.265.068.288-.03.498-.716.738-.67.31-.916.512-1.163.714a451.965 451.965 0 01-6.392 6.955c-.546.797-.637 1.195-.727 1.592.082.276-.004.482-.814.567-3.41 3.344-6.265 6.738-9.12 10.132 0 0-.058-.067-.351-.099-.419.35-.544.73-.67 1.111 0 0-.036-.08-.346-.202-3.759 3.317-7.208 6.757-10.658 10.196 0 0-.026-.07-.311-.08-.421.355-.557.721-.693 1.087 0 0-.025-.075-.352-.165-1.775 1.396-3.222 2.883-4.67 4.369.079.31-.022.543-.833.643-.753-.04-.976-.022-1.54.066-2.093 1.743-3.846 3.415-5.599 5.087 0 0-.033-.077-.36-.163-1.765 1.017-3.2 2.118-4.636 3.22 0 0-.036-.075-.373-.149-5.82 2.697-11.34 5.395-16.768 8.27-2.72 1.441-5.269 3.205-7.895 4.822 0 0 .008-.072-.35-.148-3.733 1.58-7.107 3.233-10.481 4.888z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E2E1\",\n    d: \"M389.526 242.378c.18-1.22.753-2.301 1.516-3.743-1.187-.572-2.27-1.094-4.055-1.75-27.597-10.74-54.574-21.148-81.356-32.035-15.172-6.167-29.96-8.096-45.111-.102-1.893 1-5.387.69-7.331-.425-9.898-5.67-20.507-6.1-30.965-3.547-31.14 7.6-59.826 21.824-89.23 34.087l-11.847 3.532c4.536 4.232 8.717 8.133 12.845 12.39-4.43-2.92-8.957-6.03-13.043-9.638-.68-.601.064-4.596.978-4.964 27.078-10.883 54.213-21.627 81.449-32.11 11.097-4.271 22.608-7.492 34.658-5.94 5.445.7 10.683 2.944 16.048 4.365 1.68.445 3.843 1.247 5.15.6 16.189-8.008 31.954-6.117 48.153.493 27.179 11.092 54.661 21.44 81.98 32.194 1.381.544 3.36 1.97 3.367 2.996.007 1.24-1.795 2.49-3.206 3.597zM207.85 308.32c5.289 1.336 10.82 2.927 16.306 4.662 17.837 5.641 35.92 7.854 54.48 4.216 1.77-.347 3.645-.148 5.922-.16-5.017 1.019-10.45 2.494-15.96 2.884-21.114 1.497-41.21-2.903-60.748-11.602z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCFAF9\",\n    d: \"M157.196 454.993c-5.49-3.509-11.616-5.857-14.6-12.781 1.65 0 3.2-.487 3.967.082a149.1 149.1 0 0111.276 9.239c.53.48-.14 2.281-.643 3.46z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E2E1\",\n    d: \"M178.04 291.38c3.147 1.425 6.438 3.134 9.675 4.94 6.467 3.605 12.905 7.264 19.353 11.256-9.636-5.053-19.272-10.46-29.027-16.195zM306.398 310.042c2.238-1.571 4.787-3.335 7.507-4.775 5.427-2.876 10.948-5.574 16.807-8.284-7.724 4.379-15.825 8.696-24.314 13.06z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBF1F0\",\n    d: \"M350.365 282.954c3.125-3.312 6.574-6.752 10.367-10.04-3.119 3.404-6.58 6.659-10.367 10.04zM362.383 271.968c2.537-3.287 5.392-6.681 8.622-10.027-2.518 3.34-5.41 6.63-8.622 10.027z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E2E1\",\n    d: \"M381.29 251.18c2.223-2.891 4.738-5.98 7.611-9.04-2.2 2.967-4.758 5.906-7.61 9.04zM137.025 254.39a66.654 66.654 0 017.995 6.373c-2.69-1.78-5.293-3.916-7.995-6.374zM157.032 273.397c2.503 1.697 5.113 3.725 7.774 6.074-2.521-1.7-5.095-3.721-7.774-6.074zM295.514 314.699c3.04-1.526 6.413-3.18 10.178-4.741-3.02 1.599-6.431 3.105-10.178 4.74zM336.393 294.053c1.402-1.637 3.155-3.309 5.265-4.746.37.438.382.642.393.845-1.769 1.29-3.538 2.578-5.658 3.901z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBF1F0\",\n    d: \"M344.338 288.155a26.991 26.991 0 014.38-4.212c-1.112 1.432-2.584 2.754-4.38 4.212z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E2E1\",\n    d: \"M331.397 297.084c1.084-1.04 2.52-2.142 4.319-3.136-1.08 1.097-2.524 2.086-4.319 3.136zM174.193 288.392c1.265.447 2.57 1.223 3.818 2.35-1.298-.44-2.537-1.23-3.818-2.35zM149.024 265.353c.96.462 2.028 1.22 3.01 2.35-1.024-.435-1.964-1.244-3.01-2.35z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBF1F0\",\n    d: \"M361.308 273.022c-.138-.316-.013-.697.446-1.028.162.354-.01.659-.446 1.028z\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E2E1\",\n    d: \"M144.982 261.299c.288-.123.644.02.992.474-.313.138-.619-.036-.992-.474z\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBF1F0\",\n    d: \"M342.324 290.048c-.284-.1-.296-.303-.324-.812.205-.323.428-.34.977-.287.092.378-.144.687-.653 1.1zM372.243 261.199c-.154-.22-.063-.618.33-1.109.174.248.044.59-.33 1.109z\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E2E1\",\n    d: \"M133.984 251.294c.277-.117.629.03.982.484-.301.132-.605-.045-.982-.484z\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBF1F0\",\n    d: \"M349.303 284.023c-.131-.3.005-.667.461-1.012.15.33-.022.638-.461 1.012z\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E2E1\",\n    d: \"M145.984 262.298c.287-.122.642.02.99.475-.312.137-.616-.037-.99-.475zM155.971 272.315c.312-.138.682-.008 1.017.447-.342.157-.65-.011-1.017-.447zM154.971 271.315c.312-.138.682-.008 1.017.447-.342.157-.65-.011-1.017-.447zM153.971 270.315c.313-.138.683-.008 1.018.447-.344.157-.652-.011-1.018-.447zM152.971 269.314c.313-.137.683-.007 1.018.448-.344.157-.652-.011-1.018-.448zM151.971 268.31c.312-.137.68-.003 1.016.454-.342.154-.65-.016-1.016-.455zM135.972 253.312c.314-.138.685-.007 1.018.45-.345.156-.653-.013-1.018-.45zM146.984 263.298c.286-.122.642.02.99.475-.312.138-.616-.037-.99-.475zM147.986 264.296c.284-.12.64.023.988.478-.31.136-.613-.04-.988-.478zM134.981 252.297c.288-.12.645.022.991.477-.314.137-.618-.038-.99-.477zM379.38 252.821c-.015-.194.232-.396.714-.705.006.162-.222.43-.713.705z\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08888\",\n    d: \"M132.945 235.207c29.453-12.607 58.14-26.83 89.279-34.431 10.458-2.553 21.067-2.124 30.965 3.547 1.944 1.114 5.438 1.424 7.33.425 15.152-7.994 29.94-6.065 45.112.102 26.782 10.887 53.76 21.295 81 32.02.282 1.208.217 2.3.152 3.402-1.97-.635-3.689-1.19-6.066-1.487a551.448 551.448 0 01-24.558-1.215c-20.39-1.44-40.754-3.62-61.167-4.245-24.278-.745-48.598-.188-72.9-.168-3.326.003-6.662.034-9.978.268-26.36 1.858-52.716 3.768-79.074 5.662l-3.475-1.225c1.053-.73 2.192-1.52 3.38-2.655z\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#821A1A\",\n    d: \"M133.27 239.338c26.128-2.145 52.484-4.055 78.844-5.913 3.316-.234 6.652-.265 9.978-.268 24.302-.02 48.622-.577 72.9.168 20.413.626 40.778 2.805 61.167 4.245 7.962.562 15.934.985 24.355 1.484-11.61 6.9-23.674 13.787-36.317 20.481-3.2-1.239-5.744-2.588-8.455-3.283-23.218-5.959-46.741-8.534-70.696-6.103-3.3.335-6.696.95-9.93.528-16.787-2.188-33.571-2.055-50.236.508-10.44 1.605-20.692 4.433-31.392 6.735-1.333.1-2.3.178-3.27.256-12.238-6.196-24.478-12.392-36.947-18.838z\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F08A8B\",\n    d: \"M173.851 257.898c10.337-2.28 20.59-5.108 31.03-6.713 16.664-2.563 33.448-2.696 50.236-.508 3.233.421 6.629-.193 9.93-.528 23.954-2.431 47.477.144 70.695 6.103 2.71.695 5.254 2.044 8.119 3.342.21.412.198.703.137.714-3.877.679-7.758 1.335-12.397 1.9-4.25-.088-7.824-.53-11.207.08-2.33.421-4.397 2.301-6.072 3.242-.975-.545-2.653-1.485-4.744-2.485-1.793.035-3.173.13-4.942.145-5.46 1.898-10.66 1.639-15.93.992-1.177-.144-2.456.549-4.025.829-.778.054-1.22.134-2.017.154-1.492.878-2.626 1.818-3.713 2.774.047.016-.017-.06-.315-.21a265.737 265.737 0 00-6.116-2.29c-3.445-.075-6.46-.008-9.844-.056-2.784.417-5.2.95-7.795 1.132-2.256-.72-4.325-1.145-6.412-1.446-6.484-.937-12.986 1.986-19.778-.326-5.03.17-9.75.599-14.582 1.138-.11.109.103-.117.036-.455-1.774-.86-3.482-1.384-5.6-2.025-2.113-.118-3.817-.12-5.89-.207-2.509-.3-4.658-.437-6.782-.743-4.952-.715-9.768-4.049-14.914-.715 0 0-.02-.449-.243-.932-2.437-1.29-4.65-2.098-6.865-2.906z\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCFAF9\",\n    d: \"M228.999 265.001c6.484 2.054 12.986-.869 19.47.068 2.087.301 4.156.725 6.39 1.912.307 3.823.456 6.829.605 9.834l1.91-.09v-7c2.464-1.838 4.067-3.032 5.67-4.226 3.015-.068 6.03-.135 9.515.26 3.355 3.25 4.839 3.667 6.375 2.12 0 0 .064.076.405.084 1.455-.908 2.569-1.822 3.682-2.737.44-.08.882-.161 1.938.063 6.449.86 12.597.973 13.739 9.22l.481-6.448 5.846-4.79c1.38-.096 2.76-.191 4.567.143 2.89 3.718 5.522 6.962 3.414 11.487-31.842 13.084-64.15 13.737-96.842 3.573a159.225 159.225 0 01-15.848-5.83c.696-3.53 1.702-6.447 2.71-9.363 1.702 0 3.406.002 5.559.47 2.175.983 3.9 1.498 5.627 2.013 0 0-.212.226-.123.502.51.714 1.014 1.585 1.341 1.523 4.537-.854 9.05-1.837 13.569-2.788z\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBF1F0\",\n    d: \"M313.373 274.89c1.741-4.514-.892-7.758-3.368-11.416 1.664.571 3.342 1.51 4.317 2.056 1.675-.94 3.742-2.82 6.072-3.242 3.383-.61 6.957-.168 10.89-.154 1.3 2.994.552 4.944-2.592 6.174-5.065 1.983-9.975 4.362-15.319 6.583zM202.655 263.194c-.637 3.003-1.643 5.92-2.65 9.255-5.533-2.112-11.1-4.574-16.572-7.232-1.036-.503-1.695-1.78-2.5-3.09 5.172-3.725 9.988-.391 14.94.324 2.124.306 4.273.443 6.782.743z\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E2E1\",\n    d: \"M173.488 257.92a62.665 62.665 0 017.218 2.66c-1.033.679-2.489 1.726-3.486 1.395-2.298-.765-4.374-2.2-6.77-3.58.737-.297 1.705-.375 3.038-.475z\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBF1F0\",\n    d: \"M304.636 263.19c-1.244 1.418-2.876 2.756-5.457 4.871l-.481 6.447c-1.142-8.246-7.29-8.359-13.402-9.192.954-.585 2.233-1.278 3.41-1.134 5.27.647 10.47.906 15.93-.992zM262.676 265.383c-1.235 1.31-2.838 2.504-5.303 4.341v7l-1.91.091c-.148-3.005-.297-6.01-.425-9.482 2.438-1 4.854-1.533 7.638-1.95zM228.69 264.743c-4.21 1.21-8.723 2.192-13.26 3.046-.327.062-.83-.81-1.231-1.632 4.741-.815 9.463-1.244 14.492-1.414zM278.636 267.73c-1.238 1.696-2.722 1.28-5.647-1.828 1.757.345 3.553 1.011 5.647 1.827zM214.145 265.426c-1.66-.177-3.385-.692-5.15-1.557 1.668.173 3.376.696 5.15 1.557zM282.664 265.165c-.756.976-1.87 1.89-3.371 2.781.745-.963 1.88-1.903 3.37-2.781z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId4);\nexport default __webpack_public_path__ + \"static/media/viseme_id_4.a0c9d96afded7fb433dd18726786f66c.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId5(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512 487\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D18382\",\n    d: \"M309.205 306.835c-11.385 4.423-22.925 8.173-36.099 8.037-11.78-.35-22.794-.556-33.809-.713-.41-.006-.826.462-1.24.71-.218.041-.436.083-1.119-.274-8.281-2.415-16.119-4.36-23.91-6.475-4.43-1.202-8.784-2.685-13.172-4.04 0 0 .087-.045.028-.346-2.72-1.418-5.381-2.535-8.043-3.652 0 0 .108-.018.084-.315-2.688-1.767-5.353-3.238-8.018-4.71 0 0 .068-.014.027-.346-1.085-.793-2.129-1.254-3.173-1.715-6.034-4.01-12.227-7.806-18.042-12.113-3.348-2.48-6.082-5.788-9.468-9.204-10.24-10.745-20.11-21.002-29.96-31.279-1.061-1.106-3.888-2.108-.156-3.52 2.784.415 5.278.566 7.845.96 9.265 4.132 18.445 8.05 27.655 11.9 5.696 2.381 11.437 4.658 17.382 7.254 1.812 1.18 3.4 2.09 5.169 3.29 5.697 2.413 11.214 4.535 16.92 6.673.188.015.568.01.906.217 6.202 1.43 12.066 2.653 18.264 4.062 13.47 1.638 26.604 3.09 40.194 4.659 7.145-.245 13.836-.607 20.792-.968.434-.049.604-.098 1.106-.086.78.02 1.227-.023 2.004 0 1.182-.177 2.033-.417 3.292-.664 3.728-.715 7.047-1.424 10.776-2.135 5.467-1.423 10.524-2.845 15.952-4.273 6.1-1.949 11.83-3.89 17.926-5.881 4.64-1.723 8.914-3.396 13.28-5.38 8.654-4.961 17.194-9.652 25.788-14.24 3.256-1.739 6.638-3.243 10.427-4.941 4.132.11 7.799.306 11.411.86-5.448 6.83-10.888 13.264-16.191 19.807-.935 1.153-1.3 2.768-1.928 4.169 0 0-.056-.065-.343-.107-.432.324-.577.69-.723 1.055 0 0-.001-.074-.28-.076-.427.358-.573.719-.72 1.078 0 0 0-.074-.283-.083-.427.355-.57.719-.714 1.083 0 0 .038-.084-.275-.123-3.445 3.346-6.577 6.731-9.71 10.117 0 0-.016-.068-.303-.075-.426.357-.566.72-.705 1.085 0 0-.004-.071-.295-.096-.43.346-.57.717-.71 1.088 0 0-.016-.073-.336-.178-1.764 1.34-3.208 2.785-4.653 4.23 0 0-.029-.073-.315-.178-1.174.475-2.063 1.054-3.283 1.75-1.684 1.556-3.035 2.996-4.386 4.435 0 0-.044-.066-.373-.176-5.06 3.2-9.792 6.51-14.524 9.82-.181.069-.363.137-.979.206-.434.001-.82-.02-.82-.02l-.138.419s-.041-.12-.353-.14c-6.101 3.171-11.89 6.365-17.679 9.558z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F6E3E2\",\n    d: \"M122.846 236.615c-3.443 1.677-.616 2.679.444 3.785 9.851 10.277 19.722 20.534 29.644 31.125-.923-.086-2.147-.254-2.848-.949-10.205-10.101-20.376-20.238-30.439-30.48-1.083-1.103-1.443-2.915-1.84-3.764 5.54-2.872 10.245-5.58 15.176-7.781 4.052-1.809 8.44-2.848 12.564-4.514 20.58-8.31 41.01-17.002 61.731-24.941 8.301-3.18 17.21-4.773 26.276-6.813.434.275.436.679.052.763-5.052 1.222-9.928 1.835-14.355 3.585-25.294 9.998-50.511 20.195-75.686 30.49-7.025 2.874-13.819 6.314-20.72 9.494zM372.477 262.1c.256-1.338.621-2.953 1.556-4.106 5.303-6.543 10.743-12.977 16.108-20.147-2.107-2.003-4.05-3.634-6.285-4.564-33.422-13.916-66.012-29.926-100.863-40.467.006-.224.025-.671.025-.671 7.805 2.22 15.866 3.799 23.366 6.786 20.76 8.267 41.077 17.688 62.014 25.453 7.855 2.914 15.064 6.86 22.672 10.093 3.738 1.588 3.588 3.24.98 6.147-5.545 6.181-10.652 12.753-16.025 19.092-.824.972-2.106 1.556-3.548 2.383z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E7D9D9\",\n    d: \"M282.807 192.065c.21.08.192.527-.28.777-8.6-.124-16.718-.817-23.695 5.01-1.048.875-3.964.586-5.385-.244-6.071-3.545-12.443-5.304-19.457-4.646 0 0-.002-.404-.005-.606 7.444-3.267 13.682.694 20.205 3.187 1.241.475 3.266.91 4.04.277 5.611-4.597 12.184-4.864 19.657-4.507 1.923.372 3.092.496 4.261.62 0 0 .448.053.659.132z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FAD6D7\",\n    d: \"M200.037 304.404c4.207 1.031 8.561 2.514 12.991 3.716 7.791 2.116 15.629 4.06 23.59 6.382-12.423-1.657-24.85-4.124-36.581-10.098zM238.487 314.926c-.016-.305.4-.773.81-.767 11.015.157 22.028.364 33.357.775-2.374.492-5.07 1.058-7.752.999-8.664-.193-17.324-.616-26.415-1.007zM309.56 306.883c5.434-3.241 11.223-6.435 17.386-9.619-4.703 2.925-9.774 5.85-14.862 8.744-.679.386-1.444.62-2.524.875zM329.497 296.703c4.409-3.2 9.14-6.51 14.235-9.732-4.396 3.267-9.154 6.444-14.235 9.732z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F6E3E2\",\n    d: \"M359.41 275.065c2.78-3.344 5.912-6.73 9.398-10.055-2.78 3.378-5.913 6.696-9.399 10.055z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FAD6D7\",\n    d: \"M184.029 295.388c2.543 1.14 5.208 2.612 7.903 4.433-2.573-1.134-5.177-2.618-7.903-4.433zM192.002 300.407c2.5.792 5.162 1.909 7.903 3.371-2.527-.785-5.134-1.915-7.903-3.37zM344.41 287.101a18.502 18.502 0 014.103-4.057c.418.402.448.61.479.817-1.415 1.058-2.829 2.115-4.582 3.24z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F6E3E2\",\n    d: \"M352.394 281.093a23.293 23.293 0 014.348-4.146c-1.101 1.441-2.555 2.76-4.348 4.146zM349.31 283.889c-.349-.236-.379-.443-.465-.962.832-.89 1.721-1.47 2.932-1.957-.501 1.044-1.324 1.995-2.467 2.919z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FAD6D7\",\n    d: \"M180.915 293.307c.89.15 1.934.611 3.018 1.44-.928-.133-1.896-.63-3.018-1.44z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F6E3E2\",\n    d: \"M281.98 191.587c-1 .222-2.17.098-3.642-.21.956-.168 2.215-.151 3.642.21zM357.307 277.033c-.123-.295.016-.666.483-1.01.144.329-.038.632-.483 1.01zM358.308 276.033c-.12-.28.02-.644.481-1.002.141.31-.04.614-.48 1.002zM371.302 263.032c-.117-.287.028-.652.494-1.003.136.319-.048.622-.494 1.003zM369.305 265.035c-.12-.286.024-.65.488-1.004.139.315-.043.62-.488 1.004z\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FAD6D7\",\n    d: \"M327.508 297.524c-.271-.107-.134-.525-.134-.525s.387.02.535.07c.056.22-.037.39-.401.455z\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F6E3E2\",\n    d: \"M370.301 264.031c-.115-.277.031-.638.494-.995.134.305-.05.609-.494.995z\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#DF8989\",\n    d: \"M233.606 193.046c7.398-.742 13.77 1.017 19.84 4.562 1.422.83 4.338 1.12 5.386.244 6.977-5.827 15.095-5.134 23.69-4.786 35.322 10.291 67.912 26.3 101.334 40.217 2.235.93 4.178 2.56 6.34 4.206-3.584.144-7.25-.053-11.798-.15-8.81-.313-16.749-.619-24.67-1.165-12.148-.838-24.118-4.42-36.51-1.89-2.017.412-4.497-1.446-7.212-2.266-8.632-.347-16.815-.684-25.225-.98-.228.04-.691.01-1.08-.13-6.19-.385-11.991-.794-17.793-.816-3.042-.012-6.086.656-9.337 1.136-.523.334-.82.313-1.413-.287-9.311-.184-18.31-.026-27.491.193-.184.06-.527-.117-1.003-.078-8.59.364-16.705.688-25.085 1.155-.647.053-1.028-.037-1.692-.002-.851.37-1.418.615-2.373.914-6.45.257-12.598-.12-18.555.775-15.946 2.394-31.848 4.852-48.052 3.698-2.494-.15-4.988-.3-7.772-.716 6.611-3.445 13.405-6.885 20.43-9.758 25.175-10.296 50.392-20.493 75.686-30.491 4.427-1.75 9.303-2.363 14.355-3.585z\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#811B1B\",\n    d: \"M310.456 232.029c2.265.809 4.745 2.667 6.761 2.255 12.393-2.53 24.363 1.052 36.511 1.89 7.921.546 15.86.852 24.205 1.253-2.91 1.598-6.29 3.102-9.547 4.84-8.594 4.59-17.134 9.28-26.214 14.149-1.335.079-2.178.028-2.962-.214-20.732-6.4-42.056-8.26-63.606-8.124-8.797.055-17.666 1.482-26.37.737-21.44-1.836-42.533-.113-63.48 4.264-3.425.716-6.646 2.404-9.962 3.642-5.72-2.323-11.46-4.6-17.157-6.981-9.21-3.85-18.39-7.768-27.655-11.9 16.131.91 32.033-1.548 47.979-3.942 5.957-.894 12.105-.518 18.72-.5 1.2-.29 1.845-.803 2.492-1.315.38.09.761.18 1.514.49 1.885.98 3.34 2.225 4.922 2.416 4.899.59 9.856.673 14.77 1.16 3.934.39 5.962-1.039 5.763-5.132 0 0 .343.177.563.51.276 4.025 2.086 5.594 5.833 5.589 4.813-.007 9.624.488 14.44.61 6.813.172 6.814.11 7.494-6.443.28.258.578.28 1.134.361-.184 4.798 1.786 6.449 6.328 6.223 6.462-.32 12.95-.081 19.59-.081l1.568-6.739s.463.031.73.375c.758 2.569.828 5.073 4.23 4.833 5.943-.42 11.914-.549 17.829-1.2 1.288-.142 2.39-1.973 3.577-3.026z\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F18B8C\",\n    d: \"M176.017 256.994c3.09-1.511 6.312-3.2 9.737-3.915 20.947-4.377 42.04-6.1 63.48-4.264 8.704.745 17.573-.682 26.37-.737 21.55-.135 42.874 1.724 63.606 8.124.784.242 1.627.293 2.87.525a97.61 97.61 0 01-12.973 4.88c-6.237-1.523-11.786-2.309-15.965 2.774-1.281-1.349-2.705-3.268-3.793-3.094-3.93.63-9.02-1.876-11.734 3.666-.748.05-1.178.035-1.665-.21-.17-.54-.361-.789-.82-1.293-2.825-.337-5.46-.357-8.527-.388-1.854.187-3.276.385-4.875.527-.443-.02-.642.116-.772.374 0 .023-.02-.024-.332.021-.704.716-1.096 1.385-1.547 2.294-.06.24-.072.731-.37.719-.676-.141-1.052-.27-1.435-.574-.006-.176-.142-.5-.186-.822-.728-.726-1.411-1.13-2.557-1.603-4.738-.117-9.035-.422-13.275-.062-1.396.118-2.646 1.957-4.056 3.43-.176 2.403-.257 4.385-.567 6.083-2.337-10.17-2.337-10.175-12.757-10.146-1.487.004-2.98-.003-4.46.122-2.244.189-4.486.754-6.715.686-4.566-.14-9.123-.594-14.05-.928-1.428 1.716-2.49 3.442-3.34 4.822-.997-5.853-2.69-6.782-11.235-6.86-4.312-.04-5.379 2.236-5.4 5.823 0 0-.38.004-.574-.392-.926-2.136-1.427-5.217-2.428-5.39-4.815-.828-9.765-.872-14.667-1.194-1.588-.909-3.176-1.817-4.988-2.998z\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FAF4F4\",\n    d: \"M219.016 263.192c4.56.325 9.117.779 13.683.919 2.229.068 4.471-.497 6.715-.686 1.48-.125 2.973-.118 4.46-.122 10.42-.029 10.42-.025 12.803 10.486.294 1.08.316 1.534.338 1.99-13.135-1.453-26.27-2.905-39.695-4.917.372-2.93 1.034-5.3 1.696-7.67z\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCFDFD\",\n    d: \"M257.47 275.895c-.477-.572-.499-1.026-.566-1.821.037-2.323.118-4.305.651-6.875 6.126-.799 11.8-1.01 17.824-1.226.817-.019 1.284-.034 1.751-.05 0 0 .136.324.06.945.219 3.1.513 5.58.807 8.059-6.69.361-13.382.723-20.527.968zM281.905 263.645c1.422-.198 2.844-.396 5.013-.365 2.859.394 4.97.56 6.943 1.043.297 2.785.733 5.253 1.17 7.72-3.32.71-6.64 1.419-10.706 2.076-1.592.184-2.438.42-3.283.657-.447.042-.894.084-1.662-.362-.338-2.793-.356-5.099-.375-7.405 0 0 .012-.492.352-.831a29.813 29.813 0 001.579-2.24s.02.048.19.015c.392-.08.596-.17.78-.308z\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FAF4F4\",\n    d: \"M295.44 272.042a22.404 22.404 0 01-1.247-7.767c.689-.414.907-.461 1.126-.508.27.187.461.436.626 1.301.438 1.105.824 1.652 1.21 2.199l.777-2.378c2.398-5.478 7.487-2.973 11.417-3.602 1.088-.174 2.512 1.745 3.597 3.343-.764 1.475-1.344 2.31-1.924 3.146-5.058 1.421-10.115 2.843-15.582 4.266z\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBEEED\",\n    d: \"M218.65 263.183c-.296 2.38-.958 4.75-1.664 7.494-5.908-.85-11.772-2.074-17.974-3.503-.317-3.793.75-6.07 5.062-6.03 8.545.08 10.238 1.008 11.235 6.861.85-1.38 1.912-3.106 3.34-4.822zM181.186 260.283c4.72.031 9.671.075 14.486.904 1.001.172 1.502 3.253 2.239 5.373-5.511-1.741-11.028-3.863-16.725-6.277zM311.392 267.769c.21-.829.79-1.664 1.566-2.75 4.363-5.72 9.912-4.935 15.782-3.362-5.519 2.222-11.248 4.163-17.348 6.112z\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F6E3E2\",\n    d: \"M278.707 266.997c.317 2.318.335 4.624.34 7.356-.181.476-.351.525-.785.574-.559-2.48-.853-4.959-1.066-7.883.459-.317.835-.188 1.51-.047zM281.372 274.84c.515-.3 1.36-.537 2.545-.715-.512.299-1.363.54-2.545.715z\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBEEED\",\n    d: \"M283.7 230.909c-.084 2.175-.558 4.212-1.178 6.877-6.64 0-13.128-.24-19.59.081-4.542.226-6.512-1.425-6.12-6.342 3.01-.777 6.054-1.445 9.096-1.433 5.802.022 11.602.43 17.792.817zM255.158 230.941c-.368 6.896-.37 6.957-7.182 6.785-4.816-.122-9.627-.617-14.44-.61-3.747.005-5.557-1.564-5.65-5.65 8.962-.55 17.96-.709 27.272-.525zM310.006 232.018c-.738 1.064-1.84 2.895-3.127 3.036-5.915.652-11.886.781-17.83 1.201-3.401.24-3.47-2.264-4.001-4.874 8.143-.047 16.326.29 24.958.637zM226.664 231.056c.675 4.054-1.353 5.482-5.287 5.092-4.914-.486-9.871-.568-14.77-1.16-1.582-.19-3.037-1.435-4.656-2.558 8.008-.686 16.122-1.01 24.713-1.374zM199.887 232.209c-.363.386-1.009.898-1.82 1.135.402-.52.969-.765 1.82-1.135z\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FAF4F4\",\n    d: \"M275.03 265.976c-5.675.212-11.35.424-17.381.803.96-.886 2.21-2.725 3.605-2.843 4.24-.36 8.537-.055 13.28.38.478.812.487 1.236.495 1.66z\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F6E3E2\",\n    d: \"M295.13 263.45c-.03.364-.248.411-.798.507-2.444-.118-4.555-.283-6.982-.666 2.32-.198 4.955-.178 7.78.16zM297.615 264.953c.058.729-.201 1.521-.46 2.314-.386-.547-.772-1.094-1.153-1.968.435-.311.865-.297 1.613-.346zM280.624 263.984c-.101.588-.514 1.221-1.207 1.955.111-.57.503-1.24 1.207-1.955zM275.38 265.973c-.36-.421-.368-.845-.383-1.587.678.086 1.361.489 2.089 1.215-.423.338-.89.353-1.707.372zM281.728 263.589c-.006.193-.21.285-.604.34-.038-.224.16-.36.604-.34z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId5);\nexport default __webpack_public_path__ + \"static/media/viseme_id_5.99e9c97c5c7504f659827aaba0942f50.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId6(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512 487\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D28382\",\n    d: \"M281.37 298.77c-2.883.416-5.765.831-9.387.908-2.39-.398-4.047-.583-5.691-.5-22.368 1.133-44.094-1.456-64.71-10.841-1.728-.787-3.78-.862-5.68-1.267 0 0 .077-.018-.018-.304-.975-.433-1.854-.58-2.733-.727-.51-.344-1.021-.689-1.943-1.427-4.712-2.443-9.012-4.494-13.313-6.545 0 0 .07-.015.038-.323-4.033-2.43-8.034-4.55-12.034-6.671 0 0 .069-.02.068-.345-1.021-.775-2.042-1.226-3.062-1.677 0 0 .086.039.078-.267-.782-.692-1.555-1.078-2.328-1.465 0 0 .093-.051.026-.348-1.304-.839-2.54-1.38-3.776-1.922 0 0 .092.047.082-.277-1.036-.785-2.06-1.245-3.086-1.706 0 0 .069-.019.076-.342-1.352-1.108-2.713-1.893-4.073-2.678 0 0 .098.046.07-.276-1.043-.781-2.06-1.24-3.076-1.698 0 0 .07-.018.058-.354-1.024-.766-2.038-1.198-3.052-1.629 0 0 .067-.05.073-.328-.359-.426-.722-.575-1.086-.724 0 0 .075 0 .071-.336-1.021-.758-2.04-1.18-3.057-1.602 0 0 .1-.083.19-.375-5.348-5.402-10.786-10.513-15.81-15.676 8.354-.308 16.294-.564 24.467-.632 9.226 4.037 18.187 7.963 27.238 11.67 1.881.77 4.097.727 6.196 1.4 5.568 2.182 11.097 4.021 16.909 6.083 12.477 2.577 24.673 4.933 37.203 7.388.798.093 1.261.085 2.037.219 1.666.214 3.02.289 4.834.47 3.266.137 6.072.166 9.106.246.228.05.689-.025 1.065.04 1.134-.016 1.891-.098 2.971-.098.763.06 1.204.037 2.104.079 3.566-.057 6.672-.178 10.132-.233 1.762-.15 3.171-.367 4.9-.543.74-.032 1.162-.102 2.032-.13 19.265-1.324 37.713-4.534 55.814-11.2.881-.741 1.377-1.456 2.056-1.752a2832.855 2832.855 0 0134.445-14.807c2.261.161 4.138.825 5.848.528 4.148-.721 8.218-1.89 12.66-2.849 1.577.524 2.812 1.02 4.524 1.706-7.44 6.615-14.286 12.639-21.035 18.77-1.123 1.02-1.821 2.509-2.716 3.781 0 0-.055-.075-.37-.178-1.705 1.052-3.096 2.207-4.486 3.362 0 0 .037-.102-.271-.084-1.163.982-2.018 1.946-2.872 2.91 0 0-.06-.08-.383-.186-2.43 1.633-4.536 3.373-6.643 5.112 0 0-.02-.071-.34-.18-2.1 1.328-3.88 2.766-5.659 4.204 0 0-.016-.07-.332-.18-1.105.647-1.895 1.403-2.686 2.16 0 0 .008-.072-.309-.178-1.108.654-1.899 1.415-2.69 2.176 0 0-.004-.07-.334-.177-4.11 2.321-7.89 4.748-11.671 7.175 0 0 .001-.073-.284-.122-.524.281-.763.612-1.002.942 0 0-.161.162-.65.012-1.684.624-2.88 1.4-4.074 2.174 0 0 .016-.07-.33-.199-3.84 1.582-7.335 3.292-10.83 5.001 0 0-.221.17-.77.016-9.464 2.073-18.383 4.283-27.285 6.564-.55.14-.96.829-1.434 1.263z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08889\",\n    d: \"M148.52 236.228c-7.94.256-15.88.512-24.214.787-.394.019-.322.05-.47-.15-.365-.453-.616-.668-.887-.81.013.036-.058.062-.031-.342.015-.946.004-1.487.306-2.215 10.816-3.993 21.32-7.799 31.825-11.605-.08-.345.031-.609.859-.702 2.279-.309 4.096-.531 5.778-1.132 16.902-6.041 33.65-12.55 50.711-18.101 13.53-4.403 27.294-6.172 40.517 1.942 1.605.985 4.812.96 6.473.004 16.072-9.235 32.081-6.3 48.047-.07 9.135 3.564 17.955 7.962 27.163 11.306 17.026 6.183 34.233 11.867 51.365 17.759-4.102.988-8.172 2.156-12.32 2.877-1.71.297-3.587-.367-6.261-.51-11.716.294-22.559.503-33.75.5-8.474-.224-16.601-.234-25.052-.34-.77-.095-1.219-.096-2.093-.19-2.758-.064-5.09-.037-7.856-.059-2.184-.014-3.933.022-6.066-.014-1.42-.014-2.457.043-3.85.064-.833 0-1.309.037-2.248.033-1.279.047-2.094.21-2.909.208-21.497-.07-42.995-.157-64.955-.292-4.18-.03-7.9-.01-11.858-.035-.24-.045-.724.03-1.066-.003-.799-.004-1.255.026-2.108-.005-1.197-.09-1.998-.119-2.932-.065-.133.083-.398-.083-.882-.069-7.174.277-13.863.54-21.029.866-10.388.164-20.298.264-30.208.363z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F8E1E2\",\n    d: \"M386.303 232.927c-17.473-5.92-34.68-11.604-51.706-17.787-9.208-3.344-18.028-7.742-27.163-11.306-15.966-6.23-31.975-9.165-48.047.07-1.661.955-4.868.98-6.473-.004-13.223-8.114-26.988-6.345-40.517-1.942-17.06 5.552-33.809 12.06-50.711 18.1-1.682.602-3.5.824-5.554 1.09a418.807 418.807 0 0118.717-7.567c11.645-4.389 23.191-9.104 35.028-12.907 11.824-3.8 24.368-6.813 36.175-1.409 8.062 3.69 13.999 2.218 21.714-.76 9.262-3.576 19.911-2.966 29.447.32 16.42 5.658 32.46 12.415 48.723 18.546 8.814 3.324 17.722 6.414 26.655 9.409 5.71 1.914 11.495 3.657 17.338 5.107 4.207 1.044 4.186 2.946 1.39 5.28-7.884 6.578-14.609 14.534-23.893 19.94.544-1.195 1.242-2.683 2.365-3.704 6.75-6.131 13.596-12.155 21.035-18.77-1.712-.687-2.947-1.182-4.523-1.706zM154.628 221.972c-10.083 3.727-20.588 7.533-31.696 11.6-.416 1.022-.228 1.784-.04 2.545 0 0 .07-.026.13.197.36.4.66.575.962.752 0 0-.072-.032-.093.001 5.418 5.144 10.856 10.255 16.16 15.705-2.736-1.141-5.602-2.298-7.879-4.17-4.328-3.56-8.37-7.477-12.412-11.369-.853-.82-1.749-2.252-1.599-3.248.118-.786 1.743-1.503 2.822-1.954 2.913-1.219 5.831-2.495 8.858-3.361 8.091-2.315 16.24-4.426 24.787-6.698zM196.046 287.413c1.757.062 3.808.137 5.535.924 20.617 9.385 42.343 11.974 64.71 10.841 1.645-.083 3.303.102 5.262.422-4.923.627-10.156 1.335-15.384 1.3-20.9-.14-41.011-4.09-60.123-13.487zM281.76 298.819c.085-.482.494-1.17 1.044-1.311 8.902-2.28 17.821-4.491 27.16-6.625a508.553 508.553 0 01-21.652 7.075c-1.966.593-4.103.621-6.551.86zM178.022 278.405c4.174 1.713 8.474 3.764 12.855 6.136-4.189-1.718-8.458-3.758-12.855-6.136zM328.403 283.067a134.34 134.34 0 0111.331-7.114c-3.41 2.43-7.183 4.746-11.331 7.114zM166.024 271.408a116.446 116.446 0 0111.912 6.371c-3.906-1.783-7.846-3.91-11.912-6.371zM311.26 290.965a90.38 90.38 0 0110.464-5.027c-3.1 1.78-6.581 3.422-10.463 5.027zM352.407 268.073a46.341 46.341 0 016.327-5.095c-1.748 1.734-3.86 3.391-6.327 5.095zM346.403 272.081a31.683 31.683 0 015.343-4.13c-1.427 1.437-3.209 2.753-5.343 4.13z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F8E1E2\",\n    d: \"M362.582 260.419c1.027-1.206 2.418-2.361 4.162-3.44-1.031 1.214-2.415 2.352-4.162 3.44zM150.032 260.36c1.232.471 2.593 1.256 3.939 2.4-1.28-.457-2.546-1.272-3.94-2.4zM322.38 286.058c.834-.707 2.029-1.482 3.616-2.167-.824.76-2.04 1.43-3.617 2.167zM359.413 263.114c.517-.884 1.372-1.848 2.582-2.802-.512.914-1.379 1.819-2.582 2.802zM157.044 265.368c1.097.223 2.333.764 3.653 1.654-1.115-.214-2.314-.774-3.653-1.654zM340.366 276.068c.46-.707 1.25-1.468 2.392-2.11-.453.763-1.257 1.41-2.392 2.11zM343.364 274.069c.46-.702 1.25-1.458 2.391-2.106-.452.756-1.256 1.403-2.39 2.106zM163.03 269.36c.895.142 1.916.593 2.932 1.403-.94-.124-1.873-.608-2.932-1.402zM147.007 258.388c.908.143 1.924.601 2.944 1.43-.943-.123-1.888-.618-2.944-1.43zM154.008 263.384c.918.143 1.943.603 2.955 1.433-.96-.125-1.904-.62-2.955-1.433zM144.015 256.403c.903.117 1.917.549 2.938 1.35-.938-.098-1.883-.567-2.938-1.35zM140.017 253.41c.906.11 1.924.533 2.944 1.328-.943-.089-1.887-.552-2.944-1.327zM160.645 267.669c.783.037 1.556.423 2.317 1.158-.784-.038-1.556-.423-2.317-1.158zM193.198 286.386c.832-.2 1.71-.053 2.693.419-.813.193-1.73.06-2.693-.419zM327.06 283.97c-.078-.36.161-.69.722-.97.08.367-.162.684-.722.97zM142.973 255.297c.282-.11.645.038.993.505-.314.13-.613-.058-.993-.505z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#811F1E\",\n    d: \"M148.752 236.416c9.677-.287 19.587-.387 30.308-.385 7.071 1.53 13.332 2.96 19.962 4.474l1.218-5.52s.265.166.473.44c.505 1.179.803 2.081 1.182 3.35 7.515 1.222 14.944 2.125 22.389 2.874.9.09 1.919-1.032 2.823-.949 7.946.732 15.872 1.694 23.824 2.336.968.078 2.057-1.332 3.331-2.21.727-.379 1.212-.6 1.725-.39.553 1.102 1.069 2.35 1.6 2.357 7.809.099 15.62.102 23.426-.115.7-.019 1.354-1.71 2.153-2.749.143-.24.2-.366.172-.47-.056-.216-.156-.42-.137-.887.06-.622.02-.985.267-1.527.687-.122 1.085-.065 1.437.403.691 1.71 1.496 4.17 2.158 4.133 7.315-.416 14.607-1.22 22.138-2.148.54-1.1.847-1.97.997-2.395 1.234 1.028 2.587 3.023 3.605 2.864 6.766-1.05 13.46-2.562 20.177-3.923 10.842-.21 21.685-.42 32.94-.647-10.919 4.886-22.256 9.778-33.57 14.723-.68.296-1.176 1.01-2.154 1.353-1.42-.944-2.464-2.393-3.462-2.362-4.841.149-9.67.696-14.823 1.059-.535-.054-.75-.065-.935-.081.03-.005.001.048-.223-.3-9.497-1.097-18.776-2.546-28.04-2.446-17.098.186-34.145 1-51.291.069-10.8-.586-21.748 1.578-32.842 2.576-.211.067-.53.376-.958.335-5.777-.398-11.126-.756-16.474-1.114-2.061-.331-4.277-.287-6.158-1.058-9.051-3.707-18.012-7.633-27.238-11.67z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCF2F2\",\n    d: \"M313.23 250.147c4.834-.405 9.663-.952 14.504-1.101.998-.031 2.043 1.418 3.162 2.585-17.704 6.842-36.152 10.052-55.184 11.105.32-1.873.853-3.43 1.633-5.224.608-4.548 3.305-6.156 7.254-6.09 4 .066 8.015.617 11.992.393 5.145-.29 10.259-1.136 15.386-1.743 0 0 .029-.053.037.242.412.142.814-.012 1.217-.167zM199.05 250.3s.319-.31.996-.312c5.694.081 11.008-1.072 14.96 3.437 5.61-4.497 17.078-2.7 18.486 2.973.43-.904.834-1.754 1.321-2.535.084.069.249.21.238.632.296 3.068.604 5.715.912 8.363-12.195-2.356-24.391-4.712-36.814-7.712-.184-2.045-.141-3.446-.098-4.847z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCF8F7\",\n    d: \"M277.099 257.747c-.534 1.558-1.068 3.116-1.835 4.946-.655.342-1.076.412-2.186.412-2.087.123-3.486.316-4.885.509-3.106.12-6.212.242-9.933-.048-1.178-3.516-1.742-6.62-2.06-10.022a220.68 220.68 0 0115.424-1.451c3.906-.233 5.955 1.537 5.475 5.654zM236.298 262.957c-.643-2.747-.95-5.394-.786-8.485 3.93-.455 7.389-.477 10.847-.472 6.831.009 9.46 2.679 9.63 9.752-.758.082-1.515.164-2.747.086-.75-.287-.99-.232-1.195.004-2.806-.03-5.612-.06-9.172-.338-2.12-.323-3.486-.396-4.852-.469-.464.007-.927.015-1.725-.078z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F8E1E2\",\n    d: \"M198.622 250.258c.386 1.442.343 2.843.246 4.666-5.585-1.417-11.114-3.256-16.682-5.438 5.31.016 10.659.374 16.436.772z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCF2F2\",\n    d: \"M256.311 263.834c-.491-7.155-3.12-9.825-9.952-9.834-3.458-.005-6.916.017-10.836.05-.461.023-.626-.118-.54-.556 7.12-2.118 14.119-2.859 20.97.346.565 3.105 1.129 6.21 1.848 9.662-.286.37-.727.392-1.49.332zM238.335 263.176c1.054-.068 2.42.005 4.08.22-1.06.069-2.414-.006-4.08-.22zM268.547 263.68c1.045-.259 2.444-.452 4.212-.614-1.041.247-2.45.463-4.212.614zM252.275 263.892c-.023-.286.217-.34.59-.12.099.095-.362.17-.59.12zM254.02 240.984c-1.032.72-2.12 2.13-3.089 2.052-7.952-.642-15.878-1.604-23.824-2.336-.904-.083-1.923 1.04-2.823.95-7.445-.75-14.874-1.653-22.282-3.19.67-1.541 1.318-2.404 1.964-3.266.457-.03.913-.06 1.818.035.447.125.85.17.85.17l.35-.212c3.719-.02 7.437-.041 11.935.167 3.454.775 6.134 1.807 8.801 1.772 7.19-.094 14.373-.685 21.562-.991 3.268-.14 4.918 1.514 4.738 4.85zM308.969 239.661c-7.299.7-14.591 1.504-21.906 1.92-.662.037-1.467-2.423-1.979-4.328.766-1.054 1.306-1.503 1.845-1.953.476-.036.952-.072 2.035.087 1.733.08 2.859-.036 3.984-.152 1.75-.036 3.498-.072 6.001.121 3.158.143 5.56.058 7.963-.028.448.002.896.003 1.682.44.35 1.588.363 2.74.375 3.893z\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F8E1E2\",\n    d: \"M286.466 235.26c-.076.49-.616.94-1.335 1.583-.578.137-.976.08-1.993-.056-8.444.048-16.275.066-24.09.428-1.071.05-2.062 1.817-3.09 2.79-.484.221-.97.442-1.696.822-.062-3.178-1.712-4.831-4.98-4.692-7.19.306-14.372.897-21.562.991-2.667.035-5.347-.997-8.338-1.721 21.18-.094 42.678-.007 64.175.063.815.002 1.63-.161 2.909-.208zM309.201 239.433c-.244-.924-.256-2.077-.283-3.57 8.112-.331 16.239-.321 24.714-.098-6.37 1.575-13.063 3.087-19.829 4.137-1.018.159-2.37-1.836-3.605-2.864-.15.425-.457 1.296-.997 2.395zM199.756 235c.135 1.57-.215 3.155-.734 5.505-6.63-1.514-12.89-2.943-19.484-4.538 6.355-.429 13.044-.69 20.218-.968zM306.486 235.236c-1.977.178-4.38.263-7.102.17 2.012-.207 4.344-.234 7.102-.17zM203.57 235.133c-.25.923-.897 1.786-1.65 2.962-.404-.589-.702-1.491-1.075-2.752.727-.329 1.528-.3 2.725-.21zM292.564 235.163c-.741.188-1.867.304-3.242.26.785-.217 1.821-.274 3.242-.26z\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D28382\",\n    d: \"M122.918 235.713c-.214-.357-.402-1.119-.298-1.954.302.467.313 1.008.298 1.954z\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F8E1E2\",\n    d: \"M206.744 235.141c.24.046-.11.257-.11.257s-.403-.044-.509-.135c-.105-.091.378-.167.619-.122z\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D28382\",\n    d: \"M123.836 236.865c-.153.024-.454-.152-.827-.586.21-.082.462.133.827.586z\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#EE898B\",\n    d: \"M256.2 253.544c-7.098-2.909-14.098-2.168-21.301-.119-.573 1.219-.977 2.069-1.407 2.973-1.408-5.673-12.876-7.47-18.486-2.973-3.952-4.51-9.266-3.356-14.748-3.504 10.416-.996 21.364-3.16 32.164-2.574 17.146.931 34.193.117 51.292-.069 9.263-.1 18.542 1.35 28.039 2.447-4.903.954-10.017 1.8-15.162 2.09-3.977.224-7.992-.327-11.992-.393-3.949-.066-6.646 1.542-7.254 6.09.234-3.882-1.815-5.652-5.721-5.419a220.68 220.68 0 00-15.424 1.45z\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCF8F7\",\n    d: \"M255.987 240.436c1-1.404 1.99-3.171 3.06-3.22 7.816-.363 15.647-.38 23.803-.25.37.62.411.984.296 1.91-.14.768-.121.973-.103 1.178-.676.915-1.33 2.605-2.03 2.624-7.805.217-15.617.214-23.426.115-.531-.006-1.047-1.255-1.6-2.357z\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#EE898B\",\n    d: \"M312.91 250.105c-.082.197-.484.35-.926.215.177-.28.392-.269.927-.215z\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F8E1E2\",\n    d: \"M283.166 239.93c-.141-.081-.16-.286-.122-.795.138-.095.238.108.294.324.027.104-.03.23-.172.47z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId6);\nexport default __webpack_public_path__ + \"static/media/viseme_id_6.5395acd0abcc7535fdd2a4d57ce9a30f.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId7(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 509 490\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D38282\",\n    d: \"M322.807 235.986c.064.443.129.886-.142 1.845-.423 1.097-.51 1.678-.598 2.258 0 0-.054-.058-.37-.033-.76 1.027-1.203 2.03-1.647 3.032 0 0 .042-.075-.28-.1-.948.495-1.676.93-2.186 1.546-7.071 8.53-14.13 17.07-21.134 25.654-.662.811-.933 1.94-1.386 2.923 0 0-.05-.06-.327-.075-.418.341-.56.697-.7 1.053 0 0-.027-.08-.349-.184-1.455.54-2.68 1.066-3.709 1.85-19.288 14.692-39.554 16.962-61.03 4.978-1.517-.846-3.344-1.136-5.027-1.684 0 0 .07-.036.092-.346-2.879-2.763-5.699-5.32-8.709-7.63-1.985-1.522-4.244-2.686-6.38-4.011 0 0 .07-.061.152-.364-.409-.716-.9-1.128-1.391-1.541 0 0 .15-.021.157-.306-5.9-8.295-11.788-16.32-17.722-24.31-2.11-2.84-2.401-5.373.891-7.108-.234 3.737 2.054 3.518 4.292 3.583 7.882.227 15.76.531 23.823 1.11 7 5.274 13.816 10.245 20.634 15.215 8.089 5.895 21.021 7.158 28.677 1.75 7.492-5.292 14.258-11.61 21.331-17.492.082-.068.01-.32.424-.525 6.77-.05 13.128.066 19.478-.12 4.155-.123 8.298-.685 12.62-1.033.172.017.516.065.516.065z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E3E2\",\n    d: \"M191.014 233.015c-3.294 2.153-3.003 4.686-.893 7.526 5.934 7.99 11.822 16.015 17.694 24.381-4.648-4.92-9.374-10.1-13.828-15.505-2.439-2.96-4.385-6.321-6.614-9.458-2.045-2.88-1.392-5.392.86-7.769 12.581-13.28 25.068-26.622 41.062-36.072 7.743-4.575 15.432-4.124 23.212-.868 2.35.983 3.73 1.284 6.305-.048 8.503-4.4 16.945-2.56 24.85 2.077 2.897 1.699 5.452 3.98 8.268 6.341.105.345.07.381-.298.425-2.23-1.002-4.177-1.922-5.937-3.118-8.233-5.594-16.743-9.373-26.294-3.248-2.837 1.819-4.774 1.461-7.587-.125-6.586-3.713-13.61-4.417-20.4-.38-15.74 9.362-28.785 21.806-40.4 35.84zM224.052 279.38c1.553.217 3.38.507 4.897 1.353 21.476 11.984 41.742 9.714 61.03-4.979 1.029-.783 2.254-1.309 3.743-1.824-7.675 8.513-17.641 12.97-28.928 15.135-11.055 2.12-21.477.188-31.581-4.118-3.177-1.354-6.03-3.469-9.161-5.567zM295.414 273.068c.103-.94.374-2.069 1.036-2.88 7.004-8.585 14.063-17.125 21.134-25.654.51-.616 1.238-1.051 2.22-1.52-6.24 11.289-13.512 21.975-24.39 30.054zM209.034 267.38c2.027 1.007 4.286 2.171 6.271 3.694 3.01 2.309 5.83 4.866 8.695 7.665-4.976-3.448-9.916-7.243-14.966-11.358zM314.07 224.922c2.648 2.772 5.296 5.545 7.952 8.684.007.367-.023.395-.366.375-2.778-3.01-5.214-5.998-7.634-9.005l.048-.054z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E3E2\",\n    d: \"M292.053 203.946c1.273.773 2.528 1.565 3.885 2.687.101.33.067.361-.288.422-1.454-.977-2.552-2.016-3.65-3.054l.053-.055zM320.362 242.965c.132-.88.575-1.882 1.374-2.912-.117.912-.59 1.85-1.374 2.912zM312.074 222.92c.606.48 1.212.96 1.907 1.72.089.282.057.318-.304.37-.798-.637-1.234-1.326-1.654-2.034l.051-.057zM306.06 216.935c.612.474 1.226.948 1.911 1.723.073.3.034.336-.305.368-.78-.655-1.221-1.342-1.649-2.045l.042-.046zM302.066 212.928c.606.483 1.213.966 1.891 1.747.072.298.044.323-.289.325-.777-.667-1.22-1.335-1.65-2.02l.048-.052zM207.51 265.47c.667.1 1.158.512 1.54 1.266-.644-.09-1.18-.523-1.54-1.267zM322.38 239.983c-.225-.474-.138-1.055.205-1.823.206.447.157 1.082-.205 1.823zM322.871 235.672c-.064.314-.408.266-.624-.067a5.28 5.28 0 01-.248-1.604l.046-.042c.307.457.599.928.826 1.713zM299.07 209.923c.292.166.584.331.924.766.05.27.012.305-.272.29-.43-.335-.577-.656-.706-.997l.054-.059zM305.052 215.942c.292.164.584.328.941.742.066.25.038.282-.243.256-.438-.329-.596-.633-.74-.951l.042-.047zM294.3 274.02c-.122-.287.02-.643.475-.992.14.312-.036.617-.475.991z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E3E2\",\n    d: \"M300.062 210.94c.308.15.597.318.93.756.043.27.004.308-.278.289-.425-.343-.567-.667-.708-.99l.056-.055zM301.055 211.948c.308.148.596.314.948.73.063.25.031.284-.26.273-.443-.323-.595-.635-.747-.947l.059-.056zM296.056 206.947c.307.147.597.312.935.746.048.27.007.31-.278.296-.425-.34-.567-.668-.708-.995l.051-.047z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E3E2\",\n    d: \"M297.06 207.943c.308.149.597.316.932.752.047.268.013.3-.27.28-.43-.337-.577-.655-.724-.973l.061-.059zM304.043 214.96c.305.15.596.314.948.73.061.252.033.284-.247.256-.434-.335-.589-.641-.743-.948l.042-.039z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E3E2\",\n    d: \"M298.056 208.947c.305.149.593.314.948.728.066.248.03.287-.264.28-.441-.325-.588-.643-.735-.96l.051-.048zM311.075 221.919c.288.167.577.335.933.751.066.25.032.286-.27.292-.447-.317-.592-.64-.718-.983l.055-.06zM310.073 220.921c.29.166.579.333.935.748.067.25.03.29-.27.295-.445-.32-.589-.645-.716-.988l.05-.055z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E3E2\",\n    d: \"M309.074 219.92c.29.167.58.334.934.75.065.251.03.288-.267.286-.447-.319-.595-.636-.724-.974l.057-.062zM308.062 218.94c.307.15.595.316.947.73.065.25.027.29-.276.295-.444-.321-.586-.646-.728-.971l.057-.053z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08888\",\n    d: \"M307.666 219.026c.481.293.623.618 1.048.96.432.334.58.651 1.01.989.425.344.569.67.995 1.01.427.337.572.66 1.002.997.722.702 1.158 1.391 1.94 2.046 2.78 2.955 5.217 5.943 7.995 8.953.354.443.364.867.418 1.606-4.105.682-8.248 1.244-12.403 1.366-6.35.187-12.708.071-19.886.162-5.151-1.4-9.821-2.27-13.746-4.47-13.122-7.352-26.052-8.278-39.334-.594-5.47 3.164-11.037 6.328-17.76 5.772-7.88-.276-15.76-.58-23.64-.807-2.24-.065-4.527.154-4.293-3.583 11.617-14.453 24.662-26.897 40.403-36.258 6.789-4.038 13.813-3.334 20.4.379 2.812 1.586 4.75 1.944 7.586.125 9.551-6.125 18.06-2.346 26.294 3.248 1.76 1.196 3.708 2.116 5.937 3.118 1.466.994 2.564 2.033 4.018 3.01.496.266.638.593 1.063.934.432.331.58.65 1.01.986.429.337.576.655.999 1 .423.348.57.669 1 1.004.425.339.567.663.992 1.006.434.331.586.643 1.014.984.72.696 1.163 1.364 1.94 2.03.487.306.642.612 1.062.962.424.346.582.65 1.007.995.708.728 1.149 1.415 1.93 2.07z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#811A19\",\n    d: \"M219.127 238.126c6.541.253 12.108-2.911 17.578-6.075 13.282-7.684 26.212-6.758 39.334.594 3.925 2.2 8.595 3.07 13.332 4.508.408.126.48.378.398.446-7.073 5.881-13.84 12.2-21.33 17.492-7.657 5.408-20.589 4.145-28.678-1.75-6.818-4.97-13.635-9.941-20.634-15.215z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId7);\nexport default __webpack_public_path__ + \"static/media/viseme_id_7.ae6e9734027ab2478b889a4e9b8de7cb.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId8(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 510 490\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D38282\",\n    d: \"M346.967 258.14c-4.746 4.904-9.493 9.809-14.882 14.92-1.773 1.497-2.903 2.787-4.033 4.077 0 0-.006-.088-.294-.103-.424.36-.561.734-.698 1.109 0 0-.001-.085-.297-.114-.43.352-.563.733-.697 1.115 0 0-.015-.072-.322-.218-4.103 2.973-7.9 6.093-11.697 9.212 0 0 0-.072-.333-.164-2.447 1.33-4.56 2.75-6.674 4.172 0 0 .002-.07-.3-.204-1.476.615-2.649 1.364-3.822 2.112 0 0 .081-.087-.18-.093-11.276 2.931-22.291 5.86-33.294 8.833-.424.114-.734.648-1.097.986-.21.067-.42.134-1.264-.157-1.122-.446-1.616-.636-2.096-.606-21.271 1.324-41.8-1.25-60.882-11.508-.428-.23-.956-.27-1.437-.4 0 0 .25-.253.219-.115-.359.155-.663.108-.944-.006-2.389-1.232-4.778-2.463-7.613-4.22-3.112-2.246-5.777-3.966-8.442-5.686 0 0 .067-.015.111-.33-.82-1.3-1.629-2.344-2.56-3.262-8.491-8.37-17.076-16.647-25.48-25.102-4.507-4.533-8.716-9.364-13.388-14.416 1.798-1.304 3.1-2.25 4.517-2.848 2.294 1.446 4.396 3.213 6.676 3.487 3.503.421 7.13-.183 10.794-.06a1011.728 1011.728 0 0028.643 15.355c.995.513 2.5.033 3.859.357 1.352 1.318 2.497 2.526 3.896 3.232 13.337 6.736 27.379 11.105 42.27 12.857 14.557 1.713 29 .954 42.772-3.785 8.149-2.805 15.52-7.869 23.59-11.844 2.549-.981 4.807-1.932 6.94-3.109 8.082-4.46 16.122-8.992 24.59-13.46 4.282.861 8.23 2.068 9.792-.66 4.055-.382 6.708-.632 9.683-.769.054 1.446.003 2.875-.533 4.09-.813 1.843-1.962 3.537-2.969 5.295 0 0-.019-.066-.305-.07-.44.365-.592.732-.745 1.1 0 0 .02-.078-.286-.185-3.8 3.657-7.294 7.42-10.788 11.184z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E4E4\",\n    d: \"M359.407 245.989c.69-1.637 1.84-3.33 2.653-5.173.536-1.216.587-2.645.467-4.42-1.445-1.481-2.352-2.758-3.578-3.525-21.595-13.497-43.132-27.093-64.895-40.316-11.645-7.075-23.73-8.044-36.025-.91-1.787 1.038-5.06 1.107-6.918.173-12.51-6.287-24.9-5.49-37.078.37-23.54 11.328-44.267 27.023-65.058 42.59l-4.404 3.194c4.672 5.052 8.88 9.883 13.387 14.416 8.405 8.455 16.99 16.732 25.481 25.102.931.918 1.74 1.961 2.553 3.295-3.499-2.314-7.28-4.643-10.332-7.7-10.075-10.1-19.897-20.452-29.792-30.73-2.955-3.068-2.615-6.245.919-8.666 17.922-12.282 35.655-24.855 53.861-36.7 11.52-7.496 24.09-12.746 38.428-10.96 2.365.295 5.104.365 6.94 1.613 5.588 3.796 10.824 3.267 16.456.257 11.447-6.116 22.615-2.95 32.647 2.923 20.907 12.24 41.288 25.379 61.88 38.157.685.425 1.334.919 1.96 1.43 8.788 7.182 8.795 7.35.448 15.58z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#EEDBDC\",\n    d: \"M202.643 291.497a1.546 1.546 0 011.462.012c19.082 10.257 39.61 12.832 60.882 11.508.48-.03.974.16 1.77.545-22.473 3.296-44.166.44-64.114-12.065z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E4E4\",\n    d: \"M268.746 303.826c-.036-.384.274-.918.698-1.032 11.003-2.973 22.018-5.902 33.337-8.793-10.04 6.667-21.785 8.45-34.035 9.825zM347.325 258.092c3.136-3.716 6.63-7.48 10.469-11.126-3.14 3.771-6.626 7.425-10.469 11.126zM314.407 288.085c3.437-3.066 7.234-6.186 11.371-9.144-3.443 3.138-7.227 6.114-11.371 9.144zM186.012 281.405c2.54 1.397 5.206 3.117 8.043 5.13a84.032 84.032 0 01-8.043-5.13zM307.404 292.086a44.647 44.647 0 016.346-4.111c-1.749 1.412-3.865 2.732-6.346 4.111zM328.403 277.08c.779-1.233 1.91-2.523 3.359-3.93-.79 1.213-1.898 2.543-3.359 3.93zM303.266 293.965c.825-.66 1.998-1.408 3.508-2.018-.828.734-1.995 1.33-3.508 2.018zM327.323 278.057c-.126-.289.011-.663.48-1.025.148.321-.034.63-.48 1.025zM326.327 279.057c-.127-.295.006-.676.478-1.028.153.334-.032.638-.478 1.028z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#EEDBDC\",\n    d: \"M202.22 291.335c.004-.233.308-.186.795-.217-.066.179-.292.371-.794.217z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E4E4\",\n    d: \"M358.297 247.04c-.103-.268.05-.635.523-.998.125.303-.072.601-.523.999z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08788\",\n    d: \"M149.088 235.124c20.678-15.913 41.406-31.608 64.945-42.936 12.178-5.86 24.568-6.657 37.078-.37 1.857.934 5.13.865 6.918-.172 12.296-7.135 24.38-6.166 36.025.91 21.763 13.222 43.3 26.818 64.895 40.315 1.226.767 2.133 2.044 3.255 3.412-2.586.579-5.24.829-9.294 1.21-1.563 2.73-5.51 1.522-10.193.653-14.973-3.566-29.269-6.618-43.26-10.712-21.998-6.438-44.154-10.406-66.865-5.175-14.553 3.352-28.771 8.13-43.255 11.814-7.494 1.906-15.239 2.823-22.87 4.186-3.574.17-7.2.773-10.703.352-2.28-.274-4.382-2.041-6.676-3.487z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#811A19\",\n    d: \"M166.558 238.55c7.54-1.654 15.285-2.57 22.779-4.477 14.484-3.684 28.702-8.462 43.255-11.814 22.71-5.23 44.867-1.263 66.865 5.175 13.991 4.094 28.287 7.146 42.847 10.674-7.654 4.514-15.694 9.047-23.775 13.506-2.134 1.177-4.392 2.128-7.167 2.86-6.642-2.934-12.504-6.301-18.816-8.023-22.086-6.026-44.565-5.51-66.829-1.471-9.155 1.66-17.845 5.883-26.746 8.94-1.27.02-2.775.499-3.77-.014a1011.69 1011.69 0 01-28.643-15.356z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F0898A\",\n    d: \"M199.06 254.263c8.812-3.4 17.502-7.623 26.657-9.283 22.264-4.039 44.743-4.555 66.83 1.47 6.31 1.723 12.173 5.09 18.467 7.952-7.496 4.296-14.867 9.36-23.016 12.165-13.772 4.74-28.215 5.498-42.772 3.785-14.891-1.752-28.933-6.12-42.27-12.857-1.399-.706-2.544-1.914-3.896-3.232z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId8);\nexport default __webpack_public_path__ + \"static/media/viseme_id_8.c91a986385f420c34900873de247578b.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId9(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512 487\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D48282\",\n    d: \"M195.538 317.955s-.071.06-.222-.314c-.58-.436-1.01-.499-1.439-.562 0 0 .07-.004.086-.333-1.016-.779-2.046-1.228-3.076-1.677 0 0 .07-.007.064-.333-1.025-.772-2.044-1.219-3.063-1.665 0 0 .078-.007.038-.32-1.04-.772-2.04-1.23-3.041-1.69 0 0 .076-.004.058-.33-1.03-.766-2.042-1.207-3.054-1.648 0 0 .067-.012.08-.356-1.443-1.149-2.898-1.953-4.354-2.756-.273.077-.473-.01-.592-.843-1.488-1.444-2.985-2.309-4.481-3.173l-.305.015s-.214-.218-.22-.776c-1.048-1.064-2.088-1.569-3.128-2.074 0 0 .085-.095.138-.384-.35-.418-.751-.546-1.154-.675 0 0 .095-.009.048-.254-.382-.43-.717-.614-1.052-.798 0 0 .103.007.097-.26-.368-.413-.73-.56-1.091-.708 0 0 .074.033.15-.234-.31-.736-.697-1.205-1.315-1.94-1.428-.767-2.626-1.266-3.823-1.766 0 0 .078-.058.174-.381-.667-.764-1.43-1.204-2.192-1.644 0 0 .068-.013.169-.348-.656-.772-1.411-1.21-2.167-1.646 0 0 .07-.009.121-.32-.343-.442-.739-.571-1.134-.701 0 0 .082-.001.134-.303-.344-.435-.74-.569-1.136-.702 0 0 .07-.002.203-.312-2.638-3.1-5.41-5.89-8.18-8.68 0 0 .074-.036.217-.292-.555-1.016-1.252-1.775-1.95-2.535-2.625-3.122-5.25-6.245-7.975-10.066a466.973 466.973 0 00-12.639-20.182c-1.223-1.845-2.907-3.384-4.38-5.064-.13-1.378-.26-2.756.219-4.448 1.905-.442 3.201-.57 4.545-.348.081.584.115.817.224 1.37 8.124 12.409 20.81 18.445 32.998 25.673 13.22 7.563 25.88 15.61 39.353 21.925 15.652 7.336 33 7.083 49.884 7.74 11.6.45 23.308.07 34.867-1.014 9.013-.846 18.424-2.007 26.674-5.413 14.219-5.87 27.672-13.594 41.76-20.624 9.52-6.805 18.87-13.345 27.846-20.363 2.584-2.02 4.088-5.422 6.35-8.412.574-.555.887-.889 1.549-1.107 3.077 1.219 3.027 3.037 1.834 5.33-1.836 3.53-3.543 7.127-5.576 10.946-.368 1.14-.465 2.028-.562 2.917 0 0-.067-.072-.404-.092-.76 1.021-1.183 2.062-1.606 3.102 0 0-.07-.092-.367-.16-4.424 6.008-8.55 12.086-12.675 18.164 0 0 .042-.077-.27-.137-2.544 2.275-4.777 4.61-7.057 7.277.096.505.24.677.384.848 0 0-.08-.07-.38-.116-.426.356-.551.757-.676 1.16 0 0-.001-.078-.313-.142-.437.338-.562.74-.687 1.141 0 0-.001-.077-.313-.142-.437.338-.562.74-.687 1.142 0 0-.001-.077-.313-.142-.438.338-.562.74-.687 1.142 0 0-.005-.069-.342-.198-.769.641-1.202 1.412-1.635 2.182 0 0-.015-.067-.328-.127-.442.341-.572.743-.702 1.144 0 0 0-.085-.302-.132-.434.346-.566.74-.698 1.133 0 0 0-.086-.31-.135-.432.345-.556.739-.68 1.133 0 0 0-.073-.32-.148-.438.332-.559.74-.68 1.147 0 0 0-.072-.319-.147-.44.332-.56.74-.68 1.147 0 0-.042-.098-.304-.286-1.785 1.203-3.308 2.594-4.831 3.986-3.769 3.349-7.537 6.697-11.544 10.157-.238.11.09.147.09.147-.235.224-.47.448-1.355 1.043-1.157.885-1.665 1.398-2.173 1.912 0 0 .064-.162-.138-.037-.4.444-.597.762-.794 1.08 0 0 .013-.077-.294-.187-1.104.67-1.901 1.45-2.698 2.228 0 0 0-.12-.304-.18-1.426 1.004-2.55 2.066-3.673 3.13 0 0-.005-.07-.305-.187-.782.32-1.263.757-1.744 1.194 0 0 .018-.11-.297-.134-1.765 1.03-3.215 2.083-4.665 3.138 0 0 .002-.071-.335-.188-14.77 6.814-29.766 11.95-46.15 14.084-5.734.155-11.056.806-16.295.397-16.153-1.262-31.678-5.15-46.554-12.566-3.239-1.448-6.204-2.682-9.169-3.917z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E4E4\",\n    d: \"M124.868 233.778c-1.296.128-2.592.257-4.274.452.308-.618.883-1.533 1.71-1.954 21.228-10.802 42.398-21.726 63.765-32.248 13.625-6.709 27.828-12.481 42.856-14.61 7.222-1.022 15.11 1.076 22.407 2.916 3.173.8 5.412 1.632 8.388-.24 2.224-1.398 4.993-1.93 7.899-2.604.378.616.377.987.041 1.502-2.941 1.221-5.718 2.011-8.109 3.445-3.071 1.843-5.472 1.409-8.695-.037-4.124-1.85-8.782-2.94-13.306-3.382-11.813-1.151-22.931 2.773-33.224 7.515-26.387 12.156-52.28 25.387-78.649 38.308a3.485 3.485 0 00-.715 1.081c.032-.066-.094-.144-.094-.144z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E3E3\",\n    d: \"M267.996 186.848l.002-1.392c14.638-.862 28.662 2.41 41.886 8.11 14.652 6.314 28.802 13.806 43.096 20.933 11.458 5.713 22.724 11.817 34.245 17.396 4.403 2.132 4.673 4.838 2.666 8.515-1.833 3.36-3.838 6.625-6.07 10.1-.509-.068-.698-.318-.87-.581 1.761-3.568 3.468-7.165 5.304-10.695 1.193-2.293 1.243-4.111-2.092-5.555-18.609-9.71-36.49-19.321-54.645-28.384-20.009-9.989-40.385-19.071-63.522-18.447z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCD9DC\",\n    d: \"M204.98 322.085c14.603 7.202 30.128 11.091 46.281 12.353 5.24.409 10.561-.242 16.294-.2.448.208.445.604.445.604-6.866.394-13.878 1.852-20.564.934-10.086-1.383-20.001-4.212-29.873-6.861-4.259-1.143-8.227-3.37-12.466-5.703-.132-.774-.124-.95-.117-1.127z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCD8D9\",\n    d: \"M268.428 334.922c-.428-.08-.425-.476-.423-.674 15.935-2.341 30.93-7.477 45.736-14.288-6.023 3.106-12.2 6.778-18.87 8.906-8.463 2.7-17.325 4.148-26.443 6.056z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E4E4\",\n    d: \"M120.073 239.299c1.552 1.306 3.236 2.845 4.459 4.69 4.266 6.437 8.372 12.98 12.529 19.868a588.982 588.982 0 01-16.988-24.558z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCDCDF\",\n    d: \"M367.382 273.97c3.809-5.937 7.934-12.015 12.404-17.99-3.8 6.018-7.943 11.933-12.404 17.99z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FFEDEF\",\n    d: \"M146.937 277.411a83.867 83.867 0 018.116 8.367c-2.779-2.443-5.418-5.23-8.116-8.367z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCDCDF\",\n    d: \"M359.785 280.918c2.233-2.335 4.466-4.67 7.049-6.922-1.449 2.327-3.248 4.573-5.703 6.903-.886.063-1.116.04-1.346.019zM204.707 321.872c.266.39.258.566.24 1.007-2.989-1.262-5.968-2.789-9.178-4.62 2.734.93 5.7 2.165 8.938 3.613z\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FFEDEF\",\n    d: \"M344.28 296.923c1.178-1.474 2.701-2.865 4.524-4.03-1.193 1.521-2.686 2.817-4.524 4.03zM161.01 292.4c1.074.2 2.272.7 3.71 1.752.255.934.269 1.315.283 1.697-1.29-1.05-2.581-2.1-3.994-3.449z\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCD8D9\",\n    d: \"M314.394 320.086c1.097-.996 2.547-2.05 4.367-3.07-1.092 1.026-2.553 2.019-4.367 3.07z\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCDCDF\",\n    d: \"M177.81 306.27c1.26.504 2.716 1.308 4.156 2.49-1.332-.478-2.646-1.335-4.156-2.49zM172.763 302.246a17.985 17.985 0 014.26 2.704c-1.351-.536-2.695-1.474-4.26-2.704z\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCD8D9\",\n    d: \"M321.36 315.997a17.826 17.826 0 013.425-2.992c-.796.993-1.956 1.924-3.424 2.992z\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FFEDEF\",\n    d: \"M145.107 274.546c.737.45 1.434 1.21 1.968 2.262-.778-.457-1.392-1.205-1.968-2.262z\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCDCDF\",\n    d: \"M191.016 315.376c.901.142 1.931.591 2.945 1.405-.95-.123-1.883-.61-2.945-1.405zM188 313.387c.907.13 1.926.577 2.952 1.385-.941-.116-1.89-.593-2.952-1.385z\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCD8D9\",\n    d: \"M325.357 313.105c.469-.7 1.266-1.479 2.409-2.141-.463.765-1.271 1.413-2.409 2.14z\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCDCDF\",\n    d: \"M185.01 311.373c.876.147 1.876.606 2.919 1.417-.903-.133-1.848-.62-2.919-1.417zM182.004 309.397c.897.127 1.909.568 2.941 1.372-.928-.11-1.877-.584-2.941-1.372zM169.022 299.438c.907.187 1.947.692 3.004 1.603-.946-.157-1.909-.721-3.004-1.603zM380.416 255.99c.114-.923.537-1.964 1.343-2.966-.09.974-.562 1.911-1.343 2.965zM382.679 250.18c.444.012.633.262 1.003.67-.224.798-.61 1.427-1.28 2.151-.188-.793-.091-1.681.277-2.821z\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FFEDEF\",\n    d: \"M158.977 290.357c.655.16 1.417.6 2.062 1.406-.73-.13-1.343-.627-2.062-1.406z\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCD8D9\",\n    d: \"M329.217 309.996c.244-.41.752-.923 1.468-1.603-.262.39-.733.944-1.468 1.603z\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FFEDEF\",\n    d: \"M156.979 288.362c.648.157 1.403.594 2.052 1.4-.719-.127-1.332-.623-2.052-1.4zM354.368 288.019c.154-.663.587-1.434 1.39-2.069-.124.744-.618 1.353-1.39 2.069z\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCDCDF\",\n    d: \"M165.23 295.925c-.241-.458-.255-.839-.28-1.506.378.183.765.652 1.058 1.425-.093.304-.55.158-.778.081z\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCD8D9\",\n    d: \"M319.327 317.083c.157-.379.638-.816 1.452-1.124-.154.44-.642.753-1.452 1.124z\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FFEDEF\",\n    d: \"M350.324 292.05c-.134-.316-.013-.724.462-1.056.167.372-.02.669-.462 1.056zM359.738 281.25c.277-.31.507-.288 1.082-.235.164.326-.017.62-.448 1-.394-.087-.538-.26-.634-.764zM359.321 283.051c-.13-.31-.005-.712.47-1.05.163.363-.026.66-.47 1.05zM358.321 284.051c-.13-.31-.005-.712.47-1.05.163.363-.026.66-.47 1.05z\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCDCDF\",\n    d: \"M194.002 317.39c.305-.248.734-.185 1.284.215-.306.258-.733.177-1.284-.214z\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FFEDEF\",\n    d: \"M357.321 285.051c-.13-.31-.005-.713.47-1.05.163.363-.026.66-.47 1.05zM356.321 286.051c-.13-.311-.006-.713.47-1.05.163.363-.026.66-.47 1.05zM154.947 286.314c.305-.125.7.009 1.045.485-.353.153-.653-.037-1.045-.485zM155.949 287.318c.304-.127.7.002 1.043.479-.353.157-.652-.033-1.043-.48z\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCD8D9\",\n    d: \"M328.291 311.046c-.073-.22.124-.54.605-.95.078.221-.128.536-.605.95zM332.408 307.302c.072-.157-.255-.194-.35-.204-.094-.01-.044.304-.044.304s.32.057.394-.1z\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FFEDEF\",\n    d: \"M353.316 289.053c-.127-.311.003-.713.48-1.051.157.362-.033.661-.48 1.05zM352.317 290.052c-.126-.302.006-.695.482-1.04.155.347-.035.648-.482 1.04z\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCDCDF\",\n    d: \"M167.948 298.32c.328-.13.73-.002 1.048.472-.38.16-.677-.026-1.048-.471zM166.968 297.27c.236-.077.571.108.957.584-.252.088-.555-.117-.957-.583zM165.964 296.3c.273-.112.634.036.998.5-.301.133-.605-.053-.998-.5z\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FFEDEF\",\n    d: \"M351.325 291.05c-.132-.302-.008-.696.467-1.04.164.349-.024.648-.467 1.04zM349.324 293.05c-.134-.317-.013-.724.462-1.056.167.372-.02.669-.462 1.056z\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F1898A\",\n    d: \"M350.362 263.87c-13.774 6.946-27.227 14.67-41.446 20.54-8.25 3.406-17.661 4.567-26.674 5.413-11.56 1.085-23.267 1.465-34.867 1.014-16.884-.657-34.232-.404-49.884-7.74-13.473-6.314-26.134-14.362-39.156-22.197 3.856-2.836 7.588-5.374 11.594-7.36 22.709-11.264 46.968-12.667 71.706-11.166 7.621.462 15.277.415 22.919.478 13.801.112 27.689-.81 41.384.43 16.958 1.536 32.056 8.46 44.424 20.588z\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08788\",\n    d: \"M267.66 186.992c23.473-.768 43.85 8.314 63.858 18.303 18.155 9.063 36.036 18.675 54.296 28.27-.055.557-.368.89-1.34 1.432-2.298-.071-3.94-.33-5.575-.632-32.082-5.92-64.125-12.047-96.968-11.899-33.778.153-67.618-1.076-101.204 3.618-18.614 2.602-37.112 6.036-55.662 9.095-.034-.233-.068-.466-.15-1.05-.047-.351.08-.273.24-.398.375-.42.588-.715.8-1.01 26.091-12.801 51.984-26.032 78.371-38.188 10.293-4.742 21.41-8.666 33.224-7.515 4.524.441 9.182 1.532 13.306 3.382 3.223 1.446 5.624 1.88 8.695.037 2.39-1.434 5.168-2.224 8.11-3.445z\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#811A19\",\n    d: \"M125.14 235.5c18.475-3.38 36.973-6.814 55.587-9.416 33.586-4.694 67.426-3.465 101.204-3.618 32.843-.148 64.886 5.978 96.968 11.899 1.635.302 3.277.56 5.313.854-1.602 2.782-3.106 6.183-5.69 8.204-8.976 7.018-18.326 13.558-27.846 20.363-12.682-12.044-27.78-18.968-44.738-20.504-13.695-1.24-27.583-.318-41.384-.43-7.642-.063-15.298-.016-22.919-.478-24.738-1.5-48.997-.098-71.706 11.165-4.006 1.987-7.738 4.525-11.794 7.08-12.185-6.675-24.87-12.711-32.995-25.12z\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D48282\",\n    d: \"M125.677 232.84c.066.176-.147.47-.554.957-.037-.151.12-.494.554-.956z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId9);\nexport default __webpack_public_path__ + \"static/media/viseme_id_9.0337d2a59cf7379749ef5f4f44c68d29.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId10(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 509 490\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08788\",\n    d: \"M208.749 274.204c-6.577-8.82-13.336-17.511-19.684-26.492-8.194-11.593-8.362-11.944.309-22.682 11.645-14.422 24.418-27.832 40.486-37.473 7.176-4.305 14.792-3.653 22.359-.212 1.748.795 4.624 1.176 6.046.274 7.583-4.81 15.308-3.896 22.041.46 17.658 11.424 32.422 26.071 44.89 43.039 4.33 5.893 1.017 9.316-3.75 14.584.956-2.962 2.283-5.715 3.286-7.797-6.286 0-12.994 0-20.07-.011-3.514-1.777-6.862-3.264-9.753-5.376-3.88-2.838-7.167-6.512-11.128-9.213-19.42-13.244-49.517-10.695-66.621 5.417-3.864 3.64-7.532 7.657-13.914 7.659-6.477.218-12.487.534-18.927.873 5.83 8.431 11.465 16.408 16.902 24.517 2.696 4.02 5.03 8.281 7.528 12.433z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D38282\",\n    d: \"M305.03 237.905h19.702c-1.003 2.082-2.33 4.835-3.6 7.959.058.37.006.38-.328.428-.706.966-1.08 1.884-1.453 2.802 0 0-.038.185-.473.178-5.534 6.784-10.644 13.569-15.699 20.393-.218.295.062.959.11 1.451 0 0 .002.153-.427.14-1.579 1.339-2.73 2.692-3.88 4.046-2.407 2.512-4.814 5.024-7.711 7.826-.735.506-.944.752-1.12 1.027-.053.346-.224.619-1.053.951-.96.765-1.381 1.395-1.802 2.026 0 0-.022.176-.475.097-2.268.654-4.213 1.168-5.874 2.158-8.547 5.099-17.988 7.699-27.682 7.101-12.73-.784-24.165-5.757-33.847-14.4-1.484-1.325-3.665-1.87-5.523-2.774 0 0-.17-.013-.156-.448-1.31-1.506-2.633-2.576-3.956-3.646-.276-.183-.551-.366-.93-.782-2.602-4.386-4.936-8.647-7.632-12.667-5.437-8.109-11.072-16.086-16.902-24.517 6.44-.34 12.45-.655 18.927-.586 8.644 3.898 15.795 8.789 20.995 16.139 13.373 18.904 44.495 19.23 60.596 3.194 6.395-6.369 13.443-12.083 20.193-18.096z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08788\",\n    d: \"M214.03 279.608c1.723.61 3.904 1.155 5.388 2.48 9.682 8.643 21.116 13.616 33.847 14.4 9.694.598 19.135-2.002 27.682-7.1 1.66-.991 3.606-1.505 5.786-2.146-7.37 7.01-16.825 9.941-26.804 10.8-18.138 1.561-33.297-5.054-45.898-18.434zM303.587 270.97c-.346-.346-.626-1.01-.408-1.305 5.055-6.824 10.165-13.609 15.606-20.374-4.738 7.195-9.819 14.365-15.198 21.68zM299.334 275.22c.799-1.272 1.95-2.625 3.452-3.958-.798 1.306-1.95 2.59-3.452 3.958zM209.82 275.559c1.286.73 2.609 1.801 3.908 3.222-1.306-.727-2.588-1.805-3.907-3.222zM319.628 248.974c.096-.798.47-1.716 1.177-2.658-.078.83-.489 1.685-1.177 2.658zM287.63 287.12c.087-.619.508-1.25 1.238-1.924-.095.608-.498 1.26-1.237 1.924zM290.386 284.056c-.06-.176.15-.422.585-.787.01.13-.17.409-.585.787z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#801918\",\n    d: \"M304.661 237.894c-6.381 6.024-13.429 11.738-19.824 18.107-16.101 16.035-47.223 15.71-60.596-3.194-5.2-7.35-12.351-12.241-20.528-16.04 5.915-.388 9.583-4.405 13.447-8.045 17.104-16.112 47.201-18.661 66.621-5.417 3.96 2.701 7.247 6.375 11.128 9.213 2.89 2.112 6.239 3.599 9.752 5.376z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId10);\nexport default __webpack_public_path__ + \"static/media/viseme_id_10.2ce10db4b67640e01d91853e519f262e.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId11(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 511 489\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D38382\",\n    d: \"M307.826 329.944s-.217.16-.748.006c-3.77 1.561-7.008 3.276-10.247 4.992 0 0-.226.16-.789.019-8.376 1.871-16.19 3.884-24.003 5.898-5.303.719-10.613 2.044-15.91 1.997-5.977-.054-11.989-1.09-17.898-2.176-4.557-.837-8.979-2.41-13.947-4.067a1544.013 1544.013 0 00-27.794-14.183c-.817-.407-1.89-.3-2.845-.432 0 0-.249.107-.359-.342-1.528-1.167-2.946-1.884-4.363-2.602 0 0 .068-.039.064-.364-1.025-.763-2.045-1.2-3.065-1.639 0 0 .068-.035.059-.36-1.026-.762-2.043-1.2-3.06-1.64 0 0 .069-.036.069-.349-1.36-1.099-2.72-1.885-4.08-2.67 0 0 .088.044.083-.278-1.366-1.12-2.727-1.918-4.088-2.716 0 0 .073-.013.052-.278-.363-.422-.707-.579-1.05-.736 0 0 .083.031.091-.277-1.581-1.82-3.17-3.331-4.898-5.15-6.285-7.273-12.366-14.3-18.625-21.162-1.573-1.725-3.718-2.928-5.6-4.37 0 0 .052-.056.166-.38-1.31-1.756-2.734-3.187-4.158-4.619 0 0 .043-.063.182-.38-1.686-2.723-3.511-5.13-5.337-7.537 0 0 .119.009.138-.3-4.943-7.936-9.96-15.528-14.794-23.234-.579-.924-.163-2.471.177-3.653.642.13.899.185 1.234.535 11.357 8.657 22.632 17.025 33.94 25.348.303.223.964-.04 1.526.277.208.65.266 1.063.5 1.23 14.539 10.382 28.541 21.645 45.333 28.395 3.594 1.444 7.464 2.2 11.337 3.603 6.708 2.427 13.286 4.524 20.185 6.84 6.443.828 12.567 1.438 19.128 2.177 4.143-.02 7.85-.167 11.977-.304 2.816-.361 5.21-.733 7.91-1.08.797-.263 1.29-.553 1.798-.82.014.023.067.022.485-.01 6.044-1.287 11.846-2.068 17.198-4.059 1.814-.675 5.816-.01 6.221-4.034 4.48-.782 8.605-1.186 12.47-2.41 3.74-1.183 7.352-2.967 10.779-4.913 10.205-5.796 20.439-11.607 28.257-21.021 9.81-7.116 19.407-14.093 28.69-21.466 2.717-2.157 4.538-5.441 6.792-8.557.038-.58.053-.812.347-.958.775.365 1.273.644 1.824 1.252.338.924.622 1.52.794 2.445a2979.851 2979.851 0 01-8.77 17.816s-.051-.094-.345-.06c-3.465 4.988-6.635 9.94-9.806 14.893 0 0-.014-.078-.347-.102-1.106 1.352-1.88 2.728-2.653 4.104 0 0 .025-.07-.302-.115-3.778 4.34-7.23 8.724-10.68 13.11 0 0-.066-.065-.343-.078-.415.353-.554.72-.692 1.087 0 0-.024-.07-.342-.103-3.742 3.31-7.25 6.573-10.54 10.043-1.002 1.058-1.404 2.684-2.08 4.05 0 0-.072-.063-.354-.085-.412.351-.541.725-.67 1.098 0 0-.037-.087-.353-.2-1.762 1.35-3.208 2.811-4.653 4.273 0 0-.055-.104-.275-.057-.4.36-.58.673-.761.985 0 0 .006-.082-.247-.04-.414.373-.576.705-.738 1.036 0 0-.004-.072-.276-.059-.419.361-.566.71-.713 1.059 0 0-.018-.07-.3-.072-.417.357-.554.716-.69 1.075 0 0-.032-.08-.351-.166-1.097.684-1.875 1.454-2.653 2.225 0 0-.04-.091-.29-.082-.408.346-.566.683-.725 1.02 0 0-.006-.073-.337-.137-2.425 1.696-4.519 3.455-6.613 5.214 0 0-.044-.086-.369-.126-1.104.656-1.885 1.354-2.665 2.051 0 0-.033-.076-.355-.172-1.096.66-1.871 1.416-2.646 2.172 0 0-.029-.072-.31-.117-.49.295-.702.635-.913.974 0 0-.21.16-.719.019-2.027.947-3.545 2.036-5.063 3.125 0 0-.023-.072-.302-.117-.488.294-.697.633-.907.971z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08788\",\n    d: \"M387.078 235.65c-.016.231-.031.463-.483 1.033-7.15-.842-13.875-1.972-20.58-3.21-32.966-6.087-66.085-10.411-99.731-9.441-17.314.499-34.655.234-51.952 1.016-13.442.608-26.902 1.808-40.232 3.638-17.295 2.375-34.47 5.636-51.696 8.516-.256-.055-.513-.11-1.126-.52-.325-.732-.293-1.107-.26-1.483 1.25-.498 2.502-.997 4.34-1.794 3.407-1.18 6.387-1.73 9.026-2.994 25.86-12.389 51.665-24.896 77.485-37.37 3.427-1.345 6.853-2.689 11.137-4.023 1.855.004 2.853.02 3.85-.01 9.26-.276 18.634-1.561 27.055 4.14.966.655 3.315.186 4.508-.573 5.475-3.481 11.494-4.699 17.674-3.7 8.958 1.447 18.103 2.724 26.623 5.658 11.725 4.039 22.941 9.556 34.488 14.602.48.115.849.067 1.456-.03.238-.049.724-.085.724-.085s.213-.112.386.276c.552.477.931.565 1.31.654 0 0-.07.036-.085.355 5.021 2.761 10.058 5.204 15.094 7.646 0 0-.076-.032-.084.29 1.603 1.41 3.135 2.646 4.84 3.558 8.72 4.663 17.484 9.242 26.233 13.85z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E2E2\",\n    d: \"M337.091 208.973c-11.434-4.884-22.65-10.401-34.375-14.44-8.52-2.934-17.665-4.211-26.623-5.658-6.18-.999-12.2.219-17.674 3.7-1.193.759-3.542 1.228-4.508.574-8.421-5.702-17.795-4.417-27.055-4.14-.997.029-1.995.013-3.467.017 8.856-3.497 18.312-3.398 27.336.454 3.705 1.582 6.14 1.825 9.75-.152 7.41-4.058 15.728-2.985 23.557-1.738 19.672 3.134 37.4 11.763 55.133 21.112.219.318-.267.354-.839.352-.793-.028-1.014-.054-1.235-.08z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F6E6E4\",\n    d: \"M211.456 193.063a9587.624 9587.624 0 01-77.072 37.348c-2.639 1.264-5.62 1.814-8.837 2.706 1.867-1.2 4.148-2.376 6.39-3.622 9.208-5.119 18.171-10.745 27.657-15.28 15.486-7.404 31.294-14.138 47.023-21.026 1.25-.548 2.94-.093 4.839-.126z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FDDEDE\",\n    d: \"M387.356 235.735c-9.027-4.694-17.791-9.273-26.51-13.936-1.706-.912-3.238-2.148-4.82-3.594 7.182 3.057 14.362 6.421 21.483 9.906 4.732 2.315 9.38 4.803 14.603 7.49.042 8.603-6.188 14.732-10.539 21.744 2.517-5.926 5.403-11.755 8.61-18.12-.138-1.212-.597-1.889-1.056-2.566a24.89 24.89 0 00-1.771-.924z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E2E2\",\n    d: \"M144.93 277.415c1.827 1.092 3.972 2.295 5.545 4.02a483.793 483.793 0 0118.28 21.208c-.439.38-.67.407-.9.434-7.624-8.437-15.247-16.874-22.925-25.662zM120.643 235.26c.342.315.31.69.249 1.345.017 1.539-.399 3.086.18 4.01 4.834 7.706 9.851 15.298 14.765 23.285-3.217-3.465-6.551-7.17-9.506-11.155-2.551-3.44-4.841-7.106-6.916-10.855-1.195-2.162-3.245-4.896 1.228-6.63z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FDDEDE\",\n    d: \"M193.846 322.314c.754-.184 1.827-.29 2.644.116 9.126 4.545 18.211 9.17 27.399 14.095-9.886-4.416-19.864-9.156-30.043-14.211zM357.397 288.971c3.125-4.279 6.576-8.664 10.38-12.977-3.115 4.338-6.584 8.605-10.38 12.977zM272.465 340.929a529.824 529.824 0 0123.449-6.02c-7.385 2.09-15.204 4.09-23.449 6.02zM371.38 271.961a214.059 214.059 0 019.532-14.774c-2.837 4.86-6.022 9.757-9.533 14.774zM343.394 303.975c.356-1.264.758-2.89 1.76-3.948 3.29-3.47 6.798-6.733 10.575-10.03-3.77 4.656-7.892 9.267-12.335 13.978zM355.944 217.622a163.882 163.882 0 01-14.933-7.353c4.95 2.104 9.869 4.564 14.933 7.353zM297.223 334.987c2.847-1.76 6.085-3.476 9.731-5.09-2.841 1.778-6.09 3.456-9.731 5.09z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E2E2\",\n    d: \"M135.587 264.515c1.967 2.041 3.792 4.448 5.484 7.21-1.963-2.046-3.794-4.445-5.484-7.21z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FDDEDE\",\n    d: \"M322.424 321.092a48.02 48.02 0 016.296-5.123c-1.74 1.738-3.844 3.395-6.296 5.123zM167.983 303.39c.103-.34.333-.366.91-.44a30.388 30.388 0 015.086 4.837c-1.974-1.129-3.92-2.606-5.996-4.397zM337.378 309.078a23.408 23.408 0 014.35-4.153c-1.106 1.454-2.561 2.761-4.35 4.153z\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E2E2\",\n    d: \"M140.933 272.406c1.374 1.092 2.799 2.523 4.117 4.315-1.426-1.084-2.747-2.53-4.117-4.315z\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FDDEDE\",\n    d: \"M309.397 329.054c1.156-1.053 2.674-2.142 4.582-3.145-1.147 1.094-2.684 2.102-4.582 3.145zM368.369 275.963c.457-1.256 1.23-2.632 2.37-3.961-.441 1.311-1.248 2.577-2.37 3.961zM175.042 309.348c1.224.488 2.585 1.286 3.926 2.449-1.276-.47-2.532-1.305-3.926-2.45zM179.037 312.346c1.233.471 2.593 1.257 3.94 2.393-1.28-.46-2.546-1.268-3.94-2.393zM189.023 319.382c1.317.39 2.735 1.107 4.154 2.193-1.35-.376-2.702-1.121-4.154-2.193zM316.374 325.053c.441-.72 1.216-1.477 2.347-2.113-.434.772-1.224 1.425-2.347 2.113zM183.017 315.374c.921.116 1.938.555 2.952 1.354-.954-.104-1.905-.568-2.952-1.354zM330.37 315.082c.448-.704 1.226-1.474 2.356-2.131-.44.763-1.233 1.413-2.356 2.13zM186.017 317.373c.925.116 1.945.554 2.956 1.354-.96-.103-1.91-.567-2.956-1.354zM319.374 323.055c.447-.663 1.228-1.36 2.378-2.033-.435.683-1.24 1.34-2.378 2.033z\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCF4F3\",\n    d: \"M29.997 260.628c-.67.334-1.485.347-2.71.325.582-.238 1.573-.441 2.71-.325z\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FDDEDE\",\n    d: \"M333.313 313.03c-.133-.3.004-.658.457-1.005.148.322-.02.633-.457 1.004zM315.123 325.975c-.095-.368.116-.708.643-.987.099.379-.119.697-.643.987zM308.132 329.974c-.096-.368.113-.707.636-.986.099.378-.116.697-.636.986z\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCF4F3\",\n    d: \"M26.655 260.976c.282.116.302.329.304.862-.2-.042-.384-.403-.304-.862z\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FDDEDE\",\n    d: \"M329.29 316.012c-.106-.262.052-.6.507-.963.116.279-.064.584-.508.963zM356.306 290.03c-.132-.31.007-.677.465-1.013.148.34-.023.648-.465 1.013zM334.297 312.015c-.116-.277.031-.626.486-.98.13.299-.046.603-.486.98zM335.286 311.01c-.101-.254.06-.586.516-.954.111.268-.07.572-.516.954zM336.274 310.01c-.085-.231.095-.544.547-.93.087.234-.097.542-.547.93zM173.983 308.288c.267-.107.61.05.973.51-.286.12-.591-.063-.973-.51zM342.316 305.03c-.137-.313-.008-.687.448-1.02.157.347-.012.654-.448 1.02z\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M32.096 280.288c.34-.124.558.104.774.64-.218.03-.515-.17-.774-.64z\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FDDEDE\",\n    d: \"M340.999 209.65c-.298.211-.677.123-1.138-.276.298-.214.677-.119 1.138.276z\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F28A8B\",\n    d: \"M214.99 296.02c-3.744-1.073-7.614-1.829-11.208-3.273-16.792-6.75-30.794-18.013-45.333-28.395-.234-.167-.292-.58-.317-1.51 2.197-1.996 4.207-3.49 6.373-4.705 24.689-13.85 51.49-15.62 78.94-13.84 6.79.441 13.613.596 20.418.533 10.967-.1 21.934-.772 32.897-.692 16.563.121 31.794 5.077 45.54 14.244 3.332 2.222 5.949 5.519 8.895 8.321-7.486 9.427-17.72 15.238-27.925 21.034-3.427 1.946-7.038 3.73-10.779 4.914-3.865 1.223-7.99 1.627-12.718 2.365-1.727.358-2.905 1.284-3.72 1.034-7-2.15-13.573-.663-20.058 1.964.006-.008-.013-.006-.187-.355-6.648-.423-13.122-.496-20.012-.574-.695.012-.973.028-1.593-.145-6.254-.4-12.166-.684-18.08-.761-1.29-.017-2.982 1.426-3.822.97-5.663-3.08-11.46-2.14-17.311-1.13z\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#811A19\",\n    d: \"M351.527 266.716c-3.278-2.815-5.895-6.112-9.227-8.334-13.746-9.167-28.977-14.123-45.54-14.244-10.963-.08-21.93.592-32.897.692-6.805.063-13.628-.092-20.417-.532-27.452-1.78-54.252-.01-78.94 13.839-2.167 1.215-4.177 2.71-6.442 4.353-.677.315-1.338.578-1.642.355-11.307-8.323-22.582-16.691-33.94-25.348 17.149-3.175 34.323-6.436 51.618-8.81 13.33-1.83 26.79-3.03 40.232-3.639 17.297-.782 34.638-.517 51.952-1.016 33.646-.97 66.765 3.354 99.732 9.44 6.704 1.239 13.428 2.369 20.557 3.559-1.818 2.778-3.64 6.062-6.355 8.22-9.284 7.372-18.882 14.35-28.691 21.465z\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FAF0EF\",\n    d: \"M215.12 296.35c5.722-1.34 11.518-2.28 17.18.798.84.457 2.533-.986 3.823-.97 5.914.078 11.826.362 18.146 1.078.61 1.061.81 1.617 1.31 3.003l.634-3.168c6.473.072 12.947.145 19.128.565-6.083.347-11.873.347-17.815.347l-1.225 7.05h9.688c-3.707.147-7.413.295-11.559-.046.065-5.354-1.84-7.634-6.985-7.068-2.953.325-5.97.068-8.958.06-3.545-.01-5.05 1.402-3.504 4.972-6.578-2.097-13.156-4.194-19.864-6.62z\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCF4F3\",\n    d: \"M235.304 303.19c-1.867-3.789-.362-5.202 3.183-5.191 2.988.008 6.005.265 8.958-.06 5.144-.566 7.05 1.714 6.548 6.94-6.122-.25-12.246-.861-18.69-1.69zM266.41 305.063c-3.537-.01-6.653-.01-10.11-.01l1.226-7.05c5.942 0 11.732 0 17.989.002.467.003.486.001.481.436.06 1.871.124 3.307.188 4.744 0 0-.053 0-.369-.044-.81.242-1.306.53-1.8.817-2.395.372-4.79.744-7.606 1.105z\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FAF0EF\",\n    d: \"M276.602 303.152c-.482-1.404-.546-2.84-.611-4.703 6.489-3.062 13.061-4.55 20.062-2.4.815.251 1.993-.675 3.25-1.012.313 4.046-3.689 3.382-5.503 4.057-5.352 1.99-11.154 2.772-17.198 4.058z\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08788\",\n    d: \"M389.18 236.987c.406.35.865 1.026 1.115 1.91-.493-.39-.777-.986-1.115-1.91z\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FAF0EF\",\n    d: \"M274.319 303.984c.19-.313.685-.6 1.482-.866-.191.312-.685.602-1.482.866z\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FDDEDE\",\n    d: \"M337.204 209.135c.108-.135.33-.109.884-.031-.035.098-.404.146-.884.031z\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D38382\",\n    d: \"M255.796 297.085c.263.776.109 1.546-.217 3.174-.5-1.386-.7-1.942-.967-2.813.211-.333.489-.35 1.184-.36z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId11);\nexport default __webpack_public_path__ + \"static/media/viseme_id_11.6a153104327ea9582793638064a9a040.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId12(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 510 489\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D38382\",\n    d: \"M167.131 279.017c-1.623-1.31-3.246-2.62-5.25-4.031-.382-.101-.372.042-.372.042-.18-.166-.36-.331-.814-1.097-3.456-3.022-6.637-5.443-9.819-7.864 0 0 .087.04.153-.271-4.005-3.78-8.076-7.25-12.147-10.72 0 0 .067-.015.107-.318-.348-.436-.737-.569-1.125-.702 0 0 .074.005.14-.306-5.76-5.576-11.588-10.842-17.684-16.35 1.116-.4 1.88-.675 2.778-.578 1.397 1.008 2.646 2.165 3.923 2.197 6.258.155 12.524.011 18.999.269 5.374 2.506 10.498 4.816 15.71 6.903 6.714 2.69 13.5 5.202 20.45 8.091 5.565 2.123 10.936 3.944 16.439 6.115.89.956 1.558 1.876 2.418 2.122 11.915 3.403 23.856 6.713 36.158 10.15.872.119 1.378.132 2.188.237.726.072 1.147.053 1.84.113.458.065.646.05 1.18.156 2.339.2 4.333.28 6.75.444 1.566.048 2.71.012 4.254.059 1.757.03 3.114-.023 4.859-.015.906.016 1.425-.03 2.36.003 3.382-.148 6.35-.373 9.761-.547 2.204-.16 3.963-.371 6.018-.603 1.07-.146 1.844-.271 3.06-.334 11.129-2.08 21.816-4.222 32.869-6.425 6.19-2.623 12.016-5.185 18.19-7.764 1.388-.955 2.428-1.893 3.863-2.848 11.343-5.34 22.292-10.663 33.662-15.955 6.935-.655 13.449-1.341 20.266-2.045.094.933.085 1.994-.369 2.806-.82 1.469-1.907 2.789-2.883 4.17 0 0-.008-.075-.297-.084-.433.357-.577.725-.722 1.092 0 0 0-.087-.282-.1-.429.357-.575.728-.72 1.098 0 0 .005-.071-.307-.155-6.84 6.835-13.368 13.754-20.186 20.853-3.06 2.794-5.941 5.302-8.559 8.06-1.817 1.915-3.27 4.175-4.886 6.28 0 0-.053-.045-.364-.214-1.046.176-1.822.452-2.507.876a6319.444 6319.444 0 00-28.457 17.684c-1.05.657-1.923 1.596-2.879 2.405 0 0-.237.174-.79.001-3.222.693-5.95 1.412-8.552 2.447-21.23 8.437-43.068 11.516-65.737 7.742-1.598-.266-3.275-.064-4.915-.08-3.842-1.002-7.685-2.003-12.073-3.383-7.01-2.779-13.473-5.18-19.937-7.581 0 0 .082-.01.01-.313-4.052-2.084-8.032-3.865-12.012-5.647 0 0 .067-.028.078-.356-1.686-1.105-3.384-1.88-5.081-2.657 0 0 .067-.014.069-.348-1.024-.776-2.049-1.217-3.074-1.657 0 0 .07-.008.064-.342-1.024-.774-2.043-1.215-3.061-1.656 0 0 .067-.018.105-.332-4.262-3.122-8.561-5.93-12.86-8.737z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08788\",\n    d: \"M145.808 238.992c-6.263.038-12.529.182-18.787.027-1.277-.032-2.526-1.189-3.66-2.385 5.1-2.863 10.073-5.168 15.389-7.545 3.758-1.779 7.222-3.393 10.58-5.205 22.385-12.08 44.76-24.121 69.214-31.754 12.068-3.767 23.407-4.337 34.175 3.606 1.332.983 4.49 1.183 5.767.28 10.203-7.201 20.952-8.743 32.593-4.213.587.229 1.313.102 1.974.141 3.919 1.463 7.837 2.926 12.167 4.969 1.343.772 2.275.964 3.208 1.155 0 0 .113-.087.386.235.715.462 1.157.602 1.599.742 0 0 .142-.107.312.303a434.601 434.601 0 0020.13 10.354c14.916 7.181 29.874 14.276 45.049 21.604.613.339.992.481 1.605.803.985.404 1.737.628 2.769 1.039.924.37 1.567.551 2.431.933 1.415.561 2.608.923 3.86 1.593.519.701.98 1.095 1.443 1.488-6.514.687-13.028 1.373-20.369 2.01-2.807-.287-4.813-.394-6.765-.778-41.081-8.074-82.389-13.66-124.415-11.344-8.134.449-16.32.561-24.38 1.613-18.468 2.408-36.877 5.262-55.296 8.028-3.691.555-7.32 1.523-10.979 2.3z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E6E6\",\n    d: \"M293.027 191.542c-.635.363-1.36.49-1.948.261-11.641-4.53-22.39-2.988-32.593 4.214-1.278.902-4.435.702-5.767-.28-10.768-7.944-22.107-7.374-34.175-3.607-24.454 7.633-46.829 19.674-69.214 31.754-3.358 1.812-6.822 3.426-10.965 5.15-.983-.016-1.239-.05-1.495-.085.85-.683 1.615-1.522 2.56-2.023 14.146-7.494 28.027-15.575 42.563-22.22 13.719-6.272 27.856-12.001 42.338-16.095 9.483-2.68 19.97-1.71 28.46 4.88 2.5 1.941 4.231 1.408 6.02.047 7.084-5.385 15.192-6.383 23.6-5.434 3.598.406 7.064 1.988 10.616 3.438z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E2E3\",\n    d: \"M375.67 231.109c-14.94-7.13-29.899-14.226-44.814-21.407a477.21 477.21 0 01-20.077-10.283c1.58.06 3.425.157 4.952.904 18.584 9.087 37.116 18.283 55.683 27.407 1.847.907 3.835 1.527 5.883 2.52-.46.446-1.044.653-1.627.859z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCDCDC\",\n    d: \"M235.08 312.397c1.463-.355 3.14-.557 4.738-.29 22.669 3.773 44.508.694 65.737-7.743 2.603-1.035 5.33-1.754 8.417-2.506-8.983 3.449-18.205 7.487-27.83 9.94-11.908 3.036-24.236 3.96-36.56 3.136-4.802-.32-9.553-1.42-14.503-2.537z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E2E3\",\n    d: \"M136.478 228.977c.648.006.904.041 1.544.13-4.588 2.359-9.56 4.664-14.796 7.157-1.026.461-1.79.736-2.906 1.137 6.096 5.507 11.923 10.773 17.681 16.386-4.913-3.393-9.757-7.135-14.598-10.88-.13-.1-.247-.223-.346-.354-1.344-1.763-2.684-3.529-4.024-5.294 2.36-1.76 4.522-3.943 7.133-5.169 3.105-1.458 6.596-2.093 10.312-3.113z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCDCDC\",\n    d: \"M315.288 301.952c.565-.845 1.438-1.784 2.488-2.441a6319.444 6319.444 0 0128.457-17.684c.685-.424 1.461-.7 2.54-.887-6.784 8.048-15.26 13.885-25.367 17.367-2.68.924-5.157 2.438-8.118 3.645z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E6E6\",\n    d: \"M362.84 266.646c6.527-6.92 13.055-13.839 19.93-20.67-1.56 2.485-3.407 4.935-5.39 7.27a356.395 356.395 0 01-8.327 9.434c-1.692 1.853-3.524 3.58-5.7 5.037-.442-.574-.478-.823-.514-1.071z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCDCDC\",\n    d: \"M362.549 266.825c.326.07.362.318.45.94-4.367 4.672-8.786 8.97-13.55 13.335 1.27-2.04 2.724-4.3 4.541-6.215 2.618-2.758 5.5-5.266 8.559-8.06zM203.05 301.393c6.307 2.07 12.77 4.471 19.373 7.142a307.937 307.937 0 01-19.374-7.142z\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E2E3\",\n    d: \"M139.028 255.38c3.925 3.166 7.996 6.635 11.98 10.46-4.001-3.15-7.918-6.654-11.98-10.46z\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E6E6\",\n    d: \"M388.315 237.145c-.765-.376-1.227-.77-1.6-1.583.482-.746.873-1.072 1.264-1.398 5.283 2.394 5.428 2.943 1.515 6.845-1.125 1.121-2.476 2.014-4.077 3.062.622-1.331 1.708-2.651 2.53-4.12.453-.812.462-1.873.368-2.806z\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCDCDC\",\n    d: \"M167.162 279.366a132.867 132.867 0 0112.82 8.422c-4.293-2.459-8.541-5.266-12.82-8.422z\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E2E3\",\n    d: \"M151.021 266.375c3.037 2.113 6.218 4.534 9.513 7.226-3.047-2.126-6.207-4.522-9.513-7.226z\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCDCDC\",\n    d: \"M191.027 295.434a107.143 107.143 0 0111.881 5.356c-3.864-1.446-7.805-3.235-11.881-5.356z\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E6E6\",\n    d: \"M375.904 231.306c.35-.403.933-.61 1.77-.988 2.887.868 5.52 1.907 7.932 3.298-1.186.322-2.152.294-3.118.265a13.784 13.784 0 01-2.449-.91c-1.267-.59-2.015-.816-2.763-1.042a8.98 8.98 0 01-1.372-.623z\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCDCDC\",\n    d: \"M186.014 292.415c1.571.45 3.269 1.226 4.947 2.366-1.619-.437-3.22-1.239-4.947-2.366z\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E2E3\",\n    d: \"M382.71 234.081c.744-.171 1.71-.143 3.042-.123.782.023 1.198.055 1.92.146-.084.386-.475.712-1.014 1.15-1.34-.25-2.534-.612-3.949-1.173z\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCDCDC\",\n    d: \"M182.999 290.397c.91.127 1.934.568 2.955 1.378-.95-.11-1.894-.587-2.955-1.378zM180.001 288.399c.903.128 1.922.569 2.946 1.378-.939-.109-1.885-.587-2.946-1.378z\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E2E3\",\n    d: \"M308.196 197.767c-.7.11-1.633-.082-2.832-.513.69-.09 1.645.061 2.832.513zM161.475 274.993c.034.035.024-.108.038-.128.013-.02-.071.094-.038.128zM310.187 198.758c-.216.147-.658.007-1.33-.398.216-.14.66-.015 1.33.398zM137.946 254.32c.306-.13.695.002 1.04.472-.347.155-.653-.027-1.04-.473z\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E6E6\",\n    d: \"M383.299 246.034c-.112-.277.034-.648.506-1.005.135.314-.057.613-.506 1.005zM384.305 245.04c-.116-.278.028-.646.499-1.007.138.31-.05.614-.5 1.007z\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#811A19\",\n    d: \"M146.02 239.288c3.446-1.074 7.076-2.042 10.767-2.597 18.419-2.766 36.828-5.62 55.295-8.028 8.06-1.052 16.247-1.164 24.381-1.613 42.026-2.316 83.334 3.27 124.415 11.344 1.952.384 3.958.49 6.344.746-10.543 5.342-21.492 10.666-33.182 15.838-20.802-5.556-41.251-7.256-61.963-6.79-10.592.238-21.2.331-31.788.054-19.693-.517-39.151.962-58.304 5.74-6.755-2.59-13.54-5.101-20.255-7.79-5.212-2.088-10.336-4.398-15.71-6.904z\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F08B8C\",\n    d: \"M182.18 254.282c18.958-5.078 38.416-6.557 58.109-6.04 10.589.277 21.196.184 31.788-.054 20.712-.466 41.16 1.234 61.569 6.807-.694 1.105-1.734 2.043-3.595 2.905-6.164.38-12.025-2.03-16.865 2.489-3.422-3.651-7.79-2.565-12.504-1.354-.759.116-1.186.223-1.94.353-.785.891-1.243 1.759-1.757 2.906-.087.608-.078.946-.16 1.261-.075.294-.246.564-.218.503-1.064-1.288-2.254-3.906-3.37-3.874-4.779.134-9.536 1.05-14.636 1.738-1.432-.14-2.528-.336-4.077-.656-6.455.239-12.457.6-18.78.892-1.137-.356-1.954-.64-3.133-1.03-1.114-.11-1.864-.115-2.949-.308-3.121-.087-5.91.013-9.09.043-2.144.254-3.896.577-6.03.924-7.04-2.099-13.686-4.051-20.08.823-2.54-4.346-10.536-5.689-15.975-2.563-5.371-1.821-10.742-3.642-16.308-5.765z\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCF8F8\",\n    d: \"M278.936 261.864c4.765-.63 9.522-1.546 14.302-1.68 1.115-.032 2.305 2.586 3.369 3.874-.028.061.143-.209.219-.503.08-.315.072-.653.432-1.379a60.004 60.004 0 001.81-2.811c.428-.107.855-.214 1.96-.134 2.14.374 3.614.79 5.06.705 4.265-.248 6.14 1.7 5.88 5.882-10.687 2.142-21.374 4.284-32.499 5.965-.469-3.613-.501-6.766-.533-9.919z\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBF4F4\",\n    d: \"M198.619 260.397c5.307-3.476 13.304-2.133 15.843 2.213 6.394-4.874 13.04-2.922 20.1-.363 1.026 3.73 1.646 7.024 2.266 10.318-11.935-3.333-23.876-6.643-35.79-10.046-.861-.246-1.53-1.166-2.42-2.122z\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCF8F8\",\n    d: \"M256.064 262.229c6.003-.362 12.005-.724 18.465-.587.848 2.218 1.397 3.92 1.586 5.66.187 1.724.01 3.488-.006 5.234-1.76.212-3.518.423-6.148.56-3.83.114-6.79.304-9.75.493-.52.045-1.039.09-2.09-.272-1.04-3.966-1.548-7.527-2.057-11.088z\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCFDFC\",\n    d: \"M237.195 272.67c-.987-3.399-1.607-6.693-2.249-10.447 1.73-.783 3.482-1.106 5.955-1.144 3.513.166 6.304.047 9.095-.072.75.006 1.501.011 2.62.53.375 4.362.383 8.21.392 12.057-1.145.037-2.289.073-4.186-.106-2.758-.288-4.761-.362-6.765-.435-.188.015-.376.03-.995-.17-.949-.168-1.466-.118-1.983-.069-.506-.013-1.012-.026-1.884-.144z\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E6E6\",\n    d: \"M312.334 265.757c-.105-4.12-1.981-6.069-6.247-5.82-1.445.083-2.92-.332-4.727-.715 4.036-1.398 8.404-2.484 11.826 1.167 4.84-4.518 10.7-2.11 16.517-2.473-5.353 2.656-11.179 5.218-17.37 7.841z\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBF4F4\",\n    d: \"M253.407 273.678c-.408-3.931-.416-7.779-.429-12.036.812-.125 1.629.16 2.766.516.829 3.632 1.337 7.193 1.99 11.099-1.213.398-2.57.451-4.327.42zM276.405 272.516c-.28-1.726-.103-3.49-.29-5.214-.189-1.74-.738-3.442-1.134-5.537 1.092-.179 2.188.018 3.62.157.367 3.095.4 6.248.427 9.799-.78.524-1.553.649-2.623.795zM260.626 273.666c2.544-.266 5.504-.456 8.89-.622-2.54.249-5.508.474-8.89.622zM242.402 273.175c1.659-.049 3.662.025 5.997.229-1.663.05-3.657-.029-5.997-.23zM239.383 272.906c.213-.141.73-.19 1.408-.104-.26.157-.682.176-1.408.104z\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E2E3\",\n    d: \"M377.51 232.11c.514.045 1.262.271 2.248.674-.512-.047-1.264-.27-2.249-.675z\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBF4F4\",\n    d: \"M249.662 260.82c-2.457.306-5.248.425-8.368.328 2.459-.315 5.247-.415 8.368-.328z\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F7E6E6\",\n    d: \"M298.742 259.388c-.168.781-.661 1.586-1.428 2.508.185-.75.643-1.617 1.428-2.508z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId12);\nexport default __webpack_public_path__ + \"static/media/viseme_id_12.e4538d1adcfe381401f913730d79f45e.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId13(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512 488\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D38282\",\n    d: \"M319.969 277.12c-8.805 12.175-20.503 20.571-34.41 25.91-3.704 1.423-7.727 2.014-12.356 2.781-6.836-.403-12.92-.768-19.004-.748-4.74.016-9.477.51-14.215.792-1.064.045-2.129.09-3.708-.254-8.468-3.952-16.414-7.528-24.377-11.066-1.295-.576-2.664-.985-4-1.471 0 0 .07-.015.047-.283-.367-.431-.71-.594-1.054-.756 0 0 .096.033.096-.271-2.366-2.095-4.731-3.886-7.097-5.677 0 0 .078-.043.15-.362-.67-.761-1.411-1.203-2.154-1.645 0 0 .079-.039.17-.348-6.086-7.575-12.249-14.85-18.467-22.077-.344-.4-1.15-.401-1.74-.589 0 0 .072-.035.147-.363-4.323-6.434-8.721-12.539-13.119-18.644 0 0 .071-.02.191-.356.67-1.943 1.22-3.549 1.91-4.766 3.426 1.257 6.68 2.648 10.01 2.865 4.484.292 9.026-.321 13.721-.31 5.921 3.766 11.645 7.328 17.431 10.785.755.451 1.829.37 2.794.9.877 1.541 1.515 2.956 2.587 3.852 8.359 6.995 17.204 13 28.359 14.775 20.116 3.202 39.138 1.52 55.674-11.832 1.72-1.388 2.991-3.33 4.833-4.965 7.034-4.597 13.706-9.244 20.861-13.913 5.949-.042 11.423.105 16.875-.186 1.673-.089 3.283-1.378 5.169-1.904.005 2.136.293 4.35-.572 5.934-3.362 6.163-7.09 12.126-10.683 18.163 0 0 .006-.07-.315-.068-1.103 1.361-1.885 2.72-2.667 4.077 0 0-.007-.07-.327-.046-1.1 1.367-1.879 2.711-2.658 4.055 0 0-.02-.069-.307-.082-.433.354-.578.72-.724 1.086 0 0 .003-.076-.305-.088-2.46 2.357-4.613 4.726-6.766 7.095z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F8E3E3\",\n    d: \"M334.36 260.954c3.27-5.9 6.999-11.863 10.361-18.026.865-1.584.577-3.798.46-6.241-11.392-17.198-26.494-29.472-42.984-40.358-13.95-9.209-28.088-15.372-44.62-6.372-1.263.688-3.63.173-5.132-.532-14.983-7.028-28.33-3.86-40.942 5.884-3.85 2.975-8.323 5.145-12.527 7.666l-.05-.052c12.102-10.83 24.77-20.494 42.359-18.871 2.963.273 6.172 1.011 8.667 2.525 4.226 2.565 7.904 1.766 11.98-.033 9.447-4.17 18.894-3.637 28.047.909 12.472 6.195 23.757 14.08 34.395 23.149 8.306 7.081 15.257 15.114 21.666 23.81 2.115 2.87 2.583 5.469.642 8.406-3.975 6.016-7.998 12.001-12.322 18.136zM166.84 236.538c-.55 1.606-1.1 3.212-1.782 5.19-.106-1.84-.98-4.71.083-6.159 9.257-12.613 20.24-23.56 33.426-32.62.358-.026.392.009.433.37-1.757 2.048-3.628 3.663-5.341 5.43-8.962 9.242-17.884 18.522-26.82 27.79z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#C08F8D\",\n    d: \"M240.364 306.061c4.358-.487 9.096-.982 13.835-.998 6.083-.02 12.168.345 18.592.8-.837.552-2.02 1.126-3.191 1.105-9.62-.171-19.238-.453-29.236-.907z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F8E3E3\",\n    d: \"M177.914 261.412c.526-.168 1.332-.166 1.676.233 6.218 7.227 12.381 14.502 18.445 22.115-6.76-7.1-13.408-14.546-20.12-22.348zM208.021 293.398c1.214.152 2.583.561 3.878 1.137 7.963 3.538 15.91 7.114 23.982 10.997-8.835-.785-16.713-4.608-24.22-9.356-1.205-.763-2.347-1.627-3.64-2.778zM164.93 242.416a392.478 392.478 0 0113.084 18.313c-4.383-5.739-8.708-11.842-13.084-18.313zM320.328 277.082c1.794-2.331 3.947-4.7 6.446-7.054-1.8 2.348-3.943 4.682-6.446 7.054zM200.008 286.395a55.421 55.421 0 016.962 5.407c-2.293-1.462-4.57-3.276-6.962-5.407zM331.378 264.992c.46-1.25 1.242-2.608 2.38-3.963-.448 1.286-1.253 2.57-2.38 3.963zM328.39 268.993c.46-1.228 1.24-2.572 2.374-3.94-.448 1.26-1.252 2.542-2.374 3.94zM197.98 284.358c.65.154 1.392.596 2.041 1.396-.712-.13-1.33-.62-2.041-1.396zM327.309 270.043c-.123-.296.022-.662.49-1.012.141.325-.04.634-.49 1.012zM206.976 292.287c.26-.1.603.063.97.529-.28.113-.583-.076-.97-.529z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08788\",\n    d: \"M166.978 236.927c8.797-9.656 17.72-18.936 26.68-28.178 1.714-1.767 3.585-3.382 5.359-5.412 4.163-2.883 8.635-5.053 12.486-8.028 12.612-9.744 25.96-12.912 40.942-5.884 1.503.705 3.869 1.22 5.132.532 16.532-9 30.67-2.837 44.62 6.372 16.49 10.886 31.592 23.16 42.738 40.145-1.528 1.046-3.138 2.335-4.811 2.424-5.452.291-10.926.144-17.274.16-10.345-.48-18.225-5.298-25.267-10.662-15.524-11.824-32.978-13.826-51.548-12.858-10.883.567-20.408 4.243-29.29 10.194-5.116 3.428-10.115 7.09-15.502 10.034-3.237 1.769-7.119 2.36-10.71 3.48-4.518.225-9.06.838-13.543.546-3.33-.217-6.585-1.608-10.012-2.865z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F1898B\",\n    d: \"M302.026 252.947c-1.48 1.685-2.752 3.627-4.471 5.015-16.536 13.352-35.558 15.034-55.674 11.832-11.155-1.776-20-7.78-28.36-14.775-1.07-.896-1.709-2.31-2.382-4.112 7.466-5.565 14.538-10.89 22.116-15.357 14.304-8.43 38.904-8.726 53.312 4.791 4.837 4.538 10.288 8.423 15.459 12.606z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#811A1A\",\n    d: \"M302.388 252.997c-5.533-4.233-10.984-8.118-15.821-12.656-14.408-13.517-39.008-13.221-53.312-4.79-7.578 4.466-14.65 9.791-22.155 14.99-1.13.095-2.204.177-2.959-.274-5.786-3.457-11.51-7.019-17.43-10.784 3.413-1.357 7.295-1.948 10.532-3.717 5.387-2.944 10.386-6.606 15.502-10.034 8.882-5.95 18.407-9.627 29.29-10.194 18.57-.968 36.024 1.034 51.548 12.858 7.042 5.364 14.922 10.182 24.785 10.682-6.274 4.675-12.946 9.322-19.98 13.92z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId13);\nexport default __webpack_public_path__ + \"static/media/viseme_id_13.51332767bb3fb019951b1f35a4326813.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33, _path34, _path35;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId14(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 511 489\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D28382\",\n    d: \"M363.026 267.3c.057.309-.052.539-.897.659-4.064 4.02-7.56 8.07-11.056 12.12 0 0-.067-.066-.35-.085-.413.353-.544.726-.674 1.099 0 0-.03-.074-.318-.093-.42.351-.551.722-.682 1.093 0 0-.03-.074-.316-.092-.42.352-.553.722-.687 1.092 0 0-.033-.083-.349-.178-2.758 2.347-5.2 4.79-7.643 7.232 0 0-.047-.08-.308-.08-.413.34-.563.68-.714 1.022 0 0-.014-.07-.294-.074-.42.356-.56.716-.699 1.076 0 0-.022-.073-.344-.114-.76.676-1.199 1.393-1.637 2.11 0 0-.05-.083-.364-.18-1.097.664-1.879 1.424-2.661 2.184 0 0-.016-.07-.299-.074-.418.356-.553.716-.689 1.076 0 0-.029-.077-.302-.126-.475.29-.678.63-.88.97 0 0-.276.162-.732.198-.676.343-.895.65-1.114.957 0 0-.001-.073-.322-.165-1.101.66-1.88 1.412-2.66 2.164 0 0-.021-.072-.298-.116-.483.293-.69.63-.897.966 0 0-.232.162-.702.111-.74.263-1.01.576-1.28.89 0 0-.259.161-.797.072-3.04 1.3-5.543 2.69-8.045 4.08 0 0 .001-.074-.348-.168-2.462.932-4.575 1.958-6.687 2.984 0 0-.337.173-.855.087-1.052.247-1.585.58-2.119.912 0 0-.339.176-.96.057a390.24 390.24 0 00-19.621 3.843c-1.803.403-3.498 1.284-5.243 1.946-8.493.752-16.986 1.503-26.07 1.81-1.986-.756-3.365-1.235-4.774-1.355-15.035-1.284-29.812-3.737-43.89-9.445-4.124-1.672-8.233-3.379-12.681-5.088-.5.129-.667.275-.834.422 0 0 .03-.077.075-.366-.335-.425-.716-.561-1.096-.697 0 0 .07-.015.053-.34-1.693-1.094-3.368-1.864-5.043-2.635 0 0 .07-.048.098-.375-1.348-1.093-2.723-1.858-4.098-2.623 0 0 .075-.05.126-.363-2.344-2.093-4.74-3.872-7.136-5.652 0 0 .073-.033.12-.347-4.444-4.114-8.936-7.914-13.427-11.713-.27.076-.468-.01-.635-.774-.378-.741-.72-.968-1.06-1.195 0 0 .071-.002.065-.277-.359-.42-.711-.565-1.064-.71 0 0 .07-.015.064-.29-.359-.42-.711-.565-1.064-.71 0 0 .07-.015.064-.289-.36-.42-.711-.565-1.064-.71 0 0 .07-.016.069-.294-.357-.42-.713-.562-1.069-.705 0 0 .07-.016.064-.291-.358-.42-.71-.566-1.063-.711 0 0 .072.016.116-.306-7.54-7.968-15.062-15.677-22.76-23.206-1.496-1.463-3.678-2.224-5.544-3.31 0 0 .144-.062.064-.319-.676-.45-1.272-.644-1.869-.838 0 0 .075-.037.132-.357-.304-1.446-.664-2.573-.676-3.654 1.948.892 3.482 2.288 5.16 2.491 9.559 1.156 19.047 3.967 28.793 1.987 7.238 3.752 14.49 7.172 21.868 10.852.73.715 1.334 1.17 2.076 1.923 6 3.433 11.861 6.567 17.933 9.986 6.072 2.07 11.933 3.854 18.142 5.809 3.976.802 7.604 1.433 11.522 2.288 1.232.356 2.175.487 3.322.69.204.071.634.023.764.154s.466.267.466.267.352-.09.772.067c15.567 3.03 30.818 3.385 45.885.293 11.444-2.349 22.636-5.923 34.309-8.958 5.15-2.526 9.983-4.957 14.667-7.648.876-.503 1.154-2.047 2.09-3.135 1.87-.55 3.359-1.075 5.11-1.853 1.76-1.26 3.2-2.363 4.76-3.26 5.197-2.988 10.437-5.902 16.096-8.848 10.686 1.19 20.954 2.484 30.154-4.786 1.358.369 2.386.73 3.459 1.106-.282.57-.352.95-.58 1.136-2.95 2.403-6.144 4.559-8.82 7.233-2.086 2.085-3.535 4.806-5.267 7.245 0 0-.046-.063-.321-.064-.418.356-.56.713-.702 1.07 0 0 .031-.067-.293-.138-3.105 3.329-5.885 6.73-8.665 10.13 0 0-.073-.066-.351-.09-.413.351-.548.727-.682 1.103 0 0-.022-.07-.33-.053-.435.432-.561.846-.687 1.26z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F6E5E5\",\n    d: \"M195.992 204.13c12.887-6.67 25.88-13.321 40.977-11.987 4.958.438 9.922 2.237 14.58 4.153 3.067 1.262 5.027 1.751 8.337-.123 9.902-5.607 20.608-5.544 31.627-2.027.07.573-.154.728-.84.815-10.743-2.935-20.797-2.857-30.104 3.155-3.4 2.195-6.38 1.923-9.683-.012-8.479-4.97-17.68-5.951-26.882-3.118-9.468 2.915-18.633 6.815-27.952 10-.035-.476-.047-.666-.06-.856z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E2E2\",\n    d: \"M195.63 204.147c.375.173.387.363.202 1.08-6.536 4.11-12.983 7.514-19.189 11.311-13.937 8.526-28.51 15.424-44.583 18.935-3.437.75-6.693 2.327-10.032 3.522.36 1.128.72 2.255 1.001 3.737-1.383-1.181-2.687-2.716-3.99-4.252 1.308-.838 2.51-2.041 3.941-2.46 14.05-4.102 28.427-7.148 41.293-14.706 10.179-5.979 20.654-11.453 31.358-17.167z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBE0E1\",\n    d: \"M375.37 253.958c1.419-2.316 2.868-5.037 4.954-7.122 2.676-2.674 5.87-4.83 8.82-7.233.228-.186.298-.566.58-1.136a56.311 56.311 0 00-3.847-1.229c-14.088-2.78-27.082-6.625-38.954-13.443-6.191-3.556-11.968-7.833-17.913-11.805l.055-.063c7.269 4.01 14.504 8.083 21.815 12.015 11.517 6.194 24.213 8.84 36.714 12.081 1.542.4 2.931 1.385 4.39 2.1-.962 1.444-1.682 3.16-2.933 4.285-4.356 3.92-8.897 7.635-13.68 11.55z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FDD3D7\",\n    d: \"M191.1 302.695c4.116 1.691 8.225 3.398 12.349 5.07 14.078 5.708 28.855 8.161 43.89 9.445 1.41.12 2.788.6 4.314 1.24-20.875-.525-41.123-4.507-60.287-14.72-.302-.646-.284-.84-.265-1.035z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E2E2\",\n    d: \"M124.6 244.556c1.99.74 4.173 1.5 5.669 2.964 7.698 7.529 15.22 15.238 22.74 23.237-.8.08-1.722.003-2.242-.495-8.793-8.423-17.537-16.898-26.167-25.706z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBE0E1\",\n    d: \"M291.095 194.972c.264-.098.489-.253.782-.64 4.005 1.106 8.017 2.116 11.768 3.732 5.824 2.51 11.47 5.432 17.292 8.538.102.358.064.396-.312.472-10.094-3.984-19.812-8.043-29.53-12.102z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FDD3D7\",\n    d: \"M278.537 316.58c1.39-.487 3.086-1.368 4.889-1.77 6.312-1.41 12.662-2.656 19.433-3.88-7.7 1.88-15.834 3.677-24.322 5.65z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E2E2\",\n    d: \"M159.807 278.28c4.29 3.507 8.782 7.307 13.21 11.457-4.379-3.488-8.694-7.327-13.21-11.458z\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBE0E1\",\n    d: \"M365.4 264.971c2.456-3.293 5.236-6.693 8.368-9.997-2.447 3.36-5.245 6.625-8.367 9.997zM351.393 279.977c3.176-3.948 6.672-7.999 10.533-12.004-3.16 3.997-6.686 7.949-10.533 12.004zM340.403 290.088a65.493 65.493 0 017.328-7.145c-2.093 2.445-4.536 4.765-7.328 7.145z\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E2E2\",\n    d: \"M173.038 290.363a52.075 52.075 0 016.986 5.374c-2.338-1.452-4.6-3.256-6.986-5.374z\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FDD3D7\",\n    d: \"M314.4 307.047a66.124 66.124 0 017.515-4.078c-2.115 1.373-4.624 2.702-7.516 4.078zM307.363 309.958c1.73-1.074 3.843-2.1 6.336-3.012-1.731 1.095-3.843 2.077-6.336 3.012z\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBE0E1\",\n    d: \"M321.058 206.941c1.61.759 3.2 1.537 4.888 2.665.097.35.05.398-.31.467-1.785-.98-3.21-2.027-4.635-3.075l.057-.057z\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E2E2\",\n    d: \"M184.033 299.395c1.565.437 3.24 1.207 4.926 2.337-1.599-.428-3.208-1.216-4.926-2.337zM180.023 296.386c1.275.442 2.65 1.207 3.979 2.338-1.323-.428-2.6-1.222-3.979-2.338z\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBE0E1\",\n    d: \"M326.066 209.932c.946.442 1.868.908 2.895 1.684.104.311.067.353-.301.428-1.133-.63-1.898-1.335-2.664-2.04l.07-.072zM333.366 296.053c.45-.722 1.231-1.482 2.364-2.114-.443.777-1.237 1.426-2.364 2.114zM326.369 301.052c.445-.713 1.225-1.465 2.357-2.106-.44.763-1.232 1.415-2.357 2.106zM336.352 294.007c.144-.637.582-1.354 1.378-2.014-.124.682-.605 1.308-1.378 2.014z\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FDD3D7\",\n    d: \"M304.348 310.952c.193-.376.726-.708 1.59-.984-.195.38-.722.704-1.59.984z\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E2E2\",\n    d: \"M123.047 243.39c.47-.143 1.066.05 1.753.579-.482.141-1.054-.051-1.753-.58zM188.97 302.305c.323-.133.704.003 1.03.463-.362.152-.668-.021-1.03-.463z\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBE0E1\",\n    d: \"M331.16 297.968c-.095-.371.108-.71.619-.98.099.384-.11.698-.618.98zM329.294 299.009c-.058-.224.161-.531.682-.915.066.227-.17.53-.682.915zM325.143 301.97c-.096-.366.111-.702.63-.98.098.375-.114.693-.63.98zM374.298 255.016c-.122-.286.02-.643.475-.991.138.312-.037.616-.475.991zM323.184 302.965c-.056-.337.214-.65.822-.964.06.33-.218.659-.822.964z\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E2E2\",\n    d: \"M190.768 302.677c.314.213.296.407.261.894-.333.215-.65.137-1.03-.207.102-.412.27-.558.769-.687zM152.982 271.297c.284-.12.636.026.987.481-.307.135-.613-.04-.987-.481z\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBE0E1\",\n    d: \"M332.315 297.03c-.134-.297.001-.657.455-1.006.15.322-.018.633-.455 1.006zM338.31 292.03c-.131-.299.008-.659.463-1.007.145.323-.024.635-.464 1.007zM339.295 291.015c-.112-.267.038-.609.492-.97.126.286-.051.591-.492.97zM364.31 266.032c-.133-.316.002-.692.46-1.023.151.35-.02.657-.46 1.023zM348.314 283.032c-.134-.31-.001-.679.456-1.016.152.34-.018.647-.456 1.016zM349.316 282.031c-.136-.309-.005-.68.452-1.017.155.342-.015.649-.452 1.017zM350.316 281.031c-.137-.311-.006-.684.45-1.019.157.345-.013.651-.45 1.02zM363.28 267.155c-.128-.27-.002-.684.469-1.11.159.315-.027.64-.468 1.11z\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9E2E2\",\n    d: \"M157.993 276.31c.259-.064.6.163.978.729-.274.08-.585-.178-.978-.728zM156.985 275.294c.28-.117.632.028.984.483-.304.133-.608-.043-.984-.483zM155.985 274.295c.28-.118.632.027.985.483-.305.133-.609-.044-.985-.483zM154.985 273.295c.28-.117.632.028.984.483-.304.133-.608-.043-.984-.483zM153.977 272.302c.29-.125.647.017.996.473-.314.14-.622-.033-.996-.473z\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08888\",\n    d: \"M325.636 210.073c1.126.636 1.89 1.342 3.006 1.992 6.313 3.897 12.09 8.174 18.281 11.73 11.872 6.818 24.866 10.664 38.624 13.435-8.482 7.401-18.75 6.107-29.864 4.93a2543.736 2543.736 0 01-46.649-8.32c-7.922-1.052-15.489-1.913-23.095-3.074-.454-.598-.87-.896-1.285-1.195-.153.547-.307 1.094-.391 1.76.068.117.01.383-.368.2-.657-.19-.937-.196-1.481-.232-.62-.031-.975-.034-1.796-.132-6.2.168-11.932.431-18.099.746-2.344.05-4.256.05-7.015.05.62 2.538 1.057 4.323 1.192 6.36-1.33.274-2.36.298-3.166-.006.715-2.329 1.21-4.33 1.915-7.19-8.65 0-16.407.154-24.153-.067-3.707-.106-4.777 1.375-4.217 4.909-.656-.193-1.188-.57-1.808-1.37-.308-1.018-.475-2.106-.754-2.135-7.651-.808-15.345-1.794-22.795 2.353-1.925.161-3.525.326-5.1.627-13.427 2.567-26.85 5.159-40.275 7.743-9.76 2.313-19.248-.498-28.807-1.654-1.678-.203-3.212-1.6-5.16-2.491 2.991-1.242 6.247-2.819 9.684-3.57 16.072-3.51 30.646-10.408 44.583-18.934 6.206-3.797 12.653-7.201 19.21-11.026 9.518-3.71 18.683-7.61 28.15-10.526 9.203-2.833 18.404-1.851 26.883 3.118 3.303 1.935 6.283 2.207 9.683.012 9.307-6.012 19.36-6.09 30.103-3.155 10.14 4.07 19.859 8.129 29.953 12.113 1.801.972 3.226 2.02 5.011 2.999z\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F18C8D\",\n    d: \"M253.308 238.645a31.087 31.087 0 003.8-.278c9.062-.616 17.411-1.028 26.067-1.646.519-1.183.73-2.159 1.187-2.822 1.688 1.254 3.07 2.871 4.584 3.005 3.85.339 7.76.015 11.917.218 11.556 5.969 22.843 11.677 34.13 17.386-1.49.525-2.977 1.05-5.279 1.63-6.219.738-12.273-1.365-16.65 3.74-.316-.379-.632-.758-1.15-1.463-2.618-.602-5.311-1.7-7.402-1-6.66 2.227-13.47.915-20.142 1.706-2.837.336-5.534 1.856-8.404 2.44-5.302-2.882-17.965-2.211-20.35.673-3.687-3.934-16.445-4.128-23.567-.312-.044.045.067-.017.017-.353-1.063-.964-2.078-1.592-3.54-2.327-4.13-.038-7.813.03-11.851.168-1.539-.14-2.827-.116-3.888-.597-5.547-2.513-12.98-.847-15.048 3.154-1.93-5.913-10.573-8.753-17.604-5.972-.604-.454-1.208-.908-1.637-1.784 9.023-5.034 17.87-9.65 26.72-14.254a148.4 148.4 0 017.229-3.547c4.554-.492 8.73-.94 12.908-1.387.532.377 1.064.753 2.004 1.194 1.95.609 3.468 1.54 5.035 1.63 6.964.397 13.941.554 20.914.798z\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCFAF9\",\n    d: \"M276.075 261.96c2.76-.983 5.458-2.503 8.295-2.839 6.672-.79 13.482.52 20.142-1.707 2.091-.7 4.784.4 7.363 1.434.49 3.189.817 5.619 1.145 8.049-11.305 3.029-22.497 6.603-33.941 8.952-15.067 3.092-30.318 2.737-46.022-.388-.77-.353-.995-.392-1.231-.37 0 0-.43.048-.885-.289-1.424-.44-2.392-.544-3.36-.647-3.63-.632-7.257-1.263-11.233-2.498-.005-4.508.339-8.412.682-12.316 3.683-.068 7.365-.137 11.521.244 1.504 1.073 2.535 1.697 3.565 2.32 0 0-.11.062-.096.469.174 2.735.333 5.064.492 7.393 2.379-2.744 3.042-6.433 5.038-7.417 2.554-1.258 6.183-.336 9.348-.352.333-.002.674.045.999-.007 4.7-.752 6.762 1.013 6.175 5.95-.25 2.096.318 4.289.514 6.438l2.028.023c.13-2.649.512-5.314.33-7.941-.247-3.574 1.205-4.677 4.638-4.521 4.821.218 9.661.032 14.493.02z\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#831D1D\",\n    d: \"M335.256 254.255a663.853 663.853 0 01-33.98-17.231c2.8-1.237 5.457-2.114 8.114-2.992 15.143 2.715 30.286 5.43 45.857 8.132-4.795 2.929-10.035 5.843-15.232 8.831-1.56.897-3 2-4.76 3.26zM212.07 236.454c-2.285 1.167-4.576 2.32-6.851 3.503-8.852 4.605-17.698 9.22-26.846 13.993a340.847 340.847 0 01-22.044-10.43c13.439-2.917 26.862-5.509 40.29-8.076 1.574-.301 3.174-.466 5.46-.444 3.796.65 6.893 1.052 9.99 1.454z\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCF3F3\",\n    d: \"M216.675 259.41c.012 3.835-.332 7.739-.675 12.076a117.814 117.814 0 01-17.79-5.582c-.208-1.663-.209-2.663-.21-3.662 1.807-4.276 9.24-5.942 14.787-3.429 1.06.48 2.35.457 3.888.597z\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9F2F0\",\n    d: \"M313.388 266.891c-.696-2.424-1.023-4.854-1.311-7.717.355-.054.67.325.986.705 4.378-5.106 10.432-3.003 16.269-3.716-.123 1.033-.401 2.577-1.277 3.08-4.684 2.69-9.517 5.122-14.667 7.648zM197.739 261.967c.262 1.274.263 2.274.26 3.65-5.865-2.755-11.726-5.889-17.726-9.322 6.893-3.08 15.536-.241 17.466 5.672z\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCF3F3\",\n    d: \"M227.87 274.378c.679-.12 1.647-.016 2.866.353-.691.134-1.634.003-2.866-.353zM231.956 275.222c.106-.153.33-.114.681.081.137.095-.215.186-.215.186s-.336-.136-.466-.267z\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9F2F0\",\n    d: \"M253.53 238.317a306.029 306.029 0 01-21.136-.47c-1.567-.09-3.086-1.021-4.91-1.813-.969-3.599.1-5.08 3.808-4.974 7.746.221 15.504.067 24.153.067-.706 2.86-1.2 4.861-1.915 7.19z\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCFAF9\",\n    d: \"M282.868 236.928c-8.349.411-16.698.823-25.458 1.189-.849-1.83-1.286-3.616-1.906-6.153 2.76 0 4.67 0 7.485-.015 6.633-.239 12.364-.463 18.095-.687.355.003.71.006 1.406.428.353 2.026.365 3.632.378 5.238z\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F9F2F0\",\n    d: \"M309.034 233.84c-2.3 1.07-4.957 1.947-8.028 2.923-4.3.156-8.21.48-12.06.14-1.513-.133-2.896-1.75-4.555-3.237-.185-1.014-.152-1.483-.118-1.952 0 0 .058-.266.287-.35a19.672 19.672 0 011.419-.298c7.566.86 15.133 1.722 23.055 2.775z\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCF3F3\",\n    d: \"M212.447 236.41a150.782 150.782 0 01-10.03-1.343c6.75-4.397 14.445-3.41 22.096-2.603.279.03.446 1.117.754 2.136-4.09.87-8.266 1.318-12.82 1.81z\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D4CBC5\",\n    d: \"M280.618 231.167c-5.265.32-10.996.543-17.196.731 5.264-.3 10.997-.563 17.196-.731zM283.895 231.53c.344.653.311 1.122.25 1.824-.24 1.208-.451 2.184-.97 3.367-.32-1.399-.332-3.005-.42-5.002.203-.384.483-.378 1.14-.188z\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F18C8D\",\n    d: \"M285.94 230.766c-.358.371-.754.443-1.448.48-.145-.58.009-1.128.162-1.675.416.299.83.597 1.285 1.195z\"\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCF3F3\",\n    d: \"M275.966 261.56c-4.723.412-9.563.598-14.384.38-3.433-.156-4.885.947-4.638 4.52.182 2.628-.2 5.293-.33 7.942l-2.028-.023c-.196-2.15-.764-4.342-.514-6.438.587-4.937-1.475-6.702-6.175-5.95-.325.052-.666.005-.999.007-3.165.016-6.794-.906-9.348.352-1.996.984-2.66 4.673-5.038 7.417-.16-2.329-.318-4.658-.448-7.439 7.107-4.222 19.865-4.028 23.552-.094 2.385-2.884 15.048-3.555 20.35-.673zM232.066 261.569c-.98-.287-2.01-.911-3.066-1.877.988.285 2.003.913 3.066 1.877z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId14);\nexport default __webpack_public_path__ + \"static/media/viseme_id_14.ecfd59e4f35f995a8a3d1d497b3f4248.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId15(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 509 490\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D28383\",\n    d: \"M201.837 294.93c-5.42-2.613-10.841-5.225-16.816-8.247-2.752-1.476-4.949-2.542-7.146-3.607 0 0 .078-.022.05-.326-7.362-4.429-14.697-8.553-22.032-12.677 0 0 .07-.008.053-.324-1.027-.781-2.037-1.247-3.047-1.713 0 0 .082.004.056-.297-3.704-2.764-7.382-5.226-11.061-7.688 0 0 .082.023.094-.286-1.392-1.66-2.768-3.038-4.203-4.353-5.076-4.654-10.214-9.242-15.232-13.958-1.266-1.19-3.023-2.844.544-3.487 1.312 1.014 2.354 2.138 3.533 2.306 10.16 1.445 20.293 4.807 30.78 1.123 3.323 1.67 6.471 3.054 9.87 4.655 1.094.444 1.936.672 2.742.848-.036-.052.059-.136.22.177 3.038 1.506 5.916 2.7 9.025 4.167 5.42 2.387 10.61 4.502 16.044 6.835 1.085.426 1.922.634 3.125.922 5.09 1.5 9.813 2.918 14.767 4.505.792.246 1.354.323 2.296.48 6.243 1.26 12.084 2.56 17.97 3.604 26.774 4.75 52.955 2.47 78.888-6.84 3.832-1.302 7.296-2.57 11.144-3.821 4.39-1.944 8.395-3.906 12.71-6.062a454.2 454.2 0 019.332-4.897c-.01.065-.14.046.178-.087.962-.367 1.605-.6 2.454-1.12 2.295-1.101 4.384-1.918 6.96-2.742 6.239-.35 12.047-.311 17.723-1.157 4.462-.665 8.763-2.42 13.467-3.702 1.299.36 2.266.73 2.997 1.009l-5.357 7.26c.09.24.022.42-.74.538-.75.392-.963.786-1.178 1.18 0 0 .002-.07-.305-.223-2.095 1.645-3.884 3.442-5.673 5.239 0 0-.033-.092-.307-.107-.42.35-.568.714-.714 1.078 0 0-.002-.069-.32-.186-1.768 1.338-3.218 2.793-4.669 4.248 0 0-.05-.113-.313-.126-.406.346-.55.705-.694 1.064 0 0-.01-.07-.317-.213-1.437.983-2.566 2.11-3.695 3.235 0 0-.024-.104-.285-.098-.413.358-.565.71-.716 1.062 0 0 .029-.078-.298-.145-1.775 1.339-3.224 2.744-4.673 4.149 0 0-.027-.077-.337-.201-1.103.673-1.896 1.47-2.69 2.268 0 0-.036-.106-.344-.173-1.42 1.012-2.532 2.09-3.645 3.17 0 0-.042-.103-.347-.155-1.429.993-2.551 2.037-3.674 3.081 0 0 0-.072-.325-.122-2.44 1.678-4.553 3.406-6.666 5.133 0 0 0-.07-.32-.139-1.11.698-1.896 1.463-2.683 2.229 0 0-.01-.142-.299-.2-1.096.67-1.902 1.397-2.709 2.124 0 0 .005-.075-.314-.184-1.775.989-3.231 2.085-4.688 3.182 0 0 .005-.076-.289-.175-.776.324-1.259.748-1.741 1.172 0 0 .052-.115-.271-.167-3.456 1.684-6.59 3.42-9.723 5.155 0 0 .01-.087-.338-.147-6.304 2.563-12.26 5.186-18.216 7.808-14.341 4.473-29.073 5.59-43.995 5.208-4.81-.123-9.626 0-15.138-.364-1.755-.755-2.787-1.233-3.871-1.5a5008.444 5008.444 0 00-27.872-6.803c-2.228-.537-4.49-.934-6.736-1.396z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F8E2E1\",\n    d: \"M122.89 237.634c-3.36.976-1.603 2.63-.337 3.82 5.018 4.716 10.156 9.304 15.232 13.958 1.435 1.315 2.811 2.694 4.19 4.393-7.46-5.982-15.047-12.153-22.226-18.766-1.726-1.59-1.368-4.174 1.92-5.085 9.223-2.554 18.545-4.87 27.555-8.052 18.05-6.375 35.836-13.504 53.893-19.86 12.37-4.354 24.447-10.37 38.192-9.034 1.408.137 2.825.465 4.17.907 6.14 2.013 11.6 3.729 18.587.457 8.064-3.776 17.497-1.775 25.76 1.12 21.203 7.432 42.088 15.767 63.217 23.417 12.286 4.448 24.798 8.271 38.077 12.662 1.034 4.017-3.644 5.128-6.823 7.67 1.393-2.15 3.12-4.488 5.025-7.071-.731-.28-1.698-.649-3.3-1.088-10.8-3.147-21.111-5.822-31.107-9.38-22.872-8.145-45.5-16.976-68.414-24.996-8.997-3.15-18.325-2.673-27.355 1.206-1.908.82-4.785 1.041-6.58.193-10.734-5.072-21.381-3.922-32.074-.233-32.543 11.228-65.069 22.505-97.602 33.762zM201.998 295.29c2.085.1 4.347.498 6.575 1.035 9.297 2.24 18.587 4.51 27.872 6.802 1.084.268 2.116.746 3.42 1.397-12.935-.57-25.489-4.024-37.867-9.234zM156.02 270.407a415.226 415.226 0 0121.915 12.382c-7.237-3.787-14.512-7.918-21.914-12.382zM299.794 299.83a322.047 322.047 0 0117.915-7.848c-5.596 2.674-11.583 5.283-17.915 7.847zM142.026 260.37a126.202 126.202 0 0110.927 7.41c-3.583-2.136-7.19-4.613-10.927-7.41zM318.388 292.061a100.369 100.369 0 019.395-5.066c-2.75 1.72-5.88 3.362-9.395 5.066zM376.412 252.098a33.92 33.92 0 015.363-5.16c-1.448 1.809-3.234 3.452-5.363 5.16zM341.397 279.077c1.756-1.678 3.87-3.406 6.345-5.082-1.754 1.711-3.87 3.372-6.345 5.082zM178.018 283.401c2.054.74 4.251 1.806 6.682 3.096a52.934 52.934 0 01-6.682-3.096zM370.395 257.11a24.176 24.176 0 014.367-4.153c-1.11 1.439-2.57 2.753-4.367 4.154zM359.381 265.994a28.06 28.06 0 014.4-4.002c-1.12 1.344-2.603 2.607-4.4 4.002zM330.38 286.075c1.104-1.034 2.56-2.13 4.373-3.115-1.103 1.091-2.561 2.071-4.373 3.115zM352.386 271.112c.779-1.002 1.89-2.081 3.364-3.11-.77 1.044-1.9 2.038-3.364 3.11zM365.375 261.09c.794-1.059 1.923-2.185 3.393-3.155-.792 1.134-1.925 2.11-3.393 3.155zM348.37 274.067c.784-.996 1.906-2.04 3.386-3.053-.777 1.022-1.912 2.013-3.386 3.053zM335.36 283.077c.476-.664 1.282-1.392 2.45-2.065-.466.704-1.292 1.352-2.45 2.065zM356.368 268.112c.467-.718 1.26-1.515 2.398-2.167-.46.792-1.266 1.44-2.398 2.167zM153.03 268.346c.88.156 1.89.622 2.916 1.438-.917-.142-1.852-.635-2.917-1.438zM338.361 281.12c.463-.67 1.25-1.435 2.394-2.13-.452.724-1.26 1.379-2.394 2.13zM328.32 287.072c.16-.36.642-.785 1.456-1.106-.156.416-.644.729-1.455 1.106zM364.3 262.033c-.11-.264.042-.616.507-.985.127.287-.06.592-.507.985zM369.31 258.04c-.114-.264.03-.623.493-.994.134.292-.051.596-.494.994zM375.306 253.042c-.112-.271.035-.636.502-1.001.132.302-.056.605-.502 1.001zM382.344 247.041c-.082-.287.132-.68.724-1.077.11.321-.16.646-.724 1.077z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08989\",\n    d: \"M123.097 237.967c32.326-11.59 64.852-22.867 97.395-34.095 10.693-3.69 21.34-4.84 32.075.233 1.794.848 4.671.627 6.579-.193 9.03-3.879 18.358-4.355 27.355-1.206 22.913 8.02 45.542 16.85 68.414 24.995 9.996 3.56 20.306 6.234 30.776 9.39-4.07 1.351-8.37 3.107-12.833 3.772-5.676.846-11.484.807-17.942.908-2.914-.75-5.12-1.258-7.788-1.706-5.031-.258-9.6-.576-14.545-1.055-3.751-.38-7.126-.6-10.873-.927-1.143-.122-1.914-.136-3.051-.32-7.439-.64-14.51-1.109-22.048-1.666-10.434-.147-20.402-.282-30.37-.248-18.104.06-36.207.222-54.759.262-9.56.876-18.674 1.831-27.964 2.745-.177-.042-.522.069-.934.025-1.786.1-3.16.245-4.981.408-4.505.647-8.56 1.277-12.958 1.829-2.698-.054-5.055-.03-7.411-.007-10.31 3.969-20.443.607-30.604-.838-1.179-.168-2.221-1.292-3.533-2.306z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCF9F8\",\n    d: \"M311.99 260.784c-25.566 9.276-51.747 11.556-78.52 6.805a206.31 206.31 0 01-18.022-4.044c-.304-3-.539-5.577.09-7.923.378-1.41 1.928-3.251 3.25-3.544 10.347-2.289 13.276-.079 14.425 10.361.024.217.008.439-.005-.555.761-2.607 1.697-5.812 3.114-8.977 5.901.046 11.32.053 17.009.337.902 4.097 1.536 7.917 1.9 10.109.894-2.568 2.266-6.51 4.116-10.419 5.932.005 11.386-.023 16.984.168.218 1.11.292 2.003.453 3.956 3.975-6.996 10.032-5.622 15.054-4.861 2.143.324 3.654 4.824 4.877 6.593l1.56-8.786a10.006 10.006 0 01-2.25-.587c2.52-.279 4.998-.263 7.768-.09 2.936 1.608 7.947-1.35 8.335 4.633.183.452.33.685.593 1.291.222 1.455.359 2.515.287 3.78a17.494 17.494 0 00-1.018 1.753zM212.972 263.336c-4.723-1.418-9.447-2.836-14.603-4.753-.817-4.906-.426-8.804 5.105-8.823-.842-1.401-1.553-2.584-1.897-3.678 2.646 1.565 6.937-.572 7.705 4.298 4.807 2.457 5.955 6.685 3.69 12.956z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F8F4F3\",\n    d: \"M312.357 260.75c-.098-.482.172-.997.78-2.061.563-4.988.85-9.382 7.359-9.546 2.574.011 4.735-.207 6.82.097 1.035.15 2.543 1.135 2.713 1.97.165.813-.907 2.19-1.79 2.835-1.566 1.148-3.4 1.93-5.122 2.865-3.464 1.268-6.928 2.537-10.76 3.84z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E4969A\",\n    d: \"M201.21 245.993l2.264 3.767c-5.531.019-5.922 3.917-5.47 8.741-.77.21-1.608.003-2.327-.505.09-2.637.902-5.5-.157-7.187-1.762-2.805-13.562-2.297-16.484.162-2.878-1.194-5.756-2.389-8.46-3.998 2.28-1.274 4.383-2.133 6.732-3.006.244-.015.732-.067 1.021.152 2.423.69 4.556 1.16 7.028 1.749 1.042.247 1.746.376 2.782.672 1.799.338 3.266.51 4.764.672.03-.01-.001-.065.297.162 3.221 1.161 5.626.841 7.037-2.312.479.405.725.668.972.931z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#DAB1B4\",\n    d: \"M213.203 263.505c2.034-6.44.886-10.668-3.636-13.231.823-.581 1.6-.804 2.727-.888 2.138.19 3.926.24 6.135.354 1.836.036 3.252.01 4.928 0 .682-.237 1.104-.492 1.621-1.013.113-.64.13-1.015.323-1.639.283-.834.393-1.419.581-2.336.123-1.012.166-1.691.428-2.423.218-.051.651-.164.635-.214-.015-.05-.115-.016-.114.353.343 1.785.685 3.199 1.036 4.949.107.77.206 1.205.382 1.84.236.458.459.632 1.071.895 1.777.336 3.228.499 5.082.725 1.755.127 3.106.19 4.228.429a83.29 83.29 0 01-2.79 1.561l-2.632 9.017c.013.994.029.772.005.555-1.149-10.44-4.078-12.65-14.425-10.361-1.322.293-2.872 2.134-3.25 3.544-.629 2.346-.394 4.923-.471 7.843-.51.363-1.072.286-1.864.04z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F8F4F3\",\n    d: \"M179.267 251.243c2.69-2.731 14.491-3.24 16.253-.434 1.06 1.688.247 4.55-.09 6.968-5.554-2.032-10.743-4.147-16.163-6.534z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E4969A\",\n    d: \"M323.5 256.928c1.34-.953 3.173-1.735 4.74-2.883.882-.646 1.954-2.022 1.789-2.835-.17-.835-1.678-1.82-2.713-1.97-2.085-.304-4.246-.086-6.826-.385-.449-.495-.448-.688-.075-.98 4.437-1.048 8.503-1.994 12.822-3.063.865-.761 1.474-1.4 2.084-2.04.197.37.394.739.72 1.295.84 1.047 1.55 1.906 1.92 2.931-2.243 1.129-4.145 2.092-6.046 3.056l.74 1.475 3.247-.469c-4.006 1.962-8.012 3.924-12.401 5.868z\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#7C292A\",\n    d: \"M338.302 246.833c-.71-.86-1.422-1.72-1.869-2.628 3.894-1.434 7.525-2.817 11.156-4.2 2.207.508 4.413 1.016 6.84 1.774-1.87 1.065-3.959 1.882-6.629 2.988-1.186.61-1.792.929-2.397 1.248 0 0 .13.019-.251-.236-2.538.181-4.694.617-6.85 1.054zM177.063 243.982a574.508 574.508 0 01-6.647 2.678c-.335.103-.43.187-.574-.055-1.033-.417-1.923-.594-2.813-.77-3.148-1.385-6.296-2.77-9.62-4.439 2.181-.308 4.538-.332 7.47-.006 3.94.487 7.311.545 10.662.841.555.05 1.017 1.14 1.522 1.75z\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F8E2E1\",\n    d: \"M337.96 246.998c2.498-.602 4.654-1.038 7.202-1.284-2.62 1.779-5.631 3.368-8.951 5.152-1.392.35-2.474.507-3.556.663l-.74-1.475c1.901-.964 3.803-1.927 6.046-3.056z\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E4969A\",\n    d: \"M167.28 246.051c.639-.04 1.529.137 2.598.606-.662.066-1.504-.162-2.598-.606z\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F8E2E1\",\n    d: \"M345.721 245.882c.287-.186.893-.505 1.873-.83-.268.23-.911.463-1.873.83z\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FDFEFE\",\n    d: \"M211.945 249.247c-.778.223-1.555.446-2.618.774-.813-4.511-5.104-2.374-7.75-3.939-.615-.352-.861-.615-1.247-1.302.275-1.42.688-2.415 1.102-3.41l-.992-.98c-1.155.953-2.346 1.865-3.456 2.867-1.395 1.258-2.724 2.59-4.082 3.89 0 0 .03.055-.1-.277-1.751-.387-3.373-.443-4.995-.498-.704-.129-1.408-.257-2.497-.82-1.028-2.5-1.67-4.563-2.314-6.627 0 0 .345-.11 1.017-.039 9.754-.85 18.835-1.773 27.917-2.696 18.104-.12 36.207-.28 54.312-.341 9.967-.034 19.935.1 30.71.425 4.921 1.213 9.988-.088 12.3 5.53-.45 2.173-.906 3.948-1.394 5.427-.342-.58-.65-.865-.96-1.15-.186.552-.372 1.104-.647 1.944-.976.574-1.863.86-2.75 1.145-2.478-.016-4.956-.032-7.887.322-1.839.376-3.225.383-4.706.07-2.414-3.34-4.735-6.362-6.295-8.394-3.565 3.091-6.68 5.776-9.768 8.491-.36.316-.573.798-1.32 1.222-5.234.121-10.002.224-15.055.216-.681-.772-1.078-1.434-1.267-2.42.726-2.97 2.1-5.807-1.359-7.556.038.007.02.082-.005-.154-.333-.504-.641-.772-.95-1.04.115.415.229.83.246 1.62-.535 2.728-.973 5.078-1.717 7.461-1.027.4-1.748.767-2.854 1.213-2.775.285-5.167.491-7.738.379-3.192-2.266-6.101-2.51-8.826.214-1.452-.163-2.903-.326-4.8-.832-.616-.559-.811-.753-1.028-.925-.1-.435-.198-.87-.088-1.925-.28-2.09-.767-3.562-1.254-5.033 0 0 .1-.034.005-.087-.432-.134-.648.007-.743.37-.044.679-.087 1.358-.365 2.621-.357 1.168-.48 1.751-.601 2.335-.017.374-.035.749-.387 1.437-.77.526-1.207.737-1.643.948-1.415.027-2.83.053-4.785-.296-2.573-3-4.533-3.46-6.366-.18zM319.026 237.933c.77.014 1.541.028 3.006.324 2.407 1.413 5.352 2.33 5.59 3.714.594 3.455-2.732 2.58-4.824 3.161-1.394.387-2.551 1.631-4.14 2.557-.767.073-1.209.08-1.748-.238-2.052-1.698-4.007-3.072-6.034-4.706-.087-.62-.102-.978.015-1.646 2.8-1.262 5.467-2.214 8.135-3.166m5.103 4.271l-.756-.761-.512.585c.333.154.666.308 1.268.176z\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCF9F8\",\n    d: \"M318.983 247.623c1.264-.86 2.42-2.104 3.815-2.491 2.092-.58 5.418.294 4.824-3.161-.238-1.383-3.183-2.301-5.218-3.605 3.053.045 6.428.263 10.17 1.054.381 2.22.395 3.867.409 5.515-4.065.946-8.13 1.892-12.832 2.847-.813-.047-.99-.103-1.168-.159z\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F8E2E1\",\n    d: \"M333.237 244.812c-.268-1.525-.282-3.172-.287-5.23 4.578-.093 9.147.225 14.178.483-3.17 1.323-6.8 2.707-10.824 3.952-.59-.506-.786-.875-.983-1.245-.61.64-1.22 1.279-2.084 2.04z\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCF9F8\",\n    d: \"M318.659 237.762c-2.3 1.123-4.968 2.075-8.02 3.32-.721.303-1.058.314-1.395.324-2.304-5.22-7.37-3.919-11.825-5.043 6.73.291 13.801.76 21.24 1.4z\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F8E2E1\",\n    d: \"M177.308 243.967c-.75-.595-1.212-1.687-1.767-1.736-3.35-.296-6.723-.354-10.321-.764a71.496 71.496 0 0112.372-1.793c.442 1.654.445 2.94.448 4.226 0 0-.488.052-.732.067z\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCF9F8\",\n    d: \"M211.482 236.11c-8.634 1.003-17.715 1.926-27.292 2.818 8.618-.986 17.731-1.941 27.292-2.817zM178.33 244.12c-.293-1.506-.296-2.792-.29-4.464 1.385-.53 2.758-.675 4.544-.775 1.055 2.108 1.698 4.172 2.388 6.552-2.087-.154-4.22-.624-6.643-1.314z\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#DAB1B4\",\n    d: \"M291.002 249.882c1.387-.007 2.773-.014 4.57-.095 1.53.068 2.652.21 2.703.217l-1.56 8.786c-1.223-1.77-2.734-6.269-4.877-6.593-5.022-.761-11.08-2.135-15.054 4.86-.161-1.952-.235-2.845-.457-4.237-.134-.875-.12-1.251.288-1.645 3.033-1.383 5.672-2.748 8.093-4-.148 3.187 3.014 3.043 6.294 2.707zM309.251 241.804c.33-.408.667-.419 1.256-.412.267.375.282.733.373 1.752.123 4.985 2.776 5.34 6.128 4.632.441-.007.883-.014 1.65-.087.503-.01.68.046 1.121.194.263.284.262.477.267.958-6.058.466-6.346 4.86-6.7 9.642-.266-.717-.403-1.777-.671-3.433-.245-.861-.407-1.091-.617-1.288-.318-5.785-5.33-2.827-8.265-4.436.595-.441 1.482-.727 2.72-1.29.692-.356 1.035-.433 1.377-.51.456-1.774.912-3.55 1.361-5.722zM256.995 249.001c.397.662.794 1.324 1.519 2.376.337.769.346 1.147.355 1.525l-3.638 10.45c-.364-2.191-.998-6.01-1.95-10.443-.33-1.064-.342-1.516-.15-2.158.332-.72.462-1.248.592-1.777.439-2.35.877-4.7 1.569-7.405.253-.356.571-.366.571-.366s.019-.075-.011.333c.36 2.76.752 5.113 1.143 7.465z\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F8E2E1\",\n    d: \"M259.347 252.934c-.487-.41-.496-.788-.549-1.446 4.725-.383 9.493-.486 15.1-.559 1.333.107 1.828.185 2.324.263-.015.377-.03.753-.04 1.41-5.45.31-10.903.337-16.835.332zM252.928 250.942c.011.451.023.903.084 1.69-5.37.328-10.789.321-16.69.275.372-.502 1.225-.964 2.723-1.647 1.75-.261 2.855-.301 3.96-.341 2.392-.207 4.784-.413 7.782-.545 1.117.24 1.63.403 2.141.568z\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F8F4F3\",\n    d: \"M312.128 253.96c.14-.001.302.229.462.695-.132-.01-.279-.243-.462-.695z\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FCF9F8\",\n    d: \"M193.2 247.374c1.06-1.527 2.389-2.859 3.784-4.117 1.11-1.002 2.3-1.914 3.456-2.866l.992.978c-.414.996-.827 1.991-1.333 3.269-1.273 3.577-3.678 3.897-6.899 2.736zM188.139 246.54a15.12 15.12 0 014.634.34c-1.368.17-2.835-.002-4.634-.34zM242.826 250.6c-.926.359-2.031.399-3.551.485a72.713 72.713 0 01-4.873-.208c2.323-2.787 5.232-2.543 8.424-.277zM212.294 249.386c1.484-3.419 3.444-2.96 5.596-.022-1.67.262-3.458.212-5.596.022zM226.83 242.468a17.342 17.342 0 011.245 4.329c-.559-1.13-.901-2.544-1.244-4.329zM223.357 249.74c.175-.228.611-.44 1.286-.7-.182.208-.604.463-1.286.7zM225.3 247.088c-.052-.334.07-.917.347-1.752.047.333-.063.918-.346 1.752zM226.31 242.33c-.123-.31.093-.452.54-.268.111.103-.322.216-.54.267zM228.25 249.257c.139-.028.334.166.626.553-.168.08-.391-.095-.627-.553zM276.615 251.175c-.889-.06-1.384-.139-2.252-.265-.09-.453.123-.935.482-1.25 3.088-2.716 6.203-5.4 9.768-8.492 1.56 2.032 3.881 5.054 6.295 8.395-3.186.655-6.348.8-6.2-2.389-2.42 1.253-5.06 2.618-8.093 4.001zM257.203 248.677c-.599-2.028-.99-4.381-1.389-7.149 3.49 1.342 2.115 4.179 1.389 7.15zM253.13 250.75c-.714.027-1.226-.137-1.96-.455.5-.52 1.221-.887 2.248-1.287.175.495.045 1.023-.287 1.743zM307.858 247.231c-.31.372-.653.449-1.257.516-.075-.562.111-1.114.297-1.666.31.285.618.57.96 1.15zM255.839 240.967c.024.236-.294.246-.45.225-.271-.436-.385-.85-.5-1.265.309.268.617.536.95 1.04zM316.91 247.45c-3.254 1.034-5.907.68-5.959-4.045 1.952.974 3.907 2.348 5.96 4.046zM323.995 242.347c-.468-.01-.8-.165-1.134-.319l.512-.585c.252.254.504.508.622.904z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId15);\nexport default __webpack_public_path__ + \"static/media/viseme_id_15.e36652987a629f057788a548aa7bdeb6.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId16(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 901 861\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D38282\",\n    d: \"M566.122 419.913c.294 1.424 1.34 3.376.768 4.191-8.024 11.432-16.039 22.886-24.548 33.957a170.075 170.075 0 01-16.43 18.428c-13.997 13.564-29.033 25.875-47.925 32.034-19.93 6.498-39.853 6.468-59.6-1.38-14.099-5.604-26.272-13.864-37.772-23.773-19.89-17.137-35.13-37.9-49.323-59.619-.704-1.076-.05-3.039.527-4.484 2.925 1.335 5.22 3.436 7.677 3.647 11.475.985 22.996 1.448 34.708 2.366 2.088 1.093 3.968 1.919 5.914 3.074 3.322 2.851 6.446 5.573 9.864 7.853 6.59 4.395 13.348 8.541 20.133 13.07 1.32.82 2.542 1.36 4.13 1.97 2.087.69 3.805 1.32 5.534 1.922 23.486 8.162 46.446 7.84 68.328-4.942 10.308-6.022 20.204-12.75 30.605-19.257 3.318-1.721 6.317-3.343 9.783-4.964 8.123-.002 15.821.48 23.42-.184 4.812-.42 9.476-2.548 14.207-3.91z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08888\",\n    d: \"M565.98 419.602c-4.589 1.672-9.253 3.8-14.066 4.22-7.598.663-15.296.182-23.854.183-5.77-1.26-10.639-2.516-15.835-3.848a324.12 324.12 0 01-12.307-6.1c-.668-.503-1.154-.788-1.845-1.355-.834-.819-1.414-1.428-2.098-1.88-20.545-13.536-43.116-15.44-66.544-11-11.255 2.132-21.044 7.786-30.08 15.165-.956.27-1.633.527-2.669.891-3.757 1.468-7.156 2.83-10.921 4.25-4.166 1.668-7.965 3.276-11.765 4.884-11.504-.65-23.025-1.113-34.5-2.098-2.457-.21-4.752-2.312-7.357-3.817 12.996-13.284 26.073-26.456 39.512-39.246a737.52 737.52 0 0130.847-27.721c4.484-3.81 10.095-5.69 16.29-5.16 5.723.487 11.473.634 17.205 1.031 1.073.075 2.348.342 3.132.997 6.891 5.76 13.656 2.664 20.357-.243 9.628-4.176 19.603-4.085 28.994-.489 5.861 2.245 11.378 6.425 15.922 10.885 16.623 16.32 32.71 33.185 49.152 49.691 3.781 3.796 8.175 6.982 12.43 10.76z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEFBFB\",\n    d: \"M518.393 429.07c-10.082 6.407-19.978 13.135-30.286 19.157-21.882 12.782-44.842 13.104-68.328 4.942a228.19 228.19 0 01-5.85-2.14c-1.47-1.761-2.858-3.202-2.935-4.71-.204-3.976.574-8.021.192-11.965-.433-4.468 1.715-5.598 5.44-5.588 8.479.023 16.96.156 25.437.042 4.633-.063 6.102 2.212 5.982 6.495-.164 5.849-.041 11.706-.041 17.56l1.423-.022c.495-6.125 1.219-12.242 1.405-18.376.126-4.153 1.998-5.58 5.861-5.536 6.493.073 12.99-.173 19.48-.017 9.277.223 9.271.327 11.277 9.149.034.152.523.2 1.083.396.173-.964.542-1.9.467-2.797-.453-5.426 2.44-7.441 7.406-7.682 5.648-.275 11.285-.914 16.931-.984 1.677-.02 3.37 1.345 5.056 2.076z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#EA9394\",\n    d: \"M518.712 428.97c-2.005-.63-3.698-1.996-5.375-1.976-5.646.07-11.283.71-16.931.984-4.967.24-7.859 2.256-7.406 7.682.075.898-.294 1.833-.467 2.797-.56-.196-1.049-.244-1.083-.396-2.006-8.822-2-8.926-11.277-9.149-6.49-.156-12.987.09-19.48.017-3.863-.044-5.735 1.383-5.861 5.536-.186 6.134-.91 12.251-1.405 18.376l-1.423.022c0-5.854-.123-11.711.04-17.56.121-4.283-1.348-6.558-5.981-6.495-8.478.114-16.958-.019-25.437-.042-3.725-.01-5.873 1.12-5.44 5.588.382 3.944-.396 7.99-.192 11.966.077 1.507 1.464 2.948 2.57 4.637-.907-.32-2.13-.86-3.451-2.126-.438-6.019-.604-11.331-1.232-16.588-.17-1.426-1.69-3.803-2.672-3.845-8.709-.367-17.436-.307-26.157-.374-1.88-.825-3.76-1.65-5.848-2.744a69.105 69.105 0 0111.73-4.828c7.92 3.045 10.486 1.844 11.106-4.681.678-.257 1.355-.514 2.414-.383.836 3.646.634 7.383 5.437 7.562 12.285.456 24.571.888 36.856 1.353 3.451.13 5.196-1.477 5.515-4.915.39-4.196.942-8.376 1.424-12.564 1.156 4.073 1.752 8.124 2.023 12.196.244 3.65 1.9 5.463 5.603 5.419 9.964-.12 19.932-.043 29.89-.335 12.362-.364 10.773.329 12.077-11.12.485.285.971.57 1.744 1.423 1.766 8.007 5.938 9.799 12.53 5.824 4.868 1.258 9.737 2.515 15.04 3.773-2.564 1.623-5.563 3.245-8.881 4.966z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEFBFB\",\n    d: \"M380.118 428.354c8.655-.263 17.382-.323 26.091.044.981.042 2.502 2.42 2.672 3.845.628 5.257.794 10.57 1.135 16.307a332.562 332.562 0 01-20.034-12.343c-3.418-2.28-6.542-5.002-9.864-7.853zM498.073 412.702c-1.098 11.73.49 11.038-11.872 11.402-9.957.292-19.925.215-29.889.335-3.702.044-5.36-1.77-5.603-5.42-.271-4.071-.867-8.122-2.023-12.195-.482 4.188-1.034 8.368-1.424 12.564-.319 3.438-2.064 5.045-5.515 4.915-12.285-.465-24.57-.897-36.856-1.353-4.803-.179-4.6-3.916-5.16-7.575 8.656-7.767 18.445-13.421 29.7-15.554 23.428-4.439 46-2.535 66.544 11.002.684.45 1.264 1.06 2.098 1.879zM512.225 420.157c-6.264 4.049-10.436 2.257-12.02-5.532 3.828 1.587 7.76 3.522 12.02 5.532zM396.682 415.878c-.262 6.418-2.828 7.619-10.381 4.514 3.225-1.685 6.624-3.046 10.381-4.514z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId16);\nexport default __webpack_public_path__ + \"static/media/viseme_id_16.109b1b3e62d2a9018f74b2d8230b30dc.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId17(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 900 862\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#BFBFC1\",\n    d: \"M901 1.5C601.304 2 301.608 2 1.456 2c-.29-.333-.14-.944.047-.956C2.83.961 4.167 1 5.5 1c298.5 0 597 0 895.5.5z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D38282\",\n    d: \"M688.786 420.984c-8.703 10.639-17.417 21.27-26.106 31.92-7.144 8.755-13.849 17.913-21.491 26.208-9.736 10.567-20.021 20.653-30.427 30.572-17.545 16.723-38.761 27.825-60.367 38.16-17.062 8.162-34.828 14.555-53.447 18.059-17.903 3.368-36.104 2.653-54.232 3.26-36.127 1.21-69.248-8.657-100.158-26.238-13.572-7.72-26.216-17.224-38.644-26.75-9.635-7.385-18.783-15.573-27.241-24.283-11.924-12.279-22.977-25.4-34.468-38.103-7.528-8.322-15.188-16.525-22.747-24.82-1.194-1.31-2.168-2.823-3.144-4.841 1.665-.476 3.302-.607 4.781-.183 5.125 1.467 10.125 3.43 15.305 4.63 5.225 1.21 10.607 1.736 16.082 2.821 14.953 9.695 29.745 19.13 44.814 28.755a4201.65 4201.65 0 0019.276 10.605c.67.336 1.114.554 1.887 1.002 2.896 1.746 5.445 3.29 8.03 4.774 19.395 11.14 40.098 18.258 62.852 20.343 1.725.135 3.058.186 4.618.429.8.246 1.372.299 2.36.453 2.672.198 4.927.295 7.368.597.542.26.896.314 1.562.447 1.353.028 2.395-.023 3.775.064 1.547.18 2.756.221 4.142.31.177.049.528-.053.801.155 1.161.26 2.05.312 3.352.465 1.837.102 3.258.103 5.05.18 1.124.047 1.878.017 2.958.062.771.048 1.216.021 1.984.2 2.447.266 4.57.324 7.145.473 4.146.08 7.84.068 11.997.138 6.47-.001 12.478-.083 18.917-.093 2.162-.056 3.893-.183 6.003-.186 2.135-.09 3.89-.303 6.018-.473 1.118-.019 1.864-.082 3.075-.09 9.152-.638 17.838-1.332 26.935-1.992 1.495-.075 2.582-.184 3.97-.235.855-.177 1.407-.411 2.327-.599 1.343-.064 2.32-.174 3.73-.24 7.815-1.266 15.199-2.577 22.923-3.873.785-.074 1.23-.163 1.91-.233.238.02.678-.165.965-.123.788-.197 1.288-.435 2.195-.672 10.179-3.659 19.951-7.32 30.003-11.002.724-.328 1.17-.634 1.958-1.005 2.454-1.392 4.564-2.72 6.995-4.063.823-.391 1.324-.769 2.16-1.202 5.84-3.37 11.379-6.632 16.824-10.043 1.043-.653 1.717-1.893 2.77-3.146 1.715-.926 3.403-1.316 4.699-2.25 10.038-7.234 20.057-14.497 29.942-21.939 2.23-1.678 3.908-4.09 6.248-6.2 9.933.754 18.884-1.22 27.57-5.156 4.558-2.066 9.453-3.39 14.196-5.049z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08888\",\n    d: \"M688.853 420.615c-4.81 2.028-9.705 3.352-14.263 5.418-8.686 3.935-17.637 5.91-27.976 5.148-3.106-.259-5.428-.399-7.684-.861a1255.427 1255.427 0 01-26.487-5.735 618.172 618.172 0 00-21.68-4.473c-.741.01-1.164-.05-2.017-.103-20.495-2.605-40.497-6.621-60.637-7.504-31.048-1.361-62.19-.754-93.292-.64-21.628.079-43.3-.008-64.865 1.357-17.502 1.108-34.885 4.197-52.288 6.636-1.524.214-2.81 2.125-4.403 3.035-1.097-.38-2-.547-3.218-.899-5.124.786-9.933 1.758-15.189 2.83-2.574.353-4.71.548-6.827.868-11.905 1.798-23.805 3.627-35.706 5.445-5.314-.826-10.696-1.352-15.92-2.563-5.181-1.2-10.18-3.162-15.306-4.63-1.479-.423-3.116-.292-4.917-.13-4.36-3.36-4.232-4.365.963-6.439 18.11-7.23 36.275-14.33 54.369-21.604 19.575-7.87 38.97-16.202 58.668-23.744 23.916-9.156 47.341-19.88 72.541-25.256 16.652-3.552 33.018-4.131 46.447 9.36.534.537 2.544.088 3.59-.444 6.17-3.144 11.928-7.72 18.449-9.413 10.993-2.856 22.474-2.456 33.292 1.613 19.829 7.457 39.485 15.373 59.245 23.013 19.162 7.41 38.376 14.687 57.548 22.069 21.609 8.32 43.202 16.677 64.777 25.082 1.073.418 1.907 1.449 2.786 2.564z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FDF9F8\",\n    d: \"M11.004 244.765c-.203-4.212-.412-7.96-.62-11.71l1.107-.081 2.348 23.414-.838.157c-.668-3.772-1.335-7.544-1.997-11.78z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBEDEA\",\n    d: \"M890.773 249.477c.599-6.113 1.019-11.812 1.438-17.51.428.045.856.09 1.284.137l-2.336 23.566-1.293-.137c.243-1.88.485-3.761.907-6.056z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FDF9F8\",\n    d: \"M388.949 496.789c-22.362-2-43.065-9.117-62.46-20.257-2.585-1.484-5.134-3.028-7.822-5.111.62-5.562 3.09-8.005 8.386-6.412.588.177 1.287-.02 2.321.04 6.166 1.708 11.945 3.332 17.828 5.356.714 4.363 1.324 8.325 2.134 13.584.966-5.546 1.693-9.719 2.822-14.038 7.903.353 15.414.738 22.89 1.475 1.145.112 2.13 1.85 3.067 3.267.238 6.276.596 12.12.955 17.964l1.602-.03c0-6.066 0-12.133.285-18.512 1.412-.893 2.534-1.958 3.669-1.972 6.77-.082 13.55-.086 20.31.229 3.092.144 6.362.724 6.282 5.194-.016.934.823 1.883 1.267 2.825 1.742-3.608.599-7.584 5.512-6.571-1.39 8.727-6.455 16.366-5.008 25.308-1.21-.042-2.418-.083-3.785-.673.363-3.68 1.446-6.848 1.254-9.937-.214-3.43-1.927-6.747-2.354-10.191-.343-2.764-1.003-4.388-4.083-4.343-5.486.079-10.985-.168-16.453.157-1.48.088-3.972 1.605-4.11 2.702-.608 4.867-1.141 9.915-.406 14.698.308 2.004 3.834 3.513 5.897 5.248z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#811D1C\",\n    d: \"M612.731 424.78c8.731 1.855 17.455 3.749 26.199 5.54 2.256.462 4.578.602 7.276.897-1.526 2.082-3.204 4.494-5.434 6.172-9.885 7.442-19.904 14.705-29.942 21.94-1.296.933-2.984 1.323-5.095 2.3-4.557 1.386-8.456 2.774-12.473 3.413-5.882.937-8.1 4.07-7.059 9.78-.502.378-1.003.756-1.894.865-.592-.78-.794-1.293-1.009-2.174-.167-1.081-.32-1.794-.451-2.924-1.337-1.16-2.668-2.473-4.065-2.548-4.918-.263-9.86-.103-14.516-.349 8.901-2.693 17.73-4.6 26.08-7.77 5.932-2.254 11.655-5.651 16.66-9.573 4.67-3.66 3.905-8.007-1.117-11.43-7.471-5.093-16.114-6.727-24.663-8.229 2.703-1.136 5.207-1.975 8-2.966.236-1.38.183-2.61.093-4.225-.073-1.424-.109-2.46-.145-3.497.423.06.846.12 1.6.507.531 5.492 2.91 7.678 8.231 6.544 4.53-.966 9.146-1.53 13.724-2.273zM328.987 464.965c-.647.024-1.346.22-1.934.044-5.296-1.593-7.767.85-8.717 6.182-.65.119-1.093-.1-1.678-.838.57-7.266.582-7.339-6.243-8.504-4.443-.758-8.93-1.267-13.397-1.887-14.791-9.436-29.583-18.871-44.536-28.566 11.74-2.077 23.64-3.906 35.545-5.704 2.117-.32 4.253-.515 7.228-.795 3.798.3 6.752.597 9.698.96 2.906.359 4.82-.665 5.407-3.677.902.166 1.804.333 2.892 1.12 1.441 5.877 6.444 4.316 9.489 6.138-7.24 2.674-14.574 4.399-21.145 7.662-8.512 4.227-8.46 11.27-.21 16.122 4.663 2.741 9.847 4.617 14.857 6.738 4.202 1.778 8.493 3.345 12.744 5.005z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FFF\",\n    d: \"M413.166 499.176c-1.624-8.99 3.441-16.63 5.286-25.482 8.489-.42 16.51-.364 24.592.002 2.269 1.978 4.477 3.648 6.766 5.774.171 4.794.262 9.131.065 13.68-1.487 2.681-2.686 5.149-3.885 7.617-3.694.011-7.388.023-11.65-.39-2.83-.399-5.091-.372-7.353-.346-.444.027-.889.054-1.712-.32-1.345-.204-2.311-.008-3.277.188-1.421 0-2.842-.002-4.936-.315-1.571-.361-2.47-.412-3.368-.462 0 0-.351.102-.528.054zM470.994 500.445c-1.731.127-3.462.254-5.794.06-3.078-.987-5.52-1.918-8.039-2.248-3.171-.415-4.23-1.394-3.357-4.855.918-3.637.907-7.522 1.18-11.307.286-3.987 2.33-6.185 6.321-6.058 6.611.212 13.22.583 19.816 1.07 1.202.089 2.884.74 3.415 1.665 2.564 4.47 7.017 8.035 4.733 14.616-1.15 3.316-1.887 4.757-5.363 4.72-1.295-.013-2.603 1.193-3.905 1.843-.746.063-1.492.126-2.759-.154-2.43-.013-4.34.318-6.248.648zM516.995 496.895c-.977.11-1.954.221-3.61.25-1.224.137-1.77.357-2.316.576-1.086.109-2.173.218-3.962.006-3.507-.457-6.341-.397-9.105-.81-1.497-.222-3.964-1.062-4.119-1.95-.746-4.28-1.346-8.708-1.02-13.01.227-2.975 2.044-5.83 3.514-8.826 1.11-.12 1.855-.15 2.883.116 7.42 1.118 14.559 1.938 21.884 3.03.278.698.37 1.123.093 1.758-.368 4.862-.368 9.514-.368 13.963l-3.874 4.897zM389.341 496.875c-2.455-1.82-5.98-3.33-6.29-5.334-.734-4.783-.2-9.831.408-14.698.137-1.097 2.628-2.614 4.11-2.702 5.467-.325 10.966-.078 16.452-.157 3.08-.045 3.74 1.58 4.083 4.343.427 3.444 2.14 6.76 2.354 10.191.192 3.089-.89 6.257-1.591 9.8-1.223.46-2.265.511-3.81.297-.855-.333-1.205-.4-1.556-.467-2.255-.096-4.51-.193-7.402-.579-1.214-.346-1.791-.402-2.368-.458-1.332-.05-2.665-.1-4.39-.236zM542.024 492.814c-.444.09-.888.179-1.728-.085-2.305-.305-4.682-.962-6.03-.068-3.175 2.11-5.564.024-5.89-1.874-1.185-6.88-4.452-14.167 2.004-20.622 1.12-.104 1.872-.116 2.812.198 2.318.505 4.526 1.134 6.566.785 7.365-1.261 10.672 1.944 8.854 8.916-.119.456-.384 1.177-.186 1.37 5.052 4.909 1.067 6.777-2.836 8.793-.397.205-.393 1.188-.575 1.81-.5.239-1.001.477-1.895.565-.722-.251-.956-.13-1.096.212z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FDF9F8\",\n    d: \"M496.013 473.218c-1.106 2.909-2.923 5.764-3.15 8.74-.326 4.3.274 8.73 1.02 13.009.155.888 2.622 1.728 4.119 1.95 2.764.413 5.598.353 8.696.776-8.394.981-17.08 1.675-26.232 2.313.837-.705 2.145-1.911 3.44-1.898 3.476.037 4.212-1.404 5.363-4.72 2.284-6.58-2.169-10.146-4.733-14.616-.53-.925-2.213-1.576-3.415-1.665a475.815 475.815 0 00-19.816-1.07c-3.99-.127-6.035 2.07-6.322 6.058-.272 3.785-.26 7.67-1.179 11.307-.874 3.461.186 4.44 3.357 4.855 2.52.33 4.96 1.261 7.607 2.176-5.837.332-11.844.414-18.315.415.736-2.549 1.935-5.017 3.828-7.73 1.301-5.794 1.91-11.344 2.738-17.223 1.349-.89 2.469-1.92 3.606-1.94a867.75 867.75 0 0125.822-.076c2.347.029 5.311-.429 5.678 3.283 1.112-.214 2.362-.178 3.304-.699 1.629-.9 3.066-2.145 4.584-3.245z\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FFF\",\n    d: \"M582.825 471.005c.154.714.308 1.427.141 2.656-2.19 2.489-4.059 4.462-5.928 6.435-.445.307-.89.613-2.034.92-5.935 1.76-11.172 3.518-16.812 5.412-2.507-1.851-3.87-4.39-2.48-8.208 1.057-2.906 1.553-6.016 2.711-9.1 1.8-.08 3.189-.097 4.756.21.866.743 1.545 1.514 2.242 1.529 5.8.127 11.602.116 17.404.146z\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FDF9F8\",\n    d: \"M558.011 469.185c-.746 3.02-1.242 6.13-2.3 9.035-1.389 3.818-.026 6.357 2.48 8.208 5.641-1.894 10.878-3.653 16.534-5.39-9.353 3.682-19.125 7.342-29.304 11-.224-.623-.228-1.606.17-1.811 3.902-2.016 7.887-3.884 2.835-8.794-.198-.192.067-.913.186-1.37 1.818-6.97-1.489-10.176-8.854-8.915-2.04.349-4.248-.28-6.236-1.028 4.893-.725 9.966-1.978 14.295-.706 3.804 1.118 6.812 1.376 10.194-.229zM530.014 470.256c-6.09 6.364-2.823 13.652-1.639 20.53.327 1.899 2.716 3.985 5.892 1.875 1.347-.894 3.724-.237 5.689.053-7.329 1.65-14.713 2.96-22.529 4.226.917-1.75 2.267-3.456 3.442-4.942 0-4.45 0-9.101.494-13.602.976 3.07 1.458 5.988 1.94 8.907.183-.02.367-.04.552-.058 0-4.382 0-8.764.083-13.504 2.081-1.4 4.078-2.443 6.076-3.485z\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBEDEA\",\n    d: \"M586.537 474.766c-1.375-5.654.843-8.787 6.725-9.724 4.017-.64 7.916-2.027 12.264-3.13-.448.919-1.122 2.159-2.165 2.812-5.445 3.41-10.984 6.672-16.824 10.042zM297.296 460.151c4.19.431 8.676.94 13.12 1.698 6.824 1.165 6.812 1.238 6.015 8.386-6.343-3.03-12.6-6.462-19.135-10.084z\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FDF9F8\",\n    d: \"M577.382 480.032c1.525-1.909 3.394-3.882 5.597-6.003.536.365.738.878 1.008 1.672-2.041 1.61-4.15 2.939-6.605 4.331zM471.373 500.569c1.53-.454 3.439-.785 5.497-.816-1.607.513-3.362.726-5.497.816zM427.31 500.238a26.873 26.873 0 016.578.047c-2.007.276-4.13.218-6.577-.047zM422.369 499.975c.595-.272 1.56-.468 2.58-.338-.702.355-1.456.385-2.58.338zM413.967 499.33c.625-.158 1.524-.107 2.68.153-.63.16-1.519.107-2.68-.153zM393.959 497.304c.349-.137.926-.08 1.724.164-.352.135-.925.082-1.724-.164zM511.371 497.779c.244-.277.79-.497 1.648-.68-.24.269-.793.503-1.648.68zM542.262 492.834c-.098-.363.136-.483.57-.273.107.108-.333.292-.57.273zM403.687 498.354c.165-.139.515-.072 1.059.181-.163.133-.517.079-1.059-.18z\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEFCFC\",\n    d: \"M322.985 429.172c-3.289-1.556-8.292.005-9.537-5.658 1.406-1.53 2.692-3.442 4.216-3.656 17.403-2.439 34.786-5.528 52.288-6.636 21.565-1.365 43.237-1.278 64.865-1.357 31.101-.114 62.244-.721 93.292.64 20.14.883 40.142 4.899 60.637 7.504.466 1.03.502 2.066.437 3.869a95.719 95.719 0 00-.243 3.999c-2.505.838-5.009 1.677-8.137 2.706-6.366 1.097-12.124 1.915-17.847 2.927-12.145 2.15-12.142 2.188-15.65-9.17-.394 2.446-.27 4.756-1.186 6.528-.99 1.916-2.874 4.657-4.502 4.75-12.565.729-25.163.902-37.827 1.083a3.262 3.262 0 00-.594-.761c-.023-.078-.081-.23-.097-.649-.513-5.162-1.01-9.905-1.507-14.648l-1.038.104c-.51 5.376-1.022 10.753-1.594 16.526-.84.845-1.602 1.654-2.397 1.688-10.626.448-21.253.948-31.885 1.108-10.734.163-10.733.003-13.028-10.263-.04-.178-.511-.259-1.18-.57-.487 2.442-.52 5.021-1.57 7.082-.793 1.554-2.894 3.478-4.4 3.467-11.632-.083-23.278-.34-34.886-1.075-6.857-.434-7.168-1.29-7.794-8.312-.21-2.35-.725-4.672-1.215-7.724-.537 3.6-1.198 6.378-1.313 9.18-.18 4.379-2.38 5.63-6.47 5.37-9.29-.593-18.615-.681-27.889-1.425-8.573-.688-8.981-1.393-9.901-9.903-.09-.84-.434-1.653-.66-2.478-.997 1.277-1.19 2.48-1.254 3.69-.372 7.066-1.17 7.715-8.208 6.363-7.314-1.405-14.618-2.864-21.926-4.3z\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBEDEA\",\n    d: \"M612.443 424.585c-4.29.937-8.905 1.502-13.436 2.468-5.32 1.134-7.7-1.052-7.914-6.613 7.012 1.052 14.036 2.501 21.35 4.145zM310.043 421.994c-.27 3.198-2.184 4.222-5.09 3.863-2.946-.363-5.9-.66-9.25-1.06a181.596 181.596 0 0114.34-2.803z\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F18B8C\",\n    d: \"M503.868 436.865c12.587-.345 25.185-.518 37.75-1.246 1.628-.094 3.512-2.835 4.502-4.751.916-1.772.792-4.082 1.185-6.528 3.509 11.358 3.506 11.32 15.65 9.17 5.724-1.012 11.482-1.83 17.649-2.629 9.173 1.31 17.816 2.945 25.287 8.038 5.022 3.423 5.787 7.77 1.117 11.43-5.005 3.922-10.728 7.32-16.66 9.572-8.35 3.172-17.179 5.078-26.233 7.963-.718.604-.947.833-1.115 1.121-1.388.018-2.777.035-4.577.116-3.794 1.669-6.802 1.411-10.606.293-4.33-1.272-9.402-.019-14.482.38-1.083.255-1.835.267-2.955.37a93.645 93.645 0 00-6.78 3.576c-1.098.39-1.775.425-2.64.126-1.765-1.106-3.374-2.593-4.912-2.524-5.703.258-11.382 1.029-17.07 1.607-.746.031-1.491.063-2.601.182-1.882 1.187-3.32 2.433-4.948 3.332-.942.521-2.192.485-3.304.699-.367-3.712-3.331-3.254-5.678-3.283a867.75 867.75 0 00-25.822.076c-1.137.02-2.257 1.05-3.94 1.963-1.221.336-1.889.32-2.75-.019-2.447-1.051-4.7-1.782-6.951-2.512-8.022-.057-16.043-.113-24.52-.044-5.38-.536-4.237 3.44-5.979 7.048-.444-.942-1.283-1.891-1.267-2.825.08-4.47-3.19-5.05-6.281-5.194-6.761-.315-13.541-.311-20.311-.229-1.135.014-2.257 1.08-3.974 1.992-1.199.265-1.808.195-2.416.126-1.059-.986-2.043-2.723-3.188-2.835-7.476-.737-14.987-1.122-23.277-1.447-2.085.125-3.379.075-4.673.025a4876.308 4876.308 0 00-17.724-4.955c-4.638-1.744-8.93-3.311-13.131-5.09-5.01-2.12-10.194-3.996-14.856-6.737-8.251-4.852-8.303-11.895.209-16.122 6.57-3.263 13.905-4.988 21.145-7.662 7.552 1.169 14.856 2.628 22.17 4.033 7.038 1.352 7.836.703 8.208-6.364.064-1.21.257-2.412 1.253-3.69.227.826.57 1.639.66 2.479.92 8.51 1.33 9.215 9.902 9.903 9.274.744 18.6.832 27.889 1.424 4.09.261 6.29-.99 6.47-5.37.115-2.8.776-5.58 1.313-9.179.49 3.052 1.005 5.374 1.215 7.724.626 7.022.937 7.878 7.794 8.312 11.608.735 23.254.992 34.886 1.075 1.506.01 3.607-1.913 4.4-3.467 1.05-2.061 1.083-4.64 1.57-7.083.669.312 1.14.393 1.18.57 2.295 10.267 2.294 10.427 13.028 10.264 10.632-.16 21.26-.66 31.885-1.108.795-.034 1.558-.843 2.746-1.731 1.542-.8 2.674-1.16 3.806-1.52 0 0 .058.152.09.43.155.549.365.698.662.725z\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#764041\",\n    d: \"M378.115 474.693c.73-.363 1.338-.293 2.252-.245.305 6.046.305 12.113.305 18.18l-1.602.03c-.359-5.845-.717-11.689-.955-17.965zM347.202 470.405c1.19-.351 2.484-.301 4.166-.28-.34 4.145-1.066 8.318-2.032 13.864-.81-5.259-1.42-9.22-2.134-13.584z\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FDF9F8\",\n    d: \"M563.179 469.33c-.01-.613.218-.842.66-1.2 5.085-.192 10.027-.352 14.945-.089 1.397.075 2.728 1.387 4.065 2.548-5.826.386-11.629.397-17.428.27-.697-.015-1.376-.786-2.242-1.53z\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08888\",\n    d: \"M589.228 427.724c-.241-.925-.194-2.002-.009-3.459.192.85.245 2.078.009 3.46z\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#764041\",\n    d: \"M450.129 476.22a67.36 67.36 0 002.335.027 128.788 128.788 0 01-1.895 16.66c-.497-4.306-.588-8.643-.704-13.787.071-1.505.168-2.202.264-2.9z\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FDF9F8\",\n    d: \"M449.935 475.9c.098 1.018.001 1.715-.15 2.762-2.264-1.318-4.472-2.988-6.74-4.966 2.19.421 4.443 1.152 6.89 2.203zM499.26 473.247c5.406-.876 11.085-1.647 16.788-1.905 1.538-.07 3.147 1.418 4.879 2.824.114 1.036.072 1.437.03 1.839-7.138-.82-14.276-1.64-21.697-2.758z\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#764041\",\n    d: \"M521.144 476.278c-.145-.675-.103-1.076-.028-1.778.71-.335 1.386-.37 2.4-.402.339 4.383.339 8.765.339 13.147l-.553.058c-.481-2.919-.963-5.837-1.57-9.117-.218-.786-.31-1.21-.588-1.908z\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#BFBFC1\",\n    d: \"M503.1 435.291c-1.116.78-2.248 1.139-3.729 1.542.162-5.333.673-10.71 1.184-16.086l1.038-.104c.497 4.743.994 9.486 1.507 14.648zM503.791 436.7c-.22.138-.43-.011-.563-.482.187-.056.353.117.563.483z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId17);\nexport default __webpack_public_path__ + \"static/media/viseme_id_17.2f37b2321264c82327402f77536253b7.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId18(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 904 850\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEFBFB\",\n    d: \"M1 49.469c.334.506.96 1.48.96 2.456.047 63.588.045 127.176.038 190.764 0 .66-.116 1.32-.588 2.146C1 179.979 1 114.958 1 49.469z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D38282\",\n    d: \"M392 475.859c-9.333-1.453-18.697-2.73-27.989-4.403-10.982-1.978-22.013-3.866-32.81-6.622-7.371-1.88-14.614-4.682-21.508-7.934-26.545-12.523-52.934-25.377-79.359-38.154-2.91-1.408-5.672-3.12-8.508-4.684-3.118-1.718-1.446-2.807.98-3.7.782.294 1.083.426 1.385.558 0 0 .38-.012.657.365 3.559.986 6.817 1.795 10.125 2.17 13.93 1.585 27.849 3.815 41.825 4.317 12.843.461 25.755-.988 38.574-1.236 1.497 1.699 2.866 3.781 4.652 4.24 5.901 1.515 11.922 2.672 17.96 3.52 4.308.605 8.718.492 13.44.744 1.75.348 3.143.65 4.953.939 4.641.789 8.866 1.591 13.36 2.431 1.792.052 3.313.067 5.367-.033 1.237.027 1.942.167 2.687.271.04-.037.452.042.872-.137 2.483.12 4.545.42 6.96.857 9.05.548 17.747.958 26.885 1.195 10.484.088 20.526.349 30.883.861 4.667.126 9.019 0 13.802-.219 4.872.127 9.315.571 13.751.514 8.24-.107 16.476-.507 25.103-.917 5.578-.363 10.767-.593 16.397-.82 8.144-.695 15.858-1.294 23.545-2.143 2.922-.322 5.78-1.217 9.066-1.86 1.445-.025 2.49-.041 4.017-.069 11.35-1.733 22.238-3.353 33.064-5.315 1.284-.233 2.227-2.346 3.662-3.66 1.973-.53 3.643-1.468 5.243-1.361 10.208.68 20.432 2.548 30.589 2.2 15.15-.52 30.265-2.393 45.353-4.067 3.093-.343 6.003-2.342 8.997-3.578l3.865 1.41c-.892.983-1.595 2.371-2.704 2.89-17.998 8.409-36.06 16.683-54.08 25.042-10.719 4.971-21.186 10.556-32.14 14.93-13.466 5.376-27.23 10.06-41.042 14.493-7.955 2.553-16.215 4.245-24.425 5.883-4.457.889-9.1.853-14.38.909-1.536-.45-2.347-.684-3.16-.685-37.39-.016-74.78-.02-112.17.027-1.249.002-2.497.542-3.745.83z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08888\",\n    d: \"M675.569 410.061c-2.583 1.304-5.493 3.303-8.586 3.646-15.088 1.674-30.203 3.547-45.353 4.067-10.157.348-20.381-1.52-30.589-2.2-1.6-.107-3.27.832-5.406 1.006-1.836-1.071-3.084-2.268-4.527-2.59-17.71-3.955-35.537-7.032-53.78-7.013-44.974.047-89.95.34-134.92-.107-26.141-.26-51.766 2.471-76.973 9.307-12.882.607-25.794 2.056-38.637 1.595-13.976-.502-27.894-2.732-41.825-4.316-3.308-.376-6.566-1.185-9.937-2.196 3.83-1.99 7.65-3.912 11.684-5.113 25.797-7.681 51.677-15.084 77.451-22.838 10.3-3.098 20.469-6.667 30.574-10.36 10.86-3.968 21.324-9.25 32.416-12.306 16.067-4.428 32.49-7.426 49.187-2.066 7.662 2.46 15.442 4.96 23.36 6.04 3.939.537 8.354-1.95 12.477-3.306 13.735-4.514 27.934-6.946 42.171-5.017 10.12 1.371 20.015 5.022 29.761 8.377 12.637 4.35 24.885 9.842 37.553 14.087 23.03 7.716 46.192 15.06 69.411 22.19 11.226 3.447 22.71 6.056 34.488 9.113z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#C39090\",\n    d: \"M392.463 475.938c.784-.368 2.032-.908 3.28-.91 37.39-.047 74.781-.043 112.172-.027.812 0 1.623.235 2.728.647-39.043.315-78.38.342-118.18.29z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#EEE7E3\",\n    d: \"M458 478.04l-68.865-.001.003-.804h87.074l.013.805H458zM493 353.958c5.102-.003 9.707-.003 14.312-.003v.713h-29.824l-.022-.707c5.011 0 10.023 0 15.533-.003z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08888\",\n    d: \"M224.093 410.659c-.204.129-.505-.003-.936-.35.193-.114.516-.013.936.35z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEFBFB\",\n    d: \"M315.372 416.536c25.27-7.195 50.895-9.927 77.037-9.666 44.969.448 89.945.154 134.919.107 18.243-.019 36.07 3.058 53.78 7.013 1.443.322 2.691 1.519 4.193 2.664-.938 1.595-1.881 3.708-3.165 3.94a537.301 537.301 0 01-33.025 4.918c-1.17-5.057-1.897-9.727-2.624-14.397l-.503.094-1.327 14.78c-2.888.633-5.746 1.528-8.668 1.85a331.664 331.664 0 01-23.732 1.774c-1.782-.46-2.96-.74-4.086-.603-4.53.556-6.294-1.542-6.445-5.912-.13-3.742-.77-7.465-1.186-11.197-1.203 3.933-1.084 7.994-1.76 11.92-.427 2.476-2.04 4.75-3.122 7.113-8.238.278-16.474.678-24.714.785-4.436.057-8.88-.387-14.152-.553-2.15-1.222-4.183-2.283-4.64-3.815-1-3.338-1.196-6.916-1.72-10.396-1.466 3.416-2.05 6.633-2.243 9.873-.202 3.415-1.974 4.584-5.113 4.344-10.042-.26-20.084-.52-30.903-.747-1.768-.047-2.758-.142-3.75-.208-6.804-.45-6.906-.602-7.468-7.655-.256-3.218-.731-6.42-1.107-9.629-.526 1.143-.678 2.208-.773 3.277-1.12 12.618-1.118 12.618-13.805 13.02-2.062-.3-4.124-.599-6.68-.773-.492.125-.839.228-.839.228-.705-.14-1.41-.281-3.014-.347-2.356.06-3.813.048-5.27.035-4.224-.803-8.449-1.605-13.218-2.78-1.292-4.767-2.038-9.163-2.975-14.68l-2.207 14.082c-4.365-.207-8.775-.094-13.084-.7-6.037-.847-12.058-2.004-17.96-3.52-1.785-.458-3.154-2.54-4.65-4.239z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#7F3539\",\n    d: \"M385.622 429.368c12.335-.54 12.333-.54 13.453-13.158.095-1.07.247-2.134.773-3.277.376 3.21.851 6.41 1.107 9.63.562 7.052.664 7.205 7.467 7.654.993.066 1.983.161 3.31.38a936.404 936.404 0 01-26.11-1.23zM496.047 430.802c.692-2.232 2.306-4.505 2.733-6.982.676-3.925.557-7.986 1.76-11.919.415 3.732 1.056 7.455 1.186 11.197.151 4.37 1.914 6.468 6.445 5.912 1.126-.138 2.304.142 3.645.6-5.002.599-10.191.829-15.77 1.192zM443.391 431.424c2.824-.012 4.596-1.181 4.798-4.596.192-3.24.777-6.457 2.243-9.873.524 3.48.72 7.058 1.72 10.396.457 1.532 2.49 2.593 4.208 3.906-3.95.166-8.302.293-12.969.167zM545.055 425.98c.044-4.918.487-9.844.929-14.771l.503-.094c.727 4.67 1.454 9.34 2.143 14.409-1.085.414-2.13.43-3.575.456zM351.423 425.04c.325-4.388 1.006-8.732 1.851-14.127.937 5.517 1.683 9.913 2.558 14.694-1.265.083-2.659-.22-4.409-.567zM369.737 428.41a92.215 92.215 0 014.468.041c-1.155.026-2.676.011-4.468-.04zM377.791 428.648c-.04.037.307-.066.38-.012.072.054-.34-.025-.38.012z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId18);\nexport default __webpack_public_path__ + \"static/media/viseme_id_18.84d11664e0942c8a2c93dfdce9000ae4.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33, _path34, _path35, _path36;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId19(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 901 859\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D38282\",\n    d: \"M434.09 551.915c-5.665-.638-11.318-1.445-16.999-1.883-18.69-1.441-36.621-5.988-53.823-13.301-19.167-8.149-37.175-18.48-53.98-30.739-11.055-8.064-21.899-16.506-32.177-25.531-18.697-16.417-36.899-33.398-55.317-50.133-2.923-2.656-6.023-5.132-8.778-7.948-.971-.992-1.158-2.753-1.179-4.016 2.352.576 4.182 1.381 6.007 1.372 7.852-.04 15.702-.32 23.551-.176 1.447.961 2.912 1.551 4.342 2.216 8.544 3.969 17.229 7.67 25.575 12.02 7.787 4.057 15.21 8.81 23.022 13.5 5.577 2.934 10.866 5.761 16.323 8.214 1.167.525 2.944-.308 4.627-.301.37.749.553 1.283.93 2.098 1.02.82 1.794 1.479 2.684 1.879 18.461 8.296 38.096 12.26 58.216 15.675.549.042.769.054 1.31.265 10.687 2.047 21.052 3.894 31.708 5.792.488.058.685.063 1.25.14 2.096.288 3.824.503 5.935.827 1.958.159 3.533.209 5.365.485.923.286 1.589.346 2.646.502 1.993.153 3.595.21 5.455.455.879.24 1.499.292 2.552.45 2.511.157 4.589.206 7.03.402 2.768.355 5.172.564 7.913.824.79.038 1.244.027 2.136.038 2.489-.027 4.538-.077 7.039-.045 3.817.038 7.182-.005 10.971.022 2.143-.015 3.86-.1 5.95-.13 1.123.004 1.872-.05 3.06-.041 4.15-.305 7.863-.67 11.922-.992.805-.017 1.264-.078 2.104-.083 2.1-.222 3.818-.5 5.92-.766 1.143-.077 1.903-.166 3.005-.21 1.434-.233 2.525-.513 4.028-.773 1.5-.12 2.587-.259 3.939-.39.562-.173.86-.355 1.528-.46 1.608-.12 2.846-.318 4.346-.513.561-.171.86-.345 1.53-.503 1.35-.145 2.328-.307 3.685-.441 3.484-.753 6.59-1.533 10.063-2.37 1.088-.231 1.81-.403 2.816-.575.59-.214.894-.43 1.577-.645 4.946-1.395 9.515-2.79 14.464-4.19 11.24-4.652 22.099-9.302 33.322-13.97 4.999-1.962 9.634-3.905 14.623-5.963 11.12-5.217 22.143-9.849 32.589-15.54 12.802-6.974 25.375-14.258 40.257-17.329 6.097 1.415 11.662 1.458 17.015-1.25-1.038 2.243-1.579 4.96-3.192 6.656-11.9 12.518-23.466 25.431-36.183 37.077-22.518 20.622-46.775 39.185-72.993 54.874-14.653 8.77-29.76 17.196-45.579 23.467-12.292 4.873-25.933 6.544-39.105 8.92-7.873 1.42-15.995 1.458-24.939 2.077-7.415-.007-13.899-.065-20.378.096-3.24.081-6.472.563-9.708.864z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08888\",\n    d: \"M686.003 417.557c-5.189 3.035-10.754 2.992-17.296 1.618-24.78-1.717-48.742-2.91-72.576-5.354-17.858-1.83-35.55-5.271-53.698-8.046-2.19-.281-3.994-.673-5.805-.716-15.096-.355-30.192-.776-45.29-.919-13.613-.128-27.229.069-41.335.09-1.15-.02-1.807-.009-2.895-.021-14.588-.053-28.745-.075-42.902-.116-2.045-.006-4.189-.236-4.309 3-1.513.406-2.69.672-3.835.604.977-1.71 2.313-3.637-.778-3.453-11.36.674-22.7 1.668-34.522 2.61-12.824 1.607-25.286 2.541-37.501 4.808-27.085 5.027-54.361 7.365-81.864 7.562-7.85.192-15.701.471-23.553.512-1.825.01-3.655-.796-5.693-1.544 14.322-7.34 28.684-14.743 43.425-21.293 20.188-8.971 40.607-17.432 61.033-25.857 19.543-8.06 39.193-15.864 58.85-23.644 11.696-4.63 24-4.431 36.338-4.495 12.772-.066 24.004 3.574 34.063 11.352 2.708 2.094 5.448 2.87 9.187.878 8.247-4.393 16.585-9.823 25.502-11.446 10.76-1.959 22.606-2.345 33.167.103 13.246 3.071 25.672 9.694 38.44 14.814 9.38 3.762 18.79 7.461 28.101 11.388a1982.23 1982.23 0 0135.843 15.51c20.546 9.144 41.036 18.414 61.534 27.665 2.78 1.255 5.473 2.704 8.37 4.39z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#DEA8AC\",\n    d: \"M434.548 551.97c2.778-.356 6.01-.838 9.25-.919 6.479-.161 12.963-.103 19.926-.091-.823.388-2.125 1.017-3.433 1.03-8.428.087-16.857.038-25.743-.02z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F18B8C\",\n    d: \"M396.03 408.031c1.177-.266 2.354-.532 4.072-.643 2.22.967 3.867 2.405 5.582 2.492 11.603.584 23.226.765 34.83 1.327 5.19.251 7.384-1.928 7.025-6.974.657-.012 1.315-.023 2.438.366.409 4.583 2.107 6.887 6.657 6.776 12.113-.293 24.233-.328 36.341-.752 1.684-.059 3.312-1.728 5.41-2.65 1.337-.024 2.23-.052 3.45.079 3.252.535 6.178.91 9.537 1.405 5.227 1.964 10.042 3.757 14.812 5.662 19.993 7.987 40.236 15.461 57.686 28.602 3.915 2.948 8.05 5.606 12.083 8.397-4.636 1.943-9.271 3.886-14.367 5.45-1.816-1.427-3.128-3.3-4.537-3.377-5.129-.278-10.338-.368-15.428.23-8.99 1.056-9.737-.924-9.835 10.025-.004.462-.32.922-.655 1.83-.614-1.131-.925-1.704-1.199-2.663-.044-1.15-.125-1.917-.173-2.965-.212-.779-.458-1.276-.71-1.997-.004-.223-.157-.641-.177-.975-1.31-.95-2.602-1.568-4.336-2.284-5.796.343-11.147.786-16.86 1.17-4.568.139-6.448 2.177-5.569 6.848-.011 1.476.038 2.552.028 4.025-.414 2.133-.767 3.868-1.1 5.21-.08-1.167-.18-1.943-.297-2.993-.229-.569-.44-.864-.585-1.514-.066-1.306-.2-2.256-.288-3.523-.257-1.085-.557-1.852-.861-2.618-.004.003.004-.004.015-.392-.54-4.194-3.314-3.83-6.35-3.651-.779-.004-1.224.046-2.094.034-2.138.025-3.851.111-5.97.148-1.205.084-2.005.216-3.108.266-1.103.119-1.903.32-3.011.51-3.69.781-8.516-.972-9.143 5.286-.259 2.481-.378 4.597-.78 6.712-.66 0-1.037 0-1.445-.408-.13-1.77-.228-3.132-.289-4.872-.206-3.693-1.918-5.531-5.31-5.552-8.878-.054-17.76-.197-26.63.033-1.337.035-2.626 1.877-4.25 2.817-1.217-.62-2.122-1.175-3.201-1.846a3.823 3.823 0 01-.607-.562c-.343-.338-.59-.443-.867-.486.002-.015-.017.02-.16-.341-1.828-.78-3.506-1.517-5.2-1.557-6.154-.148-12.324-.278-18.466.021-3.401.166-6.76 1.2-10.348 2.07-1.027 1.063-1.845 1.895-2.75 2.361-1.73-1.464-3.305-3.379-5.024-3.517-7.253-.584-14.549-.639-22.036-.876-.485.074-.72.21-1.168.528-.427.18-.598.25-1.16.308-2.596-.593-4.8-1.177-7.179-1.768-.176-.007-.501-.142-.688-.359-1.053-.181-1.92-.145-3.142-.138-.82-.143-1.282-.256-1.889-.462-.356-.197-.58-.24-1.264-.217-6.627.915-14.694-4.62-18.437 5.821-.736-6.787-5.53-7.922-10.512-8.784-3.255-.564-6.518-1.084-9.778-1.619-7.652-1.254-7.652-1.253-10.743 5.522a48.542 48.542 0 00-.81-2.207c-1.266-2.663-2.27-4.722-3.163-7.104 10.237-9.33 21.612-16.344 34.201-21.311 14.904-5.88 29.881-11.576 45.154-17.544 1.762-.405 3.195-.617 4.629-.83z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#811A19\",\n    d: \"M596.306 452.003c-4.387-2.676-8.521-5.334-12.436-8.282-17.45-13.14-37.693-20.615-57.686-28.602-4.77-1.905-9.585-3.698-14.344-5.753 3.502-.422 6.987-.483 10.432-.879 6.86-.79 13.697-1.763 20.543-2.66 17.766 2.723 35.458 6.163 53.316 7.994 23.834 2.443 47.796 3.637 72.148 5.326-14.009 3.058-26.582 10.342-39.384 17.317-10.446 5.69-21.468 10.322-32.589 15.539zM391.075 409.054c-14.946 5.775-29.923 11.47-44.827 17.35-12.589 4.968-23.964 11.981-34.638 21.368-6.2.014-11.853-.352-17.505-.718-7.583-4.447-15.006-9.201-22.793-13.259-8.346-4.35-17.031-8.05-25.575-12.02-1.43-.664-2.895-1.254-4.342-2.215 27.505-.533 54.78-2.871 81.866-7.898 12.215-2.267 24.677-3.201 37.913-4.76 10.557.705 20.229 1.428 29.9 2.152z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FFF\",\n    d: \"M488.845 470.911c.12-2.116.24-4.232.909-6.725 4.363-1.32 8.223-2.11 11.961-3.288 1.259-.397 2.206-1.78 3.296-2.713 1.713-.086 3.426-.172 5.662.117 1.458.816 2.392 1.257 3.576 1.697.25.001.749.002.757.4 1.926 6.908 4.812 13.47-1.019 19.744-.015.171-.023.514-.023.514-1.238.198-2.476.396-4.341.558-.93.113-1.233.261-1.536.41-1.087.14-2.174.278-3.891.194-1.805.161-2.98.546-4.154.931-.76.09-1.52.18-2.906.05-2.438.158-4.248.537-6.058.916-.458.06-.917.122-1.723-.26-.43-2.145-.512-3.845-.595-5.546-2.052 4.076-5.143 5.187-9.077 5.208-.899.004-1.792 1.083-2.688 1.668-.749.053-1.498.106-2.757-.218-2.668-2.015-4.676-2.504-6.239.379-3.364.044-6.73.087-10.653-.27-4.424-2.426-6.062-5.267-4.22-9.627.419-.991.32-2.274.218-3.401-.715-7.847-.633-7.413 7.275-9.28 9.349-2.205 18.08-2.151 26.173 3.64.098 1.361.197 2.723.105 4.732.35 1.452.889 2.256 1.428 3.06l.52-2.89z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF9F8\",\n    d: \"M316.214 457.307c2.897-7.055 2.897-7.056 10.549-5.802 3.26.535 6.523 1.055 9.778 1.619 4.983.862 9.776 1.997 10.512 8.784 3.743-10.442 11.81-4.906 18.569-5.696.58.122.92.248.92.248l.356-.064c.463.114.926.227 2.107.471 1.468.172 2.217.213 2.967.254 0 0 .325.135.794.376 1.368 2.024 2.758 3.728 3.063 5.608.627 3.858.672 7.811.956 11.725-19.79-3.384-39.426-7.348-57.887-15.644-.89-.4-1.664-1.06-2.684-1.879z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FFF\",\n    d: \"M440.001 484.033c-2.077-.05-4.155-.099-6.93-.414-1.314-.338-1.93-.41-2.546-.481-1.602-.056-3.204-.113-5.474-.444-1.32-.367-1.973-.459-2.626-.55-1.575-.05-3.15-.1-5.365-.48-2.406-.778-4.174-1.226-5.985-2.102.015-2.138.074-3.85.462-5.718 1.709-4.679 3.09-9.201 4.89-13.799 2.13-.127 3.837-.18 5.722.075 5.31.831 10.433 1.525 15.58 1.833 5.985.36 8.68 3.32 7.985 9.284-.339 2.897-4.04 11.188-5.713 12.796z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF9F8\",\n    d: \"M380.042 459.042c.172-.07.343-.14.978-.313.749-.17.983-.317 1.167-.545 7.28.248 14.576.303 21.829.887 1.719.138 3.295 2.053 4.981 3.974.311 6.49.578 12.156.844 17.822-10.365-1.847-20.73-3.694-31.397-6.157.33-5.634.964-10.65 1.598-15.668z\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FFF\",\n    d: \"M548.892 458.01s.153.418.161.922c.23 1.001.451 1.5.672 1.998.082.766.163 1.532-.136 2.829-.789 3.08-1.198 5.63-1.608 8.181-4.569 1.395-9.138 2.79-14.357 4.236-.963.232-1.276.413-1.589.595-.722.172-1.443.344-2.69.262-4.468-1.408-7.27-3.256-5.71-8.12.137-.427-.932-1.241-1.44-1.875-.05-1.076-.1-2.152.217-3.726a625.73 625.73 0 015.625-6.691c5.352-.443 10.703-.886 16.621-.96a163.435 163.435 0 004.234 2.349z\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF5F4\",\n    d: \"M548.36 471.937c.03-2.547.44-5.098 1.192-7.794.654.429.965 1.002 1.579 2.132.336-.907.651-1.367.655-1.829.098-10.949.845-8.969 9.835-10.025 5.09-.598 10.3-.508 15.428-.23 1.409.077 2.72 1.95 4.174 3.396-10.763 5.047-21.623 9.697-32.862 14.35z\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF9F8\",\n    d: \"M486.83 465.63c-8.131-5.412-16.862-5.466-26.211-3.26-7.908 1.866-7.99 1.432-7.275 9.279.102 1.127.201 2.41-.218 3.4-1.842 4.361-.204 7.202 3.768 9.545-1.942.37-3.991.42-6.54-.017-.133-7.519.233-14.55.598-21.583 1.311-1.006 2.6-2.848 3.937-2.883 8.87-.23 17.752-.087 26.63-.033 3.392.02 5.104 1.86 5.31 5.552zM440.366 484.179c1.308-1.754 5.01-10.045 5.348-12.942.696-5.963-2-8.925-7.986-9.284a110.809 110.809 0 01-15.21-1.998c7.939-.282 15.684-.091 23.429.1 0 0 .019-.036.154.128.345.342.586.452.859.493 0 0 .303.29.524.857.3 8.185.378 15.803.457 23.42-2.404-.21-4.808-.419-7.575-.774z\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF5F4\",\n    d: \"M294.334 447.295c5.423.125 11.075.491 17.164.801 1.442 2.002 2.446 4.061 3.525 6.51-1.422.596-3.2 1.429-4.366.904-5.457-2.453-10.746-5.28-16.323-8.215z\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF9F8\",\n    d: \"M514.002 479.972c5.816-6.103 2.93-12.665 1.286-19.413 1.423.32 2.571.876 3.72 1.434 0 0-.008.007-.003.32.275 1.082.546 1.85.816 2.62.133.95.266 1.9.394 3.469.177.92.358 1.222.54 1.524.1.776.2 1.552.27 3.094-.675 2.734-1.319 4.701-1.963 6.67-.978.16-1.955.322-3.651.421a62.79 62.79 0 01-1.409-.139z\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#DEA8AC\",\n    d: \"M448.278 485.003c-.416-7.667-.495-15.285-.62-23.353.859.103 1.764.657 2.982 1.278-.053 7.098-.419 14.13-.725 21.626-.393.476-.847.487-1.637.449zM379.651 459.031c-.243 5.028-.876 10.045-1.53 15.479-.238.405-.458.393-1.007.35-.613-3.944-.658-7.897-1.285-11.755-.305-1.88-1.695-3.584-2.887-5.6 1.91.35 4.114.933 6.71 1.526z\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF5F4\",\n    d: \"M519.44 479.716c.266-1.995.91-3.962 1.564-6.304.364-2.11.717-3.844 1.13-5.977.57.237 1.638 1.05 1.5 1.478-1.558 4.864 1.243 6.712 5.345 8.178-2.948 1.092-6.054 1.872-9.538 2.625z\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF9F8\",\n    d: \"M477.433 484.847c.458-.646 1.351-1.725 2.25-1.73 3.934-.02 7.025-1.13 9.077-5.207.083 1.7.165 3.401.249 5.502-3.712.765-7.425 1.13-11.576 1.435z\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#DEA8AC\",\n    d: \"M410.132 480.918c-.557-5.717-.824-11.383-1.047-17.506.86-1.29 1.678-2.122 2.792-3.097.296-.143.469.03.403.43-.401 4.686-.736 8.97-1.072 13.256-.059 1.711-.118 3.423-.186 5.808a77.44 77.44 0 00-.008 1.178 8.494 8.494 0 01-.882-.069z\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF9F8\",\n    d: \"M468.424 485.018c1.138-2.954 3.146-2.465 5.442-.507-1.582.406-3.3.492-5.442.507zM491.46 483.772c1.428-.435 3.238-.814 5.293-.985-1.475.485-3.193.763-5.293.985zM411.382 481.059c-.369-.24-.37-.408-.317-.824 1.821.203 3.589.651 5.613 1.321-1.472.005-3.2-.21-5.296-.497zM500.385 482.797c.832-.432 2.006-.817 3.398-.998-.873.484-1.964.764-3.398.998zM430.783 483.327c.358-.117.974-.046 1.854.185-.355.107-.975.055-1.854-.185zM422.682 482.37c.396-.135 1.048-.043 1.978.227-.39.119-1.055.059-1.978-.227z\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF5F4\",\n    d: \"M513.987 480.143c.245-.145.475-.12 1.051-.048.048.22-.25.394-.812.565-.262-.003-.254-.346-.239-.517z\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF9F8\",\n    d: \"M508.352 481.633c.038-.157.341-.305.901-.495-.041.14-.339.322-.901.495z\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF5F4\",\n    d: \"M532.32 476.771c.028-.182.34-.363.927-.594-.033.165-.338.38-.927.594zM542.433 405.775c-6.464.949-13.302 1.923-20.16 2.712-3.446.396-6.931.457-10.866.76-3.394-.284-6.32-.66-9.711-1.652-.925-1.717-1.384-2.817-1.843-3.918l-1.328.268-.584 4.026c-1.654.924-3.282 2.593-4.966 2.652-12.108.424-24.228.459-36.341.752-4.55.11-6.248-2.193-6.165-6.744 13.64-.422 27.256-.62 40.868-.49 15.099.142 30.195.563 45.29.918 1.812.043 3.616.435 5.806.716zM447.108 404.209c.79 5.07-1.404 7.25-6.594 6.998-11.604-.562-23.227-.743-34.83-1.327-1.715-.087-3.362-1.525-5.245-2.632-.422-3.39 1.722-3.16 3.767-3.155 14.157.04 28.314.063 42.902.116zM391.402 408.861c-10-.53-19.67-1.254-29.754-2.026 10.936-.923 22.276-1.917 33.636-2.591 3.091-.184 1.755 1.743.778 3.453-1.465.547-2.898.76-4.66 1.164z\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#DEA8AC\",\n    d: \"M445.804 459.693c-7.602.17-15.347-.02-23.462-.046-2.078.218-3.786.27-6.282.367-1.764.14-2.739.235-3.714.33l-.26-.26c3.292-.728 6.65-1.76 10.052-1.927 6.142-.3 12.312-.169 18.465-.021 1.695.04 3.373.777 5.2 1.557z\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF9F8\",\n    d: \"M504.606 458.136c-.685.982-1.632 2.365-2.89 2.762-3.739 1.179-7.6 1.969-11.823 2.923.077-5.88 4.903-4.128 8.908-4.889a24.058 24.058 0 002.998-.448c.8-.132 1.601-.264 2.807-.348z\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF5F4\",\n    d: \"M527.676 456.563c-1.392 2.122-3.145 4.187-5.203 6.348-1.245-4.172.635-6.21 5.203-6.348zM519.019 461.605c-1.16-.17-2.308-.727-3.739-1.444-.282-.16-.781-.16-1.15-.413-.622-.748-.875-1.245-1.128-1.74 2.703-.234 5.476-.597 6.017 3.597z\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF9F8\",\n    d: \"M488.562 470.91c.11.965-.064 1.928-.237 2.89-.54-.803-1.078-1.607-1.396-2.65.597-.24.974-.24 1.633-.24z\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08888\",\n    d: \"M498.385 407.974c-.25-1.345-.055-2.687.14-4.029l1.328-.268c.459 1.101.918 2.201 1.516 3.759-.753.485-1.647.513-2.984.538z\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF5F4\",\n    d: \"M548.872 457.676c-1.203-.327-2.425-.987-3.77-1.916 1.168.348 2.46.966 3.77 1.916z\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF9F8\",\n    d: \"M512.67 457.954c.585.55.838 1.046 1.21 1.793-.815-.188-1.749-.629-2.782-1.383.347-.364.792-.414 1.571-.41z\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF5F4\",\n    d: \"M501.497 458.402c-.49.242-1.28.402-2.388.542.485-.222 1.285-.423 2.388-.542z\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#DEA8AC\",\n    d: \"M371.785 456.904c-.563.176-1.312.135-2.423-.008.504-.137 1.37-.173 2.423.008z\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF5F4\",\n    d: \"M519.865 464.615c-.314-.451-.585-1.22-.856-2.304.299.452.6 1.22.856 2.304zM549.76 460.648c-.256-.216-.477-.715-.702-1.493.243.217.49.714.701 1.493z\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#DEA8AC\",\n    d: \"M366.754 456.304c.144.092-.212.156-.212.156s-.34-.126-.472-.251c.104-.144.328-.102.684.095z\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF5F4\",\n    d: \"M520.738 469.652c-.165-.028-.346-.33-.59-.895.15.031.361.326.59.895z\"\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#DEA8AC\",\n    d: \"M381.98 458.195c.023.217-.211.364-.705.424-.015-.214.22-.35.705-.424zM446.831 460.52c-.144.115-.385.005-.732-.322.142-.12.39-.016.732.322z\"\n  })), _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEF9F8\",\n    d: \"M412.28 460.745c1.041-.496 2.016-.591 3.359-.656-1.013 4.554-2.393 9.076-4.102 13.755.007-4.128.342-8.413.743-13.099z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId19);\nexport default __webpack_public_path__ + \"static/media/viseme_id_19.e55c562bc5c7c35d607061e44a185936.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgVisemeId20(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 895 859\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D38282\",\n    d: \"M681.054 415.865c2.496-.09 3.91.43 2.342 3.342-4.13 7.67-7.745 15.648-12.292 23.057-10.638 17.335-22.8 33.596-37.095 48.102-11.813 11.989-24.1 23.51-36.141 35.275-10.935 10.684-23.146 19.728-36.385 27.25-21.848 12.415-43.836 24.721-69.342 28.1-9.709 1.286-19.47 2.45-29.244 2.889-11.173.502-22.43.79-33.57.011-25.42-1.779-49.606-8.266-71.584-21.594-16.523-10.02-33.18-19.87-49.173-30.691-9.327-6.311-17.774-14.048-26.054-21.748-10.41-9.683-20.662-19.605-30.233-30.108-14.334-15.731-26.824-32.945-37.987-51.084-2.218-3.604-4.125-7.4-6.338-11.402 2.103-1.442 4.167-2.857 6.656-3.937.884 1.203 1.345 2.071 1.624 3.171.608 1.647 1.049 3.547 2.24 4.4 9.168 6.57 18.256 13.295 27.8 19.283 16.735 10.5 33.776 20.508 50.93 30.97 13.713 7.678 27.047 15.375 40.716 22.421 6.258 3.226 13.175 5.17 20.049 7.84 5.112 1.586 9.97 3.026 15.152 4.61 1.233.4 2.141.656 3.394 1.042 9.925 2.333 19.506 4.536 28.716 6.654 1.324-1.95 2.112-3.11 2.91-3.884 2.302 1.968 4.468 4.665 6.908 4.94 9.9 1.116 19.885 1.488 30.235 2.132.922-.026 1.448-.049 2.425-.036 10.512-.417 20.57-1.068 30.637-1.243 4.882-.085 6.457-2.103 6.042-6.598.816.037 1.143.05 1.505.437l.489 5.385c10.408-2.034 20.443-3.994 30.898-5.968.98-.052 1.539-.09 2.436-.242a5828.372 5828.372 0 0125.352-7.585c18.479-5.06 34.108-15.173 50.315-24.058 1.811-.993 3.175-2.802 5.103-4.153 1.413-.3 2.636-.454 3.5-1.093 24.657-18.208 49.278-36.464 74.248-54.756 1.167-.406 1.991-.769 2.816-1.13z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E08787\",\n    d: \"M680.875 415.55c-.646.677-1.47 1.04-3.027 1.43-2.17-.355-3.587-.846-5.047-1.106-17.676-3.155-35.303-6.644-53.052-9.318-27.291-4.112-54.565-9.332-82.034-11.026-35.507-2.19-71.2-1.683-106.813-1.736-23.964-.036-48.056-.382-71.865 1.836-33.084 3.081-65.984 8.238-98.906 12.905-14.642 2.076-29.145 5.124-43.712 7.731-.46-.868-.92-1.736-1.44-2.976-.059-.371-.012-.318.24-.382a30.53 30.53 0 001.774-.756c8.6-4.172 17.249-8.243 25.787-12.536 29.593-14.877 58.802-30.576 88.843-44.48 18.252-8.448 37.589-14.711 56.765-20.951 16.767-5.457 34.314-6.161 50.167 2.234 8.055 4.265 13.396 2.673 19.979-1.194 10.753-6.318 22.513-4.888 34.036-3.31 28.316 3.875 54.294 14.939 79.717 27.25 21.579 10.451 42.766 21.711 64.13 32.607 13.54 6.906 27.096 13.782 40.613 20.733 1.337.687 2.45 1.81 3.845 3.045z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#D38282\",\n    d: \"M216.682 412.084c-.196.299-.704.53-1.49.802.208-.262.694-.566 1.49-.802z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#F28A8B\",\n    d: \"M485.862 509.092c-.327-.013-.654-.026-1.69-.346-2.732-1.392-4.689-3.24-6.787-3.418-5.957-.504-11.974-.44-17.965-.391-11.71.093-11.71.152-12.157 11.896-.527.024-1.053.047-1.916-.372-.326-1.606-.279-2.77-.31-3.933-.193-7.122-.52-7.573-7.785-7.703-7.642-.137-15.29.117-22.933-.02-3.517-.062-5.774 1-6.598 4.73-2.132-1.778-3.705-4.87-5.6-5.082-7.241-.812-14.588-.875-21.89-.767-1.367.02-2.705 2.112-4.057 3.248-.908-.256-1.816-.512-3.106-1.248-4.501-5.102-10.228-3.61-15.35-4.418-6.619-2.526-13.536-4.47-19.793-7.696-13.67-7.046-27.004-14.743-40.58-22.73 16.324-26.55 36.574-48.01 66.121-59.533 18.848-7.35 37.978-11.043 58.07-8.836 16.281 1.789 32.49 2.249 48.806.303 27.312-3.259 52.864 1.626 76.52 16.354 22.062 13.735 39.825 31.475 53.271 53.635-1.571 1.43-2.935 3.24-4.746 4.233-16.207 8.885-31.836 18.998-50.7 23.992-7.36.223-13.95.31-20.525.664-4.494.241-6.098 2.773-4.78 7.101-.56.038-1.118.076-2.165-.232-.99-4.496-3.44-5.942-7.426-5.544-6.273.627-12.552 1.211-18.84 1.647-2.971.206-4.518 1.696-5.09 4.466z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#811918\",\n    d: \"M600.49 472.845c-13.803-22.24-31.566-39.98-53.627-53.715-23.657-14.728-49.21-19.613-76.521-16.354-16.315 1.946-32.525 1.486-48.806-.303-20.092-2.207-39.222 1.486-58.07 8.836-29.547 11.522-49.797 32.983-66.362 59.286-17.05-9.906-34.091-19.914-50.825-30.414-9.545-5.988-18.633-12.714-27.801-19.282-1.191-.854-1.632-2.754-2.24-4.4 14.748-2.84 29.251-5.888 43.893-7.964 32.922-4.667 65.822-9.824 98.906-12.905 23.81-2.218 47.901-1.872 71.865-1.836 35.614.053 71.306-.453 106.813 1.736 27.47 1.694 54.743 6.914 82.034 11.026 17.75 2.674 35.376 6.163 53.052 9.318 1.46.26 2.878.751 4.704 1.15-24.237 18.264-48.858 36.52-73.514 54.728-.865.639-2.088.793-3.5 1.093z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FEFAF9\",\n    d: \"M408.13 509.544c.415-3.739 2.672-4.801 6.19-4.738 7.641.136 15.29-.118 22.932.019 7.264.13 7.592.581 7.785 7.703.031 1.163-.016 2.327-.086 3.935-10.013-.201-19.998-.573-29.898-1.69-2.44-.274-4.606-2.97-6.931-4.915-.033-.36.009-.314.009-.314zM447.713 516.87c-.002-11.781-.003-11.84 11.707-11.933 5.991-.048 12.008-.113 17.965.391 2.098.178 4.055 2.026 6.296 3.394 1.126 4.802-.449 6.82-5.33 6.905-10.068.175-20.126.826-30.638 1.243zM485.897 509.466c.536-3.144 2.083-4.634 5.054-4.84 6.288-.436 12.567-1.02 18.84-1.647 3.985-.398 6.436 1.048 7.006 5.558-9.968 2.32-20.003 4.28-30.411 6.314l-.489-5.385z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FDF4F4\",\n    d: \"M407.72 509.535c.41.009.369-.038.391-.062-.764 1.135-1.552 2.296-2.876 4.245-9.21-2.118-18.79-4.321-28.716-6.654 1.007-1.266 2.345-3.358 3.713-3.378 7.3-.108 14.648-.045 21.888.767 1.896.213 3.47 3.304 5.6 5.082zM519.72 508.64c-1.656-4.213-.052-6.745 4.442-6.986 6.575-.353 13.165-.44 20.133-.576-7.822 2.527-16.03 4.988-24.575 7.563zM357.973 501.413c4.867.662 10.594-.83 14.77 4.128-4.8-1.103-9.658-2.543-14.77-4.128z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisemeId20);\nexport default __webpack_public_path__ + \"static/media/viseme_id_20.f0b9f6a1628a778b5d1431aa69f7e09e.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect, useRef } from \"react\";\r\nimport cartoonAvatarVideo from \"../AvatarImages/3.png\"; // base image\r\nimport blinkGif from \"../AvatarImages/blink.gif\"; // Add this import for your blink GIF\r\nimport * as sdk from \"microsoft-cognitiveservices-speech-sdk\";\r\nimport { config } from \"../config\";\r\nimport { cartoonVisemes } from \"../visemes/cartoonVisemes\";\r\nimport \"./VisemeDisplay.css\";\r\n\r\nconst VisemeDisplay = ({ text }) => {\r\n    const [imageIndex, setImageIndex] = useState(0);\r\n    const [isVisemesActive, setIsVisemesActive] = useState(false);\r\n    const [isSpeaking, setIsSpeaking] = useState(false);\r\n    const [shouldBlink, setShouldBlink] = useState(false);\r\n    const synthesizerRef = useRef(null);\r\n    const timeoutsRef = useRef([]);\r\n    const blinkTimeoutRef = useRef(null);\r\n\r\n    // Function to trigger blink\r\n    const triggerBlink = () => {\r\n        setShouldBlink(true);\r\n        setTimeout(() => setShouldBlink(false), 500); // Duration of blink GIF\r\n    };\r\n\r\n    // Handle regular blinking when not speaking\r\n    useEffect(() => {\r\n        const handleRegularBlink = () => {\r\n            if (!isSpeaking) {\r\n                triggerBlink();\r\n            }\r\n        };\r\n\r\n        const startRegularBlinking = () => {\r\n            handleRegularBlink();\r\n            blinkTimeoutRef.current = setInterval(handleRegularBlink, 5000);\r\n        };\r\n\r\n        if (!isSpeaking) {\r\n            startRegularBlinking();\r\n        }\r\n\r\n        return () => {\r\n            if (blinkTimeoutRef.current) {\r\n                clearInterval(blinkTimeoutRef.current);\r\n            }\r\n        };\r\n    }, [isSpeaking]);\r\n\r\n    // Modified handleVisemes function to include blinking\r\n    function handleVisemes(text) {\r\n        setIsSpeaking(true);\r\n        const speechConfig = sdk.SpeechConfig.fromSubscription(\r\n            config.SpeechKey,\r\n            config.SpeechRegion\r\n        );\r\n        const audioConfig = sdk.AudioConfig.fromDefaultSpeakerOutput();\r\n        const synthesizer = new sdk.SpeechSynthesizer(speechConfig, audioConfig);\r\n        let visemesArr = [];\r\n        let lastPunctuationTime = 0;\r\n        const punctuationMarks = ['.', ',', '!', '?', ';', ':'];\r\n\r\n        synthesizer.visemeReceived = function (s, e) {\r\n            visemesArr.push(e);\r\n            \r\n            // Get the current text position\r\n            const currentTextPosition = e.audioOffset / 10000;\r\n            \r\n            // Check for punctuation and trigger blink if needed\r\n            const textUpToCurrentPosition = text.slice(0, Math.floor(currentTextPosition));\r\n            const lastChar = textUpToCurrentPosition.slice(-1);\r\n            \r\n            if (punctuationMarks.includes(lastChar) && \r\n                currentTextPosition - lastPunctuationTime > 1000) { // Prevent too frequent blinking\r\n                setTimeout(() => triggerBlink(), currentTextPosition);\r\n                lastPunctuationTime = currentTextPosition;\r\n            }\r\n        };\r\n\r\n        synthesizer.speakTextAsync(\r\n            text,\r\n            (result) => {\r\n                if (result.errorDetails) {\r\n                    console.error(result.errorDetails);\r\n                } else {\r\n                    visemesArr.forEach((e) => {\r\n                        const duration = e.audioOffset / 10000;\r\n                        setTimeout(() => {\r\n                            setImageIndex(e.visemeId);\r\n                        }, duration);\r\n                    });\r\n\r\n                    // Trigger blink at the end of sentence\r\n                    const totalDuration = visemesArr[visemesArr.length - 1]?.audioOffset / 10000 || 0;\r\n                    setTimeout(() => {\r\n                        triggerBlink();\r\n                        setIsSpeaking(false);\r\n                    }, totalDuration);\r\n                }\r\n\r\n                visemesArr = [];\r\n                synthesizer.close();\r\n            },\r\n            (error) => {\r\n                console.error(error);\r\n                visemesArr = [];\r\n                synthesizer.close();\r\n                setIsSpeaking(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (text) {\r\n            handleVisemes(text);\r\n        }\r\n    }, [text]);\r\n\r\n    return (\r\n        <div className=\"faces-container\">\r\n            <div className=\"face-container cartoon-face\">\r\n                <div className=\"avatar-wrapper\">\r\n                    {/* Base layer */}\r\n                    <img\r\n                        src={cartoonAvatarVideo}\r\n                        alt=\"Base Avatar\"\r\n                        className=\"avatar-base\"\r\n                    />\r\n                    \r\n                    {/* Blink overlay */}\r\n                    <img\r\n                        src={blinkGif}\r\n                        alt=\"Blinking\"\r\n                        className={`blink-overlay ${shouldBlink ? 'show' : 'hide'}`}\r\n                    />\r\n                    \r\n                    {/* Viseme overlay */}\r\n                    <img\r\n                        src={cartoonVisemes[imageIndex] || cartoonVisemes[0]}\r\n                        alt=\"Cartoon Viseme\"\r\n                        className={`viseme-image cartoon-viseme ${isVisemesActive ? 'animate' : ''}`}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VisemeDisplay;\r\n","import React from 'react';\r\nimport './ChatDisplay.css';\r\n\r\nconst ChatDisplay = ({ messages, isRecording, onRecordingToggle }) => {\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-header\">\r\n                <h2>Chat History</h2>\r\n            </div>\r\n            <div className=\"messages-container\">\r\n                {messages.map((message, index) => (\r\n                    <div key={index} className={`message ${message.type}`}>\r\n                        <div className=\"message-content\">\r\n                            {message.text}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"record-button-container\">\r\n                <button \r\n                    className={`record-button ${isRecording ? 'recording' : ''}`}\r\n                    onClick={onRecordingToggle}\r\n                >\r\n                    {isRecording ? 'Stop Recording' : 'Start Recording'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatDisplay;\r\n\r\n","const DEFAULT_FETCH_INIT = {\n    cache: \"no-store\",\n};\n\nconst buildUserAgent = (userAgent) => defaultUserAgentString +\n    (userAgent === false\n        ? \"\"\n        : \" AssemblyAI/1.0 (\" +\n            Object.entries({ ...defaultUserAgent, ...userAgent })\n                .map(([key, item]) => item ? `${key}=${item.name}/${item.version}` : \"\")\n                .join(\" \") +\n            \")\");\nlet defaultUserAgentString = \"\";\nif (typeof navigator !== \"undefined\" && navigator.userAgent) {\n    defaultUserAgentString += navigator.userAgent;\n}\nconst defaultUserAgent = {\n    sdk: { name: \"JavaScript\", version: \"4.9.0\" },\n};\nif (typeof process !== \"undefined\") {\n    if (process.versions.node && defaultUserAgentString.indexOf(\"Node\") === -1) {\n        defaultUserAgent.runtime_env = {\n            name: \"Node\",\n            version: process.versions.node,\n        };\n    }\n    if (process.versions.bun && defaultUserAgentString.indexOf(\"Bun\") === -1) {\n        defaultUserAgent.runtime_env = {\n            name: \"Bun\",\n            version: process.versions.bun,\n        };\n    }\n}\nif (typeof Deno !== \"undefined\") {\n    if (process.versions.bun && defaultUserAgentString.indexOf(\"Deno\") === -1) {\n        defaultUserAgent.runtime_env = { name: \"Deno\", version: Deno.version.deno };\n    }\n}\n\n/**\n * Base class for services that communicate with the API.\n */\nclass BaseService {\n    /**\n     * Create a new service.\n     * @param params - The parameters to use for the service.\n     */\n    constructor(params) {\n        this.params = params;\n        if (params.userAgent === false) {\n            this.userAgent = undefined;\n        }\n        else {\n            this.userAgent = buildUserAgent(params.userAgent || {});\n        }\n    }\n    async fetch(input, init) {\n        init = { ...DEFAULT_FETCH_INIT, ...init };\n        let headers = {\n            Authorization: this.params.apiKey,\n            \"Content-Type\": \"application/json\",\n        };\n        if (DEFAULT_FETCH_INIT?.headers)\n            headers = { ...headers, ...DEFAULT_FETCH_INIT.headers };\n        if (init?.headers)\n            headers = { ...headers, ...init.headers };\n        if (this.userAgent) {\n            headers[\"User-Agent\"] = this.userAgent;\n            {\n                // chromium browsers have a bug where the user agent can't be modified\n                if (typeof window !== \"undefined\" && \"chrome\" in window) {\n                    headers[\"AssemblyAI-Agent\"] =\n                        this.userAgent;\n                }\n            }\n        }\n        init.headers = headers;\n        if (!input.startsWith(\"http\"))\n            input = this.params.baseUrl + input;\n        const response = await fetch(input, init);\n        if (response.status >= 400) {\n            let json;\n            const text = await response.text();\n            if (text) {\n                try {\n                    json = JSON.parse(text);\n                }\n                catch {\n                    /* empty */\n                }\n                if (json?.error)\n                    throw new Error(json.error);\n                throw new Error(text);\n            }\n            throw new Error(`HTTP Error: ${response.status} ${response.statusText}`);\n        }\n        return response;\n    }\n    async fetchJson(input, init) {\n        const response = await this.fetch(input, init);\n        return response.json();\n    }\n}\n\nclass LemurService extends BaseService {\n    summary(params) {\n        return this.fetchJson(\"/lemur/v3/generate/summary\", {\n            method: \"POST\",\n            body: JSON.stringify(params),\n        });\n    }\n    questionAnswer(params) {\n        return this.fetchJson(\"/lemur/v3/generate/question-answer\", {\n            method: \"POST\",\n            body: JSON.stringify(params),\n        });\n    }\n    actionItems(params) {\n        return this.fetchJson(\"/lemur/v3/generate/action-items\", {\n            method: \"POST\",\n            body: JSON.stringify(params),\n        });\n    }\n    task(params) {\n        return this.fetchJson(\"/lemur/v3/generate/task\", {\n            method: \"POST\",\n            body: JSON.stringify(params),\n        });\n    }\n    getResponse(id) {\n        return this.fetchJson(`/lemur/v3/${id}`);\n    }\n    /**\n     * Delete the data for a previously submitted LeMUR request.\n     * @param id - ID of the LeMUR request\n     */\n    purgeRequestData(id) {\n        return this.fetchJson(`/lemur/v3/${id}`, {\n            method: \"DELETE\",\n        });\n    }\n}\n\nconst { WritableStream } = typeof window !== \"undefined\"\n    ? window\n    : typeof global !== \"undefined\"\n        ? global\n        : globalThis;\n\nconst PolyfillWebSocket = WebSocket ?? global?.WebSocket ?? window?.WebSocket ?? self?.WebSocket;\nconst factory = (url, params) => {\n    if (params) {\n        return new PolyfillWebSocket(url, params);\n    }\n    return new PolyfillWebSocket(url);\n};\n\nconst RealtimeErrorType = {\n    BadSampleRate: 4000,\n    AuthFailed: 4001,\n    /**\n     * @deprecated Use InsufficientFunds or FreeTierUser instead\n     */\n    InsufficientFundsOrFreeAccount: 4002,\n    InsufficientFunds: 4002,\n    FreeTierUser: 4003,\n    NonexistentSessionId: 4004,\n    SessionExpired: 4008,\n    ClosedSession: 4010,\n    RateLimited: 4029,\n    UniqueSessionViolation: 4030,\n    SessionTimeout: 4031,\n    AudioTooShort: 4032,\n    AudioTooLong: 4033,\n    AudioTooSmallToTranscode: 4034,\n    /**\n     * @deprecated Don't use\n     */\n    BadJson: 4100,\n    BadSchema: 4101,\n    TooManyStreams: 4102,\n    Reconnected: 4103,\n    /**\n     * @deprecated Don't use\n     */\n    ReconnectAttemptsExhausted: 1013,\n    WordBoostParameterParsingFailed: 4104,\n};\nconst RealtimeErrorMessages = {\n    [RealtimeErrorType.BadSampleRate]: \"Sample rate must be a positive integer\",\n    [RealtimeErrorType.AuthFailed]: \"Not Authorized\",\n    [RealtimeErrorType.InsufficientFunds]: \"Insufficient funds\",\n    [RealtimeErrorType.FreeTierUser]: \"This feature is paid-only and requires you to add a credit card. Please visit https://app.assemblyai.com/ to add a credit card to your account.\",\n    [RealtimeErrorType.NonexistentSessionId]: \"Session ID does not exist\",\n    [RealtimeErrorType.SessionExpired]: \"Session has expired\",\n    [RealtimeErrorType.ClosedSession]: \"Session is closed\",\n    [RealtimeErrorType.RateLimited]: \"Rate limited\",\n    [RealtimeErrorType.UniqueSessionViolation]: \"Unique session violation\",\n    [RealtimeErrorType.SessionTimeout]: \"Session Timeout\",\n    [RealtimeErrorType.AudioTooShort]: \"Audio too short\",\n    [RealtimeErrorType.AudioTooLong]: \"Audio too long\",\n    [RealtimeErrorType.AudioTooSmallToTranscode]: \"Audio too small to transcode\",\n    [RealtimeErrorType.BadJson]: \"Bad JSON\",\n    [RealtimeErrorType.BadSchema]: \"Bad schema\",\n    [RealtimeErrorType.TooManyStreams]: \"Too many streams\",\n    [RealtimeErrorType.Reconnected]: \"This session has been reconnected. This WebSocket is no longer valid.\",\n    [RealtimeErrorType.ReconnectAttemptsExhausted]: \"Reconnect attempts exhausted\",\n    [RealtimeErrorType.WordBoostParameterParsingFailed]: \"Could not parse word boost parameter\",\n};\nclass RealtimeError extends Error {\n}\n\nconst defaultRealtimeUrl = \"wss://api.assemblyai.com/v2/realtime/ws\";\nconst forceEndOfUtteranceMessage = `{\"force_end_utterance\":true}`;\nconst terminateSessionMessage = `{\"terminate_session\":true}`;\n/**\n * RealtimeTranscriber connects to the Streaming Speech-to-Text API and lets you transcribe audio in real-time.\n */\nclass RealtimeTranscriber {\n    /**\n     * Create a new RealtimeTranscriber.\n     * @param params - Parameters to configure the RealtimeTranscriber\n     */\n    constructor(params) {\n        this.listeners = {};\n        this.realtimeUrl = params.realtimeUrl ?? defaultRealtimeUrl;\n        this.sampleRate = params.sampleRate ?? 16_000;\n        this.wordBoost = params.wordBoost;\n        this.encoding = params.encoding;\n        this.endUtteranceSilenceThreshold = params.endUtteranceSilenceThreshold;\n        this.disablePartialTranscripts = params.disablePartialTranscripts;\n        if (\"token\" in params && params.token)\n            this.token = params.token;\n        if (\"apiKey\" in params && params.apiKey)\n            this.apiKey = params.apiKey;\n        if (!(this.token || this.apiKey)) {\n            throw new Error(\"API key or temporary token is required.\");\n        }\n    }\n    connectionUrl() {\n        const url = new URL(this.realtimeUrl);\n        if (url.protocol !== \"wss:\") {\n            throw new Error(\"Invalid protocol, must be wss\");\n        }\n        const searchParams = new URLSearchParams();\n        if (this.token) {\n            searchParams.set(\"token\", this.token);\n        }\n        searchParams.set(\"sample_rate\", this.sampleRate.toString());\n        if (this.wordBoost && this.wordBoost.length > 0) {\n            searchParams.set(\"word_boost\", JSON.stringify(this.wordBoost));\n        }\n        if (this.encoding) {\n            searchParams.set(\"encoding\", this.encoding);\n        }\n        searchParams.set(\"enable_extra_session_information\", \"true\");\n        if (this.disablePartialTranscripts) {\n            searchParams.set(\"disable_partial_transcripts\", this.disablePartialTranscripts.toString());\n        }\n        url.search = searchParams.toString();\n        return url;\n    }\n    /**\n     * Add a listener for an event.\n     * @param event - The event to listen for.\n     * @param listener - The function to call when the event is emitted.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    on(event, listener) {\n        this.listeners[event] = listener;\n    }\n    /**\n     * Connect to the server and begin a new session.\n     * @returns A promise that resolves when the connection is established and the session begins.\n     */\n    connect() {\n        return new Promise((resolve) => {\n            if (this.socket) {\n                throw new Error(\"Already connected\");\n            }\n            const url = this.connectionUrl();\n            if (this.token) {\n                this.socket = factory(url.toString());\n            }\n            else {\n                {\n                    console.warn(`API key authentication is not supported for the RealtimeTranscriber in browser environment. Use temporary token authentication instead.\nLearn more at https://github.com/AssemblyAI/assemblyai-node-sdk/blob/main/docs/compat.md#browser-compatibility.`);\n                }\n                this.socket = factory(url.toString(), {\n                    headers: { Authorization: this.apiKey },\n                });\n            }\n            this.socket.binaryType = \"arraybuffer\";\n            this.socket.onopen = () => {\n                if (this.endUtteranceSilenceThreshold === undefined ||\n                    this.endUtteranceSilenceThreshold === null) {\n                    return;\n                }\n                this.configureEndUtteranceSilenceThreshold(this.endUtteranceSilenceThreshold);\n            };\n            this.socket.onclose = ({ code, reason }) => {\n                if (!reason) {\n                    if (code in RealtimeErrorMessages) {\n                        reason = RealtimeErrorMessages[code];\n                    }\n                }\n                this.listeners.close?.(code, reason);\n            };\n            this.socket.onerror = (event) => {\n                if (event.error)\n                    this.listeners.error?.(event.error);\n                else\n                    this.listeners.error?.(new Error(event.message));\n            };\n            this.socket.onmessage = ({ data }) => {\n                const message = JSON.parse(data.toString());\n                if (\"error\" in message) {\n                    this.listeners.error?.(new RealtimeError(message.error));\n                    return;\n                }\n                switch (message.message_type) {\n                    case \"SessionBegins\": {\n                        const openObject = {\n                            sessionId: message.session_id,\n                            expiresAt: new Date(message.expires_at),\n                        };\n                        resolve(openObject);\n                        this.listeners.open?.(openObject);\n                        break;\n                    }\n                    case \"PartialTranscript\": {\n                        // message.created is actually a string when coming from the socket\n                        message.created = new Date(message.created);\n                        this.listeners.transcript?.(message);\n                        this.listeners[\"transcript.partial\"]?.(message);\n                        break;\n                    }\n                    case \"FinalTranscript\": {\n                        // message.created is actually a string when coming from the socket\n                        message.created = new Date(message.created);\n                        this.listeners.transcript?.(message);\n                        this.listeners[\"transcript.final\"]?.(message);\n                        break;\n                    }\n                    case \"SessionInformation\": {\n                        this.listeners.session_information?.(message);\n                        break;\n                    }\n                    case \"SessionTerminated\": {\n                        this.sessionTerminatedResolve?.();\n                        break;\n                    }\n                }\n            };\n        });\n    }\n    /**\n     * Send audio data to the server.\n     * @param audio - The audio data to send to the server.\n     */\n    sendAudio(audio) {\n        this.send(audio);\n    }\n    /**\n     * Create a writable stream that can be used to send audio data to the server.\n     * @returns A writable stream that can be used to send audio data to the server.\n     */\n    stream() {\n        return new WritableStream({\n            write: (chunk) => {\n                this.sendAudio(chunk);\n            },\n        });\n    }\n    /**\n     * Manually end an utterance\n     */\n    forceEndUtterance() {\n        this.send(forceEndOfUtteranceMessage);\n    }\n    /**\n     * Configure the threshold for how long to wait before ending an utterance. Default is 700ms.\n     * @param threshold - The duration of the end utterance silence threshold in milliseconds.\n     * This value must be an integer between 0 and 20_000.\n     */\n    configureEndUtteranceSilenceThreshold(threshold) {\n        this.send(`{\"end_utterance_silence_threshold\":${threshold}}`);\n    }\n    send(data) {\n        if (!this.socket || this.socket.readyState !== this.socket.OPEN) {\n            throw new Error(\"Socket is not open for communication\");\n        }\n        this.socket.send(data);\n    }\n    /**\n     * Close the connection to the server.\n     * @param waitForSessionTermination - If true, the method will wait for the session to be terminated before closing the connection.\n     * While waiting for the session to be terminated, you will receive the final transcript and session information.\n     */\n    async close(waitForSessionTermination = true) {\n        if (this.socket) {\n            if (this.socket.readyState === this.socket.OPEN) {\n                if (waitForSessionTermination) {\n                    const sessionTerminatedPromise = new Promise((resolve) => {\n                        this.sessionTerminatedResolve = resolve;\n                    });\n                    this.socket.send(terminateSessionMessage);\n                    await sessionTerminatedPromise;\n                }\n                else {\n                    this.socket.send(terminateSessionMessage);\n                }\n            }\n            if (this.socket?.removeAllListeners)\n                this.socket.removeAllListeners();\n            this.socket.close();\n        }\n        this.listeners = {};\n        this.socket = undefined;\n    }\n}\n/**\n * @deprecated Use RealtimeTranscriber instead\n */\nclass RealtimeService extends RealtimeTranscriber {\n}\n\nclass RealtimeTranscriberFactory extends BaseService {\n    constructor(params) {\n        super(params);\n        this.rtFactoryParams = params;\n    }\n    /**\n     * @deprecated Use transcriber(...) instead\n     */\n    createService(params) {\n        return this.transcriber(params);\n    }\n    transcriber(params) {\n        const serviceParams = { ...params };\n        if (!serviceParams.token && !serviceParams.apiKey) {\n            serviceParams.apiKey = this.rtFactoryParams.apiKey;\n        }\n        return new RealtimeTranscriber(serviceParams);\n    }\n    async createTemporaryToken(params) {\n        const data = await this.fetchJson(\"/v2/realtime/token\", {\n            method: \"POST\",\n            body: JSON.stringify(params),\n        });\n        return data.token;\n    }\n}\n/**\n * @deprecated Use RealtimeTranscriberFactory instead\n */\nclass RealtimeServiceFactory extends RealtimeTranscriberFactory {\n}\n\nfunction getPath(path) {\n    if (path.startsWith(\"http\"))\n        return null;\n    if (path.startsWith(\"https\"))\n        return null;\n    if (path.startsWith(\"data:\"))\n        return null;\n    if (path.startsWith(\"file://\"))\n        return path.substring(7);\n    if (path.startsWith(\"file:\"))\n        return path.substring(5);\n    return path;\n}\n\nclass TranscriptService extends BaseService {\n    constructor(params, files) {\n        super(params);\n        this.files = files;\n    }\n    /**\n     * Transcribe an audio file. This will create a transcript and wait until the transcript status is \"completed\" or \"error\".\n     * @param params - The parameters to transcribe an audio file.\n     * @param options - The options to transcribe an audio file.\n     * @returns A promise that resolves to the transcript. The transcript status is \"completed\" or \"error\".\n     */\n    async transcribe(params, options) {\n        const transcript = await this.submit(params);\n        return await this.waitUntilReady(transcript.id, options);\n    }\n    /**\n     * Submits a transcription job for an audio file. This will not wait until the transcript status is \"completed\" or \"error\".\n     * @param params - The parameters to start the transcription of an audio file.\n     * @returns A promise that resolves to the queued transcript.\n     */\n    async submit(params) {\n        let audioUrl;\n        let transcriptParams = undefined;\n        if (\"audio\" in params) {\n            const { audio, ...audioTranscriptParams } = params;\n            if (typeof audio === \"string\") {\n                const path = getPath(audio);\n                if (path !== null) {\n                    // audio is local path, upload local file\n                    audioUrl = await this.files.upload(path);\n                }\n                else {\n                    if (audio.startsWith(\"data:\")) {\n                        audioUrl = await this.files.upload(audio);\n                    }\n                    else {\n                        // audio is not a local path, and not a data-URI, assume it's a normal URL\n                        audioUrl = audio;\n                    }\n                }\n            }\n            else {\n                // audio is of uploadable type\n                audioUrl = await this.files.upload(audio);\n            }\n            transcriptParams = { ...audioTranscriptParams, audio_url: audioUrl };\n        }\n        else {\n            transcriptParams = params;\n        }\n        const data = await this.fetchJson(\"/v2/transcript\", {\n            method: \"POST\",\n            body: JSON.stringify(transcriptParams),\n        });\n        return data;\n    }\n    /**\n     * Create a transcript.\n     * @param params - The parameters to create a transcript.\n     * @param options - The options used for creating the new transcript.\n     * @returns A promise that resolves to the transcript.\n     * @deprecated Use `transcribe` instead to transcribe a audio file that includes polling, or `submit` to transcribe a audio file without polling.\n     */\n    async create(params, options) {\n        const path = getPath(params.audio_url);\n        if (path !== null) {\n            const uploadUrl = await this.files.upload(path);\n            params.audio_url = uploadUrl;\n        }\n        const data = await this.fetchJson(\"/v2/transcript\", {\n            method: \"POST\",\n            body: JSON.stringify(params),\n        });\n        if (options?.poll ?? true) {\n            return await this.waitUntilReady(data.id, options);\n        }\n        return data;\n    }\n    /**\n     * Wait until the transcript ready, either the status is \"completed\" or \"error\".\n     * @param transcriptId - The ID of the transcript.\n     * @param options - The options to wait until the transcript is ready.\n     * @returns A promise that resolves to the transcript. The transcript status is \"completed\" or \"error\".\n     */\n    async waitUntilReady(transcriptId, options) {\n        const pollingInterval = options?.pollingInterval ?? 3_000;\n        const pollingTimeout = options?.pollingTimeout ?? -1;\n        const startTime = Date.now();\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const transcript = await this.get(transcriptId);\n            if (transcript.status === \"completed\" || transcript.status === \"error\") {\n                return transcript;\n            }\n            else if (pollingTimeout > 0 &&\n                Date.now() - startTime > pollingTimeout) {\n                throw new Error(\"Polling timeout\");\n            }\n            else {\n                await new Promise((resolve) => setTimeout(resolve, pollingInterval));\n            }\n        }\n    }\n    /**\n     * Retrieve a transcript.\n     * @param id - The identifier of the transcript.\n     * @returns A promise that resolves to the transcript.\n     */\n    get(id) {\n        return this.fetchJson(`/v2/transcript/${id}`);\n    }\n    /**\n     * Retrieves a page of transcript listings.\n     * @param params - The parameters to filter the transcript list by, or the URL to retrieve the transcript list from.\n     */\n    async list(params) {\n        let url = \"/v2/transcript\";\n        if (typeof params === \"string\") {\n            url = params;\n        }\n        else if (params) {\n            url = `${url}?${new URLSearchParams(Object.keys(params).map((key) => [\n                key,\n                params[key]?.toString() || \"\",\n            ]))}`;\n        }\n        const data = await this.fetchJson(url);\n        for (const transcriptListItem of data.transcripts) {\n            transcriptListItem.created = new Date(transcriptListItem.created);\n            if (transcriptListItem.completed) {\n                transcriptListItem.completed = new Date(transcriptListItem.completed);\n            }\n        }\n        return data;\n    }\n    /**\n     * Delete a transcript\n     * @param id - The identifier of the transcript.\n     * @returns A promise that resolves to the transcript.\n     */\n    delete(id) {\n        return this.fetchJson(`/v2/transcript/${id}`, { method: \"DELETE\" });\n    }\n    /**\n     * Search through the transcript for a specific set of keywords.\n     * You can search for individual words, numbers, or phrases containing up to five words or numbers.\n     * @param id - The identifier of the transcript.\n     * @param words - Keywords to search for.\n     * @returns A promise that resolves to the sentences.\n     */\n    wordSearch(id, words) {\n        const params = new URLSearchParams({ words: words.join(\",\") });\n        return this.fetchJson(`/v2/transcript/${id}/word-search?${params.toString()}`);\n    }\n    /**\n     * Retrieve all sentences of a transcript.\n     * @param id - The identifier of the transcript.\n     * @returns A promise that resolves to the sentences.\n     */\n    sentences(id) {\n        return this.fetchJson(`/v2/transcript/${id}/sentences`);\n    }\n    /**\n     * Retrieve all paragraphs of a transcript.\n     * @param id - The identifier of the transcript.\n     * @returns A promise that resolves to the paragraphs.\n     */\n    paragraphs(id) {\n        return this.fetchJson(`/v2/transcript/${id}/paragraphs`);\n    }\n    /**\n     * Retrieve subtitles of a transcript.\n     * @param id - The identifier of the transcript.\n     * @param format - The format of the subtitles.\n     * @param chars_per_caption - The maximum number of characters per caption.\n     * @returns A promise that resolves to the subtitles text.\n     */\n    async subtitles(id, format = \"srt\", chars_per_caption) {\n        let url = `/v2/transcript/${id}/${format}`;\n        if (chars_per_caption) {\n            const params = new URLSearchParams();\n            params.set(\"chars_per_caption\", chars_per_caption.toString());\n            url += `?${params.toString()}`;\n        }\n        const response = await this.fetch(url);\n        return await response.text();\n    }\n    /**\n     * Retrieve the redacted audio URL of a transcript.\n     * @param id - The identifier of the transcript.\n     * @returns A promise that resolves to the details of the redacted audio.\n     * @deprecated Use `redactedAudio` instead.\n     */\n    redactions(id) {\n        return this.redactedAudio(id);\n    }\n    /**\n     * Retrieve the redacted audio URL of a transcript.\n     * @param id - The identifier of the transcript.\n     * @returns A promise that resolves to the details of the redacted audio.\n     */\n    redactedAudio(id) {\n        return this.fetchJson(`/v2/transcript/${id}/redacted-audio`);\n    }\n    /**\n     * Retrieve the redacted audio file of a transcript.\n     * @param id - The identifier of the transcript.\n     * @returns A promise that resolves to the fetch HTTP response of the redacted audio file.\n     */\n    async redactedAudioFile(id) {\n        const { redacted_audio_url, status } = await this.redactedAudio(id);\n        if (status !== \"redacted_audio_ready\") {\n            throw new Error(`Redacted audio status is ${status}`);\n        }\n        const response = await fetch(redacted_audio_url);\n        if (!response.ok) {\n            throw new Error(`Failed to fetch redacted audio: ${response.statusText}`);\n        }\n        return {\n            arrayBuffer: response.arrayBuffer.bind(response),\n            blob: response.blob.bind(response),\n            body: response.body,\n            bodyUsed: response.bodyUsed,\n        };\n    }\n}\n\nconst readFile = async function (\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\npath) {\n    throw new Error(\"Interacting with the file system is not supported in this environment.\");\n};\n\nclass FileService extends BaseService {\n    /**\n     * Upload a local file to AssemblyAI.\n     * @param input - The local file path to upload, or a stream or buffer of the file to upload.\n     * @returns A promise that resolves to the uploaded file URL.\n     */\n    async upload(input) {\n        let fileData;\n        if (typeof input === \"string\") {\n            if (input.startsWith(\"data:\")) {\n                fileData = dataUrlToBlob(input);\n            }\n            else {\n                fileData = await readFile();\n            }\n        }\n        else\n            fileData = input;\n        const data = await this.fetchJson(\"/v2/upload\", {\n            method: \"POST\",\n            body: fileData,\n            headers: {\n                \"Content-Type\": \"application/octet-stream\",\n            },\n            duplex: \"half\",\n        });\n        return data.upload_url;\n    }\n}\nfunction dataUrlToBlob(dataUrl) {\n    const arr = dataUrl.split(\",\");\n    const mime = arr[0].match(/:(.*?);/)[1];\n    const bstr = atob(arr[1]);\n    let n = bstr.length;\n    const u8arr = new Uint8Array(n);\n    while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new Blob([u8arr], { type: mime });\n}\n\nconst defaultBaseUrl = \"https://api.assemblyai.com\";\nclass AssemblyAI {\n    /**\n     * Create a new AssemblyAI client.\n     * @param params - The parameters for the service, including the API key and base URL, if any.\n     */\n    constructor(params) {\n        params.baseUrl = params.baseUrl || defaultBaseUrl;\n        if (params.baseUrl && params.baseUrl.endsWith(\"/\")) {\n            params.baseUrl = params.baseUrl.slice(0, -1);\n        }\n        this.files = new FileService(params);\n        this.transcripts = new TranscriptService(params, this.files);\n        this.lemur = new LemurService(params);\n        this.realtime = new RealtimeTranscriberFactory(params);\n    }\n}\n\nexport { AssemblyAI, FileService, LemurService, RealtimeService, RealtimeServiceFactory, RealtimeTranscriber, RealtimeTranscriberFactory, TranscriptService };\n","import React, { useState, useRef } from \"react\";\r\nimport { GoogleGenAI } from \"@google/genai\";\r\nimport VisemeDisplay from \"./components/VisemeDisplay\";\r\nimport ChatDisplay from \"./components/ChatDisplay\";\r\nimport { AssemblyAI } from 'assemblyai';\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n    const [messages, setMessages] = useState([]);\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [textToSpeak, setTextToSpeak] = useState(\"\");\r\n    const mediaRecorderRef = useRef(null);\r\n    const chunksRef = useRef([]);\r\n    \r\n    const assemblyClient = new AssemblyAI({\r\n        apiKey: \"3795dcebb08c4b5d91553c5765b6a30a\",\r\n    });\r\n\r\n    const genAI = new GoogleGenAI({\r\n        apiKey: \"AIzaSyB9k1UcICHRzyVGRi8WwVR4niB7XPHqEXM\"\r\n    });\r\n\r\n    const handleRecordingToggle = () => {\r\n        if (isRecording) {\r\n            stopRecording();\r\n        } else {\r\n            startRecording();\r\n        }\r\n    };\r\n\r\n    const processWithGemini = async (userText) => {\r\n        try {\r\n            const response = await genAI.models.generateContent({\r\n                model: \"gemini-2.0-flash\",\r\n                contents: `${userText} \r\n                    Please provide a response in exactly 2 lines.\r\n                    Keep it brief and concise.`\r\n            });\r\n\r\n            // Extract only the first two lines if response is longer\r\n            const aiResponse = response.text\r\n                .split('\\n')\r\n                .filter(line => line.trim() !== '')\r\n                .slice(0, 2)\r\n                .join('\\n');\r\n\r\n            setMessages(prev => [...prev, {\r\n                text: aiResponse,\r\n                type: 'bot'\r\n            }]);\r\n\r\n            setTextToSpeak(aiResponse);\r\n        } catch (error) {\r\n            console.error(\"Error processing with Gemini:\", error);\r\n            setMessages(prev => [...prev, {\r\n                text: \"Sorry, I couldn't process that request.\",\r\n                type: 'bot'\r\n            }]);\r\n        }\r\n    };\r\n\r\n    const processAudio = async (audioBlob) => {\r\n        try {\r\n            const data = {\r\n                audio: audioBlob,\r\n            };\r\n\r\n            const transcript = await assemblyClient.transcripts.transcribe(data);\r\n            const transcribedText = transcript.text;\r\n\r\n            // Add user message\r\n            setMessages(prev => [...prev, {\r\n                text: transcribedText,\r\n                type: 'user'\r\n            }]);\r\n\r\n            // Process with Gemini AI\r\n            await processWithGemini(transcribedText);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error processing audio:\", error);\r\n        }\r\n    };\r\n\r\n    const startRecording = async () => {\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            mediaRecorderRef.current = new MediaRecorder(stream);\r\n            chunksRef.current = [];\r\n\r\n            mediaRecorderRef.current.ondataavailable = (e) => {\r\n                if (e.data.size > 0) {\r\n                    chunksRef.current.push(e.data);\r\n                }\r\n            };\r\n\r\n            mediaRecorderRef.current.onstop = async () => {\r\n                const audioBlob = new Blob(chunksRef.current, { type: 'audio/wav' });\r\n                await processAudio(audioBlob);\r\n            };\r\n\r\n            mediaRecorderRef.current.start();\r\n            setIsRecording(true);\r\n        } catch (error) {\r\n            console.error(\"Error accessing microphone:\", error);\r\n        }\r\n    };\r\n\r\n    const stopRecording = () => {\r\n        if (mediaRecorderRef.current && isRecording) {\r\n            mediaRecorderRef.current.stop();\r\n            setIsRecording(false);\r\n            mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"chat-section\">\r\n                    <ChatDisplay \r\n                        messages={messages} \r\n                        isRecording={isRecording}\r\n                        onRecordingToggle={handleRecordingToggle}\r\n                    />\r\n                </div>\r\n                <div className=\"avatar-section\">\r\n                    <VisemeDisplay text={textToSpeak} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n\r\nreportWebVitals();\r\n"],"names":["TurnStatusResponsePayload","constructor","json","this","privMessageStatusResponse","JSON","parse","fromJSON","interactionId","conversationId","statusCode","exports","ProfanityOption","Exports_js_1","require","SpeechRecognitionResult","RecognitionResult","resultId","reason","text","duration","offset","language","languageDetectionConfidence","speakerId","errorDetails","properties","super","privSpeakerId","PronunciationAssessmentGradingSystem","Exports_js_2","Contracts_js_1","Exports_js_3","Exports_js_4","audioConfig","privAudioConfig","privProperties","PropertyCollection","privRecognizer","undefined","privDisposedRecognizer","speechRecognitionLanguage","Contracts","throwIfDisposed","getProperty","PropertyId","SpeechServiceConnection_RecoLanguage","internalData","connection","Connection","fromRecognizer","authorizationToken","SpeechServiceAuthorization_Token","token","throwIfNullOrWhitespace","setProperty","joinMeetingAsync","meeting","cb","err","meetingImpl","throwIfNullOrUndefined","MeetingImpl","TranscriberRecognizer","config","connectMeetingCallbacks","marshalPromiseToCallbacks","connectTranscriberRecognizer","startTranscribingAsync","startContinuousRecognitionAsync","stopTranscribingAsync","stopContinuousRecognitionAsync","leaveMeetingAsync","disconnectCallbacks","close","errorCb","dispose","disposing","HeaderNames_js_1","SpeechConnectionMessage","ConnectionMessage","messageType","path","requestId","contentType","body","streamId","additionalHeaders","id","ArgumentNullError","headers","HeaderNames","Path","RequestId","RequestTimestamp","Date","toISOString","ContentType","RequestStreamId","headerName","privPath","privRequestId","privContentType","privStreamId","privAdditionalHeaders","fromConnectionMessage","message","toLowerCase","param","name","Error","throwIfNull","trim","length","throwIfNullOrTooLong","maxLength","toString","throwIfNullOrTooShort","minLength","isDisposed","throwIfArrayEmptyOrWhitespace","array","item","throwIfFileDoesNotExist","throwIfNotUndefined","PlatformEvent_js_1","DialogEvent","PlatformEvent","eventName","arguments","EventType","Info","agentConfig","privAgentConfig","Guid_js_1","eventType","privName","privEventId","createNoDashGuid","privEventTime","privEventType","privMetadata","eventId","eventTime","metadata","PronunciationAssessmentGranularity","PropertyCollection_js_1","PropertyId_js_1","privConnectionMessage","ConnectionId","Speech_SessionId","Object","keys","forEach","header","find","key","isTextMessage","MessageType","Text","isBinaryMessage","Binary","TextMessage","textBody","binaryMessage","binaryBody","CancellationErrorCode","Error_js_1","privEventListeners","privIsDisposed","privConsoleListener","onEvent","event","ObjectDisposedError","paramName","attach","onEventCallback","detach","Promise","resolve","attachListener","listener","e","attachConsoleListener","ConnectionFactoryBase_js_1","SpeakerRecognitionConnectionFactoryBase","ConnectionFactoryBase","create","authInfo","endpointPath","connectionId","endpoint","parameters","SpeechServiceConnection_Endpoint","region","SpeechServiceConnection_Region","hostSuffix","getHostSuffix","host","SpeechServiceConnection_Host","scenario","SpeechServiceConnection_SpeakerIdMode","scenarioToPath","queryParams","format","setCommonUrlParams","SpIDAuthKey","SpeechServiceConnection_Key","SpeechServiceConnection_Url","enableCompression","WebsocketConnection","WebsocketMessageFormatter","ProxyInfo","fromRecognizerConfig","mode","PromiseState","PromiseResult","promiseResultEventSource","throwIfError","isError","error","on","result","privIsCompleted","privIsError","privResult","privError","isCompleted","PromiseResultEventSource","setResult","privOnSetResult","setError","privOnSetError","onSetResult","onSetError","privResolve","reject","privReject","privPromise","promise","privState","None","privPromiseResult","privPromiseResultEvents","privSuccessHandlers","privErrorHandlers","state","Resolved","i","executeSuccessCallback","detachHandlers","Rejected","errorHandler","executeErrorCallback","successCallback","errorCallback","push","then","val","typedError","module","LanguageUnderstandingModel","fromEndpoint","uri","hostname","langModelImp","LanguageUnderstandingModelImpl","firstDot","indexOf","substr","lastSegment","pathname","lastIndexOf","appId","subscriptionKey","searchParams","get","fromAppId","fromSubscription","defineProperty","value","_native","_interopRequireDefault","_rng","_stringify","obj","__esModule","default","_default","options","buf","randomUUID","rnds","random","rng","unsafeStringify","CancellationEventArgsBase_js_1","ConversationTranscriptionCanceledEventArgs","CancellationEventArgsBase","Timeout","load","scheduledTimeoutFunctions","Map","unhandledRequests","workerUrl","btoa","worker","Worker","addEventListener","_ref","data","isCallNotification","params","timerId","idOrFunc","unhandledTimerId","delete","isClearResponse","clearTimeout","Math","set","postMessage","method","setTimeout","func","delay","now","performance","loadWorkerTimers","workerTimers","timers","TurnStatusPayload_js_1","turnStatus","privTurnStatus","handleCallback","handleError","activity","audioStream","privActivity","privAudioStream","DialogServiceConfig_js_1","CustomCommandsConfig","DialogServiceConfigImpl","applicationId","subscription","customCommandsConfig","Conversation_DialogType","DialogServiceConfig","DialogTypes","CustomCommands","Conversation_ApplicationId","fromAuthorizationToken","ContentAssessmentResult","detailResult","privPronJson","grammarScore","ContentAssessment","GrammarScore","vocabularyScore","VocabularyScore","topicScore","TopicScore","PronunciationAssessmentResult","jsonString","j","NBest","fromResult","SpeechServiceResponse_JsonResult","accuracyScore","PronunciationAssessment","AccuracyScore","pronunciationScore","PronScore","completenessScore","CompletenessScore","fluencyScore","FluencyScore","prosodyScore","ProsodyScore","contentAssessmentResult","PronunciationAssessmentConfig","referenceText","gradingSystem","FivePoint","granularity","Phoneme","enableMiscue","PronunciationAssessment_ReferenceText","PronunciationAssessment_GradingSystem","PronunciationAssessment_Granularity","PronunciationAssessment_EnableMiscue","String","PronunciationAssessment_Json","toJSON","updateJson","PronunciationAssessment_Params","applyTo","recognizer","recoBase","expectContentAssessmentResponse","privContentAssessmentTopic","speechContext","setPronunciationAssessmentParams","isSpeakerDiarizationEnabled","phonemeAlphabet","privPhonemeAlphabet","enableMiscueString","nbestPhonemeCount","privNBestPhonemeCount","enableProsodyAssessment","privEnableProsodyAssessment","enableContentAssessmentWithTopic","topic","paramsJson","dimension","stringify","TranslationServiceRecognizer","ConversationServiceRecognizer","authentication","connectionFactory","audioSource","recognizerConfig","translationRecognizer","privTranslationRecognizer","connectionEvents","connectionEvent","onConnection","processTypeSpecificMessages","connectionMessage","resultProps","processed","processSpeechMessages","handleTranslationPhrase","async","translatedPhrase","asJson","privRequestSession","onPhraseRecognized","Offset","Duration","RecognitionStatus","Success","fireEventForResult","recognized","privSuccessCallback","privErrorCallback","EnumTranslation","implTranslateRecognitionResult","TranslationRecognitionResult","Language","Confidence","ResultReason","Canceled","cancelReason","implTranslateCancelResult","cancellationErrorCode","implTranslateCancelErrorCode","cancelRecognitionLocal","implTranslateErrorDetails","EndOfDictation","ev","TranslationRecognitionEventArgs","sessionId","handleTranslationHypothesis","hypothesis","onHypothesis","recognizing","TranslationHypothesis","currentTurnAudioOffset","phrase","SpeechPhrase","TranslationPhrase","fromTranslationResponse","SpeechHypothesis","sendSynthesisAudio","synthEnd","TranslationSynthesisEnd","SynthesisStatus","synthesizing","TranslationSynthesisResult","retEvent","TranslationSynthesisEventArgs","canceled","canceledResult","TranslationRecognitionCanceledEventArgs","CancellationReason","FailureReason","ServiceError","cancelRecognition","cancellationReason","errorCode","CancellationErrorCodePropertyName","cancelEvent","handleRecognizingCallback","fromSpeechRecognitionResult","handleRecognizedCallback","serviceResult","translations","resultReason","confidence","Translation","Translations","translation","DisplayText","TranslationStatus","TranslatedSpeech","RecognizedSpeech","TranslatingSpeech","audio","SynthesizingAudioCompleted","SynthesizingAudio","ConversationExpirationEventArgs","SessionEventArgs","expirationTime","privExpirationTime","f","k","Symbol","for","l","m","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","ref","__self","__source","q","c","a","g","b","d","h","call","defaultProps","$$typeof","type","props","_owner","current","jsx","jsxs","privDisposed","fromFile","fileName","fromStream","file","ChunkedArrayBufferStream","Stream","targetChunkSize","privTargetChunkSize","round","privNextBufferReadyBytes","writeStreamChunk","chunk","isEnd","buffer","byteLength","bytesCopiedFromBuffer","privNextBufferToWrite","ArrayBuffer","privNextBufferStartTime","timeReceived","bytesToCopy","min","targetView","Uint8Array","sourceView","slice","isClosed","getOutputLength","inputLength8","safeAdd","x","y","lsw","md5cmn","s","t","num","cnt","md5ff","md5gg","md5hh","md5ii","bytes","msg","unescape","encodeURIComponent","charCodeAt","input","output","length32","hexTab","hex","parseInt","charAt","md5ToHexEncodedArray","len","olda","oldb","oldc","oldd","wordsToMd5","length8","Uint32Array","bytesToWords","ConversationTranscriptionServiceRecognizer","ServiceRecognizerBase","conversationTranscriber","privConversationTranscriber","setSpeakerDiarizationJson","privEnableSpeakerId","phraseDetection","privSpeechContext","getSection","speakerDiarization","audioSessionId","privDiarizationSessionId","audioOffsetMs","diarizeIntermediates","privRecognizerConfig","SpeechServiceResponse_DiarizeIntermediateResults","setSection","ConversationTranscriptionResult","RecognizingSpeech","LanguageDetectionConfidence","SpeakerId","ConversationTranscriptionEventArgs","transcribing","simple","SimpleSpeechPhrase","isSpeechEnded","NoMatch","InitialSilenceTimeout","OutputFormatPropertyName","OutputFormat","Simple","detailed","DetailedSpeechPhrase","Display","transcribed","SpeechRecognitionEventArgs","RecognitionEventArgs","RestConfigBase_js_1","ConversationConnectionConfig","RestConfigBase","privHost","apiVersion","privApiVersion","clientAppId","privClientAppId","defaultLanguageCode","privDefaultLanguageCode","restPath","privRestPath","webSocketPath","privWebSocketPath","transcriptionEventKeys","privTranscriptionEventKeys","fs","__importStar","LogLevel_js_1","logLevelFilter","LogLevel","privLogPath","privEnableConsoleOutput","privLogLevelFilter","logPath","openSync","enableConsoleOutput","enableOutput","log","logCallback","writeFileSync","flag","Debug","console","debug","info","Warning","warn","logFragments","prop","valueToLog","join","_validate","uuid","TypeError","v","arr","AudioOutputStream_js_1","SynthesisAudioMetadata_js_1","SynthesisEvents_js_1","SynthesisTurn","privIsSynthesizing","privIsSynthesisEnded","privBytesReceived","privInTurn","privTextOffset","privNextSearchTextIndex","privSentenceOffset","privNextSearchSentenceIndex","privTurnDeferral","Deferred","audioOutputFormat","privAudioOutputFormat","turnCompletionPromise","isSynthesisEnded","isSynthesizing","currentTextOffset","currentSentenceOffset","bytesReceived","audioDuration","privAudioDuration","extraProperties","privWebRTCSDP","TalkingAvatarService_WebRTC_SDP","getAllReceivedAudio","privReceivedAudio","readAllAudioFromStream","getAllReceivedAudioWithHeader","privReceivedAudioWithHeader","hasHeader","addHeader","startNewSynthesis","rawText","isSSML","audioDestination","privRawText","privIsSSML","privAudioOutputStream","PullAudioOutputStreamImpl","privPartialVisemeAnimation","privTurnAudioDestination","SynthesisTriggeredEvent","onPreConnectionStart","authFetchEventId","privAuthFetchEventId","ConnectingToSynthesisServiceEvent","onAuthCompleted","onComplete","onConnectionEstablishCompleted","SynthesisStartedEvent","onServiceResponseMessage","responseJson","response","onServiceTurnEndResponse","onServiceTurnStartResponse","catch","webrtc","connectionString","onAudioChunkReceived","write","onTextBoundaryEvent","updateTextOffset","Data","Type","onVisemeMetadataReceived","AnimationChunk","onSessionEnd","constructSynthesisResult","audioBuffer","SpeechSynthesisResult","onStopSynthesizing","getAndClearVisemeAnimation","animation","Events","instance","isXmlTag","MetadataType","WordBoundary","withinXmlTag","read","idx","TranslationStatus_js_1","baseOffset","privTranslationPhrase","mapRecognitionStatus","mapTranslationStatus","translationResponse","PrimaryLanguage","jsonObj","serializedObj","status","MeetingTranscriptionCanceledEventArgs","ConversationTranslationEventArgs","SpeakerVerificationModel","profile","profileType","VoiceProfileType","TextIndependentIdentification","privVoiceProfile","fromProfile","voiceProfile","profileIds","profileId","TextDependentVerification","Connection_js_1","TranslationRecognizer","Recognizer","speechConfig","configImpl","TranslationConnectionFactory","privDisposedTranslationRecognizer","SpeechServiceConnection_TranslationVoice","SpeechServiceConnection_TranslationToLanguages","FromConfig","speechTranslationConfig","autoDetectSourceLanguageConfig","speechTranslationConfigImpl","mergeTo","SpeechServiceConnection_AutoDetectSourceLanguages","AutoDetectSourceLanguagesOpenRangeOptionName","targetLanguages","split","voiceName","recognizeOnceAsync","recognizeOnceAsyncImpl","RecognitionMode","Interactive","startContinuousRecognitionAsyncImpl","Conversation","stopContinuousRecognitionAsyncImpl","removeTargetLanguage","lang","languages","index","splice","updateLanguages","addTargetLanguage","includes","implRecognizerStop","createRecognizerConfig","RecognizerConfig","createServiceRecognizer","conn","setMessageProperty","to","sendMessageAsync","IAuthentication_js_1","privAuthInfo","AuthInfo","AuthKey","fetch","fetchOnExpiry","ConversationManager_js_1","enumerable","ConversationManager","ConversationConnectionConfig_js_1","ConversationTranslatorRecognizer_js_1","ConversationRecognizerFactory","TranscriberRecognizer_js_1","ConversationTranslatorEventArgs_js_1","ConversationReceivedTranslationEventArgs","LockRoomEventArgs","MuteAllEventArgs","ParticipantAttributeEventArgs","ParticipantEventArgs","ParticipantsListEventArgs","ConversationTranslatorInterfaces_js_1","ConversationTranslatorCommandTypes","ConversationTranslatorMessageTypes","InternalParticipants","List_js_1","Promise_js_1","SubscriberType","list","privPromiseStore","List","privIsDrainInProgress","privIsDisposing","privDisposeReason","privList","privDetachables","privSubscribers","onAdded","drain","enqueue","throwIfDispose","enqueueFromPromise","add","dequeue","deferredSubscriber","deferral","Dequeue","peek","Peek","drainAndDispose","pendingItemProcessor","subs","removeFirst","detachable","promiseArray","toArray","wrapper","all","finally","lists","subscriber","first","dequeuedItem","InvalidOperationError","IntentResponse","privIntentResponse","query","topScoringIntent","entities","AudioSourceEvent","audioSourceId","privAudioSourceId","AudioStreamNodeEvent","audioNodeId","privAudioNodeId","__exportStar","SynthesisVoicesResult","SynthesisResult","Array","isArray","VoicesListRetrieved","privVoices","VoiceInfo","voices","_regex","test","IntentRecognitionResult","intentId","privIntentId","StringUtils_js_1","QueryParameterNames_js_1","getEndpointUrl","autoDetectSourceLanguages","QueryParameterNames","EnableLanguageId","setQueryParams","returnRegionPlaceholder","endpointUrl","StringUtils","formatString","from","recognitionMode","setUrlParameter","SpeechServiceResponse_TranslationRequestStablePartialResult","StableTranslation","translationVoice","voice","features","createConversationAsync","arg2","arg3","arg4","conversationImpl","restErrors","invalidArgs","replace","ConversationImpl","privErrors","onConnected","privIsConnected","privConversationTranslator","sessionStarted","onDisconnected","sessionStopped","onCanceled","r","onParticipantUpdateCommandReceived","updatedParticipant","privParticipants","getParticipant","changeNickname","displayName","setUseTTS","isUsingTts","setProfanityFiltering","profanity","setMute","isMuted","setTranslateToLanguages","translateToLanguages","addOrUpdateParticipant","participantsChanged","ConversationParticipantsChangedEventArgs","ParticipantChangedReason","Updated","toParticipant","onLockRoomCommandReceived","onMuteAllCommandReceived","participants","isHost","toParticipants","onParticipantJoinCommandReceived","newParticipant","participant","JoinedConversation","onParticipantLeaveCommandReceived","ejectedParticipant","deleteParticipant","LeftConversation","onTranslationReceived","command","final","payload","partial","instantMessage","textMessageReceived","onParticipantsListReceived","sessionToken","privRoom","me","privIsReady","nickname","ConversationTranslator_Name","changeNicknameAsync","onConversationExpiration","conversationExpiration","privConversationId","privManager","privLanguage","SpeechServiceResponse_ProfanityOption","setProfanity","Masked","hostNickname","privConfig","clone","privTextMessageMaxLength","room","privConversationRecognizer","roomId","isMutedByHost","isConnected","transcriberRecognizer","privTranscriberRecognizer","conversationInfo","convId","map","part","preferredLanguage","conversationProperties","canSend","canSendAsHost","privToken","conversationTranslator","onToken","permissionDeniedStart","createOrJoin","permissionDeniedConnect","startConversationAsync","meId","participantId","fromConfig","connected","disconnected","participantUpdateCommandReceived","lockRoomCommandReceived","muteAllCommandReceived","participantJoinCommandReceived","participantLeaveCommandReceived","translationReceived","participantsListReceived","connect","addParticipantAsync","addParticipantImplAsync","joinConversationAsync","cognitiveSpeechAuthToken","deleteConversationAsync","deleteConversationImplAsync","leave","endConversationAsync","endConversationImplAsync","lockConversationAsync","permissionDeniedSend","permissionDeniedConversation","sendRequest","getLockCommand","muteAllParticipantsAsync","getMuteAllCommand","muteParticipantAsync","userId","permissionDeniedParticipant","getParticipantIndex","invalidParticipantRequest","getMuteCommand","removeParticipantAsync","removeParticipantImplAsync","findIndex","getEjectCommand","unlockConversationAsync","unmuteAllParticipantsAsync","unmuteParticipantAsync","sendTextMessageAsync","getMessageCommand","setTranslatedLanguagesAsync","getSetTranslateToLanguagesCommand","getChangeNicknameCommand","enforceAudioGating","conversation","getKeepAlive","keepAlive","pushConversationEvent","includeHost","filter","Participant","avatar","setMuteAll","roomid","participantCommand","isLocked","setLockState","ejectParticipant","bent_1","__importDefault","RestRequestType","configParams","privHeaders","privIgnoreCache","ignoreCache","extractHeaderValue","headerKey","headerValue","headerMap","line","parts","shift","setHeaders","request","responseReceivedDeferral","requestCommand","File","handleRestResponse","ok","statusText","statusMessage","Post","postData","Delete","send","ConversationTranslatorConnectionFactory_js_1","Conversation_js_1","SpeechState","ConversationTranslationRecognizer","translator","convGetter","ConversationTranslatorConnectionFactory","privSpeechState","Inactive","privTranslator","Connected","tr","cancelSpeech","fireCancelEvent","newState","privReco","onCancelSpeech","ConversationTranslationCanceledEventArgs","RuntimeError","disconnect","ConversationTranslator","ConversationCommon","privIsSpeaking","privPlaceholderKey","privPlaceholderRegion","privSpeechRecognitionLanguage","privConversation","canSpeak","privCTRecognizer","Connecting","setServiceProperty","currentProperties","ServicePropertiesPropertyName","param1","param2","param3","privSpeechTranslationConfig","SpeechTranslationConfig","propertyIdsToCopy","ConversationTranslator_Host","SpeechServiceConnection_ProxyHostName","SpeechServiceConnection_ProxyPassword","SpeechServiceConnection_ProxyPort","SpeechServiceConnection_ProxyUserName","ServicePropertyChannel","UriQueryParameter","leaveConversationAsync","connectTranslatorRecognizer","startContinuousRecognition","success","AudioConfig","fromDefaultMicrophoneInput","privSubscriptionIdCounter","privAddSubscriptions","privRemoveSubscriptions","privDisposedSubscriptions","itemIndex","last","insertAt","unshift","triggerSubscriptions","removeAt","removeLast","remove","count","removedElements","clear","addedCallback","subscriptionId","onRemoved","removedCallback","onDisposed","disposedCallback","seperator","cloneCopy","any","callback","where","select","selectList","filteredList","orderBy","compareFn","orderedArray","sort","orderByDesc","concat","concatArray","subscriptions","startsWith","Speech_SegmentationSilenceTimeoutMs","SegmentationSilenceTimeoutMs","SpeechServiceConnection_EnableAudioLogging","EnableAudioLogging","SpeechServiceConnection_EndSilenceTimeoutMs","EndSilenceTimeoutMs","SpeechServiceConnection_InitialSilenceTimeoutMs","InitialSilenceTimeoutMs","SpeechServiceResponse_PostProcessingOption","Postprocessing","Profanity","SpeechServiceResponse_RequestWordLevelTimestamps","EnableWordLevelTimestamps","SpeechServiceResponse_StablePartialResultThreshold","StableIntermediateThreshold","parameterName","propertyId","serviceProperties","propId","search","toLocaleLowerCase","crypto","bind","aa","ca","da","Set","ea","fa","ha","ia","window","document","createElement","ja","ka","la","ma","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","z","ra","sa","toUpperCase","ta","pa","isNaN","qa","oa","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ua","va","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","A","assign","Ma","stack","match","Na","Oa","prepareStackTrace","Reflect","construct","Pa","tag","render","Qa","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","configurable","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","db","ownerDocument","eb","fb","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","substring","tb","menuitem","area","base","br","col","embed","hr","img","keygen","link","meta","source","track","wbr","ub","vb","is","wb","xb","target","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","removeEventListener","Nb","apply","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","clz32","pc","qc","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","Rc","Sc","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","fromCharCode","code","location","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","tel","time","url","week","ne","oe","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","D","of","has","pf","qf","rf","sf","capture","passive","J","u","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","Hf","Jf","queueMicrotask","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","_stringRef","refs","Mg","Ng","Og","Pg","Qg","Rg","implementation","Sg","Tg","next","done","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","_currentValue","bh","childLanes","ch","dependencies","firstContext","lanes","dh","eh","context","memoizedValue","fh","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","lh","mh","lane","nh","K","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","tagName","zh","Ah","Bh","L","Ch","revealOrder","Dh","Eh","_workInProgressVersionPrimary","Fh","ReactCurrentDispatcher","Gh","Hh","M","N","O","Ih","Jh","Kh","Lh","P","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","baseQueue","queue","Uh","Vh","Wh","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","ai","getSnapshot","bi","ci","Q","di","lastEffect","stores","ei","fi","gi","hi","ii","destroy","deps","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","R","Bi","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ci","Di","Ei","isMounted","_reactInternals","enqueueSetState","enqueueReplaceState","enqueueForceUpdate","Fi","shouldComponentUpdate","isPureReactComponent","Gi","contextType","updater","Hi","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ii","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ji","digest","Ki","Li","Mi","WeakMap","Ni","Oi","Pi","Qi","getDerivedStateFromError","componentDidCatch","Ri","componentStack","Si","pingCache","Ti","Ui","Vi","Wi","Xi","Yi","Zi","$i","aj","compare","bj","cj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","jj","kj","pendingContext","lj","zj","Aj","Bj","Cj","mj","nj","oj","fallback","pj","qj","sj","dataset","dgst","tj","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","tail","tailMode","xj","Dj","S","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","T","Gj","Hj","Ij","Jj","U","Kj","WeakSet","V","Lj","W","Mj","Nj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","insertBefore","_reactRootContainer","Wj","X","Xj","Yj","Zj","onCommitFiberUnmount","componentWillUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","display","hk","ik","jk","kk","__reactInternalSnapshotBeforeUpdate","src","Vk","lk","ceil","mk","nk","Y","Z","pk","qk","rk","sk","tk","Infinity","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","isReactComponent","pendingChildren","al","mutableSourceEagerHydrationData","bl","cache","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","yj","Zk","kl","reportError","ll","_internalRoot","ml","nl","ol","pl","rl","ql","unmount","unstable_scheduleHydration","querySelectorAll","form","sl","usingClientEntryPoint","tl","findFiberByHostInstance","bundleType","version","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","vl","isDisabled","supportsFiber","inject","createPortal","cl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","privBody","privMessageType","privId","privSize","privTranslations","WebsocketMessageAdapter_js_1","queryParameters","messageFormatter","proxyInfo","privMessageFormatter","privUri","privConnectionMessageAdapter","WebsocketMessageAdapter","open","events","Diagnostics","SetLoggingLevel","logLevel","privListener","ConsoleLoggingListener","StartConsoleOutput","StopConsoleOutput","SetLogOutputPath","onLogOutput","SpeechConfig","speechImpl","SpeechConfigImpl","SpeechServiceConnection_IntentRegion","fromHost","hostName","protocol","port","outputFormat","endPoint","URL","endpointId","SpeechServiceConnection_EndpointId","def","setProxy","proxyHostName","proxyPort","proxyUserName","proxyPassword","enableAudioLogging","requestWordLevelTimestamps","Detailed","enableDictation","ForceDictationPropertyName","ret","speechSynthesisLanguage","SpeechServiceConnection_SynthLanguage","speechSynthesisVoiceName","SpeechServiceConnection_SynthVoice","speechSynthesisOutputFormat","SpeechSynthesisOutputFormat","SpeechServiceConnection_SynthOutputFormat","actualSampleRate","desiredSampleRate","privActualSampleRate","privDesiredSampleRate","encode","actualAudioFrame","audioFrame","downSampleAudioFrame","audioLength","DataView","floatTo16BitPCM","setString","str","setUint8","max","setInt16","srcFrame","srcRate","dstRate","ratio","dstLength","dstFrame","Float32Array","srcOffset","dstOffset","nextSrcOffset","accum","ConnectionState","privReason","privAudio","privSynthesisEnd","Status","requestOptions","privRestAdapter","RestMessageAdapter","privAuthentication","getVoicesList","Get","privDetailedSpeechPhrase","updateOffsets","Words","word","DisplayWords","synthesisUri","hostPrefix","CustomVoiceDeploymentId","avatarEnabled","EnableAvatar","fromParameters","modelImpl","intentName","recognitionStatus","expectEndOfDictation","BabbleTimeout","BadRequest","Forbidden","EndOfStream","NoError","TooManyRequests","BadRequestParameters","toConnectionMessage","textMessage","headerBodySplit","parseHeaders","binaryContent","dataView","headerLength","getInt16","headersString","getInt8","makeHeaders","RawWebsocketMessage","content","headerBuffer","stringToArrayBuffer","headerInt8Array","Int8Array","payloadInt8Array","bodyInt8Array","headerMatches","separatorIndex","SpeechTranslationConfigImpl","privSpeechProperties","TranscriberConnectionFactory","multiaudioRelativeUri","hostDefault","CustomSpeechDeploymentId","wordLevelTimings","Format","RecognitionEvents_js_1","ServiceTelemetryListener_Internal_js_1","privIsAudioNodeDetached","privIsRecognizing","privIsSpeechEnded","privTurnStartAudioOffset","privLastRecoOffset","privHypothesisReceived","privBytesSent","privRecognitionBytesSent","privRecogNumber","privConnectionAttempts","privSessionId","isRecognizing","recogNumber","numConnectionAttempts","bytesSent","recognitionBytesSent","listenForServiceTelemetry","eventSource","privServiceTelemetryListener","startNewRecognition","ServiceTelemetryListener","RecognitionTriggeredEvent","onAudioSourceAttachCompleted","audioNode","privAudioNode","ListeningStartedEvent","ConnectingToServiceEvent","RecognitionStartedEvent","replay","continuousRecognition","onSpeechContext","hypothesisReceived","findTimeAtOffset","phraseReceived","onServiceRecognized","shrinkBuffers","onAudioSent","onRetryConnection","getTelemetry","hasTelemetry","onStopRecognizing","onSpeechEnded","detachAudioNode","BotFramework","privSpeechConfig","channel","CommandResponsePayload","privCommandResponse","parseCommandResponse","IntentRecognitionCanceledEventArgs","IntentRecognitionEventArgs","privErrorDetails","privErrorCode","privDefaultRequestOptions","privDefaultParams","privRestErrors","Accept","timeout","authInvalidSubscriptionKey","authInvalidSubscriptionRegion","invalidCreateJoinConversationResponse","authorization","contentTypeKey","correlationId","languageCode","subscriptionRegion","ServiceEventArgs","privJsonResult","privEventName","SpeechSynthesisEvent","sessionAudioDestinationId","turnAudioDestinationId","privSessionAudioDestinationId","privTurnAudioDestinationId","audioSessionDestinationId","audioTurnDestinationId","audioOffset","visemeId","privAudioOffset","privVisemeId","privAnimation","Exports_1","stopInputOnRelease","privStopInputOnRelease","record","mediaStream","outputStream","waveStreamEncoder","RiffPcmEncoder","sampleRate","micInput","createMediaStreamSource","attachScriptProcessor","scriptNode","bufferSize","createScriptProcessor","audioSampleRate","onaudioprocess","inputFrame","inputBuffer","getChannelData","waveFrame","destination","privMediaResources","scriptProcessorNode","stream","skipAudioWorklet","privSpeechProcessorScript","audioWorklet","blob","Blob","createObjectURL","addModule","workletNode","AudioWorkletNode","onmessage","releaseMediaResources","getTracks","stop","setWorkletUrl","bytesPerSecond","privBuffers","privReplayOffset","privLastShrinkOffset","privBufferStartOffset","privBufferSerial","privBufferedBytes","privReplay","privLastChunkAcquiredTime","privBytesPerSecond","offsetToSeek","bytesToSeek","retVal","BufferEntry","startOffset","byteOffset","endOffset","serial","SpeechRecognitionEvent","authFetchEventid","privAuthFetchEventid","RecognitionCompletionStatus","serviceTag","privStatus","privServiceTag","CancellationDetailsBase_js_1","CancellationDetails","CancellationDetailsBase","simpleSpeech","addPhrase","privPhrases","clearPhrases","addReferenceGrammar","grammar","privGrammars","clearGrammars","generateGrammarObject","retObj","ReferenceGrammars","retPhrases","Groups","Items","AudioFormatTag","AudioStreamFormat","getDefaultInputFormat","AudioStreamFormatImpl","getWaveFormat","samplesPerSecond","bitsPerSample","channels","getWaveFormatPCM","samplesPerSec","PCM","isWavFormat","formatTag","ALaw","MuLaw","avgBytesPerSec","blockAlign","privHeader","setUint32","setUint16","getAudioContext","AudioContext","webkitAudioContext","navigator","mediaDevices","getSupportedConstraints","SpeechConnectionMessage_Internal_js_1","TranscriptionServiceRecognizer","transcriber","sendPrePayloadJSONOverride","sendTranscriptionStartJSON","setWordLevelTimings","sendSpeechEventAsync","fetchConnection","sendSpeechEvent","createSpeechEventPayload","sendMeetingSpeechEventAsync","createMeetingSpeechEventPayload","IsMeetingRecognizer","sendSpeechContext","getMeetingInfo","getConversationInfo","sendWaveHeader","speechEventJson","eventDict","attendees","meetingProperties","setState","forceUpdate","escape","_status","_result","Children","only","Component","Fragment","Profiler","PureComponent","StrictMode","Suspense","act","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","AudioStreamFormat_js_1","MicAudioSource","privRecorder","deviceId","privStreams","privOutputChunkSize","AUDIOFORMAT","privEvents","EventSource","privMediaStream","privIsClosing","turnOn","privInitializeDeferral","createAudioContext","nav","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","constraints","AudioSourceInitializingEvent","active","AudioSourceReadyEvent","video","errorMsg","AudioSourceErrorEvent","privContext","resume","AudioStreamNodeAttachingEvent","listen","AudioStreamNodeAttachedEvent","readEnded","AudioStreamNodeDetachedEvent","turnOff","AudioSourceOffEvent","destroyAudioContext","deviceInfo","getMicrophoneLabel","label","bitspersample","channelcount","connectivity","Unknown","manufacturer","model","samplerate","Microphones","AudioWorkletSourceURLPropertyName","defaultMicrophoneName","privMicrophoneLabel","microphoneDeviceId","getSettings","deferred","enumerateDevices","devices","device","AudioStreamNodeErrorEvent","hasClose","suspend","DialogConnectorFactory_js_1","DialogServiceConnector","dialogConfig","dialogServiceConfigImpl","DialogConnectionFactory","isTurnComplete","buildAgentConfig","speechActivityTemplate","Conversation_Speech_Activity_Template","listenOnceAsync","retPromise","recognize","callbackHolder","sendActivityAsync","errCb","sendMessage","DialogServiceAdapter","botInfo","commType","commandsCulture","Conversation_Agent_Connection_Id","Conversation_Conversation_Id","fromId","Conversation_From_Id","ttsAudioFormat","privTranslationHypothesis","translationHypothesis","SpeechResponsePayload","privSpeechResponse","parseSpeechResponse","recognition","timestamp","isFinal","TextResponsePayload","privTextResponse","parseTextResponse","originalText","privParticipant","TranslationRecognitionResult_js_1","ConversationTranslationResult","originalLanguage","privOrigLang","originalLang","privProfileType","Context","privParameters","SynthesisAdapterBase","synthesizerConfig","speakOverride","receiveMessageOverride","connectImplOverride","configConnectionOverride","privConnectionConfigurationPromise","privConnectionFactory","privSynthesizerConfig","privSessionAudioDestination","privSynthesisTurn","privConnectionEvents","privServiceEvents","privSynthesisContext","SynthesisContext","AgentConfig","connectionClosedEvent","cancelSynthesisLocal","ConnectionFailure","synthesisContext","serviceEvents","activityTemplate","messagePayload","privActivityTemplate","connectImpl","sendNetworkMessage","Speak","errorCallBack","ssml","privSynthesizer","buildSsml","sendSynthesisContext","sendSsmlMessage","onSynthesisStarted","receiveMessage","stopSpeaking","cancelSynthesis","_cancellationReason","onSynthesisCancelled","_connectionMessage","onSynthesizing","metadataList","SynthesisAudioMetadata","Metadata","SentenceBoundary","wordBoundaryEventArgs","SpeechSynthesisWordBoundaryEventArgs","Length","BoundaryType","onWordBoundary","Bookmark","bookmarkEventArgs","SpeechSynthesisBookmarkEventArgs","onBookmarkReached","Viseme","IsLastAnimation","visemeEventArgs","SpeechSynthesisVisemeEventArgs","VisemeId","onVisemeReceived","AvatarSignal","onAvatarEvent","SessionEnd","onSynthesisCompleted","ServiceEvent","setSynthesisContextSynthesisSection","synthesisContextJson","setSpeechConfigSynthesisSection","isUnAuthorized","privConnectionPromise","Disconnected","privConnectionId","authPromise","sendSpeechServiceConfig","SpeechServiceConfigJson","configureConnection","SpeechServiceConfig","serialize","_metadata","_requestId","_audio","_wordBoundaryEventArgs","_visemeEventArgs","_bookmarkEventArgs","telemetryDataEnabled","privSynthesisAudioMetadata","ConversationTranscriberConnectionFactory","universalUri","setV2UrlParams","webSocketConnection","ParticipantsListPayloadResponse","privParticipantsPayloadResponse","parseListResponse","translateTo","profanityFilter","roomProfanityFilter","roomLocked","muteAll","ParticipantPayloadResponse","privParticipantPayloadResponse","parseParticipantResponse","usetts","ismuted","ishost","exists","translatedMessage","disconnectSession","instant_message","joinSession","leaveSession","participantList","roomExpirationWarning","character","videoFormat","privCustomized","privUseBuiltInVoice","AvatarVideoFormat","customized","useBuiltInVoice","backgroundColor","privBackgroundColor","backgroundImage","privBackgroundImage","remoteIceServers","privRemoteIceServers","SpeakerRecognizer","SpeakerRecognitionConnectionFactory","privAudioConfigImpl","privDisposedSpeakerRecognizer","recognizeSpeakerOnceAsyncImpl","recognizeSpeaker","stopRecognizing","audioImpl","SpeakerServiceRecognizer","privText","SpeechRecognitionCanceledEventArgs","sectionName","setSynthesisSection","speechSynthesizer","synthesisSection","buildSynthesisContext","metadataOptions","bookmarkEnabled","bookmarkReached","punctuationBoundaryEnabled","SpeechServiceResponse_RequestPunctuationBoundary","wordBoundary","sentenceBoundaryEnabled","SpeechServiceResponse_RequestSentenceBoundary","sessionEndEnabled","visemeEnabled","visemeReceived","wordBoundaryEnabled","SpeechServiceResponse_RequestWordBoundary","requestAudioFormatString","autoDetection","autoDetectSourceLanguage","replacement","Recognition","os","system","System","build","platform","privUserId","privAvatar","privDisplayName","privIsHost","privIsMuted","privIsUsingTts","privPreferredLanguage","privVoice","From","audioFormat","audioContext","gainNode","autoUpdateBufferTimer","init","playAudioSample","newAudioData","ensureInitializedContext","audioData","formatAudioData","newSamplesData","samples","stopAudio","clearInterval","timerPeriod","setInterval","updateAudioBuffer","createGain","gain","startTime","currentTime","formatArrayBuffer","Int16Array","Int32Array","maxValue","float32Data","channelCount","bufferSource","createBufferSource","frameCount","createBuffer","channelOffset","playAudio","decodeAudioData","newBuffer","ConversationConnectionMessage_js_1","incomingMessage","ConversationConnectionMessage","IntentConnectionFactory","getSpeechRegionFromIntentRegion","intentRegion","ConnectionMessage_js_1","privInternalData","setupEvents","fromSynthesizer","synthesizer","synthBase","openConnection","closeConnection","propertyValue","privEventListener","ConnectionEventArgs","messageSent","ConnectionMessageEventArgs","ConnectionMessageImpl","messageReceived","privServiceEventListener","receivedServiceMessage","privListeningTriggerMetric","privMicMetric","privConnectionEstablishMetric","privReceivedMessages","privPhraseLatencies","privHypothesisLatencies","audioReceivedTime","End","Name","Start","privMicStartTime","ConnectionStartEvent","privConnectionStartTime","ConnectionEstablishedEvent","ConnectionEstablishErrorEvent","getConnectionError","ConnectionMessageReceivedEvent","maxMessagesToSend","networkReceivedTime","metrics","PhraseLatencyMs","FirstHypothesisLatencyMs","telemetry","Metrics","ReceivedMessages","privStatusCode","net","tls","agent_base_1","https_proxy_agent_1","ws_1","privConnectionState","privEnableCompression","privLastErrorReceived","privConnectionEstablishDeferral","privCertificateValidatedDeferral","WebSocket","forceNpmWebSocket","perMessageDeflate","agent","getAgent","privWebsocketClient","binaryType","privReceivingMessageQueue","Queue","privDisconnectDeferral","privSendMessageQueue","processSendQueue","BackgroundEvent","ConnectionOpenResponse","onopen","onerror","ConnectionErrorEvent","onclose","ConnectionClosedEvent","onClose","rawMessage","messageSendStatusDeferral","messageSendDeferral","Message","sendStatusDeferral","sendRawMessage","sendItem","ConnectionMessageSentEvent","isWebsocketOpen","closeReason","pendingSendItem","itemToSend","sendError","Agent","createConnection","HostName","Port","GetProxyAgent","httpProxyOptions","UserName","Buffer","Password","requestOCSP","socketPromise","servername","baseAgent","socket","secureEndpoint","readyState","OPEN","Meeting","createMeetingAsync","meetingId","meetingInfo","startMeetingAsync","deleteMeetingAsync","deleteMeetingImplAsync","endMeetingAsync","endMeetingImplAsync","lockMeetingAsync","unlockMeetingAsync","pushMeetingEvent","SpeechServiceRecognizer","speechRecognizer","privSpeechRecognizer","privExpectContentAssessmentResponse","ActivityPayloadResponse","privActivityResponse","messageDataStreamType","MessageDataStreamType","DialogEvents_js_1","AudioOutputFormat_js_1","DialogServiceTurnStateManager_js_1","ActivityResponsePayload_js_1","dialogServiceConnector","privDialogServiceConnector","receiveDialogMessageOverride","privTurnStateManager","DialogServiceTurnStateManager","recognizeOverride","recoMode","listenOnce","postConnectImplOverride","dialogConnectImpl","configConnection","disconnectOverride","privDisconnect","privDialogAudioSource","agentConfigSent","privLastResult","terminateMessageLoop","interactionGuid","createGuid","agentMessage","agentMessageJson","speechPhrase","args","keyword","SpeechKeyword","RecognizedKeyword","audioRequestId","turn","GetTurn","endAudioStream","handleResponseMessage","defferal","conPromise","preAudioPromise","sendPreAudioMessages","ReplayableAudioNode","sessionStartEventArgs","sendAudio","privConnectionLoop","startMessageLoop","communicationCustodian","loop","turnRequestId","StartTurn","speechStartDetected","SpeechDetected","speechStartEventArgs","speechStopDetected","speechStopEventArgs","speechEndDetected","turnEndRequestId","CompleteTurn","sessionStopEventArgs","isContinuousRecognition","sendAgentConfig","addKeywordContextData","sendAgentContext","SendingAgentContextMessageEvent","agentConfigJson","toJsonString","guid","agentContext","channelData","agentContextJson","responseMessage","responsePayload","responseRequestId","activityPayload","updateAgentConfig","pullAudioOutputStream","processActivityPayload","AudioOutputFormatImpl","fromSpeechSynthesisOutputFormatString","ActivityReceivedEventArgs","activityReceived","turnStatusReceived","TurnStatusReceivedEventArgs","keywordPropertyValue","keywordOffsetPropertyValue","keywordDurationPropertyValue","keywords","keywordOffsets","keywordDurations","keywordDefinitionArray","definition","Number","clientDetectedKeywords","onReject","SpeechRecognizer","speechConfigImpl","SpeechConnectionFactory","startKeywordRecognitionAsync","stopKeywordRecognitionAsync","ConversationCommon_js_1","ConversationExpirationEventArgs_js_1","ConversationParticipantsChangedEventArgs_js_1","ConversationTranslationCanceledEventArgs_js_1","ConversationTranslationEventArgs_js_1","ConversationTranslationResult_js_1","ConversationTranslator_js_1","ConversationTranscriber_js_1","ConversationTranscriber","IParticipant_js_1","User","ParticipantChangedReason_js_1","Meeting_js_1","MeetingTranscriptionCanceledEventArgs_js_1","MeetingTranscriber_js_1","MeetingTranscriber","ConversationTranscriptionResult_js_1","SpeechServiceConnection_RecognitionEndpointVersion","iPrivConfig","manager","privTurnManager","resetTurnEndTimeout","TextToSpeechAudio","AudioOutputStream","createPullStream","getDefaultOutputFormat","complete","privTimeoutToken","encodings","mkrequest","statusCodes","encoding","baseurl","_len","_key","arg","SpeechSynthesisConnectionFactory_js_1","Synthesizer_js_1","AvatarSynthesizer","Synthesizer","avatarConfig","SpeechSynthesisConnectionFactory","privAvatarConfig","implCommonSynthesizeSetup","privAdapter","fromSpeechSynthesisOutputFormat","Riff24Khz16BitMonoPcm","startAvatarAsync","peerConnection","privIceServers","getConfiguration","iceServers","iceGatheringDone","onicegatheringstatechange","iceGatheringState","onicecandidate","candidate","sdp","createOffer","setLocalDescription","localDescription","speak","sdpAnswerString","atob","sdpAnswer","RTCSessionDescription","setRemoteDescription","speakTextAsync","speakSsmlAsync","stopSpeakingAsync","synthesisRequestQueue","stopAvatarAsync","createSynthesisAdapter","AvatarSynthesisAdapter","createRestSynthesisAdapter","_authentication","_synthesizerConfig","createSynthesizerConfig","deferredResult","SynthesisRequest","privSynthesizing","adapterSpeak","privConvGetter","isVirtMicArrayEndpoint","convInfo","cognitiveSpeechRegion","replacementValues","CTS_VIRT_MIC_PATH","CtsMeetingId","CtsDeviceId","CtsIsParticipant","parsedUrl","connFactory","OCSPEvent","signature","privSignature","serialNumber","expireTime","privExpireTime","privStartTime","privExpireTimeString","toLocaleDateString","privStartTimeString","toLocaleTimeString","SpeakerIdentificationModel","profiles","privVoiceProfiles","privProfileIds","fromProfiles","voiceProfileIds","privKeys","privValues","keyToUse","clonedMap","destinationCollection","privConversationMessageType","conversationMessageType","AudioInputStream","createPushStream","PushAudioInputStream","PullAudioInputStream","PushAudioInputStreamImpl","privFormat","privStream","dataBuffer","toBuffer","arrayBuffer","alloc","PullAudioInputStreamImpl","privCallback","privIsClosed","privBufferSize","transmitBuff","totalBytes","readBuff","pulledBytes","AvatarWebRTCConnectionResult","SDPAnswer","privSDPAnswer","privSimpleSpeechPhrase","updateOffset","AutoDetectSourceLanguageResult","privLanguageDetectionConfidence","fromConversationTranscriptionResult","NoMatchDetails","NoMatchReason","NotRecognized","InitialBabbleTimeout","SpeechResultFormat","speechServiceConfig","privSpeechServiceConfig","privMaxRetryCount","privLanguageIdMode","SpeechServiceConnection_LanguageIdMode","privRecognitionMode","privRecognitionActivityTimeout","recognitionActivityTimeout","languageIdMode","recognitionEndpointVersion","sourceLanguageModels","models","modelsExist","customProperty","modelId","maxRetryCount","BotFrameworkConfig","botId","botFrameworkConfig","resolvedHost","AvatarEventTypes","description","privOffset","privDescription","privType","privSpeechHypothesis","privSpeechStartDetected","DNS","hashfunc","generateUUID","namespace","_namespace","stringToBytes","_parse","AudioFileWriter_js_1","AudioInputStream_js_1","pcmRecorder","PcmRecorder","AudioConfigImpl","fromMicrophoneInput","fromWavFileInput","FileAudioSource","fromStreamInput","PullAudioInputStreamCallback","MediaStream","fromDefaultSpeakerOutput","AudioOutputConfigImpl","SpeakerAudioDestination","fromSpeakerOutput","player","fromAudioFileOutput","filename","AudioFileWriter","fromStreamOutput","PushAudioOutputStreamCallback","PushAudioOutputStreamImpl","PushAudioOutputStream","PullAudioOutputStream","privSource","privDestination","_nodeId","_clockseq","_lastMSecs","_lastNSecs","clockseq","seedBytes","msecs","nsecs","dt","tmh","VoiceProfileEnrollmentResult","privDetails","enrollmentStatus","EnrollingVoiceProfile","enrollmentsCount","enrollmentsLength","enrollmentResultDetails","FromIdentificationProfileList","results","EnrolledVoiceProfile","getIdentificationDetails","FromVerificationProfileList","getVerificationDetails","parseFloat","audioSpeechLength","enrollmentsSpeechLength","identificationProfileId","remainingEnrollmentsSpeechLength","verificationProfileId","remainingEnrollmentsCount","remainingEnrollments","VoiceProfileEnrollmentCancellationDetails","PhraseListGrammar","recogBase","privGrammerBuilder","dynamicGrammar","addPhrases","phrases","ConversationWebsocketMessageFormatter_js_1","ConversationConnectionFactory","endpointHost","ConversationTranslator_CorrelationId","ConversationTranslator_Token","ConversationWebsocketMessageFormatter","audioConfigImpl","isMeetingRecognizer","privMeeting","reco","privMap","getId","core","StatusError","res","captureStackTrace","entries","_url","_headers","parsed","username","Authorization","isView","Headers","resp","pop","sortIndex","setImmediate","priorityLevel","scheduling","isInputPending","MessageChannel","port2","port1","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","floor","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","unstable_wrapCallback","BotId","SegmentationMaximumTimeMs","SegmentationStrategy","RequestBotStatusMessages","TestHooks","privPayload","getPrototypeOf","VoiceProfilePhraseResult","VoiceProfileResult","phraseArray","CommandResponsePayload_js_1","ParticipantResponsePayload_js_1","TranslationResponsePayload_js_1","privHeaderName","replacements","formatted","appendToFormatted","appendToKey","appendFunc","DialogServiceTurnState_js_1","privTurnMap","turnState","DialogServiceTurnState","CognitiveTokenAuthentication","fetchCallback","fetchOnExpiryCallback","privFetchCallback","privFetchOnExpiryCallback","privTokenPrefix","privResultId","privDuration","privJson","privSpeakerRecognizer","privSpeakerAudioSource","recognizeSpeakerOnce","noOp","SpeakerRecognitionResult","RecognizedSpeaker","privResultDeferral","privSpeakerModel","voiceProfileType","extractSpeakerContext","sendSpeakerRecognition","speakerContextJson","interimResult","progressiveDetection","SourceLanguageConfig","privEndpointId","fromLanguage","Queue_js_1","privIsWriteEnded","privIsReadEnded","privReaderQueue","isReadEnded","streamChunk","throwIfClosed","_nil","_v","_v2","_v3","_v4","_version","IntentRecognizer","privAddedIntents","privAddedLmIntents","privDisposedIntentRecognizer","privUmbrellaIntent","buildSpeechContext","Intent","setIntents","addIntent","simplePhrase","addIntentWithLanguageModel","AddedLmIntent","addAllIntents","IntentServiceRecognizer","refGrammers","addedLmIntent","grammer","provider","EventSource_js_1","setEventSource","privInstance","SpeechSynthesisOutputFormat_js_1","audioFormatString","priAudioFormatString","priRequestAudioFormatString","priHasHeader","SpeechSynthesisOutputFormatToString","speechSynthesisOutputFormatString","Siren","MP3","SILKSkype","OGG_OPUS","WEBM_OPUS","OPUS","FLAC","AMR_WB","G722","updateHeader","tmp","Raw8Khz8BitMonoMULaw","Riff16Khz16KbpsMonoSiren","Audio16Khz16KbpsMonoSiren","Audio16Khz32KBitRateMonoMp3","Audio16Khz128KBitRateMonoMp3","Audio16Khz64KBitRateMonoMp3","Audio24Khz48KBitRateMonoMp3","Audio24Khz96KBitRateMonoMp3","Audio24Khz160KBitRateMonoMp3","Raw16Khz16BitMonoTrueSilk","Riff16Khz16BitMonoPcm","Riff8Khz16BitMonoPcm","Riff8Khz8BitMonoMULaw","Raw16Khz16BitMonoPcm","Raw24Khz16BitMonoPcm","Raw8Khz16BitMonoPcm","Ogg16Khz16BitMonoOpus","Ogg24Khz16BitMonoOpus","Raw48Khz16BitMonoPcm","Riff48Khz16BitMonoPcm","Audio48Khz96KBitRateMonoMp3","Audio48Khz192KBitRateMonoMp3","Ogg48Khz16BitMonoOpus","Webm16Khz16BitMonoOpus","Webm24Khz16BitMonoOpus","Webm24Khz16Bit24KbpsMonoOpus","Raw24Khz16BitMonoTrueSilk","Raw8Khz8BitMonoALaw","Riff8Khz8BitMonoALaw","Audio16Khz16Bit32KbpsMonoOpus","Audio24Khz16Bit48KbpsMonoOpus","Audio24Khz16Bit24KbpsMonoOpus","Raw22050Hz16BitMonoPcm","Riff22050Hz16BitMonoPcm","Raw44100Hz16BitMonoPcm","Riff44100Hz16BitMonoPcm","AmrWb16000Hz","G72216Khz64Kbps","jsonstring","ConnectionEvent","privMessage","statuscode","networkReceivedTimeISO","privNetworkReceivedTime","networkSentTimeISO","privNetworkSentTime","networkSentTime","privProxyHostName","privProxyPort","privProxyUserName","privProxyPassword","checkDCE","privRequestCompletionDeferral","completionPromise","codec","bitrate","setCropRange","topLeft","bottomRight","cropRange","languageToDefaultVoice","XMLEncode","dataStream","SynthesizerConfig","osPlatform","osName","osVersion","userAgent","appVersion","OS","CognitiveSubscriptionKeyAuthentication","AudioConfig_js_1","CancellationReason_js_1","PullAudioInputStreamCallback_js_1","PushAudioOutputStreamCallback_js_1","KeywordRecognitionModel_js_1","KeywordRecognitionModel","SessionEventArgs_js_1","RecognitionEventArgs_js_1","OutputFormat_js_1","IntentRecognitionEventArgs_js_1","RecognitionResult_js_1","SpeechRecognitionResult_js_1","IntentRecognitionResult_js_1","LanguageUnderstandingModel_js_1","SpeechRecognitionEventArgs_js_1","MeetingTranscriptionEventArgs","SpeechRecognitionCanceledEventArgs_js_1","TranslationRecognitionEventArgs_js_1","TranslationSynthesisEventArgs_js_1","TranslationSynthesisResult_js_1","ResultReason_js_1","SpeechConfig_js_1","SpeechTranslationConfig_js_1","Recognizer_js_1","SpeechRecognizer_js_1","IntentRecognizer_js_1","VoiceProfileType_js_1","TranslationRecognizer_js_1","Translations_js_1","NoMatchReason_js_1","NoMatchDetails_js_1","TranslationRecognitionCanceledEventArgs_js_1","IntentRecognitionCanceledEventArgs_js_1","CancellationDetails_js_1","CancellationErrorCodes_js_1","ConnectionEventArgs_js_1","ServiceEventArgs_js_1","PhraseListGrammar_js_1","BotFrameworkConfig_js_1","CustomCommandsConfig_js_1","DialogServiceConnector_js_1","ActivityReceivedEventArgs_js_1","TurnStatusReceivedEventArgs_js_1","ServicePropertyChannel_js_1","ProfanityOption_js_1","BaseAudioPlayer_js_1","BaseAudioPlayer","ConnectionMessageEventArgs_js_1","VoiceProfile_js_1","VoiceProfile","VoiceProfileEnrollmentResult_js_1","VoiceProfileResult_js_1","VoiceProfileCancellationDetails","VoiceProfilePhraseResult_js_1","VoiceProfileClient_js_1","VoiceProfileClient","SpeakerRecognizer_js_1","SpeakerIdentificationModel_js_1","SpeakerVerificationModel_js_1","AutoDetectSourceLanguageConfig_js_1","AutoDetectSourceLanguageConfig","AutoDetectSourceLanguageResult_js_1","SourceLanguageConfig_js_1","SpeakerRecognitionResult_js_1","SpeakerRecognitionResultType","SpeakerRecognitionCancellationDetails","SpeechSynthesizer_js_1","SpeechSynthesizer","SynthesisResult_js_1","SpeechSynthesisResult_js_1","SpeechSynthesisEventArgs_js_1","SpeechSynthesisEventArgs","SpeechSynthesisWordBoundaryEventArgs_js_1","SpeechSynthesisBookmarkEventArgs_js_1","SpeechSynthesisVisemeEventArgs_js_1","SpeechSynthesisBoundaryType_js_1","SpeechSynthesisBoundaryType","SynthesisVoicesResult_js_1","VoiceInfo_js_1","SynthesisVoiceGender","SynthesisVoiceType","SpeakerAudioDestination_js_1","ConversationTranscriptionCanceledEventArgs_js_1","PronunciationAssessmentGradingSystem_js_1","PronunciationAssessmentGranularity_js_1","PronunciationAssessmentConfig_js_1","PronunciationAssessmentResult_js_1","LanguageIdMode_js_1","LanguageIdMode","AvatarConfig_js_1","AvatarConfig","AvatarEventArgs_js_1","AvatarEventArgs","AvatarSynthesizer_js_1","AvatarVideoFormat_js_1","Coordinate","AvatarWebRTCConnectionResult_js_1","Diagnostics_js_1","implCommonRecognizerSetup","telemetryEnabled","enableTelemetry","enabled","getAuthFromProperties","privSpeechKeyword","privSetTimeout","privIsLiveAudio","privAverageBytesPerMs","handleSpeechPhraseMessage","handleSpeechHypothesisMessage","privMustReportEndOfStream","privAudioSource","RequestSession","privDynamicGrammar","DynamicGrammarBuilder","SpeechContext","WebWorkerLoadType","globalThis","setLanguageIdJson","setOutputDetailLevelJson","setTranslationJson","onSuccess","interimResults","languageToVoiceMap","defaultVoices","setSpeechSegmentationTimeoutJson","speechSegmentationSilenceTimeoutMs","speechSegmentationMaximumTimeMs","Speech_SegmentationMaximumTimeMs","speechSegmentationStrategy","Speech_SegmentationStrategy","segmentation","configuredSegment","segMode","segmentationSilenceTimeoutMs","segmentationMaximumTimeMs","segmentationForcedTimeoutMs","Dictation","sourceLanguages","speechContextLidMode","Priority","onUnknown","resultType","phraseResults","customModels","onInterim","setDetailedOutputFormat","conversationTranslatorToken","auth","audioStreamNode","sendFinalAudio","connectAsync","sendTelemetryData","telemetryData","privServiceHasSentMessage","sendPrePayloadJSON","updateSpeakerDiarizationAudioOffset","setSpeakerDiarizationAudioOffsetMs","generateNewRequestId","speechContextJson","retryableConnect","requestSession","DisableReferenceChannel","MicSpec","nextSendTime","fastLaneSizeMs","maxSendUnthrottledBytes","startRecogNumber","readAndUploadCycle","audioStreamChunk","sendDelay","lastStatusCode","lastReason","delayMs","writeBufferToConsole","out","readView","padStart","VoiceProfileConnectionFactory","privVoiceAdapter","privDisposedVoiceAdapter","createProfileAsync","createProfile","retrieveEnrollmentResultAsync","retrieveEnrollmentResult","getAllProfilesAsync","getAllProfiles","getActivationPhrasesAsync","getActivationPhrases","enrollProfileAsync","SpeakerAudioSource","enrollProfile","deleteProfileAsync","deleteProfile","resetProfileAsync","resetProfile","VoiceServiceRecognizer","getResult","successReason","privIntentRecognizer","privIntentDataSent","addedIntents","umbrellaIntent","speechHypothesis","RecognizingIntent","sendEvent","privPendingIntentArgs","intentResponse","intent","addedIntent","RecognizedIntent","LanguageUnderstandingServiceResponse_JsonResult","ErrorCode","ConversationConnectionFactory_js_1","ConversationServiceAdapter_js_1","ConversationTranslatorRecognizer","serviceConfigImpl","privConnection","privClearTimeout","resetConversationTimeout","ConversationServiceAdapter","PromiseToEmptyCallback","privAudioData","dialogType","requestTurnStatus","Conversation_Request_Bot_Status_Messages","CustomCommandsAppId","resourceInfix","BaseUrl","endsWith","ApiKey","argumentName","objectName","ConversationRequestSession_js_1","conversationServiceConnector","privConnectionConfigPromise","privLastPartialUtteranceId","privConversationServiceConnector","privConversationAuthentication","receiveConversationMessageOverride","conversationConnectImpl","privConversationRequestSession","ConversationRequestSession","privConversationConnectionFactory","privConversationIsDisposed","sendFinal","commandPayload","participantsPayload","participantsResult","joinParticipantPayload","joiningParticipant","leavingParticipant","speechPayload","conversationResultReason","TranslatedParticipantSpeech","TranslatingParticipantSpeech","speechResult","getTranslations","textPayload","textResult","messageRetrievalPromise","serviceResultTranslations","privDeferralMap","DeferralMap","operation","handleCreateResponse","handleResultResponse","enrollmentResponse","handleFetchResponse","phraseResponse","handlePhrasesResponse","enrollmentReasonFrom","enrollment","createProfileDeferral","sendCreateProfile","sendCommonRequest","privExpectedProfileId","getPhrasesDeferral","sendPhrasesRequest","enrollmentDeferral","sendBaseRequest","scenarioFrom","profileCreateRequest","TextIndependentVerification","profileRequest","maxPageSize","passPhraseType","DeletedVoiceProfile","ResetVoiceProfile","profileInfo","iProfiles","profileResults","handleSpeechPhrase","handleSpeechHypothesis","wordLength","textOffset","boundaryType","privWordLength","privBoundaryType","SpeechSynthesisAdapter","privSpeechSynthesizer","synthesisStartEventArgs","SynthesizingAudioStarted","synthesisStarted","audioWithHeader","SynthesisCanceled","synthesisCompleted","byteToHex","privFd","privAudioFormat","headerOffset","privWriteStream","createWriteStream","autoClose","bytesWritten","writeSync","closeSync","ROTL","pow","getRandomValues","rnds8","GENDER_LOOKUP","Neutral","Male","Female","VOICE_TYPE_LOOKUP","Neural","OnlineNeural","NeuralHD","OnlineNeuralHD","privStyleList","privLocale","Locale","privShortName","ShortName","privLocaleName","LocaleName","DisplayName","privLocalName","LocalName","privVoiceType","VoiceType","privGender","Gender","StyleList","privSampleRateHertz","SampleRateHertz","ExtendedPropertyMap","privExtendedPropertyMap","privWordsPerMinute","WordsPerMinute","SecondaryLocaleList","privSecondaryLocaleList","RolePlayList","privRolePlayList","VoiceTag","privVoiceTag","shortName","localName","localeName","gender","voiceType","styleList","sampleRateHertz","extendedPropertyMap","wordsPerMinute","secondaryLocaleList","rolePlayList","voiceTag","SynthesisServiceType","privSynthesisServiceType","Standard","synthesisServiceType","synthesisVideoSection","synthesis","sessionid","privCancelReason","_md","interactiveRelativeUri","conversationRelativeUri","dictationRelativeUri","avatarSynthesizer","privAvatarSynthesizer","crop","resolution","webrtcConfig","clientDescription","talkingAvatar","background","image","avatarEventReceived","avatarEventArgs","uuid_1","v4","RegExp","privRequestParams","conversationCode","authToken","errMessageRaw","errorMessage","privIsLocked","privKey","privValue","privParticipantId","isRoomLocked","isMuteAll","privRoomId","privSessionToken","privTranslateTo","privProfanityFilter","privRoomProfanityFilter","privIsRoomLocked","privIsMuteAll","privCommand","AudioFormatToMimeType","audioDestinationId","privPlaybackStarted","privAppendingToBuffer","privMediaSourceOpened","privIsPaused","privAudioBuffer","updateSourceBuffer","privSourceBuffer","handleSourceBufferUpdateEnd","receivedAudio","audioBlob","notifyPlayback","onAudioEnd","mimeType","MediaSource","isTypeSupported","Audio","privMediaSource","onsourceopen","addSourceBuffer","onupdate","onupdateend","onupdatestart","volume","mute","muted","unmute","pause","play","internalAudio","sourceBufferAvailable","binary","appendBuffer","canEndStream","endOfStream","onAudioStart","onended","updating","_sha","intView","privLastChunkView","tmpBuffer","speakImpl","getVoicesAsync","getVoices","SynthesisRestAdapter","IsSsml","Identify","Verify","privProfileId","identificationResult","identifiedProfile","privScore","score","RecognizedSpeakers","verificationResult","recognitionResult","contentAssessmentTopic","enrichment","pronunciationAssessment","phraseOutput","contentAssessment","dgi","AvatarSynthesisAdapter_js_1","SpeechSynthesisAdapter_js_1","privHeaderEnd","privFilename","privAudioFormatPromise","readHeader","upload","headerResult","processHeader","getWord","getUint8","formatSize","getInt32","getUint16","getUint32","pos","maxHeaderSize","reader","FileReader","onload","readAsArrayBuffer","processFile","buff","fileBuffer","AtStart","fromOpenRange","fromLanguages","fromSourceLanguageConfigs","configs","autoConfig","langs","Continuous","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","o","chunkId","reduce","promises","miniCssF","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","onScriptComplete","prev","doneFns","fn","head","toStringTag","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","self","PagedItem","Outcome","HarmCategory","HarmBlockMethod","HarmBlockThreshold","Mode","FinishReason","HarmProbability","HarmSeverity","BlockedReason","TrafficType","Modality","MediaResolution","DynamicRetrievalConfigMode","FunctionCallingConfigMode","SafetyFilterLevel","PersonGeneration","ImagePromptLanguage","FileState","FileSource","MaskReferenceMode","ControlReferenceType","SubjectReferenceType","MediaModality","StartSensitivity","EndSensitivity","ActivityHandling","TurnCoverage","BaseModule","formatMap","templateString","valueMap","setValueByPath","keyName","arrayData","keyToSet","existingData","getValueByPath","tModel","apiClient","isVertexAI","tCachesModel","transformedModel","getProject","getLocation","tPart","origin","tParts","_isContent","_isUserPart","_isFunctionCallPart","_areUserParts","every","tContent","role","tContentsForEmbed","flatMap","_appendAccumulatedPartsAsContent","accumulatedParts","_handleCurrentPart","currentPart","tContents","processSchema","schema","subSchema","values","tSchema","tSpeechConfig","voiceConfig","prebuiltVoiceConfig","tTool","tool","tTools","tCachedContentName","client","resourceName","resourcePrefix","splitsAfterPrefix","shouldAppendPrefix","tBytes","fromImageBytes","tFileName","fromName","contentToMldev$1","fromObject","toObject","fromParts","fromThought","fromCodeExecutionResult","fromExecutableCode","fromFileData","fromFunctionCall","fromFunctionResponse","fromInlineData","fromText","partToMldev$1","fromRole","googleSearchRetrievalToMldev$1","fromDynamicRetrievalConfig","fromMode","fromDynamicThreshold","dynamicRetrievalConfigToMldev$1","toolToMldev$1","fromFunctionDeclarations","fromDescription","functionDeclarationToMldev$1","fromGoogleSearchRetrieval","fromCodeExecution","toolConfigToMldev$1","fromFunctionCallingConfig","fromAllowedFunctionNames","functionCallingConfigToMldev$1","createCachedContentParametersToMldev","fromModel","parentObject","fromTtl","fromExpireTime","fromDisplayName","fromContents","fromSystemInstruction","fromTools","fromToolConfig","createCachedContentConfigToMldev","updateCachedContentParametersToMldev","updateCachedContentConfigToMldev","listCachedContentsParametersToMldev","fromPageSize","fromPageToken","listCachedContentsConfigToMldev","contentToVertex$1","fromVideoMetadata","partToVertex$1","functionDeclarationToVertex$1","fromResponse","fromExample","fromPattern","fromDefault","fromMaxLength","fromMinLength","fromMinProperties","fromMaxProperties","fromAnyOf","fromEnum","fromFormat","fromItems","fromMaxItems","fromMaximum","fromMinItems","fromMinimum","fromNullable","fromProperties","fromPropertyOrdering","fromRequired","fromTitle","fromType","schemaToVertex$1","googleSearchRetrievalToVertex$1","dynamicRetrievalConfigToVertex$1","toolConfigToVertex$1","functionCallingConfigToVertex$1","createCachedContentConfigToVertex","fromRetrieval","toolToVertex$1","updateCachedContentParametersToVertex","updateCachedContentConfigToVertex","listCachedContentsParametersToVertex","listCachedContentsConfigToVertex","cachedContentFromMldev","fromCreateTime","fromUpdateTime","fromUsageMetadata","cachedContentFromVertex","Pager","pageInternal","paramsInternal","requestInternal","nameInternal","idxInternal","requestParams","pageInternalSize","_b","_a","initNextPage","page","pageSize","pageLength","getItem","asyncIterator","hasNextPage","nextPage","GenerateContentResponse","_d","_c","candidates","anyTextPartText","nonTextParts","_h","_g","_f","_e","fieldName","fieldValue","thought","functionCalls","functionCall","executableCode","_j","codeExecutionResult","EmbedContentResponse","GenerateImagesResponse","CountTokensResponse","ComputeTokensResponse","DeleteCachedContentResponse","ListCachedContentsResponse","ListFilesResponse","HttpResponse","pair","responseInternal","CreateFileResponse","DeleteFileResponse","Caches","_this","PAGED_ITEM_CACHED_CONTENTS","listInternal","createCachedContentParametersToVertex","httpMethod","httpOptions","httpResponse","apiResponse","getCachedContentParametersToVertex","getCachedContentParametersToMldev","deleteCachedContentParametersToVertex","typedResp","deleteCachedContentParametersToMldev","update","fromNextPageToken","fromCachedContents","listCachedContentsResponseFromVertex","listCachedContentsResponseFromMldev","isValidResponse","isValidContent","Chats","modelsModule","Chat","history","sendPromise","validateHistory","inputContent","responsePromise","generateContent","contents","getHistory","outputContent","modelOutput","recordHistory","sendMessageStream","streamResponse","generateContentStream","processStreamResponse","comprehensiveHistory","curatedHistory","userInput","isValid","extractCuratedHistory","streamResponse_1_1","streamResponse_1","__asyncValues","__await","outputContents","listFilesParametersToMldev","listFilesConfigToMldev","fileToMldev","fromMimeType","fromSizeBytes","fromExpirationTime","fromSha256Hash","fromUri","fromDownloadUri","fromState","fromSource","fromError","fromDetails","fromMessage","fromCode","fileStatusToMldev","fileFromMldev","fileStatusFromMldev","Files","_this2","PAGED_ITEM_FILES","uploadFile","fromFiles","listFilesResponseFromMldev","createInternal","createFileParametersToMldev","fromHttpHeaders","createFileResponseFromMldev","getFileParametersToMldev","deleteFileParametersToMldev","contentToMldev","partToMldev","googleSearchRetrievalToMldev","dynamicRetrievalConfigToMldev","toolToMldev","functionDeclarationToMldev","toolConfigToMldev","functionCallingConfigToMldev","voiceConfigToMldev","fromPrebuiltVoiceConfig","fromVoiceName","prebuiltVoiceConfigToMldev","generateContentConfigToMldev","fromTemperature","fromTopP","fromTopK","fromCandidateCount","fromMaxOutputTokens","fromStopSequences","fromResponseLogprobs","fromLogprobs","fromPresencePenalty","fromFrequencyPenalty","fromSeed","fromResponseMimeType","fromResponseSchema","schemaToMldev","fromSafetySettings","fromCategory","fromThreshold","safetySettingToMldev","fromCachedContent","fromResponseModalities","fromMediaResolution","fromSpeechConfig","fromVoiceConfig","speechConfigToMldev","fromThinkingConfig","fromIncludeThoughts","fromThinkingBudget","thinkingConfigToMldev","generateContentParametersToMldev","embedContentParametersToMldev","fromTaskType","fromOutputDimensionality","embedContentConfigToMldev","fromModelForEmbedContent","generateImagesParametersToMldev","fromPrompt","fromNumberOfImages","fromAspectRatio","fromGuidanceScale","fromSafetyFilterLevel","fromPersonGeneration","fromIncludeSafetyAttributes","fromIncludeRaiReason","fromOutputMimeType","fromOutputCompressionQuality","generateImagesConfigToMldev","countTokensParametersToMldev","countTokensConfigToMldev","generateVideosParametersToMldev","fromImage","imageToMldev","fromNumberOfVideos","fromDurationSeconds","fromNegativePrompt","generateVideosConfigToMldev","contentToVertex","partToVertex","schemaToVertex","googleSearchRetrievalToVertex","dynamicRetrievalConfigToVertex","toolToVertex","functionDeclarationToVertex","toolConfigToVertex","functionCallingConfigToVertex","voiceConfigToVertex","prebuiltVoiceConfigToVertex","generateContentConfigToVertex","fromRoutingConfig","fromMethod","safetySettingToVertex","fromLabels","speechConfigToVertex","fromAudioTimestamp","thinkingConfigToVertex","generateContentParametersToVertex","embedContentParametersToVertex","fromAutoTruncate","embedContentConfigToVertex","generateImagesParametersToVertex","fromOutputGcsUri","fromAddWatermark","fromEnhancePrompt","generateImagesConfigToVertex","countTokensParametersToVertex","fromGenerationConfig","countTokensConfigToVertex","generateVideosParametersToVertex","fromGcsUri","imageToVertex","fromFps","fromResolution","fromPubsubTopic","generateVideosConfigToVertex","contentFromMldev","partFromMldev","candidateFromMldev","fromContent","fromCitationMetadata","fromCitations","citationMetadataFromMldev","fromTokenCount","fromFinishReason","fromAvgLogprobs","fromGroundingMetadata","fromIndex","fromLogprobsResult","fromSafetyRatings","generateContentResponseFromMldev","fromCandidates","fromModelVersion","fromPromptFeedback","embedContentResponseFromMldev","fromEmbeddings","fromValues","contentEmbeddingFromMldev","safetyAttributesFromMldev","fromCategories","fromScores","fromContentType","generatedImageFromMldev","imageFromMldev","fromRaiFilteredReason","fromSafetyAttributes","modelFromMldev","fromVersion","fromTunedModelInfo","fromBaseModel","tunedModelInfoFromMldev","fromInputTokenLimit","fromOutputTokenLimit","fromSupportedActions","generatedVideoFromMldev$1","fromVideo","fromVideoBytes","videoFromMldev$1","generateVideosResponseFromMldev$1","fromGeneratedVideos","fromRaiMediaFilteredCount","fromRaiMediaFilteredReasons","contentFromVertex","partFromVertex","candidateFromVertex","citationMetadataFromVertex","fromFinishMessage","generateContentResponseFromVertex","fromResponseId","contentEmbeddingFromVertex","fromStatistics","fromTruncated","contentEmbeddingStatisticsFromVertex","embedContentResponseFromVertex","fromMetadata","fromBillableCharacterCount","embedContentMetadataFromVertex","safetyAttributesFromVertex","generatedImageFromVertex","imageFromVertex","fromEnhancedPrompt","modelFromVertex","fromEndpoints","fromDeployedModelId","endpointFromVertex","tunedModelInfoFromVertex","generatedVideoFromVertex$1","videoFromVertex$1","generateVideosResponseFromVertex$1","liveConnectParametersToMldev","fromSessionResumption","fromHandle","liveClientSessionResumptionConfigToMldev","fromContextWindowCompression","fromTriggerTokens","fromSlidingWindow","fromTargetTokens","slidingWindowToMldev","contextWindowCompressionToMldev","fromRealtimeInputConfig","fromAutomaticActivityDetection","fromDisabled","fromStartOfSpeechSensitivity","fromEndOfSpeechSensitivity","fromPrefixPaddingMs","fromSilenceDurationMs","automaticActivityDetectionToMldev","fromActivityHandling","fromTurnCoverage","realtimeInputConfigToMldev","liveConnectConfigToMldev","liveConnectParametersToVertex","fromTransparent","liveClientSessionResumptionConfigToVertex","slidingWindowToVertex","contextWindowCompressionToVertex","automaticActivityDetectionToVertex","realtimeInputConfigToVertex","liveConnectConfigToVertex","liveServerMessageFromMldev","fromSetupComplete","fromServerContent","fromModelTurn","fromTurnComplete","fromInterrupted","fromGenerationComplete","liveServerContentFromMldev","fromToolCall","fromFunctionCalls","fromArgs","functionCallFromMldev","liveServerToolCallFromMldev","fromToolCallCancellation","fromIds","liveServerToolCallCancellationFromMldev","fromPromptTokenCount","fromCachedContentTokenCount","fromResponseTokenCount","fromToolUsePromptTokenCount","fromThoughtsTokenCount","fromTotalTokenCount","fromPromptTokensDetails","modalityTokenCountFromMldev","fromCacheTokensDetails","fromResponseTokensDetails","fromToolUsePromptTokensDetails","usageMetadataFromMldev","fromGoAway","fromTimeLeft","liveServerGoAwayFromMldev","fromSessionResumptionUpdate","fromNewHandle","fromResumable","fromLastConsumedClientMessageIndex","liveServerSessionResumptionUpdateFromMldev","liveServerMessageFromVertex","liveServerContentFromVertex","functionCallFromVertex","liveServerToolCallFromVertex","liveServerToolCallCancellationFromVertex","liveServerGoAwayFromVertex","liveServerSessionResumptionUpdateFromVertex","modalityTokenCountFromVertex","fromTrafficType","usageMetadataFromVertex","fromModality","Live","webSocketFactory","websocketBaseUrl","getWebsocketBaseUrl","getApiVersion","append","mapToHeaders","getDefaultHeaders","addAuthHeaders","getApiKey","onopenResolve","onopenPromise","callbacks","websocketCallbacks","serverMessage","handleWebSocketMessage","headersToMap","clientMessage","liveConnectParameters","Session","defaultLiveSendClientContentParamerters","turnComplete","tLiveClientContent","turns","clientContent","tLiveClientRealtimeInput","media","realtimeInput","mediaChunks","activityStart","activityEnd","tLiveClienttToolResponse","functionResponses","functionResponse","toolResponse","sendClientContent","sendRealtimeInput","sendToolResponse","Models","generateContentInternal","generateContentStreamInternal","generateImages","generateImagesInternal","positivePromptSafetyAttributes","generatedImages","generatedImage","safetyAttributes","requestStream","apiResponse_1_1","apiResponse_1","apiResponse_2_1","apiResponse_2","embedContent","fromGeneratedImages","fromPositivePromptSafetyAttributes","generateImagesResponseFromVertex","generateImagesResponseFromMldev","getModelParametersToVertex","getModelParametersToMldev","countTokens","fromTotalTokens","countTokensResponseFromVertex","countTokensResponseFromMldev","computeTokens","computeTokensParametersToVertex","fromTokensInfo","computeTokensResponseFromVertex","generateVideos","fromDone","generateVideosOperationFromVertex$1","generateVideosOperationFromMldev$1","generatedVideoFromMldev","videoFromMldev","generateVideosResponseFromMldev","generatedVideoFromVertex","videoFromVertex","generateVideosResponseFromVertex","generateVideosOperationFromVertex","Operations","getVideosOperation","fetchPredictVideosOperationInternal","operationName","getVideosOperationInternal","fromOperationName","getOperationParametersToVertex","getOperationParametersToMldev","generateVideosOperationFromMldev","fromResourceName","fetchPredictOperationParametersToVertex","responseLineRE","ClientError","stackTrace","cause","ServerError","ApiClient","opts","clientOptions","project","apiKey","vertexai","initHttpOptions","baseUrl","patchHttpOptions","getBaseUrl","getRequestUrl","getRequestUrlInternal","getHeaders","urlElement","getBaseResourcePath","urlParts","setBaseUrl","constructUrl","prependProjectLocation","shouldPrependVertexProjectPath","patchedHttpOptions","requestInit","includeExtraHttpOptionsToRequestInit","unaryApiCall","baseHttpOptions","requestHttpOptions","streamApiCall","abortController","AbortController","signal","abort","getHeadersInternal","apiCall","throwErrorIfNotOK","getReader","decoder","TextDecoder","decode","processedChunkString","chunkData","releaseLock","versionHeaderValue","LIBRARY_LABEL","userAgentExtra","fileToUpload","uploader","fileStat","stat","sizeBytes","uploadUrl","fetchUploadUrl","errorBody","BrowserUploader","fileSize","Response","uploadCommand","chunkSize","uploadBlob","getBlobStat","BrowserWebSocketFactory","BrowserWebSocket","ws","GOOGLE_API_KEY_HEADER","WebAuth","GoogleGenAI","LANGUAGE_LABEL_PREFIX","live","chats","caches","files","operations","cartoonVisemes","imageIndex","setImageIndex","isVisemesActive","setIsVisemesActive","isSpeaking","setIsSpeaking","shouldBlink","setShouldBlink","blinkTimeoutRef","triggerBlink","handleRegularBlink","sdk","visemesArr","lastPunctuationTime","punctuationMarks","currentTextPosition","lastChar","_visemesArr","totalDuration","handleVisemes","_jsx","className","_jsxs","cartoonAvatarVideo","alt","blinkGif","messages","isRecording","onRecordingToggle","DEFAULT_FETCH_INIT","defaultUserAgentString","defaultUserAgent","process","versions","runtime_env","bun","Deno","deno","BaseService","fetchJson","LemurService","summary","questionAnswer","actionItems","task","getResponse","purgeRequestData","WritableStream","global","PolyfillWebSocket","factory","RealtimeErrorType","RealtimeErrorMessages","RealtimeError","terminateSessionMessage","RealtimeTranscriber","realtimeUrl","wordBoost","endUtteranceSilenceThreshold","disablePartialTranscripts","connectionUrl","URLSearchParams","configureEndUtteranceSilenceThreshold","_ref2","_ref3","message_type","openObject","session_id","expiresAt","expires_at","created","transcript","session_information","sessionTerminatedResolve","forceEndUtterance","threshold","waitForSessionTermination","sessionTerminatedPromise","removeAllListeners","RealtimeTranscriberFactory","rtFactoryParams","createService","serviceParams","createTemporaryToken","getPath","TranscriptService","transcribe","submit","waitUntilReady","audioUrl","transcriptParams","audioTranscriptParams","audio_url","poll","transcriptId","pollingInterval","pollingTimeout","transcriptListItem","transcripts","completed","wordSearch","words","sentences","paragraphs","subtitles","chars_per_caption","redactions","redactedAudio","redactedAudioFile","redacted_audio_url","bodyUsed","FileService","fileData","dataUrl","mime","bstr","u8arr","dataUrlToBlob","readFile","duplex","upload_url","AssemblyAI","lemur","realtime","setMessages","setIsRecording","textToSpeak","setTextToSpeak","mediaRecorderRef","chunksRef","assemblyClient","genAI","processAudio","transcribedText","aiResponse","userText","processWithGemini","startRecording","MediaRecorder","ondataavailable","onstop","stopRecording","ChatDisplay","handleRecordingToggle","VisemeDisplay","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById","React","App","reportWebVitals"],"sourceRoot":""}